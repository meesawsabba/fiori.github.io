<mvc:View
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"
	xmlns:customdata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:core="sap.ui.core"
	xmlns:uxap="sap.uxap"
	xmlns="sap.m"
	xmlns:control="sap.fe.core.controls"
	xmlns:fe="sap.fe.templates.controls"
	xmlns:dt="sap.ui.dt"
	xmlns:macro="sap.fe.macros"
	controllerName="sap.fe.templates.ObjectPage.ObjectPageController"
	template:require="{
				MODEL: 'sap/ui/model/odata/v4/AnnotationHelper',
				OP: 'sap/fe/templates/ObjectPage/AnnotationHelper',
				CONTACT: 'sap/fe/macros/ContactHelper',
				OPTemplating: 'sap/fe/templates/ObjectPage/templating/ObjectPageTemplating',
				UI: 'sap/fe/core/templating/UIFormatters'
			}"
>
	<template:with path="entitySet>./" var="entityType">
		<template:with path="entityType>@com.sap.vocabularies.UI.v1.HeaderInfo" var="headerInfo">
		<!-- OPLayout binding contains explicit $select for SAP__Messages or the path from @Common.Messages until model provides an alternative.
		This is to enable side effects to request messages. -->
			<uxap:ObjectPageLayout
				id="fe::ObjectPage"
				flexEnabled="true"
				unittest:id="objectPageLayoutTest"
				customdata:showRelatedApps="{viewData>/showRelatedApps}"
				customdata:ObjectPageTitle="{headerInfo>TypeName}"
				customdata:ObjectPageSubtitle="{headerInfo>Title/Value@@MODEL.value}"
				showHeaderContent="{converterContext>header/showContent}"
				showFooter="true"
				busy="{ui>/busy}"
				busyIndicatorDelay="0"
				showAnchorBar="{converterContext>showAnchorBar}"
				upperCaseAnchorBar="false"
				useIconTabBar="{converterContext>useIconTabBar}"
				toggleHeaderOnTitleClick="{converterContext>showAnchorBar}"
				headerContentPinnable="{converterContext>showAnchorBar}"
				enableLazyLoading="true"
				navigate=".handlers.onNavigateChange"
			>
				<uxap:dependents>
					<control:CommandExecution execute="_executeTabShortCut" command="NextTab" />
					<control:CommandExecution execute="_executeTabShortCut" command="PreviousTab" />
					<control:CommandExecution
						execute="._editDocument(${$view>/getBindingContext})"
						enabled="{= OP.getEditCommandExecutionEnabled(${converterContext>header/actions}) }"
						visible="{= OP.getEditCommandExecutionVisible(${converterContext>header/actions}) }"
						command="Edit"
					/>
					<control:CommandExecution
						execute=".editFlow.toggleDraftActive(${$view>/getBindingContext})"
						visible="{= OP.getSwitchToActiveVisibility(${entitySet>@}) }"
						command="SwitchToActiveObject"
					/>
					<control:CommandExecution
						execute=".editFlow.toggleDraftActive(${$view>/getBindingContext})"
						visible="{= OP.getSwitchToDraftVisibility(${entitySet>@}) }"
						command="SwitchToDraftObject"
					/>
					<control:CommandExecution
						execute="{= OP.getPressExpressionForDelete(${entitySet>@sapui.name}) }"
						visible="{= OP.getDeleteCommandExecutionVisible(${converterContext>header/actions}) }"
						enabled="{= OP.getDeleteCommandExecutionEnabled(${converterContext>header/actions}) }"
						command="DeleteObject"
					/>
					<control:CommandExecution
						execute="._saveDocument(${$view>/getBindingContext})"
						visible="{= ${ui>/editMode} === 'Editable' }"
						command="Save"
					/>
					<control:CommandExecution
						execute="._cancelDocument(${$view>/getBindingContext},{cancelButton:'fe::FooterBar::StandardAction::Cancel'})"
						visible="{= ${ui>/editMode} === 'Editable' }"
						command="Cancel"
					/>
				</uxap:dependents>
				<template:if test="{converterContext>header/visible}">
					<uxap:headerTitle>
						<uxap:ObjectPageDynamicHeaderTitle primaryArea="Begin">
							<uxap:expandedHeading>
								<FlexBox>
									<FlexBox visible="{converterContext>header/title/expandedImageVisible}">
										<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.HeaderImage" type="XML" />
									</FlexBox>
									<template:with path="entityType>@com.sap.vocabularies.UI.v1.HeaderInfo" var="headerInfo">
										<Title
											text="{= OPTemplating.getExpressionForTitle(${headerInfo>@@UI.getConverterContext}, ${viewData>}, ${fullContextPath>@@UI.getDataModelObjectPath}, ${entitySet>@com.sap.vocabularies.Common.v1.DraftRoot})}"
											wrapping="true"
										/>
									</template:with>
								</FlexBox>
							</uxap:expandedHeading>
							<uxap:snappedHeading>
								<FlexBox>
									<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.HeaderImage" type="XML" />
									<template:with path="entityType>@com.sap.vocabularies.UI.v1.HeaderInfo" var="headerInfo">
										<Title
											text="{= OPTemplating.getExpressionForTitle(${headerInfo>@@UI.getConverterContext}, ${viewData>}, ${fullContextPath>@@UI.getDataModelObjectPath}, ${entitySet>@com.sap.vocabularies.Common.v1.DraftRoot})}"
											wrapping="true"
										/>
									</template:with>
								</FlexBox>
							</uxap:snappedHeading>
							<uxap:expandedContent>
							 <FlexBox>
                            	<template:if test="{entityType>@com.sap.vocabularies.UI.v1.HeaderInfo/Description}">
              					  <Label
											text="{= OPTemplating.getExpressionForDescription(${headerInfo>@@UI.getConverterContext}, ${fullContextPath>@@UI.getDataModelObjectPath})}"
											wrapping="true"
										/>
            					  </template:if>
			    			 </FlexBox>
							</uxap:expandedContent>
							<uxap:snappedContent>
								<FlexBox>
                            		<template:if test="{entityType>@com.sap.vocabularies.UI.v1.HeaderInfo/Description}">
                						<Label
											text="{= OPTemplating.getExpressionForDescription(${headerInfo>@@UI.getConverterContext}, ${fullContextPath>@@UI.getDataModelObjectPath})}"
											wrapping="true"
										/>
            						</template:if>
			    				</FlexBox>
							</uxap:snappedContent>
							<uxap:content>
								<template:if test="{entitySet>@com.sap.vocabularies.Common.v1.DraftRoot}">
									<macro:DraftIndicator DraftIndicatorType="IconOnly" class="sapUiTinyMarginBegin sapMTB sapMTBNewFlex" entitySet="{entitySet>}" />
								</template:if>
							</uxap:content>
							<uxap:navigationActions>
								<template:if test="{= ${viewData>/viewLevel} > 1}">
									<macro:Paginator id="fe::Paginator" />
								</template:if>
								<!-- Flexible column layout menu-->
								<template:if test="{= ${viewData>/fclEnabled} }">
									<macro:FlexibleColumnLayoutActions />
								</template:if>
							</uxap:navigationActions>
							<uxap:actions>
								<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.Actions" type="XML" />
							</uxap:actions>
							<uxap:breadcrumbs>
								<Breadcrumbs
									unittest:id="BreadcrumbsTest"
									visible="{= OP.getVisibleExpressionForBreadcrumbs(${viewData>/}) }"
									modelContextChange="._setBreadcrumbLinks(${$source>/})"
									id="fe::Breadcrumbs"
								>
								</Breadcrumbs>
							</uxap:breadcrumbs>
						</uxap:ObjectPageDynamicHeaderTitle>
					</uxap:headerTitle>
					<template:if test="{converterContext>header/hasContent}">
						<uxap:headerContent>
							<FlexBox
								id="fe::HeaderContentContainer"
								unittest:id="FlexBoxTest"
								dt:designtime="sap/fe/templates/ObjectPage/designtime/FlexBox.designtime"
								wrap="Wrap"
								fitContainer="true"
								alignItems="Stretch"
							>
								<template:if test="{converterContext>header/avatar}">
									<template:with path="converterContext>header/avatar" var="avatar">
									<Avatar
											unittest:id="AvatarOPHeaderContent"
											class="sapUiSmallMarginEnd sapUiSmallMarginBottom"
											src="{avatar>src}"
											initials="{avatar>initials}"
											fallbackIcon="{avatar>fallbackIcon}"
											displayShape="{avatar>displayShape}"
											displaySize="XL"
										/>
									</template:with>
								</template:if>
								<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.HeaderContent" type="XML" />
							</FlexBox>
						</uxap:headerContent>
					</template:if>
				</template:if>
				<uxap:sections>
					<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.Section" type="XML" />
				</uxap:sections>
				<uxap:footer>
					<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.FooterContent" type="XML" />
				</uxap:footer>
			</uxap:ObjectPageLayout>
		</template:with>
	</template:with>
</mvc:View>
