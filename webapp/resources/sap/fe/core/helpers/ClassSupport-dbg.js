/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2021 SAP SE. All rights reserved
 */
sap.ui.define(["sap/base/util/ObjectPath", "sap/base/util/deepClone", "sap/ui/core/ElementMetadata"], function (ObjectPath, deepClone, ElementMetadata) {
  "use strict";

  var _exports = {};

  var ensureMetadata = function (target) {
    if (!target.hasOwnProperty("metadata")) {
      target.metadata = deepClone(target.metadata || {
        properties: {},
        macroContexts: {},
        aggregations: {},
        associations: {},
        methods: {},
        events: {}
      });
    }

    return target.metadata;
  };

  function Override(sTarget) {
    return function (target, propertyKey) {
      if (!target.override) {
        target.override = {};
      }

      var currentTarget = target.override;

      if (sTarget) {
        if (!currentTarget.extension) {
          currentTarget.extension = {};
        }

        if (!currentTarget.extension[sTarget]) {
          currentTarget.extension[sTarget] = {};
        }

        currentTarget = currentTarget.extension[sTarget];
      }

      currentTarget[propertyKey] = target[propertyKey];
    };
  }

  _exports.Override = Override;

  function Extensible(oOverrideExecution) {
    return function (target, propertyKey) {
      var metadata = ensureMetadata(target);

      if (!metadata.methods[propertyKey]) {
        metadata.methods[propertyKey] = {};
      }

      metadata.methods[propertyKey].overrideExecution = oOverrideExecution;
    };
  }

  _exports.Extensible = Extensible;

  function Public(target, propertyKey) {
    var metadata = ensureMetadata(target);

    if (!metadata.methods[propertyKey]) {
      metadata.methods[propertyKey] = {};
    }

    metadata.methods[propertyKey].public = true;
  }

  _exports.Public = Public;

  function Private(target, propertyKey) {
    var metadata = ensureMetadata(target);

    if (!metadata.methods[propertyKey]) {
      metadata.methods[propertyKey] = {};
    }

    metadata.methods[propertyKey].public = false;
  }

  _exports.Private = Private;

  function Final(target, propertyKey) {
    var metadata = ensureMetadata(target);

    if (!metadata.methods[propertyKey]) {
      metadata.methods[propertyKey] = {};
    }

    metadata.methods[propertyKey].final = true;
  }

  _exports.Final = Final;

  function Event(target, eventKey) {
    var metadata = ensureMetadata(target);

    if (!metadata.events[eventKey]) {
      metadata.events[eventKey] = {};
    }
  }

  _exports.Event = Event;

  function EventHandler(target, propertykey) {
    target.constructor[propertykey] = function () {
      var currentTarget = target.constructor.getAPI(arguments.length <= 0 ? undefined : arguments[0]);
      currentTarget[propertykey].apply(currentTarget, arguments);
    };
  }

  _exports.EventHandler = EventHandler;

  function MacroContext() {
    var bMetaModelObject = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    return Property({
      type: "sap.ui.model.Context",
      macroContext: true,
      metaModelObject: bMetaModelObject
    });
  }

  _exports.MacroContext = MacroContext;

  function Property(oPropertyParams) {
    return function (target, propertyKey, propertyDescriptor) {
      var metadata = ensureMetadata(target);

      if (oPropertyParams !== null && oPropertyParams !== void 0 && oPropertyParams.macroContext) {
        if (!metadata.macroContexts[propertyKey]) {
          metadata.macroContexts[propertyKey] = oPropertyParams;
        }
      }

      if (!metadata.properties[propertyKey]) {
        metadata.properties[propertyKey] = oPropertyParams;
      }

      delete propertyDescriptor.writable;
      delete propertyDescriptor.initializer;

      propertyDescriptor.set = function (v) {
        return this.setProperty(propertyKey, v);
      };

      propertyDescriptor.get = function () {
        return this.getProperty(propertyKey);
      };

      return propertyDescriptor;
    };
  }

  _exports.Property = Property;

  function Aggregation(oAggregationDescriptor) {
    return function (target, propertyKey, propertyDescriptor) {
      var metadata = ensureMetadata(target);

      if (!metadata.aggregations[propertyKey]) {
        metadata.aggregations[propertyKey] = oAggregationDescriptor;
      }

      if (oAggregationDescriptor.isDefault) {
        metadata.defaultAggregation = propertyKey;
      }

      delete propertyDescriptor.writable;
      delete propertyDescriptor.initializer;

      propertyDescriptor.set = function (v) {
        return this.setAggregation(propertyKey, v);
      };

      propertyDescriptor.get = function () {
        return this.getAggregation(propertyKey);
      };

      return propertyDescriptor;
    };
  }

  _exports.Aggregation = Aggregation;

  function Association(oAssociationDescription) {
    return function (target, propertyKey, propertyDescriptor) {
      var metadata = ensureMetadata(target);

      if (!metadata.associations[propertyKey]) {
        metadata.associations[propertyKey] = oAssociationDescription;
      }

      delete propertyDescriptor.writable;
      delete propertyDescriptor.initializer;

      propertyDescriptor.set = function (v) {
        return this.setAggregation(propertyKey, v);
      };

      propertyDescriptor.get = function () {
        return this.getAggregation(propertyKey);
      };

      return propertyDescriptor;
    };
  }

  _exports.Association = Association;

  function APIClass(sTarget) {
    return function (constructor) {
      if (!constructor.prototype.metadata) {
        constructor.prototype.metadata = {};
      }

      if (!constructor.prototype.metadata.interfaces) {
        constructor.prototype.metadata.interfaces = [];
      }

      constructor.prototype.metadata.interfaces.push("sap.ui.core.IFormContent");

      if (!constructor.prototype.renderer) {
        constructor.prototype.renderer = {
          apiVersion: 2,
          render: function (oRm, oControl) {
            oRm.renderControl(oControl.getContent());
          }
        };
      }

      describe(constructor, sTarget, constructor.prototype, ElementMetadata);
    };
  }

  _exports.APIClass = APIClass;

  function UI5Class(sTarget, metadataClass, metadataDefinition) {
    return function (constructor) {
      if (!constructor.prototype.metadata) {
        constructor.prototype.metadata = {};
      }

      if (metadataDefinition !== null && metadataDefinition !== void 0 && metadataDefinition.properties) {
        constructor.prototype.metadata.properties = metadataDefinition.properties;
      }

      if (metadataDefinition !== null && metadataDefinition !== void 0 && metadataDefinition.events) {
        constructor.prototype.metadata.events = metadataDefinition.events;
      }

      describe(constructor, sTarget, constructor.prototype, metadataClass);
    };
  }

  _exports.UI5Class = UI5Class;

  function describe(clazz, name, inObj, metadataClass) {
    var _inObj$metadata, _clazz$metadata;

    var obj = {};
    obj.metadata = inObj.metadata || {};
    obj.override = inObj.override;
    obj.constructor = clazz;
    obj.metadata.baseType = Object.getPrototypeOf(clazz.prototype).getMetadata().getName();
    obj.renderer = inObj.renderer || clazz.renderer;
    obj.metadata.interfaces = ((_inObj$metadata = inObj.metadata) === null || _inObj$metadata === void 0 ? void 0 : _inObj$metadata.interfaces) || ((_clazz$metadata = clazz.metadata) === null || _clazz$metadata === void 0 ? void 0 : _clazz$metadata.interfaces);
    var metadata;

    if (metadataClass) {
      metadata = new metadataClass(name, obj);
    } else {
      metadata = new ElementMetadata(name, obj);
    }

    clazz.getMetadata = clazz.prototype.getMetadata = function () {
      return metadata;
    };

    var fnInit = clazz.prototype.init;

    clazz.prototype.init = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      fnInit.apply(this, args);
      var aPropertyKeys = Object.keys(obj.metadata.properties); // eslint-disable-next-line @typescript-eslint/no-this-alias

      var that = this;
      aPropertyKeys.forEach(function (propertyKey) {
        Object.defineProperty(that, propertyKey, {
          configurable: true,
          set: function (v) {
            return that.setProperty(propertyKey, v);
          },
          get: function () {
            return that.getProperty(propertyKey);
          }
        });
      });
    };

    ObjectPath.set(name, clazz);
  }

  return _exports;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,