/*!
 * SAPUI5
  (c) Copyright 2009-2021 SAP SE. All rights reserved
 */
/*global sap*/
sap.ui.define(
[
"sap/zen/dsh/firefly/ff4205.olap.api.base"
],
function(oFF)
{
"use strict";

oFF.ErrorMessages = {

	getText:function(message, args, measureName)
	{
			var text = message;
		if (oFF.XStringUtils.isNotNullAndNotEmpty(measureName))
		{
			text = oFF.XString.replace(text, "{measureName}", measureName);
		}
		for (var i = 0; i < args.size(); i++)
		{
			text = oFF.XString.replace(text, oFF.XStringUtils.concatenate3("{", oFF.XInteger.convertToString(i), "}"), args.get(i));
		}
		return text;
	},
	FREE_PLACEHOLDER_NOT_FOUND:"{\"msg\":\"The query has exceeded the maximum number of calculations allowed.\", \"args\":[]}",
	DYNAMIC_TIME_MEASURE_NOT_SUPPORTED:"{\"msg\":\"Dynamic time measure is not supported.\", \"args\":[], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_TIME_DIMENSION:"{\"msg\":\"Invalid time dimension.\", \"args\":[], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_FUNCTION:"{\"msg\":\"Invalid dynamic time calculation function.\", \"args\":[], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY:"{\"msg\":\"Invalid time operation granularity.\", \"args\":[], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_NOT_IN_HIERARCHY:"{\"msg\":\"A time hierarchy type with {0} granularity must be selected for {1} to appear.\", \"args\":[\"{0}\",\"{1}\"], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_IS_FINER_THAN_DRILL_LEVEL:"{\"msg\":\"The {0} dimension must be drilled to {1} or lower for {2} to appear.\", \"args\":[\"{0}\",\"{1}\",\"{2}\"], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_TO_DATE_FUNCTION_GRANULARITY:"{\"msg\":\"Invalid dynamic time calculation granularity for TO DATE function.\", \"args\":[], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_DRILL_LEVEL:"{\"msg\":\"Invalid drill level, time dimension must be drilled down for dynamic time calculation.\", \"args\":[], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_FINEST_DRILL_LEVEL:"{\"msg\":\"Invalid finest drill level.\", \"args\":[], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_MULTIPLE_TIME_DIMENSION_IN_CARTESIAN_PRODUCT:"{\"msg\":\"Invalid time operation, cannot have multiple cartesian list of the same dimension.\", \"args\":[], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_NO_TIME_IN_AXIS_OR_SINGLE_VALUE_FILTER:"{\"msg\":\"Add the {0} dimension to the widget or create a single value filter on {1} for {2} to appear.\", \"args\":[\"{0}\",\"{1}\",\"{2}\"], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_ON_WEEK_DAY_DRILL_LEVEL:"{\"msg\":\"The {0} dimension must be drilled to Month or higher level for {1} to appear.\", \"args\":[\"{0}\",\"{1}\"], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_ON_WEEK_DAY_FILTER_LEVEL:"{\"msg\":\"The {0} dimension must be filtered on a single value on Month or higher level for {1} to appear.\", \"args\":[\"{0}\",\"{1}\"], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_IS_FINER_THAN_FILTER_LEVEL:"{\"msg\":\"The {0} dimension must be filtered on a single value on {1} or lower level for {2} to appear.\", \"args\":[\"{0}\",\"{1}\",\"{2}\"], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_PREVIOUS_PERIOD_NOT_DRILLED:"{\"msg\":\"The {0} dimension must be drilled for {1} to appear.\", \"args\":[\"{0}\",\"{1}\"], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_OUT_OF_BOUND_MEMBER_NAVIGATION_WITH_FLAT_FILTER:"{\"msg\":\"Time calculations do not include values outside of the data filter on the {0} dimension.\", \"args\":[\"{0}\"], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_MEMBER_NAVIGATION_WITH_FLAT_AND_HIERARCHICAL_FILTER:"{\"msg\":\"Time calculations do not support having a story/page/group filter and a widget filter defined on the {0} dimension at the same time.\", \"args\":[\"{0}\"], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_DEPENDENCY:"{\"msg\":\"{0} is invalid because it depends on invalid calculation {1}.\", \"args\":[\"{0}\",\"{1}\"], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_WEEK_ACROSS_YEAR_SINGLE_VALUE_FILTER:"{\"msg\":\"Dynamic time calculation does not support single value filter that selects a week which spans two years.\", \"args\":[], \"measure\":\"{measureName}\"}",
	FORMULA_MEASURE_MISSING_REQUIRED_DIMENSION:"{\"msg\":\"{0} has the following required dimensions: {1}.\", \"args\":[\"{0}\",\"{1}\"], \"measure\":\"{measureName}\"}",
	DYNAMIC_TIME_MEASURE_INVALID_TO_DATE_ACROSS_MULTIPLE_VALUES:"{\"msg\":\"{0} doesn't support values that span across {1}s.\", \"args\":[\"{0}\",\"{1}\"], \"measure\":\"{measureName}\"}",
	FORMULA_EXCEPTION_INVALID_DISPLAY_MEASURE:"{\"msg\":\"Invalid display measure\", \"args\":[]}",
	MAXIMUM_NUMBER_OF_CURRENCY_TRANSLATIONS_EXCEEDED:"{\"msg\":\"Maximum number of {0} currency translations exceeded when trying to add measure {1}.\", \"args\":[\"{0}\",\"{1}\"], \"measure\":\"{measureName}\"}",
	MEASURE_CYCLICAL_DEPENDENCY:"{\"msg\":\"A cyclical dependency was found in the measure.\", \"args\":[]}",
	MEASURE_MISSING_DEPENDENT:"{\"msg\":\"This measure is invalid because it depends on missing measure\", \"args\":[\"{0}\"], \"measure\":\"{measureName}\"}",
	MEASURE_CONTEXT_RELEASED:"{\"msg\":\"Shared measure context has been released.\", \"args\":[\"{0}\"]}, \"measure\":\"{measureName}\"}",
	MEASURE_MISSING_REQUIRED_FIELD:"{\"msg\":\"{0} has the following required fields: {1}.\", \"args\":[\"{0}\",\"{1}\"], \"measure\":\"{measureName}\"}",
	FILTER_ACROSS_MODEL_LOV_MISSING:"LOV data is missing for LOV based filter across models",
	FILTER_ACROSS_MODEL_DEPENDENT_QUERY_FAILED:"dependent lov query for filter across models failed",
	FILTER_ACROSS_MODEL_LOV_BASED_FAILED:"lov based filter across model transient filter generation failed",
	FILTER_ACROSS_MODEL_LINKED_CONTEXT_UNSUPPORTED:"Linked Context doesn't support Filtering Across Models!",
	FILTER_ACROSS_MODEL_INCOMPLETE_RESULT_WARNING:"{\"msg\":\"Dependent lov query contains more than 10,000 members.\", \"args\":[\"{0}\"]}",
	FILTER_ACROSS_MODEL_EMPTY_TARGET_FILTER:"{\"msg\":\"The target transient filter is empty.\", \"args\":[]}",
	FILTER_ACROSS_MODEL_TARGET_TIME_HIERARCHY:"{\"msg\":\"Cannot find a compatible target time hierarchy.\", \"args\":[]}",
	FILTER_ACROSS_MODEL_INCOMPLETE_TARGET_RESULT_WARNING:"{\"msg\":\"Hierarchy validation query contains more than 10,000 members.\", \"args\":[\"{0}\"]}",
	FILTER_ACROSS_MODEL_LOV_INVALID_DRILL_LEVEL_REST_NODE_DOES_NOT_EXIST:"{\"msg\":\"Source filters could not be propagated because one or more of the following dimension hierarchies do not have a rest node: {0}. Please check the hierarchy definitions and update them as necessary.\", \"args\":[\"{0}\"]}",
	FILTER_ACROSS_MODEL_INVALID_DIMENSION_HIERARCHY:"{\"msg\":\"filter across models contains an invalid dimension or hierarchy.\", \"args\":[]}",
	BLENDING_CONDITIONS_NOT_FULFILLED:"Blending conditions not fulfilled. Either no dimension in drill or useEmptyAllMemberMeasureFilter is set to false but the dynamic filter does not include any member(s) from the leading measure structure."
};

oFF.BlendableDimensionSort = function() {};
oFF.BlendableDimensionSort.prototype = new oFF.XObject();
oFF.BlendableDimensionSort.prototype._ff_c = "BlendableDimensionSort";

oFF.BlendableDimensionSort.createBlendableDimensionSort = function(fieldName, datasetId, sortDirection, preserveGrouping)
{
	var blendableDimensionSort = new oFF.BlendableDimensionSort();
	blendableDimensionSort.m_fieldName = fieldName;
	blendableDimensionSort.m_datasetId = datasetId;
	blendableDimensionSort.m_sortDirection = sortDirection;
	blendableDimensionSort.m_preserveGrouping = preserveGrouping;
	return blendableDimensionSort;
};
oFF.BlendableDimensionSort.prototype.m_fieldName = null;
oFF.BlendableDimensionSort.prototype.m_datasetId = null;
oFF.BlendableDimensionSort.prototype.m_sortDirection = null;
oFF.BlendableDimensionSort.prototype.m_preserveGrouping = false;
oFF.BlendableDimensionSort.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_fieldName = null;
	this.m_datasetId = null;
	this.m_sortDirection = null;
	this.m_preserveGrouping = false;
};
oFF.BlendableDimensionSort.prototype.cloneExt = function(flags)
{
	var copyBlendableDimensionSort = oFF.BlendableDimensionSort.createBlendableDimensionSort(this.getFieldName(), this.getDatasetId(), this.getSortDirection(), this.getPreserveGrouping());
	copyBlendableDimensionSort.copyFrom(this, null);
	return copyBlendableDimensionSort;
};
oFF.BlendableDimensionSort.prototype.copyFrom = function(other, flags)
{
	oFF.XObject.prototype.copyFrom.call( this , other, flags);
	var otherBlendableDimensionSort = other;
	this.m_fieldName = otherBlendableDimensionSort.getFieldName();
	this.m_datasetId = otherBlendableDimensionSort.getDatasetId();
	this.m_sortDirection = otherBlendableDimensionSort.getSortDirection();
	this.m_preserveGrouping = otherBlendableDimensionSort.getPreserveGrouping();
};
oFF.BlendableDimensionSort.prototype.getFieldName = function()
{
	return this.m_fieldName;
};
oFF.BlendableDimensionSort.prototype.getDatasetId = function()
{
	return this.m_datasetId;
};
oFF.BlendableDimensionSort.prototype.getSortDirection = function()
{
	return this.m_sortDirection;
};
oFF.BlendableDimensionSort.prototype.getPreserveGrouping = function()
{
	return this.m_preserveGrouping;
};

oFF.BlendableMeasureMemberSort = function() {};
oFF.BlendableMeasureMemberSort.prototype = new oFF.XObject();
oFF.BlendableMeasureMemberSort.prototype._ff_c = "BlendableMeasureMemberSort";

oFF.BlendableMeasureMemberSort.createDimensionFieldSort = function(measureMemberName, datasetId, sortDirection)
{
	var dimensionFieldSort = new oFF.BlendableMeasureMemberSort();
	dimensionFieldSort.m_measureMemberName = measureMemberName;
	dimensionFieldSort.m_datasetId = datasetId;
	dimensionFieldSort.m_sortDirection = sortDirection;
	return dimensionFieldSort;
};
oFF.BlendableMeasureMemberSort.prototype.m_measureMemberName = null;
oFF.BlendableMeasureMemberSort.prototype.m_datasetId = null;
oFF.BlendableMeasureMemberSort.prototype.m_sortDirection = null;
oFF.BlendableMeasureMemberSort.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_measureMemberName = null;
	this.m_datasetId = null;
	this.m_sortDirection = null;
};
oFF.BlendableMeasureMemberSort.prototype.cloneExt = function(flags)
{
	var copyBlendableMeasureMemberSort = oFF.BlendableMeasureMemberSort.createDimensionFieldSort(this.getMeasureMemberName(), this.getDatasetId(), this.getSortDirection());
	copyBlendableMeasureMemberSort.copyFrom(this, null);
	return copyBlendableMeasureMemberSort;
};
oFF.BlendableMeasureMemberSort.prototype.copyFrom = function(other, flags)
{
	oFF.XObject.prototype.copyFrom.call( this , other, flags);
	var otherBlendableMeasureMemberSort = other;
	this.m_measureMemberName = otherBlendableMeasureMemberSort.getMeasureMemberName();
	this.m_datasetId = otherBlendableMeasureMemberSort.getDatasetId();
	this.m_sortDirection = otherBlendableMeasureMemberSort.getSortDirection();
};
oFF.BlendableMeasureMemberSort.prototype.getMeasureMemberName = function()
{
	return this.m_measureMemberName;
};
oFF.BlendableMeasureMemberSort.prototype.getDatasetId = function()
{
	return this.m_datasetId;
};
oFF.BlendableMeasureMemberSort.prototype.getSortDirection = function()
{
	return this.m_sortDirection;
};

oFF.BlendableRank = function() {};
oFF.BlendableRank.prototype = new oFF.XObject();
oFF.BlendableRank.prototype._ff_c = "BlendableRank";

oFF.BlendableRank.createBlendableRank = function(threshold, measureName, measureMemberDatasetId, dimensionNames, dimensionDatasetIds, conditionComparisonOperator)
{
	var blendableRank = new oFF.BlendableRank();
	blendableRank.m_threshold = threshold;
	blendableRank.m_measureName = measureName;
	blendableRank.m_measureMemberDatasetId = measureMemberDatasetId;
	blendableRank.m_dimensionNames = dimensionNames;
	blendableRank.m_dimensionDatasetIds = dimensionDatasetIds;
	blendableRank.m_conditionComparisonOperator = conditionComparisonOperator;
	return blendableRank;
};
oFF.BlendableRank.prototype.m_threshold = 0;
oFF.BlendableRank.prototype.m_measureName = null;
oFF.BlendableRank.prototype.m_measureMemberDatasetId = null;
oFF.BlendableRank.prototype.m_dimensionNames = null;
oFF.BlendableRank.prototype.m_dimensionDatasetIds = null;
oFF.BlendableRank.prototype.m_conditionComparisonOperator = null;
oFF.BlendableRank.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_threshold = 0;
	this.m_measureMemberDatasetId = null;
	this.m_measureName = null;
	this.m_dimensionNames = null;
	this.m_dimensionDatasetIds = null;
	this.m_conditionComparisonOperator = null;
};
oFF.BlendableRank.prototype.cloneExt = function(flags)
{
	var copyBlendableRank = oFF.BlendableRank.createBlendableRank(this.getThreshold(), this.getMeasureMemberDatasetId(), this.getMeasureMemberName(), this.getDimensionNames(), this.getDimensionDatasetIds(), this.getConditionComparisonOperator());
	copyBlendableRank.copyFrom(this, null);
	return copyBlendableRank;
};
oFF.BlendableRank.prototype.copyFrom = function(other, flags)
{
	oFF.XObject.prototype.copyFrom.call( this , other, flags);
	var otherBlendableRank = other;
	this.m_threshold = otherBlendableRank.getThreshold();
	this.m_measureName = otherBlendableRank.getMeasureMemberName();
	this.m_measureMemberDatasetId = otherBlendableRank.getMeasureMemberDatasetId();
	this.m_dimensionNames = otherBlendableRank.getDimensionNames().createListOfStringCopy();
	this.m_dimensionDatasetIds = otherBlendableRank.getDimensionDatasetIds().createListOfStringCopy();
	this.m_conditionComparisonOperator = otherBlendableRank.getConditionComparisonOperator();
};
oFF.BlendableRank.prototype.getThreshold = function()
{
	return this.m_threshold;
};
oFF.BlendableRank.prototype.getMeasureMemberName = function()
{
	return this.m_measureName;
};
oFF.BlendableRank.prototype.getMeasureMemberDatasetId = function()
{
	return this.m_measureMemberDatasetId;
};
oFF.BlendableRank.prototype.getDimensionNames = function()
{
	return this.m_dimensionNames;
};
oFF.BlendableRank.prototype.getDimensionDatasetIds = function()
{
	return this.m_dimensionDatasetIds;
};
oFF.BlendableRank.prototype.getConditionComparisonOperator = function()
{
	return this.m_conditionComparisonOperator;
};

oFF.QCanonicalDate = function() {};
oFF.QCanonicalDate.prototype = new oFF.XObject();
oFF.QCanonicalDate.prototype._ff_c = "QCanonicalDate";

oFF.QCanonicalDate.create = function(year, member, timestamp, granularity)
{
	var canonicalDate = new oFF.QCanonicalDate();
	canonicalDate.m_year = year;
	canonicalDate.m_member = member;
	canonicalDate.m_timestamp = timestamp;
	canonicalDate.m_granularity = granularity;
	return canonicalDate;
};
oFF.QCanonicalDate.prototype.m_year = 0;
oFF.QCanonicalDate.prototype.m_member = 0;
oFF.QCanonicalDate.prototype.m_timestamp = null;
oFF.QCanonicalDate.prototype.m_granularity = null;
oFF.QCanonicalDate.prototype.releaseObject = function()
{
	this.m_granularity = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QCanonicalDate.prototype.getYear = function()
{
	return this.m_year;
};
oFF.QCanonicalDate.prototype.getTimestamp = function()
{
	return this.m_timestamp;
};
oFF.QCanonicalDate.prototype.getMember = function()
{
	return this.m_member;
};
oFF.QCanonicalDate.prototype.getGranularity = function()
{
	return this.m_granularity;
};

oFF.QCanonicalDateContext = function() {};
oFF.QCanonicalDateContext.prototype = new oFF.XObject();
oFF.QCanonicalDateContext.prototype._ff_c = "QCanonicalDateContext";

oFF.QCanonicalDateContext.create = function(queryModel, timeDimension, hierarchyName)
{
	var isBW = queryModel.getSystemType().isTypeOf(oFF.SystemType.BW);
	var datasetId = null;
	if (queryModel.getMetadataProperties() !== null)
	{
		datasetId = queryModel.getDatasetId();
	}
	if (oFF.XStringUtils.isNullOrEmpty(datasetId))
	{
		datasetId = queryModel.getName();
	}
	var dimensionId = timeDimension.getName();
	var hierarchyId = hierarchyName;
	var hasDayTimeYYYYMMDDFormat = isBW;
	var isEnrichedTime = false;
	var groupingDimensionId = timeDimension.getName();
	var extendedDimensions = queryModel.getExtendedDimensions();
	if (oFF.notNull(extendedDimensions))
	{
		for (var idxExtendedDim = 0; idxExtendedDim < extendedDimensions.size(); idxExtendedDim++)
		{
			var extendedDimension = extendedDimensions.get(idxExtendedDim);
			if (oFF.XString.isEqual(extendedDimension.getName(), timeDimension.getName()))
			{
				isEnrichedTime = true;
				groupingDimensionId = extendedDimension.getDataSource().getObjectName();
				break;
			}
		}
	}
	var finestGranularity = null;
	var dimensionLevels = oFF.XListOfString.create();
	var granularityToAttributeMap = oFF.XHashMapOfStringByString.create();
	var entityValueGranularityMap = oFF.XHashMapOfStringByString.create();
	var fieldNameToValueTypeMap = oFF.XHashMapOfStringByString.create();
	fieldNameToValueTypeMap.put("flatDisplayKeyField", timeDimension.getFlatDisplayKeyField().getValueType().getName());
	fieldNameToValueTypeMap.put("flatKeyField", timeDimension.getFlatKeyField().getValueType().getName());
	if (oFF.XStringUtils.isNotNullAndNotEmpty(hierarchyName))
	{
		var hierarchy = timeDimension.getLeveledHierarchy(hierarchyName);
		var levels = hierarchy.getHierarchyLevels();
		for (var idxLevel = 0; idxLevel < levels.size(); idxLevel++)
		{
			var level = levels.get(idxLevel);
			var levelType = level.getLevelType();
			if (levelType !== oFF.HierarchyLevelType.ALL)
			{
				var levelName = level.getLevelName();
				if (isBW)
				{
					levelName = levelType.getName();
				}
				dimensionLevels.add(levelName);
				var granularity = oFF.QCanonicalDateUtil.convertHierarchyLevelTypeToDateTimeGranularity(levelType);
				if (oFF.notNull(granularity))
				{
					granularityToAttributeMap.put(granularity.getName(), level.getLevelDimensionName());
					entityValueGranularityMap.put(levelType.getName(), granularity.getName());
					entityValueGranularityMap.put(level.getLevelDimensionName(), granularity.getName());
					var levelField = timeDimension.getFieldByNameOrAlias(levelName);
					if (oFF.notNull(levelField))
					{
						fieldNameToValueTypeMap.put(levelName, levelField.getValueType().getName());
					}
					else if (isBW)
					{
						var levelDimensionName = level.getLevelDimensionName();
						var levelDimension = queryModel.getDimensionByName(levelDimensionName);
						if (oFF.notNull(levelDimension) && levelDimension !== timeDimension)
						{
							fieldNameToValueTypeMap.put(oFF.XStringUtils.concatenate2(levelDimensionName, ".flatDisplayKeyField"), levelDimension.getFlatDisplayKeyField().getValueType().getName());
							fieldNameToValueTypeMap.put(oFF.XStringUtils.concatenate2(levelDimensionName, ".flatKeyField"), levelDimension.getFlatKeyField().getValueType().getName());
						}
					}
					if (idxLevel === levels.size() - 1)
					{
						finestGranularity = granularity.getName();
						if (levelType === oFF.HierarchyLevelType.TIME_DAY && !isBW)
						{
							var dayLevelDimension = queryModel.getDimensionByName(level.getLevelDimensionName());
							hasDayTimeYYYYMMDDFormat = oFF.XString.isEqual(dayLevelDimension.getKeyField().getSqlType(), "NVARCHAR(8)");
						}
					}
				}
			}
		}
	}
	else
	{
		finestGranularity = oFF.DateTimeGranularityType.DAY.getName();
		if (timeDimension.getKeyField().getValueType() === oFF.XValueType.DATE_TIME)
		{
			finestGranularity = oFF.DateTimeGranularityType.MILLISECOND.getName();
		}
	}
	var canonicalDateContext = new oFF.QCanonicalDateContext();
	canonicalDateContext.m_datasetId = datasetId;
	canonicalDateContext.m_dimensionId = dimensionId;
	canonicalDateContext.m_finestGranularity = finestGranularity;
	canonicalDateContext.m_isEnrichedTime = isEnrichedTime;
	canonicalDateContext.m_hierarchyId = hierarchyId;
	canonicalDateContext.m_groupingDimensionId = groupingDimensionId;
	canonicalDateContext.m_dimensionLevels = dimensionLevels;
	canonicalDateContext.m_granularityToAttributeMap = granularityToAttributeMap;
	canonicalDateContext.m_entityValueGranularityMap = entityValueGranularityMap;
	canonicalDateContext.m_fieldNameToValueTypeMap = fieldNameToValueTypeMap;
	canonicalDateContext.m_hasDayTimeYYYYMMDDFormat = hasDayTimeYYYYMMDDFormat;
	canonicalDateContext.m_isFromBW = isBW;
	canonicalDateContext.m_fiscalEnabled = timeDimension.getFiscalEnabled();
	canonicalDateContext.m_fiscalDisplayPeriod = timeDimension.getFiscalDisplayPeriod();
	canonicalDateContext.m_fiscalShift = timeDimension.getFiscalShift();
	canonicalDateContext.m_additionalPeriods = timeDimension.getAdditionalPeriods();
	canonicalDateContext.m_timeConfigEnablePattern = timeDimension.isTimeConfigEnablePattern();
	canonicalDateContext.m_isUserManaged = timeDimension.isUserManaged();
	canonicalDateContext.m_useMonthLabel = timeDimension.getUseMonthLabel();
	canonicalDateContext.m_periodPrefix = timeDimension.getPeriodPrefix();
	return canonicalDateContext;
};
oFF.QCanonicalDateContext.prototype.m_datasetId = null;
oFF.QCanonicalDateContext.prototype.m_dimensionId = null;
oFF.QCanonicalDateContext.prototype.m_isEnrichedTime = false;
oFF.QCanonicalDateContext.prototype.m_hierarchyId = null;
oFF.QCanonicalDateContext.prototype.m_groupingDimensionId = null;
oFF.QCanonicalDateContext.prototype.m_finestGranularity = null;
oFF.QCanonicalDateContext.prototype.m_dimensionLevels = null;
oFF.QCanonicalDateContext.prototype.m_granularityToAttributeMap = null;
oFF.QCanonicalDateContext.prototype.m_entityValueGranularityMap = null;
oFF.QCanonicalDateContext.prototype.m_fieldNameToValueTypeMap = null;
oFF.QCanonicalDateContext.prototype.m_fiscalEnabled = false;
oFF.QCanonicalDateContext.prototype.m_fiscalDisplayPeriod = null;
oFF.QCanonicalDateContext.prototype.m_fiscalShift = 0;
oFF.QCanonicalDateContext.prototype.m_hasDayTimeYYYYMMDDFormat = false;
oFF.QCanonicalDateContext.prototype.m_isFromBW = false;
oFF.QCanonicalDateContext.prototype.m_additionalPeriods = 0;
oFF.QCanonicalDateContext.prototype.m_timeConfigEnablePattern = false;
oFF.QCanonicalDateContext.prototype.m_isUserManaged = false;
oFF.QCanonicalDateContext.prototype.m_useMonthLabel = false;
oFF.QCanonicalDateContext.prototype.m_periodPrefix = null;
oFF.QCanonicalDateContext.prototype.releaseObject = function()
{
	this.m_datasetId = null;
	this.m_dimensionId = null;
	this.m_finestGranularity = null;
	this.m_hierarchyId = null;
	this.m_groupingDimensionId = null;
	this.m_dimensionLevels = oFF.XObjectExt.release(this.m_dimensionLevels);
	this.m_granularityToAttributeMap = oFF.XObjectExt.release(this.m_granularityToAttributeMap);
	this.m_entityValueGranularityMap = oFF.XObjectExt.release(this.m_entityValueGranularityMap);
	this.m_fieldNameToValueTypeMap = oFF.XObjectExt.release(this.m_fieldNameToValueTypeMap);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QCanonicalDateContext.prototype.getDatasetId = function()
{
	return this.m_datasetId;
};
oFF.QCanonicalDateContext.prototype.getDimensionId = function()
{
	return this.m_dimensionId;
};
oFF.QCanonicalDateContext.prototype.getFinestGranularity = function()
{
	return this.m_finestGranularity;
};
oFF.QCanonicalDateContext.prototype.getIsEnrichedTime = function()
{
	return this.m_isEnrichedTime;
};
oFF.QCanonicalDateContext.prototype.getHierarchyId = function()
{
	return this.m_hierarchyId;
};
oFF.QCanonicalDateContext.prototype.getGroupingDimensionId = function()
{
	return this.m_groupingDimensionId;
};
oFF.QCanonicalDateContext.prototype.getDimensionLevels = function()
{
	return this.m_dimensionLevels;
};
oFF.QCanonicalDateContext.prototype.getGranularityToAttributeMap = function()
{
	return this.m_granularityToAttributeMap;
};
oFF.QCanonicalDateContext.prototype.getEntityValueGranularityMap = function()
{
	return this.m_entityValueGranularityMap;
};
oFF.QCanonicalDateContext.prototype.getFiscalEnabled = function()
{
	return this.m_fiscalEnabled;
};
oFF.QCanonicalDateContext.prototype.getAdditionalPeriods = function()
{
	return this.m_additionalPeriods;
};
oFF.QCanonicalDateContext.prototype.isTimeConfigEnablePattern = function()
{
	return this.m_timeConfigEnablePattern;
};
oFF.QCanonicalDateContext.prototype.isUserManaged = function()
{
	return this.m_isUserManaged;
};
oFF.QCanonicalDateContext.prototype.getPeriodPrefix = function()
{
	return this.m_periodPrefix;
};
oFF.QCanonicalDateContext.prototype.getUseMonthLabel = function()
{
	return this.m_useMonthLabel;
};
oFF.QCanonicalDateContext.prototype.getFiscalDisplayPeriod = function()
{
	return this.m_fiscalDisplayPeriod;
};
oFF.QCanonicalDateContext.prototype.getFiscalShift = function()
{
	return this.m_fiscalShift;
};
oFF.QCanonicalDateContext.prototype.getHasDayTimeYYYYMMDDFormat = function()
{
	return this.m_hasDayTimeYYYYMMDDFormat;
};
oFF.QCanonicalDateContext.prototype.getIsFromBW = function()
{
	return this.m_isFromBW;
};
oFF.QCanonicalDateContext.prototype.getFieldToValueTypeMap = function()
{
	return this.m_fieldNameToValueTypeMap;
};
oFF.QCanonicalDateContext.prototype.serializeToJson = function()
{
	var canonicalDateContextJson = oFF.PrFactory.createStructure();
	canonicalDateContextJson.putString("m_datasetId", this.getDatasetId());
	canonicalDateContextJson.putString("m_dimensionId", this.getDimensionId());
	canonicalDateContextJson.putString("m_finestGranularity", this.getFinestGranularity());
	canonicalDateContextJson.putBoolean("m_isEnrichedTime", this.getIsEnrichedTime());
	canonicalDateContextJson.putString("m_hierarchyId", this.getHierarchyId());
	canonicalDateContextJson.putString("m_groupingDimensionId", this.getGroupingDimensionId());
	var dimensionLevelsJson = canonicalDateContextJson.putNewList("m_dimensionLevels");
	dimensionLevelsJson.addAllStrings(this.getDimensionLevels());
	var granularityToAttributeMapJson = canonicalDateContextJson.putNewStructure("m_granularityToAttributeMap");
	var granularityToAttributeMap = this.getGranularityToAttributeMap();
	var granularityToAttributeMapKeys = granularityToAttributeMap.getKeysAsReadOnlyListOfString();
	for (var granularityToAttributeMapKeysIdx = 0; granularityToAttributeMapKeysIdx < granularityToAttributeMapKeys.size(); granularityToAttributeMapKeysIdx++)
	{
		var granularityToAttributeMapKey = granularityToAttributeMapKeys.get(granularityToAttributeMapKeysIdx);
		granularityToAttributeMapJson.putString(granularityToAttributeMapKey, granularityToAttributeMap.getByKey(granularityToAttributeMapKey));
	}
	var entityValueGranularityMapJson = canonicalDateContextJson.putNewStructure("m_entityValueGranularityMap");
	var entityValueGranularityMap = this.getEntityValueGranularityMap();
	var entityValueGranularityMapKeys = entityValueGranularityMap.getKeysAsReadOnlyListOfString();
	for (var entityValueGranularityMapKeysIdx = 0; entityValueGranularityMapKeysIdx < entityValueGranularityMapKeys.size(); entityValueGranularityMapKeysIdx++)
	{
		var entityValueGranularityKey = entityValueGranularityMapKeys.get(entityValueGranularityMapKeysIdx);
		entityValueGranularityMapJson.putString(entityValueGranularityKey, entityValueGranularityMap.getByKey(entityValueGranularityKey));
	}
	canonicalDateContextJson.putBoolean("m_fiscalEnabled", this.getFiscalEnabled());
	canonicalDateContextJson.putString("m_fiscalDisplayPeriod", this.getFiscalDisplayPeriod());
	canonicalDateContextJson.putInteger("m_fiscalShift", this.getFiscalShift());
	canonicalDateContextJson.putInteger("m_additionalPeriods", this.getAdditionalPeriods());
	canonicalDateContextJson.putBoolean("m_timeConfigEnablePattern", this.isTimeConfigEnablePattern());
	canonicalDateContextJson.putBoolean("m_isUserManaged", this.isUserManaged());
	canonicalDateContextJson.putBoolean("m_useMonthLabel", this.getUseMonthLabel());
	canonicalDateContextJson.putString("m_periodPrefix", this.getPeriodPrefix());
	canonicalDateContextJson.putBoolean("m_hasDayTimeYYYYMMDDFormat", this.getHasDayTimeYYYYMMDDFormat());
	canonicalDateContextJson.putBoolean("m_isFromBW", this.getIsFromBW());
	return canonicalDateContextJson;
};

oFF.ServerVersionComparator = {

	compare:function(version1, version2)
	{
			var versions1 = oFF.ServerVersionComparator.splitVersion(version1);
		var versions2 = oFF.ServerVersionComparator.splitVersion(version2);
		var size = oFF.XMath.max(versions1.size(), versions2.size());
		for (var i = 0; i < size; i++)
		{
			var v1 = oFF.ServerVersionComparator.getVersionPart(versions1, i);
			var v2 = oFF.ServerVersionComparator.getVersionPart(versions2, i);
			if (v1 > v2)
			{
				return -1;
			}
			if (v1 < v2)
			{
				return 1;
			}
		}
		return 0;
	},
	splitVersion:function(version)
	{
			if (oFF.isNull(version))
		{
			return oFF.XListOfString.create();
		}
		return oFF.XStringTokenizer.splitString(version, ".");
	},
	getVersionPart:function(versions, i)
	{
			if (i < versions.size())
		{
			return oFF.XInteger.convertFromStringWithDefault(versions.get(i), 0);
		}
		return 0;
	}
};

oFF.CommandSpaceFactoryImpl = function() {};
oFF.CommandSpaceFactoryImpl.prototype = new oFF.XObject();
oFF.CommandSpaceFactoryImpl.prototype._ff_c = "CommandSpaceFactoryImpl";

oFF.CommandSpaceFactoryImpl.prototype.createCommandSpaceWithSelection = function(application, sigSelExpression)
{
	return oFF.QCmdSpace.createBySelection(application, sigSelExpression);
};
oFF.CommandSpaceFactoryImpl.prototype.createCommandSpaceWithElement = function(application, modelComponent)
{
	return oFF.QCmdSpace.createWithElement(application, modelComponent);
};
oFF.CommandSpaceFactoryImpl.prototype.newSpacer = function(session)
{
	return oFF.QCmdSpace.createWithElement(null, null);
};

oFF.QCmdContextFactory = function() {};
oFF.QCmdContextFactory.prototype = new oFF.XObject();
oFF.QCmdContextFactory.prototype._ff_c = "QCmdContextFactory";

oFF.QCmdContextFactory.s_cmdFactoryList = null;
oFF.QCmdContextFactory.staticSetup = function()
{
	oFF.QCmdContextFactory.s_cmdFactoryList = oFF.XList.create();
};
oFF.QCmdContextFactory.register = function(factory)
{
	oFF.QCmdContextFactory.s_cmdFactoryList.add(factory);
};
oFF.QCmdContextFactory.createCmdContext = function(olapApplication, component)
{
	if (oFF.notNull(component))
	{
		var size = oFF.QCmdContextFactory.s_cmdFactoryList.size();
		for (var i = 0; i < size; i++)
		{
			var factory = oFF.QCmdContextFactory.s_cmdFactoryList.get(i);
			var cmdContext = factory.newCmdContext(olapApplication, component);
			if (oFF.notNull(cmdContext))
			{
				return cmdContext;
			}
		}
	}
	return null;
};

oFF.QChangedListenerPair = function() {};
oFF.QChangedListenerPair.prototype = new oFF.XObject();
oFF.QChangedListenerPair.prototype._ff_c = "QChangedListenerPair";

oFF.QChangedListenerPair.create = function(listener, customIdentifier)
{
	var element = new oFF.QChangedListenerPair();
	element.setupExt(listener, customIdentifier);
	return element;
};
oFF.QChangedListenerPair.prototype.m_listenerWeakReference = null;
oFF.QChangedListenerPair.prototype.m_customIdentifier = null;
oFF.QChangedListenerPair.prototype.setupExt = function(listener, customIdentifier)
{
	this.m_listenerWeakReference = oFF.XWeakReferenceUtil.getWeakRef(listener);
	this.m_customIdentifier = customIdentifier;
};
oFF.QChangedListenerPair.prototype.releaseObject = function()
{
	this.m_listenerWeakReference = oFF.XObjectExt.release(this.m_listenerWeakReference);
	this.m_customIdentifier = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QChangedListenerPair.prototype.getListener = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_listenerWeakReference);
};
oFF.QChangedListenerPair.prototype.hasWeakReference = function()
{
	return oFF.notNull(this.m_listenerWeakReference);
};
oFF.QChangedListenerPair.prototype.getCustomIdentifier = function()
{
	return this.m_customIdentifier;
};
oFF.QChangedListenerPair.prototype.setCustomIdentifier = function(customIdentifier)
{
	this.m_customIdentifier = customIdentifier;
};
oFF.QChangedListenerPair.prototype.toString = function()
{
	if (oFF.isNull(this.m_listenerWeakReference))
	{
		return "[Empty]";
	}
	return this.m_listenerWeakReference.toString();
};

oFF.QDeserializeListenerPair = function() {};
oFF.QDeserializeListenerPair.prototype = new oFF.XObject();
oFF.QDeserializeListenerPair.prototype._ff_c = "QDeserializeListenerPair";

oFF.QDeserializeListenerPair.create = function(listener, customIdentifier)
{
	var element = new oFF.QDeserializeListenerPair();
	element.setupExt(listener, customIdentifier);
	return element;
};
oFF.QDeserializeListenerPair.prototype.m_listenerWeakReference = null;
oFF.QDeserializeListenerPair.prototype.m_customIdentifier = null;
oFF.QDeserializeListenerPair.prototype.setupExt = function(listener, customIdentifier)
{
	this.m_listenerWeakReference = oFF.XWeakReferenceUtil.getWeakRef(listener);
	this.m_customIdentifier = customIdentifier;
};
oFF.QDeserializeListenerPair.prototype.releaseObject = function()
{
	this.m_listenerWeakReference = oFF.XObjectExt.release(this.m_listenerWeakReference);
	this.m_customIdentifier = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QDeserializeListenerPair.prototype.getListener = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_listenerWeakReference);
};
oFF.QDeserializeListenerPair.prototype.hasWeakReference = function()
{
	return oFF.notNull(this.m_listenerWeakReference);
};
oFF.QDeserializeListenerPair.prototype.getCustomIdentifier = function()
{
	return this.m_customIdentifier;
};
oFF.QDeserializeListenerPair.prototype.setCustomIdentifier = function(customIdentifier)
{
	this.m_customIdentifier = customIdentifier;
};
oFF.QDeserializeListenerPair.prototype.toString = function()
{
	if (oFF.isNull(this.m_listenerWeakReference))
	{
		return "[Empty]";
	}
	return this.m_listenerWeakReference.toString();
};

oFF.QQueryCellPosition = function() {};
oFF.QQueryCellPosition.prototype = new oFF.XObject();
oFF.QQueryCellPosition.prototype._ff_c = "QQueryCellPosition";

oFF.QQueryCellPosition.createCellPosition = function(member)
{
	var queryCellPosition = new oFF.QQueryCellPosition();
	queryCellPosition.m_member = member;
	return queryCellPosition;
};
oFF.QQueryCellPosition.prototype.m_member = null;
oFF.QQueryCellPosition.prototype.releaseObject = function()
{
	this.m_member = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QQueryCellPosition.prototype.getDimensionName = function()
{
	return this.m_member.getDimension().getName();
};
oFF.QQueryCellPosition.prototype.getMemberName = function()
{
	return this.m_member.getName();
};

oFF.CalculatedDimensionPrequeryBuilder = {

	FAM_MEASURE_FILTER:"fam_measure_filter",
	FAM_SECONDARY_MEASURE_FILTER:"fam_secondary_measure_filter",
	buildCalculatedDimensionPreQuery:function(context, originalCalculatedDimension)
	{
			var baseQueryManager = originalCalculatedDimension.getQueryManager();
		var preQueryManager = baseQueryManager.cloneQueryManagerExt(oFF.QueryCloneMode.CURRENT_STATE);
		var preQueryModel = preQueryManager.getQueryModel();
		if (originalCalculatedDimension.isDisableSpatialExtendedDimensions())
		{
			var datasource = preQueryModel.getDataSource();
			var extendedDimensions = datasource.getExtendedDimensionsBase();
			for (var i = extendedDimensions.size() - 1; i >= 0; i--)
			{
				if (extendedDimensions.get(i).getDimensionType() === oFF.DimensionType.GIS_DIMENSION)
				{
					extendedDimensions.removeAt(i);
				}
			}
		}
		var cmds = preQueryManager.getConvenienceCommands();
		var calcDimType = originalCalculatedDimension.getDimensionType();
		var primaryMeasureDimension = preQueryModel.getPrimaryCalculationDimension();
		oFF.CalculatedDimensionPrequeryBuilder.removeCustomMembers(originalCalculatedDimension, preQueryModel);
		preQueryManager.setOffsetRows(0);
		preQueryManager.setMaxRows(-1);
		preQueryManager.setOffsetColumns(0);
		preQueryManager.setMaxColumns(-1);
		preQueryManager.resetMaxResultRecords();
		preQueryManager.setResultSetPersistanceTargetTable(null);
		preQueryManager.setResultSetPersistanceTargetSchema(null);
		preQueryManager.getTagging().put(oFF.QStateConstants.TAG_HAS_TRANSIENT_DEPS, "");
		var calculatedDimension = oFF.QFormulaCalculatedDimension.createCopyOfFormulaCalculatedDimension(preQueryModel, originalCalculatedDimension, true, true);
		preQueryModel.getFormulaExceptionManager().clear();
		if (calculatedDimension.getCurrency() !== null)
		{
			oFF.CalculatedDimensionPrequeryBuilder.updateCurrencyInPrequery(calculatedDimension.getCurrency(), preQueryManager);
		}
		preQueryManager.enableReturnedDataSelection(oFF.ReturnedDataSelection.TUPLE_ELEMENT_IDS);
		cmds.moveMeasureDimensionToAxis(oFF.AxisType.COLUMNS);
		oFF.CalculatedDimensionPrequeryBuilder.buildPreQueryFilter(calculatedDimension, preQueryModel);
		var dependentCalculatedDimensions = calculatedDimension.getDependentCalculatedDimensions();
		var dependentCalculatedDimensionsIter = dependentCalculatedDimensions.getIterator();
		while (dependentCalculatedDimensionsIter.hasNext())
		{
			var dependentCalculatedDimension = dependentCalculatedDimensionsIter.next();
			var tagging = dependentCalculatedDimension.getTagging();
			var targetAxis = tagging.getByKey(oFF.QTransientConstants.TAG_TARGET_AXIS);
			if (oFF.XStringUtils.isNotNullAndNotEmpty(targetAxis))
			{
				preQueryModel.addDimension(dependentCalculatedDimension);
			}
			if (oFF.XString.isEqual(targetAxis, oFF.QTransientConstants.TAG_TARGET_AXIS_ROWS))
			{
				preQueryModel.getRowsAxis().add(dependentCalculatedDimension);
			}
			else if (oFF.XString.isEqual(targetAxis, oFF.QTransientConstants.TAG_TARGET_AXIS_COLUMNS))
			{
				preQueryModel.getColumnsAxis().add(dependentCalculatedDimension);
			}
			else
			{
				preQueryModel.getFreeAxis().add(dependentCalculatedDimension);
			}
			if (calculatedDimension.getAggregationFieldNames().isEmpty())
			{
				var joinFields = dependentCalculatedDimension.getJoinFields();
				var joinFieldsIter = joinFields.getIterator();
				while (joinFieldsIter.hasNext())
				{
					var joinField = joinFieldsIter.next();
					var dimension = preQueryModel.getDimensionByName(joinField.getLocaleFieldName());
					oFF.CalculatedDimensionPrequeryBuilder.moveDimensionToRowsAndFlatten(cmds, dimension);
				}
			}
		}
		var isMeasureGroupingCalculatedDimension = false;
		if (calcDimType === oFF.DimensionType.FILTER_ACROSS_MODELS_CALCULATED_DIMENSION)
		{
			oFF.CalculatedDimensionPrequeryBuilder.optimizeSSFAMPreQueryMeasureMember(primaryMeasureDimension, preQueryModel.getSecondaryCalculationDimension(), calculatedDimension);
		}
		else
		{
			var fieldsIter = calculatedDimension.getFieldIterator();
			while (fieldsIter.hasNext())
			{
				var calculatedAttribute = fieldsIter.next();
				var formulaItemInfo = oFF.FormulaItemUtils.getFieldNamesFromFormula(calculatedAttribute.getFormulaItem());
				oFF.CalculatedDimensionPrequeryBuilder.buildCalculatedAttributes(preQueryModel, calculatedAttribute, formulaItemInfo);
				if (formulaItemInfo.getMemberNames().hasElements())
				{
					isMeasureGroupingCalculatedDimension = true;
				}
			}
			if (calcDimType === oFF.DimensionType.MEASURE_BASED_FILTER_CALCULATED_DIMENSION)
			{
				var measureDimension = preQueryModel.getMeasureDimension();
				var structureMember = measureDimension.getStructureMember(calculatedDimension.getName());
				var dependentMeasures = oFF.XHashSetOfString.create();
				if (structureMember.getOlapComponentType() === oFF.MemberType.FORMULA)
				{
					var formulaMeasure = structureMember;
					var formula = formulaMeasure.getFormula();
					oFF.CalculatedDimensionPrequeryBuilder.getDependentCustomMeasures(formula, dependentMeasures, measureDimension);
				}
				dependentMeasures.add(calculatedDimension.getName());
				primaryMeasureDimension.removeCustomMembersWithWhiteList(dependentMeasures);
				oFF.CalculatedDimensionPrequeryBuilder.optimizeMBFPreQueryMeasureMember(primaryMeasureDimension, calculatedDimension, dependentMeasures);
			}
		}
		oFF.CalculatedDimensionPrequeryBuilder.applyFiltersFromMainQuery(context, preQueryModel, calculatedDimension, isMeasureGroupingCalculatedDimension);
		oFF.CalculatedDimensionPrequeryBuilder.processAggregationDimensions(calculatedDimension, preQueryModel, originalCalculatedDimension);
		oFF.CalculatedDimensionPrequeryBuilder.copyExternalVariableRepresentations(baseQueryManager, preQueryManager);
		return preQueryModel;
	},
	updateCurrencyInPrequery:function(currencyName, preQueryManager)
	{
			var preQueryModel = preQueryManager.getQueryModel();
		var currencyTranslationManager = preQueryModel.getCurrencyTranslationManager();
		var queryCurrencyTranslation = null;
		if (oFF.notNull(currencyTranslationManager))
		{
			queryCurrencyTranslation = currencyTranslationManager.getQueryCurrencyTranslation();
		}
		if (oFF.notNull(currencyTranslationManager) && oFF.notNull(queryCurrencyTranslation) && currencyTranslationManager.supportsGlobalQueryCurrencyTranslation() && currencyTranslationManager.isLegacyMeasureCurrencyTranslationAccountModel() && !queryCurrencyTranslation.requiresReferenceDate() && !queryCurrencyTranslation.requiresRateName())
		{
			queryCurrencyTranslation.setApplyDefinedCurrencyTranslation(true);
			queryCurrencyTranslation.setFixedTargetCurrencyByString(currencyName);
		}
		else
		{
			var currencyVariable = preQueryManager.getVariable("SignedData.Currency");
			if (oFF.notNull(currencyVariable))
			{
				currencyVariable.setValueByString(currencyName);
			}
		}
	},
	copyExternalVariableRepresentations:function(baseQueryManager, preQueryManager)
	{
			var baseVariables = baseQueryManager.getVariables();
		var prequeryVariables = preQueryManager.getVariables();
		if (oFF.notNull(baseVariables) && oFF.notNull(prequeryVariables))
		{
			var iterator = prequeryVariables.getIterator();
			while (iterator.hasNext())
			{
				var variable = iterator.next();
				var name = variable.getName();
				var baseVariable = baseVariables.getByKey(name);
				if (oFF.notNull(baseVariable) && baseVariable.getExternalRepresentation() !== null)
				{
					variable.setExternalRepresentation(baseVariable.getExternalRepresentation());
				}
			}
		}
	},
	removeCustomMembers:function(originalCalculatedDimension, preQueryModel)
	{
			var calcDimType = originalCalculatedDimension.getDimensionType();
		if (calcDimType === oFF.DimensionType.FILTER_ACROSS_MODELS_CALCULATED_DIMENSION)
		{
			preQueryModel.getConvenienceCommands().resetPreserveCustomMembersAndCalcDims();
			var measureNames = originalCalculatedDimension.getMeasureNames();
			preQueryModel.getPrimaryCalculationDimension().removeCustomMembersWithWhiteList(oFF.notNull(measureNames) ? measureNames.createListOfStringCopy() : null);
			var secondaryMeasureNames = originalCalculatedDimension.getSecondaryMeasureNames();
			preQueryModel.getSecondaryCalculationDimension().removeCustomMembersWithWhiteList(oFF.notNull(secondaryMeasureNames) ? secondaryMeasureNames.createListOfStringCopy() : null);
		}
		else
		{
			preQueryModel.getConvenienceCommands().resetPreserveCustomMembers();
			if (calcDimType !== oFF.DimensionType.MEASURE_BASED_FILTER_CALCULATED_DIMENSION)
			{
				var primaryMeasureDimension = preQueryModel.getPrimaryCalculationDimension();
				if (oFF.notNull(primaryMeasureDimension))
				{
					primaryMeasureDimension.removeCustomMembers();
				}
				var secondaryMeasureDimension = preQueryModel.getSecondaryCalculationDimension();
				if (oFF.notNull(secondaryMeasureDimension))
				{
					secondaryMeasureDimension.removeCustomMembers();
				}
			}
		}
	},
	optimizeMBFPreQueryMeasureMember:function(measureDimension, calculatedDimension, dependentMeasures)
	{
			var structureLayout = measureDimension.getStructureLayout();
		structureLayout.clear();
		var structureMember = measureDimension.getStructureMember(calculatedDimension.getName());
		structureLayout.add(structureMember);
		var dependendMeasureIt = dependentMeasures.getIterator();
		while (dependendMeasureIt.hasNext())
		{
			structureLayout.add(measureDimension.getStructureMember(dependendMeasureIt.next()));
		}
		if (dependentMeasures.size() === 1)
		{
			measureDimension.getFilter().clear();
		}
	},
	getDependentCustomMeasures:function(formula, dependentMeasures, primaryMeasureDimension)
	{
			if (oFF.notNull(formula))
		{
			var componentType = formula.getComponentType();
			if (componentType === oFF.OlapComponentType.FORMULA_FUNCTION)
			{
				var formulaFunction = formula;
				var childrenIterator = formulaFunction.getChildrenIterator();
				while (childrenIterator.hasNext())
				{
					oFF.CalculatedDimensionPrequeryBuilder.getDependentCustomMeasures(childrenIterator.next(), dependentMeasures, primaryMeasureDimension);
				}
			}
			else if (componentType === oFF.OlapComponentType.FORMULA_ITEM_MEMBER)
			{
				var dependentMember = formula.getMemberName();
				if (primaryMeasureDimension.getStructureMember(dependentMember).getMemberType().isCustomMember())
				{
					dependentMeasures.add(dependentMember);
				}
			}
			else if (componentType === oFF.OlapComponentType.FORMULA_OPERATION)
			{
				var formulaOperation = formula;
				oFF.CalculatedDimensionPrequeryBuilder.getDependentCustomMeasures(formulaOperation.getLeftSide(), dependentMeasures, primaryMeasureDimension);
				oFF.CalculatedDimensionPrequeryBuilder.getDependentCustomMeasures(formulaOperation.getRightSide(), dependentMeasures, primaryMeasureDimension);
			}
		}
		return dependentMeasures;
	},
	optimizeSSFAMPreQueryMeasureMember:function(primaryMeasureDimension, secondaryMeasureDimension, calculatedDimension)
	{
			var famCalcDim = calculatedDimension;
		var measuresToRequest = oFF.XList.create();
		var measureContext = famCalcDim.getMeasureNames();
		if (measureContext.isEmpty())
		{
			if (primaryMeasureDimension.getDimensionType() === oFF.DimensionType.ACCOUNT)
			{
				var measureDimension = primaryMeasureDimension.getQueryModel().getMeasureDimension();
				measuresToRequest.add(measureDimension.getBasicStructureMembers().getByKey("SignedData"));
			}
			else
			{
				var dummyMeasure = primaryMeasureDimension.addNewFormulaMeasure("constant_fam_id", null);
				dummyMeasure.setFormula(oFF.QFactory.createFormulaConstantWithIntValue(null, 1));
				measuresToRequest.add(dummyMeasure);
			}
		}
		else
		{
			if (primaryMeasureDimension.getDimensionType() === oFF.DimensionType.ACCOUNT)
			{
				oFF.CalculatedDimensionPrequeryBuilder.addSSFAMMeasureContextFilter(primaryMeasureDimension, measureContext, oFF.CalculatedDimensionPrequeryBuilder.FAM_MEASURE_FILTER);
			}
			else
			{
				var measureIt = measureContext.getIterator();
				while (measureIt.hasNext())
				{
					measuresToRequest.add(primaryMeasureDimension.getStructureMember(measureIt.next()));
				}
			}
		}
		if (measuresToRequest.hasElements())
		{
			var structureLayout = primaryMeasureDimension.getStructureLayout();
			structureLayout.clear();
			structureLayout.addAll(measuresToRequest);
		}
		var secondaryMeasureContext = oFF.XListOfString.create();
		secondaryMeasureContext.addAll(famCalcDim.getSecondaryMeasureNames());
		if (secondaryMeasureContext.isEmpty() && secondaryMeasureDimension.getQueryModel().isUniversalAccountModel())
		{
			var dummySecondaryMeasure = secondaryMeasureDimension.addNewFormulaMeasure("constant_secondary_fam_id", null);
			dummySecondaryMeasure.setFormula(oFF.QFactory.createFormulaConstantWithIntValue(null, 1));
			measuresToRequest.add(dummySecondaryMeasure);
			var secondaryStructureLayout = secondaryMeasureDimension.getStructureLayout();
			secondaryStructureLayout.clear();
			secondaryStructureLayout.add(dummySecondaryMeasure);
			secondaryMeasureContext.add(dummySecondaryMeasure.getName());
		}
		if (!secondaryMeasureContext.isEmpty())
		{
			oFF.CalculatedDimensionPrequeryBuilder.addSSFAMMeasureContextFilter(secondaryMeasureDimension, secondaryMeasureContext, oFF.CalculatedDimensionPrequeryBuilder.FAM_SECONDARY_MEASURE_FILTER);
		}
	},
	addSSFAMMeasureContextFilter:function(accountOrMeasureDimension, measureContext, filterName)
	{
			var cartesianList = oFF.QFactory.createFilterCartesianListWithField(accountOrMeasureDimension, accountOrMeasureDimension.getKeyField());
		var iterator = measureContext.getIterator();
		while (iterator.hasNext())
		{
			var measureFilter = cartesianList.addNewCartesianElement();
			measureFilter.configureSingleParameterExpression(oFF.XStringValue.create(iterator.next()), oFF.ComparisonOperator.EQUAL);
		}
		cartesianList.setHierarchyName(accountOrMeasureDimension.getHierarchyName());
		accountOrMeasureDimension.getQueryModel().getFilter().linkFilterElement(filterName, cartesianList);
	},
	canApplyFilterFromMainQuery:function(preQueryModel, filter)
	{
			if (oFF.QFilterUtil.containsFilterComponentOfType(filter, oFF.FilterComponentType.TRANSIENT_FILTER, true))
		{
			return false;
		}
		var usedDimensions = oFF.XHashSetOfString.create();
		oFF.DimensionUsageAnalyzer2.addDimensionsUsedInContainer(filter, usedDimensions);
		var usedDimensionsIter = usedDimensions.getIterator();
		while (usedDimensionsIter.hasNext())
		{
			var usedDimension = preQueryModel.getDimensionByName(usedDimensionsIter.next());
			if (oFF.isNull(usedDimension) || usedDimension.getDimensionType() === oFF.DimensionType.CALCULATED_DIMENSION)
			{
				return false;
			}
		}
		return true;
	},
	buildPreQueryFilter:function(calculatedDimension, preQueryModel)
	{
			var filterContext = calculatedDimension.getFilterContext();
		var filterContextRoot = filterContext.getComplexRoot();
		var additionalFilterContext = calculatedDimension.getAdditionalFilterContext();
		var preQueryFilter = preQueryModel.getFilter();
		var calcDimType = calculatedDimension.getDimensionType();
		var calcDimProperties = preQueryModel.getOlapEnv().getClientQueryObjectManager().getFormulaCalcDimProperties(calculatedDimension.getName(), preQueryModel.getQueryManager().getClientQueryObjectStorageName());
		var calcDimParentRootContext = calculatedDimension.getParentRootContext();
		if (calcDimType === oFF.DimensionType.MEASURE_BASED_FILTER_CALCULATED_DIMENSION)
		{
			preQueryFilter.getVisibilityFilter().addNewCellValueFilter("1", null, oFF.ComparisonOperator.EQUAL);
		}
		if (filterContext.isComplexFilter())
		{
			preQueryFilter.getDynamicFilter().setComplexRoot(filterContextRoot);
		}
		else
		{
			preQueryFilter.getDynamicFilter().setCartesianProduct(filterContext.getCartesianProduct());
		}
		if (oFF.notNull(additionalFilterContext) && (oFF.isNull(calcDimProperties) || calcDimProperties.isApplyAdditionalFilterContext() || calculatedDimension.getProperties() !== null && calculatedDimension.getProperties().isApplyAdditionalFilterContext()))
		{
			if (additionalFilterContext.getName() !== null)
			{
				preQueryFilter.linkFilter(additionalFilterContext.getName(), additionalFilterContext);
			}
			else
			{
				preQueryFilter.linkFilter(additionalFilterContext.getUniqueId(), additionalFilterContext);
			}
		}
		else if (oFF.notNull(calcDimProperties) && !calcDimProperties.isApplyAdditionalFilterContext() && oFF.notNull(calcDimParentRootContext))
		{
			var linkedFilters = calcDimParentRootContext.getQueryModel().getFilter().getLinkedFilters();
			var externalFilterKeysList = linkedFilters.getKeysAsReadOnlyListOfString();
			for (var i = 0; i < calcDimProperties.getFilterIdsToApply().size(); i++)
			{
				var externalFilterId = calcDimProperties.getFilterIdsToApply().get(i);
				for (var j = 0; j < externalFilterKeysList.size(); j++)
				{
					var filterKey = externalFilterKeysList.get(j);
					if (oFF.XStringUtils.containsString(filterKey, externalFilterId, false))
					{
						var filterExpressionFromFilterId = linkedFilters.getByKey(filterKey);
						if (oFF.notNull(filterExpressionFromFilterId))
						{
							if (filterExpressionFromFilterId.getName() !== null)
							{
								preQueryFilter.linkFilter(filterExpressionFromFilterId.getName(), filterExpressionFromFilterId);
							}
							else
							{
								preQueryFilter.linkFilter(filterExpressionFromFilterId.getUniqueId(), filterExpressionFromFilterId);
							}
						}
					}
				}
			}
		}
	},
	processAggregationDimensions:function(calculatedDimension, preQueryModel, originalCalculatedDimension)
	{
			var aggregationFieldNamesIter = calculatedDimension.getAggregationFieldNames().getIterator();
		while (aggregationFieldNamesIter.hasNext())
		{
			var aggregationFieldName = aggregationFieldNamesIter.next();
			var aggregationField = preQueryModel.getFieldByNameOrAlias(aggregationFieldName);
			var aggregationDimension;
			if (oFF.notNull(aggregationField) && aggregationField.isKeyField())
			{
				aggregationDimension = aggregationField.getDimension();
			}
			else
			{
				aggregationDimension = preQueryModel.getDimensionByName(aggregationFieldName);
			}
			if (oFF.isNull(aggregationDimension))
			{
				throw oFF.XException.createRuntimeException(oFF.XStringUtils.concatenate3("Failed to create calculated dimension prequery, dimension of aggregation field name '", aggregationFieldName, "' does not exist."));
			}
			oFF.CalculatedDimensionPrequeryBuilder.moveDimensionToRowsAndFlatten(preQueryModel.getConvenienceCommands(), aggregationDimension);
		}
		var additionalAggregationDimensionsIter = calculatedDimension.getAdditionalAggregationDimensions().getIterator();
		while (additionalAggregationDimensionsIter.hasNext())
		{
			var additionalAggregationDimension = additionalAggregationDimensionsIter.next();
			var dimension = preQueryModel.getDimensionByName(additionalAggregationDimension.getDimensionName());
			if (oFF.notNull(dimension))
			{
				if (dimension.supportsHierarchy() && additionalAggregationDimension.getHierarchyName() !== null)
				{
					dimension.setHierarchyName(additionalAggregationDimension.getHierarchyName());
					dimension.setHierarchyActive(additionalAggregationDimension.activateHierarchy());
				}
				preQueryModel.getRowsAxis().add(dimension);
			}
		}
	},
	buildCalculatedAttributes:function(queryModel, calculatedAttribute, formulaItemInfo)
	{
			var cmds = queryModel.getConvenienceCommands();
		var fieldNames = formulaItemInfo.getAttributeNames();
		var fieldsIter = fieldNames.getIterator();
		while (fieldsIter.hasNext())
		{
			var fieldName = fieldsIter.next();
			var field = queryModel.getFieldByNameOrAlias(fieldName);
			var formulaAttributeDim;
			var fieldDimension = field.getDimension();
			if (field.isKeyField() || field.isDefaultTextField())
			{
				formulaAttributeDim = oFF.CalculatedDimensionPrequeryBuilder.moveDimensionToRowsAndFlatten(cmds, fieldDimension);
			}
			else if (oFF.notNull(fieldDimension) && fieldDimension.getDimensionType().isTypeOf(oFF.DimensionType.FORMULA_CALCULATED_DIMENSION))
			{
				formulaAttributeDim = cmds.moveDimensionToRows(fieldDimension.getName());
			}
			else
			{
				formulaAttributeDim = cmds.moveDimensionToRows(fieldName);
			}
			if (oFF.notNull(formulaAttributeDim) && formulaAttributeDim.getTopEntries() > 0)
			{
				formulaAttributeDim.setTopEntries(0);
			}
		}
		var measureDimension = queryModel.getMeasureDimension();
		var calculatedAttributeName = calculatedAttribute.getName();
		if (measureDimension.getStructureMember(calculatedAttributeName) !== null)
		{
			measureDimension.removeMeasure(calculatedAttributeName);
		}
		var attributeFormulaMeasure = measureDimension.addNewFormulaMeasure(calculatedAttributeName, null);
		if (attributeFormulaMeasure.isCustomDefaultSolveOrderApplicable() && queryModel.hasUserDefinedMeasures())
		{
			attributeFormulaMeasure.setSolveOrder(oFF.QStructureMemberSolveOrder.CLIENT_DEFINED_FORMULA_CALCULATED_DIMENSION);
		}
		attributeFormulaMeasure.setNumericScale(7);
		var accountDimension = queryModel.getAccountDimension();
		if (oFF.notNull(accountDimension) && formulaItemInfo.getMemberNames().hasElements())
		{
			var accountDimensionName = accountDimension.getName();
			cmds.moveDimensionToRows(accountDimensionName);
			var hierarchies = accountDimension.getHierarchies();
			if (oFF.notNull(hierarchies))
			{
				var hierarchyObjects = hierarchies.getObjects();
				if (hierarchyObjects.size() > 0)
				{
					cmds.setDimensionHierarchy(accountDimensionName, hierarchyObjects.get(0).getHierarchyName(), true, 0);
				}
			}
			var memberName = formulaItemInfo.getMemberNames().get(0);
			var accountMember = accountDimension.getStructureMemberByAliasOrMember(memberName);
			var accountType = null;
			if (oFF.notNull(accountMember))
			{
				accountMember.getTagging().remove(oFF.QTransientConstants.TAG_IS_TRANSIENT);
				accountType = accountMember.getAccountType();
				if (oFF.isNull(accountType))
				{
					var dependentMembers = accountMember.getNestedDependentMemberNames(accountMember.getContext(), null, false);
					for (var i = 0; i < dependentMembers.size(); i++)
					{
						var dependentMemberName = dependentMembers.get(i);
						accountMember = accountDimension.getStructureMemberByAliasOrMember(dependentMemberName);
						if (oFF.notNull(accountMember))
						{
							accountType = accountMember.getAccountType();
						}
						if (oFF.notNull(accountType))
						{
							break;
						}
					}
				}
			}
			var signFlipSignedData = calculatedAttribute.isAutoSignFlip() && oFF.notNull(accountType) && (accountType === oFF.AccountType.INC || accountType === oFF.AccountType.LEQ);
			attributeFormulaMeasure.setFormula(oFF.FormulaItemUtils.convertFormulaMembersToSignedData(calculatedAttribute.getFormulaItem(), signFlipSignedData, calculatedAttribute.getCrossCalculationMeasure()));
			cmds.addSingleMemberFilterByDimension(accountDimension, formulaItemInfo.getMemberNames().get(0), oFF.ComparisonOperator.EQUAL);
		}
		else
		{
			attributeFormulaMeasure.setFormula(calculatedAttribute.getFormulaItem());
		}
		cmds.addSingleMemberFilterByDimension(measureDimension, attributeFormulaMeasure.getName(), oFF.ComparisonOperator.EQUAL);
	},
	moveDimensionToRowsAndFlatten:function(cmds, dimension)
	{
			if (dimension.supportsHierarchy() && dimension.isHierarchyActive() && dimension.getDimensionType() !== oFF.DimensionType.ACCOUNT)
		{
			dimension.setHierarchyActive(false);
			var pathField = dimension.getHierarchyPathField();
			if (oFF.notNull(pathField))
			{
				pathField.setAlwaysRequested(false);
			}
		}
		if (dimension.getTopEntries() > 0)
		{
			dimension.setTopEntries(0);
		}
		return cmds.moveDimensionToRows(dimension.getName());
	},
	applyFiltersFromMainQuery:function(context, preQueryModel, calculatedDimension, isMBCD)
	{
			var calcDimType = calculatedDimension.getDimensionType();
		if ((calcDimType !== oFF.DimensionType.FORMULA_CALCULATED_DIMENSION || isMBCD) && !calculatedDimension.isApplyParentExternalFilters())
		{
			return;
		}
		var baseQueryModel = context.getQueryManager().getQueryModel();
		if (baseQueryModel.getQueryManager().getPreQueryName() === null)
		{
			var allDimensionsIter = baseQueryModel.getLoadedDimensions().getIterator();
			while (allDimensionsIter.hasNext())
			{
				var dimension = allDimensionsIter.next();
				if (dimension.getDimensionType().isTypeOf(oFF.DimensionType.FORMULA_CALCULATED_DIMENSION))
				{
					var dependentCalcDimsIter = dimension.getDependentCalculatedDimensions().getIterator();
					while (dependentCalcDimsIter.hasNext())
					{
						var dependentCalcDim = dependentCalcDimsIter.next();
						if (oFF.XString.isEqual(dependentCalcDim.getName(), calculatedDimension.getName()))
						{
							return;
						}
					}
				}
			}
		}
		else
		{
			return;
		}
		var structureMembers = oFF.XListOfNameObject.create();
		var accountDimension = baseQueryModel.getAccountDimension();
		structureMembers.addAll(baseQueryModel.getPrimaryCalculationDimension().getLoadedStructureMembers());
		if (oFF.notNull(accountDimension))
		{
			structureMembers.addAll(baseQueryModel.getSecondaryCalculationDimension().getLoadedStructureMembers());
		}
		var structureMembersIter = structureMembers.getIterator();
		while (structureMembersIter.hasNext())
		{
			var structureMember = structureMembersIter.next();
			var hasIgnoreExternalDimensions = structureMember.getIgnoredExternalDimensions().size() > 0;
			if (structureMember.getMemberType() === oFF.MemberType.VARIANCE && !hasIgnoreExternalDimensions)
			{
				hasIgnoreExternalDimensions = structureMember.getBaseIgnoredExternalDimensions().size() > 0 || structureMember.getReferenceIgnoredExternalDimensions().size() > 0;
			}
			if (hasIgnoreExternalDimensions)
			{
				var structureMemberDependencies = oFF.XHashSetOfString.create();
				structureMemberDependencies.add(structureMember.getAliasOrMemberName());
				structureMemberDependencies.addAll(structureMember.getNestedDependentMemberNames(context, null, false));
				var structureMemberDependenciesIter = structureMemberDependencies.getIterator();
				while (structureMemberDependenciesIter.hasNext())
				{
					var structureMemberDependencyName = structureMemberDependenciesIter.next();
					var structureMemberDependency = baseQueryModel.getPrimaryCalculationDimension().getStructureMemberByAliasOrMember(structureMemberDependencyName);
					if (oFF.isNull(structureMemberDependency))
					{
						structureMemberDependency = baseQueryModel.getOlapEnv().getClientQueryObjectManager().getStructuredMember(structureMemberDependencyName, structureMember.getStorageName(), true);
					}
					if (oFF.isNull(structureMemberDependency) && oFF.notNull(accountDimension))
					{
						structureMemberDependency = baseQueryModel.getSecondaryCalculationDimension().getStructureMemberByAliasOrMember(structureMemberDependencyName);
						if (oFF.isNull(structureMemberDependency))
						{
							structureMemberDependency = baseQueryModel.getOlapEnv().getClientQueryObjectManager().getStructuredMember(structureMemberDependencyName, structureMember.getStorageName(), false);
						}
					}
					if (oFF.notNull(structureMemberDependency))
					{
						var topLevelDependentFieldNames = structureMemberDependency.getTopLevelDependentFieldNames(context);
						var topLevelDependentFieldNamesIter = topLevelDependentFieldNames.getIterator();
						while (topLevelDependentFieldNamesIter.hasNext())
						{
							var topLevelDependentFieldName = topLevelDependentFieldNamesIter.next();
							var dependentDimension = baseQueryModel.getFieldByName(topLevelDependentFieldName).getDimension();
							if (oFF.isNull(dependentDimension))
							{
								dependentDimension = baseQueryModel.getOlapEnv().getClientQueryObjectManager().getFormulaCalcDimProperties(topLevelDependentFieldName, structureMemberDependency.getStorageName());
							}
							if (oFF.notNull(dependentDimension) && dependentDimension.getDimensionType() === oFF.DimensionType.FORMULA_CALCULATED_DIMENSION && oFF.XString.isEqual(dependentDimension.getName(), calculatedDimension.getName()))
							{
								return;
							}
						}
					}
				}
			}
		}
		var baseQueryFilter = baseQueryModel.getFilter();
		var preQueryFilter = preQueryModel.getFilter();
		if (baseQueryFilter.isTmpFilterInitialized())
		{
			var baseQueryTmpFilter = baseQueryFilter.getTmpFilter();
			if (oFF.CalculatedDimensionPrequeryBuilder.canApplyFilterFromMainQuery(preQueryModel, baseQueryTmpFilter))
			{
				if (baseQueryTmpFilter.isComplexFilter())
				{
					preQueryFilter.getTmpFilter().setComplexRoot(baseQueryTmpFilter.getComplexRoot());
				}
				else if (baseQueryTmpFilter.isCartesianProduct())
				{
					preQueryFilter.getTmpFilter().setCartesianProduct(baseQueryTmpFilter.getCartesianProduct());
				}
			}
		}
		if (baseQueryFilter.getLinkedFilters() !== null)
		{
			var backProjectionFilterIds = baseQueryFilter.getBackProjectionFilterIds();
			var linkedFiltersIter = baseQueryFilter.getLinkedFilters().getIterator();
			while (linkedFiltersIter.hasNext())
			{
				var linkedFilter = linkedFiltersIter.next();
				if ((oFF.isNull(backProjectionFilterIds) || !backProjectionFilterIds.contains(linkedFilter.getUniqueId())) && oFF.CalculatedDimensionPrequeryBuilder.canApplyFilterFromMainQuery(preQueryModel, linkedFilter))
				{
					if (linkedFilter.getName() !== null)
					{
						preQueryFilter.linkFilter(linkedFilter.getName(), linkedFilter);
					}
					else
					{
						preQueryFilter.linkFilter(linkedFilter.getUniqueId(), linkedFilter);
					}
				}
			}
		}
	}
};

oFF.FunctionalValueHelpFactory = {

	s_factory:null,
	setInstance:function(factory)
	{
			oFF.FunctionalValueHelpFactory.s_factory = factory;
	},
	createForSelectFunctions:function(dimension)
	{
			return oFF.FunctionalValueHelpFactory.s_factory.createForSelectFunctions(dimension);
	},
	createForFunctionParameters:function(selectFunction)
	{
			return oFF.FunctionalValueHelpFactory.s_factory.createForFunctionParameters(selectFunction);
	},
	createForParameterValues:function(parameter)
	{
			return oFF.FunctionalValueHelpFactory.s_factory.createForParameterValues(parameter);
	},
	createForResolveValues:function(selectFunction, parameterValues)
	{
			return oFF.FunctionalValueHelpFactory.s_factory.createForResolveValues(selectFunction, parameterValues);
	}
};

oFF.QAggregationDimension = function() {};
oFF.QAggregationDimension.prototype = new oFF.XObject();
oFF.QAggregationDimension.prototype._ff_c = "QAggregationDimension";

oFF.QAggregationDimension.createAggregationDimension = function(dimensionName, hierarchyName, activateHierarchy)
{
	var aggregationDimension = new oFF.QAggregationDimension();
	aggregationDimension.m_dimensionName = dimensionName;
	aggregationDimension.m_hierarchyName = hierarchyName;
	aggregationDimension.m_activateHierarchy = activateHierarchy;
	return aggregationDimension;
};
oFF.QAggregationDimension.prototype.m_dimensionName = null;
oFF.QAggregationDimension.prototype.m_hierarchyName = null;
oFF.QAggregationDimension.prototype.m_activateHierarchy = false;
oFF.QAggregationDimension.prototype.getDimensionName = function()
{
	return this.m_dimensionName;
};
oFF.QAggregationDimension.prototype.getHierarchyName = function()
{
	return this.m_hierarchyName;
};
oFF.QAggregationDimension.prototype.activateHierarchy = function()
{
	return this.m_activateHierarchy;
};

oFF.QDimensionReadMode = function() {};
oFF.QDimensionReadMode.prototype = new oFF.XObject();
oFF.QDimensionReadMode.prototype._ff_c = "QDimensionReadMode";

oFF.QDimensionReadMode.create = function(readModeManager)
{
	var object = new oFF.QDimensionReadMode();
	object.m_supportedReadModes = oFF.XSetOfNameObject.create();
	object.m_readModeManager = readModeManager;
	return object;
};
oFF.QDimensionReadMode.prototype.m_supportedReadModes = null;
oFF.QDimensionReadMode.prototype.m_defaultReadMode = null;
oFF.QDimensionReadMode.prototype.m_hasReadModeDefault = false;
oFF.QDimensionReadMode.prototype.m_activeReadMode = null;
oFF.QDimensionReadMode.prototype.m_readModeManager = null;
oFF.QDimensionReadMode.prototype.copyDimensionReadMode = function(origin)
{
	this.m_activeReadMode = origin.m_activeReadMode;
	this.m_defaultReadMode = origin.m_defaultReadMode;
	this.m_hasReadModeDefault = origin.m_hasReadModeDefault;
	this.m_supportedReadModes = origin.m_supportedReadModes.createSetCopy();
};
oFF.QDimensionReadMode.prototype.releaseObject = function()
{
	this.m_supportedReadModes = oFF.XObjectExt.release(this.m_supportedReadModes);
	this.m_defaultReadMode = null;
	this.m_activeReadMode = null;
	this.m_readModeManager = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QDimensionReadMode.prototype.clearReadmode = function()
{
	this.m_supportedReadModes.clear();
	this.m_defaultReadMode = null;
	this.m_activeReadMode = null;
	this.m_hasReadModeDefault = false;
};
oFF.QDimensionReadMode.prototype.setActiveReadMode = function(activeReadMode)
{
	this.assertSupportsReadMode(activeReadMode);
	this.m_activeReadMode = activeReadMode;
};
oFF.QDimensionReadMode.prototype.getActiveReadMode = function()
{
	return this.m_activeReadMode;
};
oFF.QDimensionReadMode.prototype.getDefaultReadMode = function()
{
	return this.m_defaultReadMode;
};
oFF.QDimensionReadMode.prototype.hasReadModeDefault = function()
{
	return this.m_hasReadModeDefault;
};
oFF.QDimensionReadMode.prototype.setDefaultReadMode = function(defaultReadMode, modeIsDefinedByDimensionMetadata)
{
	this.assertSupportsReadMode(defaultReadMode);
	this.m_defaultReadMode = defaultReadMode;
	this.m_hasReadModeDefault = modeIsDefinedByDimensionMetadata;
};
oFF.QDimensionReadMode.prototype.assertSupportsReadMode = function(readMode)
{
	if (oFF.notNull(readMode) && !this.supportsReadMode(readMode))
	{
		var dimension = this.m_readModeManager.getParent();
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate5("Unsupported read mode '", readMode.getName(), "' for dimension '", dimension.getName(), "'"));
	}
};
oFF.QDimensionReadMode.prototype.supportsReadMode = function(readMode)
{
	return this.m_supportedReadModes.contains(readMode) || readMode === oFF.QMemberReadMode.DEFAULT_VALUE;
};
oFF.QDimensionReadMode.prototype.determineBestReadMode = function(mode)
{
	var matchingMode = this.determineBestReadModeSingleSide(mode);
	if (oFF.isNull(matchingMode))
	{
		matchingMode = this.determineBestReadModeSingleSide(mode.getSibling());
	}
	return oFF.isNull(matchingMode) ? this.getDefaultReadMode() : matchingMode;
};
oFF.QDimensionReadMode.prototype.determineBestReadModeSingleSide = function(mode)
{
	var current = mode;
	while (oFF.notNull(current))
	{
		if (this.supportsReadMode(current))
		{
			return current;
		}
		current = current.getParent();
	}
	if (oFF.notNull(mode))
	{
		current = mode.getChild();
		while (oFF.notNull(current))
		{
			if (this.supportsReadMode(current))
			{
				return current;
			}
			current = current.getChild();
		}
	}
	return null;
};
oFF.QDimensionReadMode.prototype.getSupportedReadModes = function()
{
	return this.m_supportedReadModes;
};
oFF.QDimensionReadMode.prototype.addSupportedReadMode = function(readMode)
{
	this.m_supportedReadModes.add(readMode);
};

oFF.XComparatorDrill = function() {};
oFF.XComparatorDrill.prototype = new oFF.XObject();
oFF.XComparatorDrill.prototype._ff_c = "XComparatorDrill";

oFF.XComparatorDrill.create = function()
{
	return new oFF.XComparatorDrill();
};
oFF.XComparatorDrill.prototype.compare = function(o1, o2)
{
	var drillstate1 = o1.getDrillState();
	if (drillstate1 !== o2.getDrillState())
	{
		if (drillstate1 === oFF.DrillState.EXPANDED)
		{
			return -1;
		}
		else if (drillstate1 === oFF.DrillState.COLLAPSED)
		{
			return 1;
		}
	}
	return oFF.XString.compare(o1.getPathUniqueName(), o2.getPathUniqueName());
};

oFF.QFieldNamePair = function() {};
oFF.QFieldNamePair.prototype = new oFF.XObject();
oFF.QFieldNamePair.prototype._ff_c = "QFieldNamePair";

oFF.QFieldNamePair.create = function(localeFieldName, referencedFieldName)
{
	var fieldNamePair = new oFF.QFieldNamePair();
	fieldNamePair.m_localeFieldName = localeFieldName;
	fieldNamePair.m_referencedFieldName = referencedFieldName;
	return fieldNamePair;
};
oFF.QFieldNamePair.prototype.m_localeFieldName = null;
oFF.QFieldNamePair.prototype.m_referencedFieldName = null;
oFF.QFieldNamePair.prototype.isEqualTo = function(other)
{
	if (other === this)
	{
		return true;
	}
	if (oFF.isNull(other))
	{
		return false;
	}
	var xOther = other;
	if (!oFF.XString.isEqual(this.m_localeFieldName, xOther.getLocaleFieldName()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.m_referencedFieldName, xOther.getReferencedFieldName()))
	{
		return false;
	}
	return true;
};
oFF.QFieldNamePair.prototype.releaseObject = function()
{
	this.m_localeFieldName = null;
	this.m_referencedFieldName = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QFieldNamePair.prototype.setLocaleFieldName = function(localeFieldName)
{
	this.m_localeFieldName = localeFieldName;
};
oFF.QFieldNamePair.prototype.getLocaleFieldName = function()
{
	return this.m_localeFieldName;
};
oFF.QFieldNamePair.prototype.setReferencedFieldName = function(referencedFieldName)
{
	this.m_referencedFieldName = referencedFieldName;
};
oFF.QFieldNamePair.prototype.getReferencedFieldName = function()
{
	return this.m_referencedFieldName;
};

oFF.QFilterAcrossModelsDimensionUtil = {

	isNonTimeLevelBasedHierarchy:function(dimension, hierarchyName)
	{
			if (!dimension.supportsHierarchy() || oFF.QTimeDimensionUtil.isDateOrTimeLikeDimension(dimension) || oFF.isNull(hierarchyName) || dimension.getHierarchies() === null)
		{
			return false;
		}
		var hierarchyIterator = dimension.getHierarchies().getObjectsIterator();
		var isFullyBalancedHierarchy = false;
		var isDimensionNameEqualToLevelDimensionName = false;
		while (hierarchyIterator.hasNext())
		{
			var hierarchy = hierarchyIterator.next();
			if (oFF.XString.isEqual(hierarchy.getHierarchyName(), hierarchyName) && hierarchy.getHierarchyType() === oFF.HierarchyType.FULLY_BALANCED)
			{
				isFullyBalancedHierarchy = true;
				var levelsIterator = hierarchy.getHierarchyLevels().getIterator();
				while (levelsIterator.hasNext())
				{
					var level = levelsIterator.next();
					var levelDimensionName = level.getLevelDimensionName();
					if (oFF.XString.isEqual(levelDimensionName, dimension.getName()))
					{
						isDimensionNameEqualToLevelDimensionName = true;
					}
				}
			}
		}
		return isFullyBalancedHierarchy && !isDimensionNameEqualToLevelDimensionName;
	},
	isTimeStampDimension:function(dimension)
	{
			var fieldValueType = dimension.getKeyField().getValueType();
		if (fieldValueType === oFF.XValueType.UNSUPPORTED)
		{
			fieldValueType = dimension.getValueType();
		}
		return fieldValueType === oFF.XValueType.DATE_TIME;
	},
	getHierarchyLevelCount:function(dimension, hierarchyName)
	{
			var hierarchyResult = dimension.getHierarchies();
		if (oFF.isNull(hierarchyResult))
		{
			return -1;
		}
		return oFF.HierarchyCatalogUtil.getHierarchyLevelCount(hierarchyResult, hierarchyName);
	},
	getDimensionOrCalcDim:function(context, dimensionName, storageName)
	{
			var accessor = context.getDimensionAccessor();
		var dimension = accessor.getDimensionByName(dimensionName);
		if (oFF.isNull(dimension) && oFF.notNull(storageName))
		{
			var calcDimProps = context.getOlapEnv().getClientQueryObjectManager().getFormulaCalcDimProperties(dimensionName, storageName);
			if (oFF.notNull(calcDimProps))
			{
				return calcDimProps.getParent();
			}
		}
		return dimension;
	},
	getFieldOrCalcDimField:function(context, fieldName, storageName)
	{
			var accessor = context.getFieldAccessorSingle();
		var field = accessor.getFieldByNameOrAlias(fieldName);
		if (oFF.isNull(field) && oFF.notNull(storageName))
		{
			var calcDimProps = context.getOlapEnv().getClientQueryObjectManager().getFormulaCalcDimPropertiesByFieldName(fieldName, storageName);
			if (oFF.notNull(calcDimProps))
			{
				return calcDimProps.getFormulaCalcFields().getFieldByName(fieldName);
			}
		}
		return field;
	}
};

oFF.QFilterAcrossModelsFilterUtil = {

	OPEN_ENDED_RANGE_LOW_VALUE:"0002",
	isFilterAllIncludeOrAllExclude:function(filterElement, setSign)
	{
			if (oFF.isNull(filterElement))
		{
			return false;
		}
		if (filterElement.getOlapComponentType().isTypeOf(oFF.FilterComponentType.OPERATION))
		{
			var filterOp = filterElement;
			return setSign === oFF.SetSign.EXCLUDING && filterOp.getSetSign() === oFF.SetSign.EXCLUDING || setSign === oFF.SetSign.INCLUDING && filterOp.getSetSign() === oFF.SetSign.INCLUDING;
		}
		else if (filterElement.getOlapComponentType().isTypeOf(oFF.FilterComponentType.TRANSIENT_FILTER))
		{
			return setSign === oFF.SetSign.INCLUDING;
		}
		var childrenIterator = filterElement.getChildrenIterator();
		while (childrenIterator.hasNext())
		{
			var child = childrenIterator.next();
			if (filterElement.getOlapComponentType() !== oFF.FilterComponentType.NOT && !oFF.QFilterAcrossModelsFilterUtil.isFilterAllIncludeOrAllExclude(child, setSign) || filterElement.getOlapComponentType() === oFF.FilterComponentType.NOT && !oFF.QFilterAcrossModelsFilterUtil.isFilterAllIncludeOrAllExclude(child, setSign === oFF.SetSign.EXCLUDING ? oFF.SetSign.INCLUDING : oFF.SetSign.EXCLUDING))
			{
				return false;
			}
		}
		return true;
	},
	negateExcludeFilter:function(filter)
	{
			if (oFF.isNull(filter))
		{
			return filter;
		}
		var negatedFilter = null;
		if (oFF.QFilterAcrossModelsFilterUtil.isFilterAllIncludeOrAllExclude(filter, oFF.SetSign.EXCLUDING))
		{
			negatedFilter = oFF.QFilterAcrossModelsFilterUtil.negateFilter(filter);
		}
		else
		{
			negatedFilter = filter;
		}
		return negatedFilter;
	},
	negateFilter:function(filterElement)
	{
			if (filterElement.getOlapComponentType().isTypeOf(oFF.FilterComponentType.OPERATION))
		{
			var filterOp = filterElement;
			var newFilterOp = oFF.QFactory.createFilterOperation(filterElement.getContext(), filterOp.getField());
			newFilterOp.copyFrom(filterOp, null);
			newFilterOp.setSetSign(filterOp.getSetSign() === oFF.SetSign.EXCLUDING ? oFF.SetSign.INCLUDING : oFF.SetSign.EXCLUDING);
			return newFilterOp;
		}
		if (filterElement.getOlapComponentType() === oFF.FilterComponentType.NOT)
		{
			var filterNot = filterElement;
			return filterNot.size() > 0 ? filterNot.get(0) : null;
		}
		var newFilterAlgebra = null;
		if (filterElement.getOlapComponentType().isTypeOf(oFF.FilterComponentType.AND))
		{
			newFilterAlgebra = oFF.QFactory.createFilterOr(filterElement.getContext());
		}
		else if (filterElement.getOlapComponentType() === oFF.FilterComponentType.OR)
		{
			newFilterAlgebra = oFF.QFactory.createFilterAnd(filterElement.getContext());
		}
		else if (filterElement.getOlapComponentType() === oFF.FilterComponentType.CARTESIAN_LIST)
		{
			var cartesianList = filterElement;
			newFilterAlgebra = oFF.QFactory.createFilterCartesianList(filterElement.getContext());
			newFilterAlgebra.copyFrom(cartesianList, null);
			newFilterAlgebra.clear();
		}
		if (oFF.isNull(newFilterAlgebra))
		{
			oFF.noSupport();
		}
		var childrenIterator = filterElement.getChildrenIterator();
		while (childrenIterator.hasNext())
		{
			var child = childrenIterator.next();
			var negatedElement = oFF.QFilterAcrossModelsFilterUtil.negateFilter(child);
			if (oFF.notNull(negatedElement))
			{
				newFilterAlgebra.add(negatedElement);
			}
		}
		return newFilterAlgebra;
	},
	mergeFilterOrCartesianListsIfApplicable:function(filterOr)
	{
			var result = oFF.QFactory.createFilterCartesianList(filterOr.getContext());
		var lastFilterFieldMetadata = null;
		var lastFilterHierarchyName = null;
		for (var i = 0; i < filterOr.size(); i++)
		{
			var element = filterOr.get(i);
			if (!element.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
			{
				return filterOr;
			}
			var cartesianListFromFilterOr = element;
			if (oFF.isNull(lastFilterFieldMetadata))
			{
				lastFilterFieldMetadata = cartesianListFromFilterOr.getFieldMetadata();
				result.setFieldMetadata(lastFilterFieldMetadata);
			}
			if (oFF.isNull(lastFilterHierarchyName))
			{
				lastFilterHierarchyName = cartesianListFromFilterOr.getHierarchyName();
				result.setHierarchyName(lastFilterHierarchyName);
			}
			if (lastFilterFieldMetadata !== cartesianListFromFilterOr.getFieldMetadata() || !oFF.XString.isEqual(lastFilterHierarchyName, cartesianListFromFilterOr.getHierarchyName()))
			{
				return filterOr;
			}
			result.setConvertToFlatFilter(cartesianListFromFilterOr.isConvertToFlatFilter());
			for (var j = 0; j < cartesianListFromFilterOr.size(); j++)
			{
				var cartesianElementFromFilterOr = cartesianListFromFilterOr.getCartesianElement(j);
				if (cartesianElementFromFilterOr.getSetSign() === oFF.SetSign.EXCLUDING)
				{
					return filterOr;
				}
				result.add(cartesianElementFromFilterOr);
			}
		}
		return result;
	},
	reduceAndCreateFinalFilterAcrossModelsRootFilterElement:function(directFilterRoot, indirectFilterRoot, useFilterAndAsRoot)
	{
			var reducedDirectFilterRoot = directFilterRoot;
		if (directFilterRoot.size() === 1 && (directFilterRoot.getOlapComponentType() === oFF.FilterComponentType.AND || directFilterRoot.getOlapComponentType() === oFF.FilterComponentType.OR))
		{
			reducedDirectFilterRoot = directFilterRoot.get(0);
		}
		var reducedIndirectFilterRoot = indirectFilterRoot;
		if (indirectFilterRoot.size() === 1 && (indirectFilterRoot.getOlapComponentType() === oFF.FilterComponentType.AND || indirectFilterRoot.getOlapComponentType() === oFF.FilterComponentType.OR))
		{
			reducedIndirectFilterRoot = indirectFilterRoot.get(0);
		}
		var filterElementRoot;
		if (directFilterRoot.size() > 0 && indirectFilterRoot.size() > 0)
		{
			var filterAnd = oFF.QFactory.createFilterAnd(directFilterRoot.getContext());
			filterAnd.add(reducedDirectFilterRoot);
			filterAnd.add(reducedIndirectFilterRoot);
			filterElementRoot = filterAnd;
		}
		else if (directFilterRoot.size() > 0)
		{
			filterElementRoot = reducedDirectFilterRoot;
		}
		else
		{
			filterElementRoot = reducedIndirectFilterRoot;
		}
		if (useFilterAndAsRoot && !filterElementRoot.getOlapComponentType().isTypeOf(oFF.FilterComponentType.AND))
		{
			var newFilterAndRoot = oFF.QFactory.createFilterAnd(filterElementRoot.getContext());
			newFilterAndRoot.add(filterElementRoot);
			filterElementRoot = newFilterAndRoot;
		}
		return filterElementRoot;
	},
	isFilterDimensionLinkedWithIncludeHierarchyNodeChildrenSettingOn:function(context, links, filterContext)
	{
			var filterDimension = oFF.QFilterAcrossModelsFilterUtil.getDimensionFromFilterContext(context, links, filterContext);
		if (oFF.isNull(filterDimension))
		{
			return false;
		}
		var linkPart = oFF.QFilterAcrossModelsLinkUtil.getLinkPartFromDimensionOrFieldKey(links, filterDimension.getMetadata().getCacheKey());
		return oFF.notNull(linkPart) && linkPart.isIncludeHierarchyNodeChildren();
	},
	areAllFiltersDirect:function(context, links, filters)
	{
			for (var i = 0; i < filters.size(); i++)
		{
			var filterExpression = filters.get(i);
			if (!oFF.QFilterUtil.isFilterNullOrEmpty(filterExpression) && !oFF.QFilterAcrossModelsFilterUtil.isDirectFilterElement(context, links, filterExpression.getFilterRootElement()))
			{
				return false;
			}
		}
		return true;
	},
	isDirectFilterElement:function(context, links, filterElement)
	{
			if (oFF.isNull(filterElement) || filterElement.getOlapComponentType().isTypeOf(oFF.FilterComponentType.FILTER_MEASURE_BASED))
		{
			return false;
		}
		var filters = oFF.QFilterUtil.collectAllCartesianListsAndSpatialOperations(filterElement);
		for (var i = 0; i < filters.size(); i++)
		{
			if (!oFF.QFilterAcrossModelsFilterUtil.isDirectFilterContext(context, links, filters.get(i)))
			{
				return false;
			}
		}
		return true;
	},
	isDirectFilterContext:function(context, links, filter)
	{
			var sourceDimension = oFF.QFilterAcrossModelsFilterUtil.getDimensionFromFilterContext(context, links, filter);
		if (oFF.isNull(sourceDimension))
		{
			return false;
		}
		var linkPartForFilterDimension = oFF.QFilterAcrossModelsLinkUtil.getLinkPartFromDimensionOrFieldKey(links, sourceDimension.getMetadata().getCacheKey());
		if (oFF.isNull(linkPartForFilterDimension))
		{
			return false;
		}
		if (oFF.QFilterAcrossModelsFilterUtil.isDateOrTimeLikeDimensionAndHierarchyName(sourceDimension, filter.getHierarchyName()))
		{
			return true;
		}
		if (!oFF.XString.isEqual(linkPartForFilterDimension.getHierarchyName(), filter.getHierarchyName()))
		{
			return false;
		}
		if (sourceDimension.getQueryModel().getConvenienceCommands().isTypeOfBw() && linkPartForFilterDimension.isHierarchical())
		{
			var linkCounterPartForFilterDimension = oFF.QFilterAcrossModelsLinkUtil.getLinkCounterPartFromDimensionOrFieldKey(links, sourceDimension.getMetadata().getCacheKey());
			if (oFF.isNull(linkCounterPartForFilterDimension) || !linkCounterPartForFilterDimension.isHierarchical() || !oFF.XString.isEqual(linkPartForFilterDimension.getHierId(), linkCounterPartForFilterDimension.getHierId()))
			{
				return false;
			}
		}
		return true;
	},
	isOpenEndedTimeCartesianList:function(context, links, cartesianList)
	{
			var sourceDimension = oFF.QFilterAcrossModelsFilterUtil.getDimensionFromFilterContext(context, links, cartesianList);
		if (oFF.isNull(sourceDimension) || !oFF.QTimeDimensionUtil.isDateOrTimeLikeDimension(sourceDimension))
		{
			return false;
		}
		for (var i = 0; i < cartesianList.size(); i++)
		{
			var cartesianElement = cartesianList.getCartesianElement(i);
			if (!oFF.QFilterAcrossModelsFilterUtil.isOpenEndedTimeRangeFilterElement(cartesianElement))
			{
				return false;
			}
		}
		return true;
	},
	isOpenEndedTimeRangeFilterElement:function(filterElement)
	{
			return filterElement.getComparisonOperator() === oFF.ComparisonOperator.GREATER_EQUAL || filterElement.getComparisonOperator() === oFF.ComparisonOperator.GREATER_THAN || filterElement.getComparisonOperator() === oFF.ComparisonOperator.BETWEEN && oFF.QFilterAcrossModelsFilterUtil.isOpenEndedTimeRangeFilterLowValue(filterElement.getLow().getString());
	},
	isOpenEndedTimeRangeFilterLowValue:function(lowValue)
	{
			return oFF.XString.startsWith(lowValue, oFF.QFilterAcrossModelsFilterUtil.OPEN_ENDED_RANGE_LOW_VALUE);
	},
	isFilterDimensionLinkedOnFlatDescription:function(context, links, filterContext)
	{
			var sourceFilterDimensionName = filterContext.getDimensionName();
		if (oFF.XStringUtils.isNullOrEmpty(sourceFilterDimensionName))
		{
			return false;
		}
		var sourceFilterDimension = oFF.QFilterAcrossModelsDimensionUtil.getDimensionOrCalcDim(context, sourceFilterDimensionName, oFF.QFilterAcrossModelsLinkUtil.getAnySharedLinkStorageName(links));
		var linkPartForFilterDimension = oFF.QFilterAcrossModelsLinkUtil.getLinkPartFromDimensionOrFieldKey(links, sourceFilterDimension.getMetadata().getCacheKey());
		if (oFF.isNull(linkPartForFilterDimension) || linkPartForFilterDimension.isHierarchical())
		{
			return false;
		}
		var flatTextField = sourceFilterDimension.getFlatTextField();
		if (oFF.isNull(flatTextField))
		{
			return false;
		}
		return oFF.XString.isEqual(flatTextField.getName(), linkPartForFilterDimension.getFieldName());
	},
	setCartesianElementValues:function(cartesianElement, lowValue, highValue, field)
	{
			if (oFF.notNull(lowValue))
		{
			oFF.QFilterAcrossModelsFilterUtil.setValueBagValue(cartesianElement.getLow(), field.getValueType(), lowValue);
		}
		if (oFF.notNull(highValue))
		{
			oFF.QFilterAcrossModelsFilterUtil.setValueBagValue(cartesianElement.getHigh(), field.getValueType(), highValue);
		}
	},
	setValueBagValue:function(valueBag, valueType, value)
	{
			oFF.XObjectExt.assertNotNull(valueBag);
		oFF.XObjectExt.assertNotNull(valueType);
		if (valueType === oFF.XValueType.DATE_TIME)
		{
			valueBag.setDateTime(oFF.XDateTime.createDateTimeFromIsoFormat(value));
		}
		else if (valueType === oFF.XValueType.DECIMAL_FLOAT)
		{
			valueBag.setDouble(oFF.XDouble.convertFromString(value));
		}
		else
		{
			valueBag.setValue(oFF.XValueUtil.getValueFromString(value, valueType));
		}
	},
	isFilterEmpty:function(filterElement)
	{
			oFF.XObjectExt.assertNotNull(filterElement);
		if (filterElement.getOlapComponentType().isTypeOf(oFF.FilterComponentType.OPERATION))
		{
			return false;
		}
		var childrenIterator = filterElement.getChildrenIterator();
		while (childrenIterator.hasNext())
		{
			var child = childrenIterator.next();
			if (!oFF.QFilterAcrossModelsFilterUtil.isFilterEmpty(child))
			{
				return false;
			}
		}
		return true;
	},
	optimizeTupleFilterIfApplicable:function(filterRoot)
	{
			var result = filterRoot;
		var tupleIndicesToFactor = oFF.QFilterAcrossModelsFilterUtil.determineTupleIndicesWithUniqueValues(filterRoot);
		if (oFF.isNull(tupleIndicesToFactor) || tupleIndicesToFactor.size() === 0)
		{
			return result;
		}
		var filtersToFactor = oFF.XList.create();
		for (var i = 0; i < filterRoot.size(); i++)
		{
			var tupleFilter = filterRoot.get(i);
			for (var j = tupleFilter.size() - 1; j >= 0; j--)
			{
				var tupleFilterIndex = j;
				if (oFF.XCollectionUtils.contains(tupleIndicesToFactor,  function(tupleIndex){
					return tupleIndex.getInteger() === tupleFilterIndex;
				}.bind(this)))
				{
					var removedElem = tupleFilter.removeAt(tupleFilterIndex);
					if (i === 0)
					{
						filtersToFactor.add(removedElem);
					}
				}
			}
		}
		if (filtersToFactor.size() > 0)
		{
			result = oFF.QFactory.createFilterAnd(filterRoot.getContext());
			result.add(filterRoot);
			for (var k = 0; k < filtersToFactor.size(); k++)
			{
				result.add(filtersToFactor.get(k));
			}
		}
		return result;
	},
	determineTupleIndicesWithUniqueValues:function(filterOr)
	{
			var prevValueAndIsUniquePairs = oFF.XList.create();
		var nonUniqueIndices = oFF.XHashSetOfString.create();
		var result = oFF.XList.create();
		for (var i = 0; i < filterOr.size(); i++)
		{
			if (filterOr.get(i).getOlapComponentType() !== oFF.FilterComponentType.AND)
			{
				return null;
			}
			var tupleFilter = filterOr.get(i);
			if (tupleFilter.size() <= 2)
			{
				return null;
			}
			for (var j = 0; j < tupleFilter.size(); j++)
			{
				if (!tupleFilter.get(j).getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
				{
					return null;
				}
				var tupleElementFilter = tupleFilter.get(j);
				if (tupleElementFilter.size() !== 1)
				{
					return null;
				}
				var cartesianElement = tupleElementFilter.getCartesianElement(0);
				if (cartesianElement.getLow() === null || !cartesianElement.getLow().hasValue())
				{
					return null;
				}
				var filteredValue = cartesianElement.getLow().getString();
				if (i === 0)
				{
					prevValueAndIsUniquePairs.add(oFF.XPair.create(oFF.XStringValue.create(filteredValue), oFF.XBooleanValue.create(true)));
				}
				var prevFilteredValueAndIsUnique = prevValueAndIsUniquePairs.get(j);
				if (!oFF.XString.isEqual(prevFilteredValueAndIsUnique.getFirstObject().getString(), filteredValue))
				{
					prevFilteredValueAndIsUnique.getSecondObject().setBoolean(false);
					nonUniqueIndices.add(oFF.XInteger.convertToString(j));
					if (nonUniqueIndices.size() === tupleFilter.size())
					{
						return result;
					}
				}
			}
		}
		for (var k = 0; k < prevValueAndIsUniquePairs.size(); k++)
		{
			var previousFilteredValueAndIsUnique = prevValueAndIsUniquePairs.get(k);
			if (previousFilteredValueAndIsUnique.getSecondObject().getBoolean())
			{
				result.add(oFF.XIntegerValue.create(k));
			}
		}
		return result;
	},
	getDimensionFromFilterContext:function(context, links, filter)
	{
			return oFF.QFilterAcrossModelsDimensionUtil.getDimensionOrCalcDim(context, filter.getDimensionName(), oFF.QFilterAcrossModelsLinkUtil.getAnySharedLinkStorageName(links));
	},
	isDateOrTimeLikeDimensionAndHierarchyName:function(filterDimension, filterHierarchyName)
	{
			return oFF.QTimeDimensionUtil.isDateOrTimeLikeDimension(filterDimension) && (oFF.XStringUtils.isNullOrEmpty(filterHierarchyName) || filterDimension.getLeveledHierarchy(filterHierarchyName) !== null);
	},
	hasSourceFilterLinkedOnDescription:function(context, links, filterExpressions)
	{
			for (var i = 0; i < filterExpressions.size(); i++)
		{
			var filterExpression = filterExpressions.get(i);
			if (oFF.QFilterUtil.isFilterNullOrEmpty(filterExpression))
			{
				continue;
			}
			var filtersWithContext = oFF.QFilterUtil.collectAllCartesianListsAndSpatialOperations(filterExpressions.get(i));
			for (var j = 0; j < filtersWithContext.size(); j++)
			{
				if (oFF.QFilterAcrossModelsFilterUtil.isFilterDimensionLinkedOnFlatDescription(context, links, filtersWithContext.get(j)))
				{
					return true;
				}
			}
		}
		return false;
	}
};

oFF.QFilterAcrossModelsLinkUtil = {

	getLinkPartFromDimensionOrFieldKey:function(links, dimensionOrFieldKey)
	{
			return oFF.QFilterAcrossModelsLinkUtil.getLinkPartForDimensionOrFieldKeyWithOptions(links, dimensionOrFieldKey, false);
	},
	getLinkCounterPartFromDimensionOrFieldKey:function(links, dimensionOrFieldKey)
	{
			return oFF.QFilterAcrossModelsLinkUtil.getLinkPartForDimensionOrFieldKeyWithOptions(links, dimensionOrFieldKey, true);
	},
	getLinkPartForDimensionOrFieldKeyWithOptions:function(links, dimensionOrFieldKey, returnOtherPart)
	{
			for (var i = 0; i < links.size(); i++)
		{
			var link = links.get(i);
			if (link.getFirstPart().isSameDimensionOrField(dimensionOrFieldKey))
			{
				return returnOtherPart ? link.getSecondPart() : link.getFirstPart();
			}
			else if (link.getSecondPart().isSameDimensionOrField(dimensionOrFieldKey))
			{
				return returnOtherPart ? link.getFirstPart() : link.getSecondPart();
			}
		}
		return null;
	},
	getAnySharedLinkStorageName:function(links)
	{
			for (var i = 0; i < links.size(); i++)
		{
			var link = links.get(i);
			var storageName = oFF.QFilterAcrossModelsLinkUtil.getStorageNameForLinkComponent(link.getFirstPart());
			if (oFF.notNull(storageName))
			{
				return storageName;
			}
			storageName = oFF.QFilterAcrossModelsLinkUtil.getStorageNameForLinkComponent(link.getSecondPart());
			if (oFF.notNull(storageName))
			{
				return storageName;
			}
		}
		return null;
	},
	getSharedLinkStorageName:function(links, linkPart)
	{
			var storageName = oFF.QFilterAcrossModelsLinkUtil.getStorageNameForLinkComponent(linkPart);
		if (oFF.notNull(storageName))
		{
			return storageName;
		}
		for (var i = 0; i < links.size(); i++)
		{
			var link = links.get(i);
			storageName = oFF.QFilterAcrossModelsLinkUtil.getStorageNameForLinkComponent(link);
			if (oFF.notNull(storageName))
			{
				return storageName;
			}
		}
		return null;
	},
	getStorageNameForLinkComponent:function(linkComponent)
	{
			if (linkComponent.getContext() !== null && linkComponent.getContext().getComponentType() === oFF.OlapComponentType.KEY_REF_STORE_CONTEXT)
		{
			return linkComponent.getStorageName();
		}
		return null;
	},
	getAllLinkPartsForContext:function(links, context)
	{
			var result = oFF.XList.create();
		for (var i = 0; i < links.size(); i++)
		{
			var link = links.get(i);
			if (link.getFirstPart().isSameDataSourceOrDatasetIdAsContext(context))
			{
				result.add(link.getFirstPart());
			}
			else if (link.getSecondPart().isSameDataSourceOrDatasetIdAsContext(context))
			{
				result.add(link.getSecondPart());
			}
			else
			{
				throw oFF.XException.createIllegalArgumentException("context provided is not linked");
			}
		}
		return result;
	},
	getFirstLinkPartForContext:function(links, context)
	{
			return oFF.QFilterAcrossModelsLinkUtil.getFirstLinkPartForContextWithOptions(links, context, false);
	},
	getFirstSecondaryLinkPartForContext:function(links, context)
	{
			return oFF.QFilterAcrossModelsLinkUtil.getFirstLinkPartForContextWithOptions(links, context, true);
	},
	getFirstLinkPartForContextWithOptions:function(links, context, isSecondary)
	{
			var dimensionLink = links.get(0);
		if (dimensionLink.getFirstPart().isSameDataSourceOrDatasetIdAsContext(context) && !isSecondary || dimensionLink.getSecondPart().isSameDataSourceOrDatasetIdAsContext(context) && isSecondary)
		{
			return dimensionLink.getFirstPart();
		}
		return dimensionLink.getSecondPart();
	},
	getLinkedDimensionsForContext:function(links, context)
	{
			var dimensions = oFF.XListOfString.create();
		for (var i = 0; i < links.size(); i++)
		{
			var link = links.get(i);
			var firstPart = link.getFirstPart();
			var secondPart = link.getSecondPart();
			if (firstPart === context)
			{
				dimensions.add(firstPart.getDimensionName());
			}
			else if (secondPart === context)
			{
				dimensions.add(secondPart.getDimensionName());
			}
			else if (oFF.QFilterAcrossModelsLinkUtil.isSameDatasourceKeys(firstPart, context.getFieldKey()))
			{
				dimensions.add(firstPart.getDimensionName());
			}
			else if (oFF.QFilterAcrossModelsLinkUtil.isSameDatasourceKeys(secondPart, context.getFieldKey()))
			{
				dimensions.add(secondPart.getDimensionName());
			}
		}
		return dimensions;
	},
	isSameDatasourceKeys:function(first, second)
	{
			return oFF.XString.isEqual(first.getSystemName(), second.getSystemName()) && oFF.XString.isEqual(first.getDataSourceHashKey(), second.getDataSourceHashKey());
	},
	areLinksValid:function(links, sourceContext, targetContext)
	{
			for (var i = 0; i < links.size(); i++)
		{
			if (!oFF.QFilterAcrossModelsLinkUtil.isDimensionLinkValid(links.get(i), sourceContext, targetContext))
			{
				return false;
			}
		}
		return true;
	},
	isDimensionLinkValid:function(link, sourceContext, targetContext)
	{
			var areLinkPartsValid;
		if (link.getFirstPart().isSameDataSourceOrDatasetIdAsContext(sourceContext))
		{
			areLinkPartsValid = oFF.QFilterAcrossModelsLinkUtil.isLinkPartValid(link.getFirstPart(), sourceContext) && oFF.QFilterAcrossModelsLinkUtil.isLinkPartValid(link.getSecondPart(), targetContext);
		}
		else
		{
			areLinkPartsValid = oFF.QFilterAcrossModelsLinkUtil.isLinkPartValid(link.getSecondPart(), sourceContext) && oFF.QFilterAcrossModelsLinkUtil.isLinkPartValid(link.getFirstPart(), targetContext);
		}
		return areLinkPartsValid;
	},
	isLinkPartValid:function(linkPart, linkPartContext)
	{
			var storageName = oFF.QFilterAcrossModelsLinkUtil.getStorageNameForLinkComponent(linkPart);
		var linkedDimension = oFF.QFilterAcrossModelsDimensionUtil.getDimensionOrCalcDim(linkPartContext, linkPart.getDimensionName(), storageName);
		if (oFF.isNull(linkedDimension))
		{
			return false;
		}
		var linkedField = oFF.QFilterAcrossModelsDimensionUtil.getFieldOrCalcDimField(linkPartContext, linkPart.getFieldName(), storageName);
		if (oFF.isNull(linkedField))
		{
			return false;
		}
		if (linkPart.isHierarchical())
		{
			var hierarchies = linkedDimension.getHierarchies();
			if (oFF.notNull(hierarchies))
			{
				var hierarchyItems = hierarchies.getObjects();
				var doesHierarchyExist = hierarchyItems.size() > 0 && oFF.XCollectionUtils.contains(hierarchyItems,  function(hierarchy){
					return oFF.XString.isEqual(hierarchy.getHierarchyName(), linkPart.getHierarchyName());
				}.bind(this)) || linkedDimension.getLeveledHierarchy(linkPart.getHierarchyName()) !== null;
				if (!doesHierarchyExist)
				{
					return false;
				}
			}
		}
		return true;
	}
};

oFF.QFilterUtil = {

	convertComplexFilterToCartesian:function(complexSelection)
	{
			if (oFF.isNull(complexSelection))
		{
			return null;
		}
		var selectionComponentType = complexSelection.getComponentType();
		if (selectionComponentType === oFF.FilterComponentType.AND)
		{
			return oFF.QFilterUtil.convertAnd(complexSelection);
		}
		else if (selectionComponentType === oFF.FilterComponentType.OR)
		{
			return oFF.QFilterUtil.convertOr(complexSelection);
		}
		else if (selectionComponentType.isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
		{
			return oFF.QFilterUtil.wrapCartesianList(complexSelection);
		}
		else if (selectionComponentType === oFF.FilterComponentType.OPERATION)
		{
			return oFF.QFilterUtil.wrapFilterOperation(complexSelection);
		}
		return null;
	},
	wrapFilterOperation:function(complexSelection)
	{
			var operation = complexSelection;
		if (operation.getComparisonOperator().isTypeOf(oFF.SpatialComparisonOperator._SPATIAL))
		{
			return null;
		}
		var cartesianProduct = oFF.QFactory.createFilterCartesianProduct(complexSelection);
		oFF.QFilterUtil.addOperationToCartesian(cartesianProduct, operation, false);
		return cartesianProduct;
	},
	wrapCartesianList:function(complexSelection)
	{
			var cartesianProduct = oFF.QFactory.createFilterCartesianProduct(complexSelection);
		var signedSetComplex = complexSelection;
		cartesianProduct.add(signedSetComplex);
		return cartesianProduct;
	},
	convertAnd:function(complexSelection)
	{
			var cartesianProduct = oFF.QFactory.createFilterCartesianProduct(complexSelection);
		if (oFF.QFilterUtil.addAndToCartesian(cartesianProduct, complexSelection))
		{
			return cartesianProduct;
		}
		return null;
	},
	addAndToCartesian:function(cartesianProduct, andFilters)
	{
			var sizeAnd = andFilters.size();
		for (var idxAnd = 0; idxAnd < sizeAnd; idxAnd++)
		{
			var andFilterOperand = andFilters.get(idxAnd);
			var typeAnd = andFilterOperand.getComponentType();
			if (typeAnd.isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
			{
				if (cartesianProduct.getCartesianListByDimensionName(andFilterOperand.getDimensionName()) === null)
				{
					cartesianProduct.add(andFilterOperand);
				}
				else
				{
					return false;
				}
			}
			else if (typeAnd.isTypeOf(oFF.FilterComponentType.OR))
			{
				if (oFF.QFilterUtil.addOrToCartesian(cartesianProduct, andFilterOperand) === null)
				{
					return false;
				}
			}
			else if (typeAnd.isTypeOf(oFF.FilterComponentType.AND))
			{
				if (!oFF.QFilterUtil.addAndToCartesian(cartesianProduct, andFilterOperand))
				{
					return false;
				}
			}
			else if (typeAnd === oFF.FilterComponentType.OPERATION)
			{
				var operation = andFilterOperand;
				if (operation.getComparisonOperator().isTypeOf(oFF.SpatialComparisonOperator._SPATIAL))
				{
					return false;
				}
				if (!oFF.QFilterUtil.addOperationToCartesian(cartesianProduct, operation, true))
				{
					return false;
				}
			}
			else
			{
				return false;
			}
		}
		return true;
	},
	convertOr:function(complexSelection)
	{
			var cartesianProduct = oFF.QFactory.createFilterCartesianProduct(complexSelection);
		if (oFF.QFilterUtil.addOrToCartesian(cartesianProduct, complexSelection) !== null)
		{
			return cartesianProduct;
		}
		return null;
	},
	addOrToCartesian:function(cartesianProduct, orFilters)
	{
			var cartesianList = null;
		var sizeOr = orFilters.size();
		for (var idxOr = 0; idxOr < sizeOr; idxOr++)
		{
			var orFilter = orFilters.get(idxOr);
			var typeOr = orFilter.getComponentType();
			if (typeOr.isTypeOf(oFF.FilterComponentType.OPERATION))
			{
				var operation = orFilter;
				if (operation.getComparisonOperator().isTypeOf(oFF.SpatialComparisonOperator._SPATIAL))
				{
					cartesianList = null;
					break;
				}
				if (oFF.isNull(cartesianList))
				{
					cartesianList = cartesianProduct.getCartesianListByDimensionMdWithDefault(operation.getFieldMetadata().getDimensionMetadata());
				}
				else if (!oFF.XString.isEqual(cartesianList.getDimensionName(), operation.getDimensionName()))
				{
					cartesianList = null;
					break;
				}
				cartesianList.add(operation);
			}
			else if (typeOr.isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
			{
				var list = orFilter;
				if (oFF.isNull(cartesianList))
				{
					cartesianList = cartesianProduct.getCartesianListByDimensionMdWithDefault(list.getFieldMetadata().getDimensionMetadata());
				}
				else if (!oFF.XString.isEqual(cartesianList.getDimensionName(), list.getDimensionName()))
				{
					cartesianList = null;
					break;
				}
				cartesianList.addAll(list);
			}
			else
			{
				cartesianList = null;
				break;
			}
		}
		return cartesianList;
	},
	addOperationToCartesian:function(cartesianProduct, operation, checkExistance)
	{
			var cartesianElement = oFF.QFactory.createFilterCartesianElement(cartesianProduct);
		cartesianElement.getLow().setValue(operation.getLow().getValue());
		if (operation.getHigh() !== null)
		{
			cartesianElement.getHigh().setValue(operation.getHigh().getValue());
		}
		if (operation.getThird() !== null)
		{
			cartesianElement.getThird().setValue(operation.getThird().getValue());
		}
		cartesianElement.setComparisonOperator(operation.getComparisonOperator());
		var dimensionMetadata = operation.getFieldMetadata().getDimensionMetadata();
		var cartesianList = cartesianProduct.getCartesianListByDimensionMdWithDefault(dimensionMetadata);
		if (checkExistance && cartesianList.hasElements())
		{
			return false;
		}
		cartesianList.add(cartesianElement);
		return true;
	},
	createComplexFilterFromCartesianProduct:function(cartesianProduct)
	{
			var filterAnd = oFF.QFactory.createFilterAnd(cartesianProduct.getContext());
		for (var i = 0; i < cartesianProduct.size(); i++)
		{
			var cartesianListCopy = oFF.QFactory.createFilterCartesianList(filterAnd);
			cartesianListCopy.copyFrom(cartesianProduct.getCartesianChild(i), null);
			filterAnd.add(cartesianListCopy);
		}
		return filterAnd;
	},
	clearSelectionsInContainerByDimension:function(dimName, container)
	{
			var cartesianProduct = container.getCartesianProduct();
		if (oFF.isNull(cartesianProduct))
		{
			var complexSelectionRoot = container.getComplexRoot();
			if (oFF.notNull(complexSelectionRoot))
			{
				var componentType = complexSelectionRoot.getComponentType();
				if (componentType === oFF.FilterComponentType.OPERATION)
				{
					var filterOp = complexSelectionRoot;
					if (oFF.XString.isEqual(dimName, filterOp.getDimensionName()))
					{
						container.setComplexRoot(null);
					}
				}
				else if (componentType === oFF.FilterComponentType.AND || componentType === oFF.FilterComponentType.OR)
				{
					oFF.QFilterUtil.removeComplexSelectionByDimensionName(complexSelectionRoot, dimName);
				}
				else if (componentType.isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
				{
					var complexCartesianList = complexSelectionRoot;
					if (oFF.XString.isEqual(complexCartesianList.getDimensionName(), dimName))
					{
						complexCartesianList.clear();
					}
				}
			}
		}
		else
		{
			var memberSelection = cartesianProduct.getCartesianListByDimensionName(dimName);
			if (oFF.notNull(memberSelection))
			{
				memberSelection.clear();
				cartesianProduct.removeByDimensionName(dimName);
			}
		}
	},
	removeComplexSelectionByDimensionName:function(filterElement, dimName)
	{
			var componentType = filterElement.getComponentType();
		if (componentType === oFF.FilterComponentType.OPERATION)
		{
			var filterOp = filterElement;
			return oFF.XString.isEqual(dimName, filterOp.getDimensionName());
		}
		else if (componentType.isTypeOf(oFF.FilterComponentType.AND) || componentType === oFF.FilterComponentType.OR)
		{
			var filterAlgebra = filterElement;
			var idxFilterOp = 0;
			while (idxFilterOp < filterAlgebra.size())
			{
				var iqFilterElement = filterAlgebra.get(idxFilterOp);
				var removeComplexSelectionByDimensionName = oFF.QFilterUtil.removeComplexSelectionByDimensionName(iqFilterElement, dimName);
				if (removeComplexSelectionByDimensionName)
				{
					filterAlgebra.removeAt(idxFilterOp);
				}
				else
				{
					idxFilterOp++;
				}
			}
		}
		else if (componentType.isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
		{
			var complexCartesianList = filterElement;
			return oFF.XString.isEqual(complexCartesianList.getDimensionName(), dimName);
		}
		return false;
	},
	getMemberNamesFromFilter:function(filterElement, dimName)
	{
			var memberNames = oFF.XHashSetOfString.create();
		oFF.QFilterUtil._addMemberNamesFromFilter(filterElement, dimName, memberNames);
		return memberNames.getValuesAsReadOnlyListOfString();
	},
	_addMemberNamesFromFilter:function(filterElement, dimName, memberNames)
	{
			if (oFF.isNull(filterElement))
		{
			return;
		}
		var componentType = filterElement.getComponentType();
		if (componentType === oFF.FilterComponentType.OPERATION)
		{
			var filterOp = filterElement;
			if (oFF.XString.isEqual(dimName, filterOp.getDimensionName()))
			{
				var memberName = filterOp.getLow().getString();
				if (oFF.XStringUtils.isNotNullAndNotEmpty(memberName))
				{
					memberNames.add(memberName);
				}
			}
		}
		else if (componentType.isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA))
		{
			var filterAlgebra = filterElement;
			var size = filterAlgebra.size();
			for (var idx = 0; idx < size; idx++)
			{
				oFF.QFilterUtil._addMemberNamesFromFilter(filterAlgebra.get(idx), dimName, memberNames);
			}
		}
	},
	collectAllTimeCartesianLists:function(filterElementRoot, timeDimension)
	{
			var levelDimensionNames = oFF.QTimeDimensionUtil.getAllLevelNamesFilterLevelTypeAll(timeDimension);
		var dimensionNames = oFF.XHashSetOfString.create();
		dimensionNames.add(timeDimension.getName());
		dimensionNames.addAll(levelDimensionNames);
		var cartesianLists = oFF.XListOfNameObject.create();
		if (oFF.notNull(filterElementRoot))
		{
			oFF.QFilterUtil.collectAllCartesianListsUsingDimensionNames(filterElementRoot, dimensionNames, cartesianLists);
		}
		return cartesianLists;
	},
	collectLevelTypesFromTimeCartesianList:function(cartesianList, cartesianListContext)
	{
			var levelTypesInCartesianList = oFF.XSetOfNameObject.create();
		var timeDimension = cartesianListContext.getDimensionAccessor().getDimensionByName(cartesianList.getDimensionName());
		oFF.XObjectExt.assertNotNullExt(timeDimension, "cartesian list dimension cannot be null");
		for (var i = 0; i < cartesianList.size(); i++)
		{
			var cartesianElement = cartesianList.getCartesianElement(i);
			var levelType = null;
			if (cartesianList.getHierarchyName() === null)
			{
				var level = oFF.QTimeDimensionUtil.findAnyHierarchyLevelMatchingField(timeDimension, cartesianList.getFieldMetadata());
				oFF.XObjectExt.assertNotNullExt(level, "unable to find a matching time hierarchy level for the cartesian list field");
				levelType = level.getLevelType();
			}
			else
			{
				levelType = oFF.QFilterUtil.getHierarchyLevelTypeFromTimeValueBag(cartesianElement.getLow(), cartesianElement.getHierarchyName(), cartesianListContext, timeDimension);
			}
			if (oFF.notNull(levelType))
			{
				levelTypesInCartesianList.add(levelType);
			}
		}
		return levelTypesInCartesianList;
	},
	getHierarchyLevelTypeFromTimeValueBag:function(valueBag, hierarchyName, queryContext, dimension)
	{
			if (oFF.notNull(valueBag) && oFF.XStringUtils.isNotNullAndNotEmpty(valueBag.getString()))
		{
			return oFF.QCanonicalDateUtil.getHierarchyLevelTypeFromEntityValue(queryContext.getQueryModel(), dimension, hierarchyName, valueBag.getString());
		}
		return null;
	},
	collectAllCartesianListsUsingDimensionNames:function(filterElementRoot, dimensionNames, resultCartesianLists)
	{
			if (filterElementRoot.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
		{
			var cartesianList = filterElementRoot;
			if (dimensionNames.contains(cartesianList.getDimensionName()))
			{
				resultCartesianLists.add(cartesianList);
			}
			return;
		}
		var childrenIterator = filterElementRoot.getChildrenIterator();
		while (childrenIterator.hasNext())
		{
			var filterRootChild = childrenIterator.next();
			oFF.QFilterUtil.collectAllCartesianListsUsingDimensionNames(filterRootChild, dimensionNames, resultCartesianLists);
		}
	},
	collectAllCartesianListsAndSpatialOperations:function(filterElementRoot)
	{
			var filters = oFF.XList.create();
		oFF.QFilterUtil._collectAllCartesianListsAndSpatialOperations(filterElementRoot, filters);
		return filters;
	},
	_collectAllCartesianListsAndSpatialOperations:function(filterElementRoot, result)
	{
			if (filterElementRoot.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST) || filterElementRoot.getOlapComponentType().isTypeOf(oFF.FilterComponentType.OPERATION) && filterElementRoot.getComparisonOperator().isTypeOf(oFF.SpatialComparisonOperator._SPATIAL))
		{
			result.add(filterElementRoot);
			return;
		}
		var childrenIterator = filterElementRoot.getChildrenIterator();
		while (childrenIterator.hasNext())
		{
			var filterRootChild = childrenIterator.next();
			oFF.QFilterUtil._collectAllCartesianListsAndSpatialOperations(filterRootChild, result);
		}
	},
	collectAllCartesianLists:function(filterElementRoot)
	{
			var cartesianLists = oFF.XList.create();
		oFF.QFilterUtil._collectAllCartesianLists(filterElementRoot, cartesianLists);
		return cartesianLists;
	},
	_collectAllCartesianLists:function(filterElementRoot, resultCartesianLists)
	{
			if (filterElementRoot.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
		{
			resultCartesianLists.add(filterElementRoot);
			return;
		}
		var childrenIterator = filterElementRoot.getChildrenIterator();
		while (childrenIterator.hasNext())
		{
			var filterRootChild = childrenIterator.next();
			oFF.QFilterUtil._collectAllCartesianLists(filterRootChild, resultCartesianLists);
		}
	},
	isFilterApplicable:function(filter, modelCapabilities)
	{
			if (oFF.isNull(modelCapabilities) || oFF.isNull(filter))
		{
			return false;
		}
		var filterRootElement = filter.getFilterRootElement();
		if (oFF.isNull(filterRootElement))
		{
			return false;
		}
		var isComplexFilter = filter.isComplexFilter();
		if (isComplexFilter && !modelCapabilities.supportsMultiComplexFilter())
		{
			return false;
		}
		if (filter.getModelCapabilities().supportsCellValueOperand())
		{
			if (oFF.XCollectionUtils.hasElements(filter.getCellValueOperands()) && !modelCapabilities.supportsCellValueOperand())
			{
				return false;
			}
		}
		return oFF.QFilterUtil._isFilterElementApplicable(filterRootElement, modelCapabilities);
	},
	_isFilterElementApplicable:function(filterElement, modelCapabilities)
	{
			var componentType = filterElement.getComponentType();
		if (componentType === oFF.FilterComponentType.OPERATION)
		{
			var filterOperation = filterElement;
			if (filterOperation.hasLevelOffset() && !(modelCapabilities.supportsHierarchyLevelOffsetFilter() || modelCapabilities.supportsHierarchyTrapezoidFilter()))
			{
				return false;
			}
			if (filterOperation.hasDepth() && !modelCapabilities.supportsHierarchyTrapezoidFilter())
			{
				return false;
			}
		}
		else if (componentType.isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA))
		{
			var filterAlgebra = filterElement;
			var iterator = filterAlgebra.getIterator();
			while (iterator.hasNext())
			{
				var _isFilterElementApplicable = oFF.QFilterUtil._isFilterElementApplicable(iterator.next(), modelCapabilities);
				if (!_isFilterElementApplicable)
				{
					return false;
				}
			}
		}
		else if (componentType === oFF.FilterComponentType.FILTER_MEASURE_BASED && !modelCapabilities.supportsFilterMeasureBased())
		{
			return false;
		}
		else if (componentType === oFF.FilterComponentType.VIRTUAL_DATASOURCE && !modelCapabilities.supportsDynamicVariableRefresh())
		{
			return false;
		}
		else if (componentType === oFF.FilterComponentType.TUPLE && !modelCapabilities.supportsTuplesOperand())
		{
			return false;
		}
		return true;
	},
	getFieldNamesFromFilter:function(filterElement)
	{
			if (oFF.isNull(filterElement))
		{
			return null;
		}
		var fieldNames = oFF.XHashSetOfString.create();
		if (filterElement.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
		{
			var cartesianList = filterElement;
			fieldNames.add(cartesianList.getFieldMetadata().getName());
			return fieldNames.getValuesAsReadOnlyListOfString();
		}
		var childrenIterator = filterElement.getChildrenIterator();
		while (childrenIterator.hasNext())
		{
			var filterRootChild = childrenIterator.next();
			fieldNames.addAll(oFF.QFilterUtil.getFieldNamesFromFilter(filterRootChild));
		}
		return fieldNames.getValuesAsReadOnlyListOfString();
	},
	isSingleValueFilterElement:function(filterElement)
	{
			return filterElement.getSetSign() === oFF.SetSign.INCLUDING && (filterElement.getComparisonOperator() === oFF.ComparisonOperator.EQUAL || oFF.XString.isEqual(filterElement.getLow().getString(), filterElement.getHigh().getString()));
	},
	isSingleValueFilterCartesianList:function(cartesianList)
	{
			if (oFF.notNull(cartesianList) && cartesianList.size() === 1)
		{
			var cartesianElement = cartesianList.getCartesianElement(0);
			if (oFF.QFilterUtil.isSingleValueFilterElement(cartesianElement))
			{
				return true;
			}
		}
		return false;
	},
	hasSingleValueFilterForDimension:function(filterContainer, dimensionName)
	{
			var layeredFilters = filterContainer.getLinkedFilters().getValuesAsReadOnlyList();
		if (layeredFilters.isEmpty())
		{
			var effectiveRootElement = filterContainer.getEffectiveFilter().getFilterRootElement();
			if (oFF.notNull(effectiveRootElement))
			{
				var allLists = oFF.QFilterUtil.collectAllCartesianLists(effectiveRootElement);
				var svList = oFF.XCollectionUtils.findFirst(allLists,  function(cartesianList){
					return oFF.XString.isEqual(cartesianList.getDimensionName(), dimensionName) && oFF.QFilterUtil.isSingleValueFilterCartesianList(cartesianList);
				}.bind(this));
				if (oFF.notNull(svList))
				{
					return true;
				}
			}
		}
		else
		{
			for (var i = 0; i < layeredFilters.size(); i++)
			{
				var filterRootElement = layeredFilters.get(i).getFilterRootElement();
				if (oFF.notNull(filterRootElement))
				{
					var cartesianLists = oFF.QFilterUtil.collectAllCartesianLists(filterRootElement);
					if (cartesianLists.size() === 1 && oFF.XString.isEqual(cartesianLists.get(0).getDimensionName(), dimensionName) && oFF.QFilterUtil.isSingleValueFilterCartesianList(cartesianLists.get(0)))
					{
						return true;
					}
				}
			}
		}
		return false;
	},
	isSingleValueSourceCartesianList:function(cartesianList)
	{
			if (cartesianList.getOlapComponentType() === oFF.FilterComponentType.CONVERTED_TIME_CARTESIAN_LIST)
		{
			return cartesianList.isSingleValueSourceCartesianList();
		}
		return false;
	},
	isFilterNullOrEmpty:function(filter)
	{
			var isEmpty = true;
		if (oFF.notNull(filter))
		{
			if (filter.isComplexFilter())
			{
				var complexSelectionRoot = filter.getComplexRoot();
				if (oFF.notNull(complexSelectionRoot))
				{
					if (complexSelectionRoot.getOlapComponentType().isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA))
					{
						var filterAlgebra = complexSelectionRoot;
						isEmpty = filterAlgebra.size() === 0;
					}
					else if (complexSelectionRoot.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_PRODUCT))
					{
						var complexCartesianProduct = complexSelectionRoot;
						isEmpty = complexCartesianProduct.size() === 0;
					}
				}
			}
			else if (filter.isCartesianProduct())
			{
				var cartesianProduct = filter.getCartesianProduct();
				if (oFF.notNull(cartesianProduct))
				{
					isEmpty = cartesianProduct.size() === 0;
				}
			}
		}
		return isEmpty;
	},
	deepApplyConvertToFlatFilterToHierarchicalFilters:function(filterElement, convertToFlat)
	{
			if (filterElement.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
		{
			var filterContext = filterElement;
			if (filterContext.getHierarchyName() !== null)
			{
				filterContext.setConvertToFlatFilter(convertToFlat);
			}
			return;
		}
		var childrenIterator = filterElement.getChildrenIterator();
		while (childrenIterator.hasNext())
		{
			var filterRootChild = childrenIterator.next();
			oFF.QFilterUtil.deepApplyConvertToFlatFilterToHierarchicalFilters(filterRootChild, convertToFlat);
		}
	},
	containsFilterComponentOfType:function(filterExpression, filterComponentType, matchChildTypes)
	{
			return oFF.QFilterUtil.collectFilterComponentOfType(filterExpression, filterComponentType, matchChildTypes).size() > 0;
	},
	collectFilterComponentOfType:function(filterExpression, filterComponentType, matchChildTypes)
	{
			var result = oFF.XList.create();
		if (oFF.notNull(filterExpression))
		{
			oFF.QFilterUtil.collectFilterComponentOfTypeInternal(filterExpression.getFilterRootElement(), filterComponentType, matchChildTypes, result);
		}
		return result;
	},
	collectFilterComponentOfTypeInternal:function(rootElement, filterComponentType, matchChildTypes, result)
	{
			if (oFF.isNull(rootElement))
		{
			return;
		}
		if (rootElement.getOlapComponentType() === filterComponentType || matchChildTypes && rootElement.getOlapComponentType().isTypeOf(filterComponentType))
		{
			result.add(rootElement);
		}
		var childrenIterator = rootElement.getChildrenIterator();
		while (childrenIterator.hasNext())
		{
			var filterRootChild = childrenIterator.next();
			oFF.QFilterUtil.collectFilterComponentOfTypeInternal(filterRootChild, filterComponentType, matchChildTypes, result);
		}
	},
	createFilterElementFromOrigin:function(origin, context)
	{
			var newFilterElement = null;
		var theContext = null;
		if (oFF.notNull(context))
		{
			theContext = context;
		}
		var originType = origin.getOlapComponentType();
		if (originType === oFF.FilterComponentType.CARTESIAN_PRODUCT)
		{
			newFilterElement = oFF.QFilterCartesianProduct._create(theContext, theContext);
		}
		else if (originType === oFF.FilterComponentType.CARTESIAN_LIST)
		{
			var originList = origin;
			newFilterElement = oFF.QFilterCartesianList._createMd(theContext, theContext, originList.getFieldMetadata(), originList.getHierarchyName());
		}
		else if (originType === oFF.FilterComponentType.CONVERTED_TIME_CARTESIAN_LIST)
		{
			var originConvertedTimeCartesianList = origin;
			newFilterElement = oFF.QFilterConvertedTimeCartesianList._create(theContext, theContext, originConvertedTimeCartesianList.getFieldMetadata(), originConvertedTimeCartesianList.getHierarchyName());
		}
		else if (originType === oFF.FilterComponentType.OPERATION)
		{
			newFilterElement = oFF.QFilterOperation._create(theContext, theContext, theContext);
		}
		else if (originType === oFF.OlapComponentType.FILTER_CELL_VALUE_OPERAND)
		{
			newFilterElement = oFF.QFilterCellValueOperand.createWithExpression(theContext, theContext, theContext);
		}
		else if (originType === oFF.FilterComponentType.TUPLE)
		{
			newFilterElement = oFF.QFactory.createFilterTuple(theContext);
		}
		else if (originType === oFF.FilterComponentType.FILTER_MEASURE_BASED)
		{
			newFilterElement = oFF.QFactory.createFilterMeasureBased(theContext, origin.getName());
		}
		else if (originType === oFF.FilterComponentType.FILTER_ACROSS_MODELS)
		{
			newFilterElement = oFF.QFactory.createFilterAcrossModels(theContext, origin.getName());
		}
		else if (originType === oFF.FilterComponentType.AND)
		{
			newFilterElement = oFF.QFactory.createFilterAnd(theContext);
		}
		else if (originType === oFF.FilterComponentType.OR)
		{
			newFilterElement = oFF.QFactory.createFilterOr(theContext);
		}
		else if (originType === oFF.FilterComponentType.NOT)
		{
			newFilterElement = oFF.QFactory.createFilterNot(theContext);
		}
		else if (originType === oFF.FilterComponentType.VIRTUAL_DATASOURCE)
		{
			newFilterElement = oFF.QFactory.createFilterDynamicVariables(theContext, null);
		}
		else
		{
			throw oFF.XException.createRuntimeException(originType.getName());
		}
		newFilterElement.copyFrom(origin, null);
		return newFilterElement;
	},
	collectFilterAcrossModels:function(queryModel)
	{
			var filterAcrossModels = oFF.XList.create();
		if (oFF.isNull(queryModel))
		{
			return filterAcrossModels;
		}
		var filterContainer = queryModel.getFilter();
		if (filterContainer.isDynamicFilterInitialized())
		{
			filterAcrossModels.addAll(oFF.QFilterUtil.collectFilterComponentOfType(queryModel.getFilter().getDynamicFilter(), oFF.FilterComponentType.FILTER_ACROSS_MODELS, true));
		}
		var layeredFilters = filterContainer.getLinkedFilters().getValuesAsReadOnlyList();
		for (var i = 0; i < layeredFilters.size(); i++)
		{
			filterAcrossModels.addAll(oFF.QFilterUtil.collectFilterComponentOfType(layeredFilters.get(i), oFF.FilterComponentType.FILTER_ACROSS_MODELS, true));
		}
		return filterAcrossModels;
	}
};

oFF.QMemberNavigation = function() {};
oFF.QMemberNavigation.prototype = new oFF.XObject();
oFF.QMemberNavigation.prototype._ff_c = "QMemberNavigation";

oFF.QMemberNavigation.prototype.m_memberFunction = null;
oFF.QMemberNavigation.prototype.m_parameters = null;
oFF.QMemberNavigation.prototype.m_navigations = null;
oFF.QMemberNavigation.prototype.releaseObject = function()
{
	this.m_parameters = oFF.XObjectExt.release(this.m_parameters);
	this.m_navigations = oFF.XObjectExt.release(this.m_navigations);
	this.m_memberFunction = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QMemberNavigation.prototype.getMemberFunction = function()
{
	return this.m_memberFunction;
};
oFF.QMemberNavigation.prototype.setMemberFunction = function(memberfunction)
{
	this.m_memberFunction = memberfunction;
};
oFF.QMemberNavigation.prototype.getParameters = function()
{
	return this.m_parameters;
};
oFF.QMemberNavigation.prototype.addParameter = function(parameter)
{
	if (oFF.isNull(this.m_parameters))
	{
		this.m_parameters = oFF.XList.create();
	}
	this.m_parameters.add(parameter);
};
oFF.QMemberNavigation.prototype.getNavigations = function()
{
	return this.m_navigations;
};
oFF.QMemberNavigation.prototype.addNavigation = function(navigation)
{
	if (oFF.isNull(this.m_navigations))
	{
		this.m_navigations = oFF.XList.create();
	}
	this.m_navigations.add(navigation);
};

oFF.QMemberNavigationParameter = function() {};
oFF.QMemberNavigationParameter.prototype = new oFF.XObject();
oFF.QMemberNavigationParameter.prototype._ff_c = "QMemberNavigationParameter";

oFF.QMemberNavigationParameter.create = function()
{
	var parameter = new oFF.QMemberNavigationParameter();
	return parameter;
};
oFF.QMemberNavigationParameter.prototype.m_memberNavigationType = null;
oFF.QMemberNavigationParameter.prototype.m_levelValue = null;
oFF.QMemberNavigationParameter.prototype.m_constantValue = null;
oFF.QMemberNavigationParameter.prototype.m_fqnName = null;
oFF.QMemberNavigationParameter.prototype.m_offsetLow = null;
oFF.QMemberNavigationParameter.prototype.m_offsetHigh = null;
oFF.QMemberNavigationParameter.prototype.releaseObject = function()
{
	this.m_memberNavigationType = null;
	this.m_levelValue = oFF.XObjectExt.release(this.m_levelValue);
	this.m_constantValue = oFF.XObjectExt.release(this.m_constantValue);
	this.m_fqnName = oFF.XObjectExt.release(this.m_fqnName);
	this.m_offsetLow = oFF.XObjectExt.release(this.m_offsetLow);
	this.m_offsetHigh = oFF.XObjectExt.release(this.m_offsetHigh);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QMemberNavigationParameter.prototype.getMemberNavigationType = function()
{
	return this.m_memberNavigationType;
};
oFF.QMemberNavigationParameter.prototype.getLevelValue = function()
{
	return this.m_levelValue;
};
oFF.QMemberNavigationParameter.prototype.getConstantValue = function()
{
	return this.m_constantValue;
};
oFF.QMemberNavigationParameter.prototype.getFunctionName = function()
{
	return this.m_fqnName;
};
oFF.QMemberNavigationParameter.prototype.getOffSetLow = function()
{
	return this.m_offsetLow;
};
oFF.QMemberNavigationParameter.prototype.getOffsetHigh = function()
{
	return this.m_offsetHigh;
};
oFF.QMemberNavigationParameter.prototype.setConstantValue = function(constantValue)
{
	this.m_memberNavigationType = oFF.MemberNavigationType.FUNCTION_PARAM_CONSTANT;
	this.m_constantValue = oFF.XValueAccess.createWithValue(constantValue);
};
oFF.QMemberNavigationParameter.prototype.setLevelValue = function(levelValue)
{
	this.m_memberNavigationType = oFF.MemberNavigationType.FUNCTION_PARAM_LEVEL;
	this.m_levelValue = oFF.XValueAccess.createWithValue(levelValue);
};
oFF.QMemberNavigationParameter.prototype.setMemberValue = function(fqnName)
{
	this.m_memberNavigationType = oFF.MemberNavigationType.FUNCTION_PARAM_MEMBER;
	this.m_fqnName = oFF.XValueAccess.createWithValue(oFF.XStringValue.create(fqnName));
};
oFF.QMemberNavigationParameter.prototype.setNoValuesAboveLevel = function(level)
{
	this.m_memberNavigationType = oFF.MemberNavigationType.FUNCTION_PARAM_NO_VALUES_ABOVE_LEVEL;
	this.m_levelValue = oFF.XValueAccess.createWithValue(oFF.XStringValue.create(level));
};
oFF.QMemberNavigationParameter.prototype.setShift = function(levelValue, constantValue)
{
	this.m_memberNavigationType = oFF.MemberNavigationType.FUNCTION_PARAM_SHIFT;
	this.m_levelValue = oFF.XValueAccess.createWithValue(levelValue);
	this.m_constantValue = oFF.XValueAccess.createWithValue(constantValue);
};
oFF.QMemberNavigationParameter.prototype.setRange = function(levelValue, offsetLow, offsetHigh)
{
	this.m_memberNavigationType = oFF.MemberNavigationType.FUNCTION_PARAM_RANGE;
	this.m_levelValue = oFF.XValueAccess.createWithValue(levelValue);
	this.m_offsetLow = oFF.XValueAccess.createWithValue(oFF.XIntegerValue.create(offsetLow));
	this.m_offsetHigh = oFF.XValueAccess.createWithValue(oFF.XIntegerValue.create(offsetHigh));
};
oFF.QMemberNavigationParameter.prototype.getParameterType = function()
{
	return this.m_memberNavigationType.getName();
};
oFF.QMemberNavigationParameter.prototype.getValue = function()
{
	if (this.m_memberNavigationType === oFF.MemberNavigationType.FUNCTION_PARAM_CONSTANT)
	{
		return this.m_constantValue;
	}
	else if (this.m_memberNavigationType === oFF.MemberNavigationType.FUNCTION_PARAM_LEVEL || this.m_memberNavigationType === oFF.MemberNavigationType.FUNCTION_PARAM_NO_VALUES_ABOVE_LEVEL)
	{
		return this.m_levelValue;
	}
	else if (this.m_memberNavigationType === oFF.MemberNavigationType.FUNCTION_PARAM_MEMBER)
	{
		return this.m_fqnName;
	}
	return null;
};

oFF.QGeoChoroplethDrillPath = function() {};
oFF.QGeoChoroplethDrillPath.prototype = new oFF.XObject();
oFF.QGeoChoroplethDrillPath.prototype._ff_c = "QGeoChoroplethDrillPath";

oFF.QGeoChoroplethDrillPath.create = function()
{
	var newarea = new oFF.QGeoChoroplethDrillPath();
	newarea.setupExt();
	return newarea;
};
oFF.QGeoChoroplethDrillPath.prototype.m_shape = null;
oFF.QGeoChoroplethDrillPath.prototype.m_levelId = null;
oFF.QGeoChoroplethDrillPath.prototype.m_areaId = null;
oFF.QGeoChoroplethDrillPath.prototype.m_areaName = null;
oFF.QGeoChoroplethDrillPath.prototype.m_srid = 0;
oFF.QGeoChoroplethDrillPath.prototype.setupExt = function()
{
	this.m_levelId = null;
	this.m_areaId = null;
	this.m_areaName = null;
	this.m_shape = null;
	this.m_srid = oFF.QGeoConstants.SPATIAL_REFERENCE_WGS_1984_WEB_MERCATOR_AUXILIARY_SPHERE;
};
oFF.QGeoChoroplethDrillPath.prototype.releaseObject = function()
{
	this.m_levelId = null;
	this.m_areaId = null;
	this.m_areaName = null;
	this.m_shape = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QGeoChoroplethDrillPath.prototype.getLevelId = function()
{
	return this.m_levelId;
};
oFF.QGeoChoroplethDrillPath.prototype.setLevelId = function(levelId)
{
	this.m_levelId = levelId;
};
oFF.QGeoChoroplethDrillPath.prototype.getAreaId = function()
{
	return this.m_areaId;
};
oFF.QGeoChoroplethDrillPath.prototype.setAreaId = function(areaId)
{
	this.m_areaId = areaId;
};
oFF.QGeoChoroplethDrillPath.prototype.getShape = function()
{
	return this.m_shape;
};
oFF.QGeoChoroplethDrillPath.prototype.setShape = function(shape)
{
	this.m_shape = shape;
};
oFF.QGeoChoroplethDrillPath.prototype.getAreaName = function()
{
	return this.m_areaName;
};
oFF.QGeoChoroplethDrillPath.prototype.setAreaName = function(areaName)
{
	this.m_areaName = areaName;
};
oFF.QGeoChoroplethDrillPath.prototype.getSRID = function()
{
	return this.m_srid;
};
oFF.QGeoChoroplethDrillPath.prototype.setSRID = function(srid)
{
	this.m_srid = srid;
};

oFF.QGeoChoroplethDrillPathComparatorAsc = function() {};
oFF.QGeoChoroplethDrillPathComparatorAsc.prototype = new oFF.XObject();
oFF.QGeoChoroplethDrillPathComparatorAsc.prototype._ff_c = "QGeoChoroplethDrillPathComparatorAsc";

oFF.QGeoChoroplethDrillPathComparatorAsc.create = function()
{
	return new oFF.QGeoChoroplethDrillPathComparatorAsc();
};
oFF.QGeoChoroplethDrillPathComparatorAsc.prototype.compare = function(o1, o2)
{
	var s1 = o1.getLevelId();
	var s2 = o2.getLevelId();
	return oFF.XString.compare(s1, s2);
};

oFF.QGeoChoroplethHierarchy = function() {};
oFF.QGeoChoroplethHierarchy.prototype = new oFF.XObject();
oFF.QGeoChoroplethHierarchy.prototype._ff_c = "QGeoChoroplethHierarchy";

oFF.QGeoChoroplethHierarchy.create = function(hierarchyId, name)
{
	var newObject = new oFF.QGeoChoroplethHierarchy();
	newObject.setupExt(hierarchyId, name);
	return newObject;
};
oFF.QGeoChoroplethHierarchy.prototype.m_hierarchyId = null;
oFF.QGeoChoroplethHierarchy.prototype.m_hierarchyName = null;
oFF.QGeoChoroplethHierarchy.prototype.m_levels = null;
oFF.QGeoChoroplethHierarchy.prototype.m_levelIds = null;
oFF.QGeoChoroplethHierarchy.prototype.setupExt = function(hierarchyId, name)
{
	this.m_hierarchyId = hierarchyId;
	this.m_hierarchyName = name;
	this.m_levels = oFF.XHashMapByString.create();
	this.m_levelIds = oFF.XListOfString.create();
};
oFF.QGeoChoroplethHierarchy.prototype.releaseObject = function()
{
	this.m_hierarchyId = null;
	this.m_hierarchyName = null;
	this.m_levels = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_levels);
	this.m_levelIds = oFF.XObjectExt.release(this.m_levelIds);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QGeoChoroplethHierarchy.prototype.getHierarchyId = function()
{
	return this.m_hierarchyId;
};
oFF.QGeoChoroplethHierarchy.prototype.getHierarchyName = function()
{
	return this.m_hierarchyName;
};
oFF.QGeoChoroplethHierarchy.prototype.addLevel = function(level)
{
	if (oFF.notNull(level))
	{
		var levelId = level.getLevelId();
		this.m_levels.put(levelId, level);
		this.m_levelIds.add(levelId);
	}
};
oFF.QGeoChoroplethHierarchy.prototype.getLevels = function()
{
	return this.m_levels;
};
oFF.QGeoChoroplethHierarchy.prototype.getLevelById = function(levelId)
{
	if (oFF.notNull(levelId) && this.m_levels.containsKey(levelId))
	{
		return this.m_levels.getByKey(levelId);
	}
	return null;
};
oFF.QGeoChoroplethHierarchy.prototype.getLevelIds = function()
{
	return this.m_levelIds;
};

oFF.QGeoChoroplethHierarchyLevel = function() {};
oFF.QGeoChoroplethHierarchyLevel.prototype = new oFF.XObject();
oFF.QGeoChoroplethHierarchyLevel.prototype._ff_c = "QGeoChoroplethHierarchyLevel";

oFF.QGeoChoroplethHierarchyLevel.create = function(levelId, name)
{
	var newObject = new oFF.QGeoChoroplethHierarchyLevel();
	newObject.setupExt(levelId, name);
	return newObject;
};
oFF.QGeoChoroplethHierarchyLevel.prototype.m_levelId = null;
oFF.QGeoChoroplethHierarchyLevel.prototype.m_levelName = null;
oFF.QGeoChoroplethHierarchyLevel.prototype.m_location = null;
oFF.QGeoChoroplethHierarchyLevel.prototype.m_objectName = null;
oFF.QGeoChoroplethHierarchyLevel.prototype.m_packageName = null;
oFF.QGeoChoroplethHierarchyLevel.prototype.m_schemaName = null;
oFF.QGeoChoroplethHierarchyLevel.prototype.m_isCustom = false;
oFF.QGeoChoroplethHierarchyLevel.prototype.m_columns = null;
oFF.QGeoChoroplethHierarchyLevel.prototype.setupExt = function(levelId, name)
{
	this.m_levelId = levelId;
	this.m_levelName = name;
	this.m_location = null;
	this.m_packageName = null;
	this.m_objectName = null;
	this.m_schemaName = null;
	this.m_isCustom = false;
	this.m_columns = oFF.XList.create();
};
oFF.QGeoChoroplethHierarchyLevel.prototype.releaseObject = function()
{
	this.m_levelId = null;
	this.m_levelName = null;
	this.m_location = null;
	this.m_packageName = null;
	this.m_objectName = null;
	this.m_schemaName = null;
	this.m_isCustom = false;
	this.m_columns = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_columns);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QGeoChoroplethHierarchyLevel.prototype.getLevelId = function()
{
	return this.m_levelId;
};
oFF.QGeoChoroplethHierarchyLevel.prototype.getLevelName = function()
{
	return this.m_levelName;
};
oFF.QGeoChoroplethHierarchyLevel.prototype.addColumn = function(column)
{
	if (oFF.notNull(column))
	{
		this.m_columns.add(column);
	}
};
oFF.QGeoChoroplethHierarchyLevel.prototype.getLocation = function()
{
	return this.m_location;
};
oFF.QGeoChoroplethHierarchyLevel.prototype.setLocation = function(location)
{
	this.m_location = location;
};
oFF.QGeoChoroplethHierarchyLevel.prototype.getObjectName = function()
{
	return this.m_objectName;
};
oFF.QGeoChoroplethHierarchyLevel.prototype.setObjectName = function(objectName)
{
	this.m_objectName = objectName;
};
oFF.QGeoChoroplethHierarchyLevel.prototype.getPackageName = function()
{
	return this.m_packageName;
};
oFF.QGeoChoroplethHierarchyLevel.prototype.setPackageName = function(packageName)
{
	this.m_packageName = packageName;
};
oFF.QGeoChoroplethHierarchyLevel.prototype.getSchemaName = function()
{
	return this.m_schemaName;
};
oFF.QGeoChoroplethHierarchyLevel.prototype.setSchemaName = function(schemaName)
{
	this.m_schemaName = schemaName;
};
oFF.QGeoChoroplethHierarchyLevel.prototype.getColumns = function()
{
	return this.m_columns;
};
oFF.QGeoChoroplethHierarchyLevel.prototype.isCustom = function()
{
	return this.m_isCustom;
};
oFF.QGeoChoroplethHierarchyLevel.prototype.setIsCustom = function(isCustom)
{
	this.m_isCustom = isCustom;
};

oFF.HierarchyCatalogLevel = function() {};
oFF.HierarchyCatalogLevel.prototype = new oFF.XObject();
oFF.HierarchyCatalogLevel.prototype._ff_c = "HierarchyCatalogLevel";

oFF.HierarchyCatalogLevel.createCatalogLevel = function()
{
	return new oFF.HierarchyCatalogLevel();
};
oFF.HierarchyCatalogLevel.createCopy = function(item)
{
	if (oFF.isNull(item))
	{
		return null;
	}
	var copy = oFF.HierarchyCatalogLevel.createCatalogLevel();
	copy.setLevel(item.getLevel());
	copy.setLevelName(item.getLevelName());
	copy.setLevelDescription(item.getLevelDescription());
	copy.setLevelUniqueName(item.getLevelUniqueName());
	copy.setLevelDimensionName(item.getLevelDimensionName());
	copy.setLevelType(item.getLevelType());
	return copy;
};
oFF.HierarchyCatalogLevel.prototype.m_level = 0;
oFF.HierarchyCatalogLevel.prototype.m_levelName = null;
oFF.HierarchyCatalogLevel.prototype.m_levelDescription = null;
oFF.HierarchyCatalogLevel.prototype.m_levelUniqueName = null;
oFF.HierarchyCatalogLevel.prototype.m_levelDimensionName = null;
oFF.HierarchyCatalogLevel.prototype.m_levelType = null;
oFF.HierarchyCatalogLevel.prototype.setLevel = function(level)
{
	this.m_level = level;
};
oFF.HierarchyCatalogLevel.prototype.releaseObject = function()
{
	this.m_levelName = null;
	this.m_levelDescription = null;
	this.m_levelUniqueName = null;
	this.m_levelDimensionName = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.HierarchyCatalogLevel.prototype.getLevel = function()
{
	return this.m_level;
};
oFF.HierarchyCatalogLevel.prototype.setLevelName = function(levelName)
{
	this.m_levelName = levelName;
};
oFF.HierarchyCatalogLevel.prototype.getLevelName = function()
{
	return this.m_levelName;
};
oFF.HierarchyCatalogLevel.prototype.setLevelDescription = function(levelDescription)
{
	this.m_levelDescription = levelDescription;
};
oFF.HierarchyCatalogLevel.prototype.getLevelDescription = function()
{
	return this.m_levelDescription;
};
oFF.HierarchyCatalogLevel.prototype.setLevelUniqueName = function(levelUniqueName)
{
	this.m_levelUniqueName = levelUniqueName;
};
oFF.HierarchyCatalogLevel.prototype.getLevelUniqueName = function()
{
	return this.m_levelUniqueName;
};
oFF.HierarchyCatalogLevel.prototype.setLevelDimensionName = function(levelDimensionName)
{
	this.m_levelDimensionName = levelDimensionName;
};
oFF.HierarchyCatalogLevel.prototype.getLevelDimensionName = function()
{
	return this.m_levelDimensionName;
};
oFF.HierarchyCatalogLevel.prototype.toString = function()
{
	var sb = oFF.XStringBuffer.create();
	sb.append("Level[");
	sb.appendInt(this.m_level);
	sb.append("]");
	sb.append(" Name[");
	sb.append(this.m_levelName);
	sb.append("]");
	sb.append(" Description[");
	sb.append(this.m_levelDescription);
	sb.append("]");
	sb.append(" UniqueName[");
	sb.append(this.m_levelUniqueName);
	sb.append("]");
	sb.append(" DimensionName[");
	sb.append(this.m_levelDimensionName);
	sb.append("]");
	return sb.toString();
};
oFF.HierarchyCatalogLevel.prototype.getLevelType = function()
{
	return this.m_levelType;
};
oFF.HierarchyCatalogLevel.prototype.setLevelType = function(levelType)
{
	this.m_levelType = levelType;
};

oFF.QHierarchyLevel = function() {};
oFF.QHierarchyLevel.prototype = new oFF.XObject();
oFF.QHierarchyLevel.prototype._ff_c = "QHierarchyLevel";

oFF.QHierarchyLevel.create = function(hierarchy, uniqueName, level)
{
	var object = new oFF.QHierarchyLevel();
	object.setupHierarchyLevel(hierarchy, uniqueName, level);
	return object;
};
oFF.QHierarchyLevel.prototype.m_level = 0;
oFF.QHierarchyLevel.prototype.m_levelText = null;
oFF.QHierarchyLevel.prototype.m_levelName = null;
oFF.QHierarchyLevel.prototype.m_levelUniqueName = null;
oFF.QHierarchyLevel.prototype.m_hierarchy = null;
oFF.QHierarchyLevel.prototype.m_levelType = null;
oFF.QHierarchyLevel.prototype.m_levelDimensionName = null;
oFF.QHierarchyLevel.prototype.m_navigationAttribute = null;
oFF.QHierarchyLevel.prototype.setupHierarchyLevel = function(hierarchy, uniqueName, level)
{
	this.m_level = level;
	this.m_levelName = uniqueName;
	this.m_levelUniqueName = uniqueName;
	this.m_hierarchy = oFF.XWeakReferenceUtil.getWeakRef(hierarchy);
	if (level === 0)
	{
		this.m_levelType = oFF.HierarchyLevelType.ALL;
	}
	else
	{
		this.m_levelType = oFF.HierarchyLevelType.REGULAR;
	}
};
oFF.QHierarchyLevel.prototype.cloneExt = function(flags)
{
	var clone = oFF.QHierarchyLevel.create(this.getHierarchy(), this.getLevelUniqueName(), this.getLevelNumber());
	clone.setLevelName(this.getLevelName());
	clone.setLevelText(this.getLevelText());
	clone.setLevelType(this.getLevelType());
	clone.setLevelDimensionName(this.getLevelDimensionName());
	clone.setNavigationAttribute(this.m_navigationAttribute);
	return clone;
};
oFF.QHierarchyLevel.prototype.releaseObject = function()
{
	this.m_levelText = null;
	this.m_levelName = null;
	this.m_levelUniqueName = null;
	this.m_hierarchy = null;
	this.m_levelType = null;
	this.m_navigationAttribute = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QHierarchyLevel.prototype.toString = function()
{
	var sb = oFF.XStringBuffer.create();
	sb.append(this.m_levelUniqueName);
	sb.append(": ");
	sb.append(this.m_levelText);
	return sb.toString();
};
oFF.QHierarchyLevel.prototype.getLevelNumber = function()
{
	return this.m_level;
};
oFF.QHierarchyLevel.prototype.getLevelText = function()
{
	return this.m_levelText;
};
oFF.QHierarchyLevel.prototype.getHierarchy = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_hierarchy);
};
oFF.QHierarchyLevel.prototype.getLevelName = function()
{
	return this.m_levelName;
};
oFF.QHierarchyLevel.prototype.getLevelUniqueName = function()
{
	return this.m_levelUniqueName;
};
oFF.QHierarchyLevel.prototype.setLevelText = function(text)
{
	this.m_levelText = text;
};
oFF.QHierarchyLevel.prototype.setLevelName = function(levelName)
{
	this.m_levelName = levelName;
};
oFF.QHierarchyLevel.prototype.getLevelType = function()
{
	return this.m_levelType;
};
oFF.QHierarchyLevel.prototype.setLevelType = function(levelType)
{
	this.m_levelType = levelType;
};
oFF.QHierarchyLevel.prototype.getLevelDimensionName = function()
{
	return this.m_levelDimensionName;
};
oFF.QHierarchyLevel.prototype.setLevelDimensionName = function(levelDimensionName)
{
	this.m_levelDimensionName = levelDimensionName;
};
oFF.QHierarchyLevel.prototype.getNavigationAttribute = function()
{
	return this.m_navigationAttribute;
};
oFF.QHierarchyLevel.prototype.setNavigationAttribute = function(navigationAttribute)
{
	this.m_navigationAttribute = navigationAttribute;
};

oFF.QTimeHierarchyLevelName = {

	YQM:"YQM",
	YHQ:"YHQ",
	YHM:"YHM",
	YHQM:"YHQM",
	YM:"YM",
	YHMD:"YHMD",
	YHQMD:"YHQMD",
	YMD:"YMD",
	FYQP:"FYQP",
	FYP:"FYP",
	FYQPD:"FYQPD",
	FYPD:"FYPD",
	FISCAL_HIERARCHY_PREFIX:"FY"
};

oFF.QKeyRefComparator = function() {};
oFF.QKeyRefComparator.prototype = new oFF.XObject();
oFF.QKeyRefComparator.prototype._ff_c = "QKeyRefComparator";

oFF.QKeyRefComparator.create = function(comparator)
{
	var newObj = new oFF.QKeyRefComparator();
	newObj.m_comparator = comparator;
	return newObj;
};
oFF.QKeyRefComparator.prototype.m_comparator = null;
oFF.QKeyRefComparator.prototype.compare = function(o1, o2)
{
	var l1 = o1.get();
	var l2 = o2.get();
	return this.m_comparator.compare(l1, l2);
};

oFF.DimensionUsageAnalyzer2 = {

	setupHeuristic:function(queryModel, usedDimensions)
	{
			oFF.DimensionUsageAnalyzer2.addDimensionsUsedInExceptions(queryModel, usedDimensions);
		oFF.DimensionUsageAnalyzer2.addDimensionsUsedByVariables(queryModel, usedDimensions);
		oFF.DimensionUsageAnalyzer2.addDimensionsUsedBySorting(queryModel, usedDimensions);
		oFF.DimensionUsageAnalyzer2.addDimensionsUsedByMembers(usedDimensions, queryModel.getMeasureDimension());
		oFF.DimensionUsageAnalyzer2.addDimensionsUsedByMembers(usedDimensions, queryModel.getNonMeasureDimension());
		oFF.DimensionUsageAnalyzer2.addDimensionsUsedByMembers(usedDimensions, queryModel.getNonMeasureDimension2());
		oFF.DimensionUsageAnalyzer2.addDimensionsUsedByMembers(usedDimensions, queryModel.getAccountDimension());
		oFF.DimensionUsageAnalyzer2.addDimensionsUsedInDrillNavigations(queryModel, usedDimensions);
		oFF.DimensionUsageAnalyzer2.addDimensionsUsedInFilters(queryModel, usedDimensions);
		oFF.DimensionUsageAnalyzer2.addDimensionsUsedInUniversalDisplayHierarchies(queryModel, usedDimensions);
		oFF.DimensionUsageAnalyzer2.addDimensionsUsedByLeveledHierarchies(queryModel, usedDimensions);
		oFF.DimensionUsageAnalyzer2.addDimensionsUsedByFormulaCalculatedDimensions(queryModel, usedDimensions);
		oFF.DimensionUsageAnalyzer2.addDimensionsWithResultStructureModified(queryModel, usedDimensions);
	},
	addDimensionsWithResultStructureModified:function(queryModel, usedDimensions)
	{
			var freeAxis = queryModel.getFreeAxis();
		var dimCount = freeAxis.getDimensionCount();
		for (var idxEx = 0; idxEx < dimCount; idxEx++)
		{
			var dimension = freeAxis.get(idxEx);
			if (dimension.getModCounter() > 0 && dimension.getResultStructureController().getModCounter() > 0)
			{
				oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, dimension.getName());
			}
		}
	},
	_addNotNull:function(usedDimensions, name)
	{
			if (oFF.notNull(name))
		{
			usedDimensions.add(name);
		}
	},
	addDimensionsUsedInDrillNavigations:function(queryModel, usedDimensions)
	{
			var drillOperations = queryModel.getDrillManager().getDrillOperations();
		var size = drillOperations.size();
		for (var i = 0; i < size; i++)
		{
			var targetDimension = drillOperations.get(i).getTargetDimension();
			if (oFF.notNull(targetDimension))
			{
				oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, targetDimension.getName());
			}
		}
	},
	addDimensionsUsedInContainer:function(container, usedDimensions)
	{
			var dimensions = oFF.notNull(usedDimensions) ? usedDimensions : oFF.XHashSetOfString.create();
		if (oFF.isNull(container))
		{
			return dimensions;
		}
		var cartesianProduct = container.getCartesianProduct();
		var complexSelectionRoot = container.getComplexRoot();
		if (oFF.notNull(cartesianProduct))
		{
			oFF.DimensionUsageAnalyzer2.addDimensionsUsedInCartesianProduct(cartesianProduct, dimensions);
		}
		else if (oFF.notNull(complexSelectionRoot))
		{
			oFF.DimensionUsageAnalyzer2.addDimensionsUsedInComplexContainer(complexSelectionRoot, dimensions);
		}
		return dimensions;
	},
	addDimensionsUsedInCartesianProduct:function(cartesianProduct, dimensions)
	{
			var size = cartesianProduct.size();
		for (var i = 0; i < size; i++)
		{
			oFF.DimensionUsageAnalyzer2._addNotNull(dimensions, cartesianProduct.getCartesianChild(i).getDimensionName());
		}
	},
	addDimensionsUsedInComplexContainer:function(complexSelectionRoot, usedDimensions)
	{
			var componentType = complexSelectionRoot.getComponentType();
		if (componentType === oFF.FilterComponentType.OPERATION)
		{
			oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, complexSelectionRoot.getDimensionName());
		}
		else if (componentType === oFF.FilterComponentType.CARTESIAN_PRODUCT)
		{
			oFF.DimensionUsageAnalyzer2.addDimensionsUsedInCartesianProduct(complexSelectionRoot, usedDimensions);
		}
		else if (componentType === oFF.FilterComponentType.CARTESIAN_LIST)
		{
			oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, complexSelectionRoot.getDimensionName());
		}
		else if (componentType.isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA))
		{
			var filterAlgebra = complexSelectionRoot;
			var filterSize = filterAlgebra.size();
			for (var i = 0; i < filterSize; i++)
			{
				oFF.DimensionUsageAnalyzer2.addDimensionsUsedInComplexContainer(filterAlgebra.get(i), usedDimensions);
			}
		}
	},
	addDimensionsUsedInExceptions:function(queryModel, usedDimensions)
	{
			var exceptionManager = queryModel.getExceptionManager();
		var sizeEx = exceptionManager.size();
		for (var idxEx = 0; idxEx < sizeEx; idxEx++)
		{
			var exception = exceptionManager.get(idxEx);
			var measure = exception.getMeasure();
			if (oFF.notNull(measure))
			{
				oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, measure.getDimension().getName());
			}
			var structure = exception.getStructure();
			if (oFF.notNull(structure))
			{
				oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, structure.getDimension().getName());
			}
			var evaluates = exception.getEvaluates();
			var sizeEva = evaluates.size();
			for (var idxEva = 0; idxEva < sizeEva; idxEva++)
			{
				oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, evaluates.get(idxEva).getDimension().getName());
			}
		}
	},
	addDimensionsUsedInConditions:function(queryModel, usedDimensions)
	{
			var conditionManager = queryModel.getConditionManager();
		if (oFF.isNull(conditionManager))
		{
			return;
		}
		for (var conditionsIndex = 0; conditionsIndex < conditionManager.size(); conditionsIndex++)
		{
			var condition = conditionManager.get(conditionsIndex);
			var evaluationDimensions = condition.getEvaluationDimensions();
			if (oFF.XCollectionUtils.hasElements(evaluationDimensions))
			{
				var numberOfEvaluationDimensions = evaluationDimensions.size();
				for (var dimensionIndex = 0; dimensionIndex < numberOfEvaluationDimensions; dimensionIndex++)
				{
					var dimension = evaluationDimensions.get(dimensionIndex);
					oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, dimension.getName());
				}
			}
		}
	},
	addDimensionsUsedByVariables:function(queryModel, usedDimensions)
	{
			var variables = queryModel.getVariables();
		var sizeVar = variables.size();
		for (var idxVar = 0; idxVar < sizeVar; idxVar++)
		{
			var curVar = variables.get(idxVar);
			if (curVar.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
			{
				var dimMemberVar = curVar;
				oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, dimMemberVar.getDimension().getName());
				var runtimeReferences = dimMemberVar.getRuntimeReferences();
				for (var i = 0; i < runtimeReferences.size(); i++)
				{
					oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, runtimeReferences.get(i));
				}
				if (curVar.getVariableType() === oFF.VariableType.HIERARCHY_NAME_VARIABLE)
				{
					oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, curVar.getHierarchyNameDimension().getName());
				}
			}
		}
	},
	addDimensionsUsedBySorting:function(queryModel, usedDimensions)
	{
			var sortingManager = queryModel.getSortingManager();
		var sortingOperations = sortingManager.getSortingOperations();
		var size = sortingOperations.size();
		for (var i = 0; i < size; i++)
		{
			var genericSorting = sortingOperations.get(i);
			var sortingType = genericSorting.getSortingType();
			if (sortingType === oFF.SortType.MEASURE || sortingType === oFF.SortType.DATA_CELL_VALUE || genericSorting.getOlapComponentType().isTypeOf(oFF.OlapComponentType.DIMENSION_SORTING))
			{
				var dimension = sortingOperations.get(i).getDimension();
				if (oFF.notNull(dimension))
				{
					oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, dimension.getName());
				}
			}
		}
	},
	addDimensionsUsedByMembers:function(usedDimensions, dimension)
	{
			if (oFF.notNull(dimension))
		{
			var allStructureMembers = dimension.getLoadedStructureMembers();
			if (oFF.notNull(allStructureMembers))
			{
				var size = allStructureMembers.size();
				for (var i = 0; i < size; i++)
				{
					var member = allStructureMembers.get(i);
					if (oFF.notNull(member))
					{
						oFF.DimensionUsageAnalyzer2.addDimensionsUsedByMember(usedDimensions, member, dimension.getQueryModel());
					}
				}
			}
		}
	},
	addDimensionsUsedByMember:function(usedDimensions, member, queryModel)
	{
			if (member.getMemberType() === oFF.MemberType.RESTRICTED_MEASURE)
		{
			var filter = member.getFilter();
			if (oFF.notNull(filter))
			{
				if (filter.isComplexFilter())
				{
					oFF.DimensionUsageAnalyzer2.addDimensionsUsedByRestrictedMember(filter.getComplexRoot(), usedDimensions);
				}
				else if (filter.isCartesianProduct())
				{
					oFF.DimensionUsageAnalyzer2.addDimensionsUsedByRestrictedMember(filter.getCartesianProduct(), usedDimensions);
				}
			}
		}
		else if (member.getMemberType() === oFF.MemberType.FORMULA)
		{
			oFF.DimensionUsageAnalyzer2.addDimensionsUsedByFormulaMember(member.getFormula(), usedDimensions, queryModel);
		}
	},
	addDimensionsUsedByRestrictedMember:function(complexSelectionRoot, usedDimensions)
	{
			var componentType = complexSelectionRoot.getComponentType();
		if (componentType === oFF.FilterComponentType.OPERATION)
		{
			var filterOp = complexSelectionRoot;
			oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, filterOp.getDimensionName());
		}
		else if (componentType === oFF.FilterComponentType.OR || componentType === oFF.FilterComponentType.AND)
		{
			var filterAlgebra = complexSelectionRoot;
			var filterSize = filterAlgebra.size();
			for (var idxAnd = 0; idxAnd < filterSize; idxAnd++)
			{
				oFF.DimensionUsageAnalyzer2.addDimensionsUsedByRestrictedMember(filterAlgebra.get(idxAnd), usedDimensions);
			}
		}
		else if (componentType === oFF.FilterComponentType.CARTESIAN_LIST)
		{
			var complexCartesianList = complexSelectionRoot;
			oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, complexCartesianList.getDimensionName());
		}
		else if (componentType === oFF.FilterComponentType.CARTESIAN_PRODUCT)
		{
			var cartesianProduct = complexSelectionRoot;
			var productSize = cartesianProduct.size();
			for (var idxProduct = 0; idxProduct < productSize; idxProduct++)
			{
				oFF.DimensionUsageAnalyzer2.addDimensionsUsedByRestrictedMember(cartesianProduct.get(idxProduct), usedDimensions);
			}
		}
	},
	addDimensionsUsedByFormulaMember:function(formula, usedDimensions, queryModel)
	{
			if (oFF.isNull(formula))
		{
			return;
		}
		var formulaType = formula.getOlapComponentType();
		if (formulaType === oFF.OlapComponentType.FORMULA_ITEM_ATTRIBUTE)
		{
			var fieldName = formula.getFieldName();
			var field = queryModel.getFieldByName(fieldName);
			if (oFF.notNull(field))
			{
				oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, field.getDimension().getName());
			}
		}
		else if (formulaType === oFF.OlapComponentType.FORMULA_ITEM_MEMBER)
		{
			var dimensionName = formula.getDimensionName();
			if (oFF.XStringUtils.isNotNullAndNotEmpty(dimensionName))
			{
				oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, dimensionName);
			}
			else
			{
				var dimensionMember = null;
				var measureDimension = queryModel.getMeasureDimension();
				var memberName = formula.getMemberName();
				if (oFF.notNull(measureDimension))
				{
					dimensionMember = measureDimension.getStructureMemberByAliasOrMember(memberName);
				}
				if (oFF.isNull(dimensionMember))
				{
					var clientQueryObjectManager = queryModel.getOlapEnv().getClientQueryObjectManager();
					var keyRefStorage = clientQueryObjectManager.getKeyRefStorage();
					var subStores = keyRefStorage.getAllSubStores();
					for (var j = 0; j < subStores.size(); j++)
					{
						var storageName = subStores.get(j).getName();
						dimensionMember = clientQueryObjectManager.getStructuredMember(memberName, storageName, true);
						if (oFF.isNull(dimensionMember))
						{
							dimensionMember = clientQueryObjectManager.getStructuredMember(memberName, storageName, false);
						}
						if (oFF.notNull(dimensionMember))
						{
							break;
						}
					}
				}
				if (oFF.notNull(dimensionMember))
				{
					oFF.DimensionUsageAnalyzer2.addDimensionsUsedByMember(usedDimensions, dimensionMember, queryModel);
				}
			}
		}
		else if (formulaType === oFF.OlapComponentType.FORMULA_FUNCTION)
		{
			var formulaFunction = formula;
			var size = formulaFunction.size();
			for (var i = 0; i < size; i++)
			{
				oFF.DimensionUsageAnalyzer2.addDimensionsUsedByFormulaMember(formulaFunction.get(i), usedDimensions, queryModel);
			}
		}
		else if (formulaType === oFF.OlapComponentType.FORMULA_OPERATION)
		{
			var formulaOp = formula;
			if (formulaOp.getRightSide() !== null)
			{
				oFF.DimensionUsageAnalyzer2.addDimensionsUsedByFormulaMember(formulaOp.getRightSide(), usedDimensions, queryModel);
			}
			if (formulaOp.getLeftSide() !== null)
			{
				oFF.DimensionUsageAnalyzer2.addDimensionsUsedByFormulaMember(formulaOp.getLeftSide(), usedDimensions, queryModel);
			}
		}
	},
	addDimensionsUsedInFilters:function(queryModel, usedDimensions)
	{
			var filter = queryModel.getFilter();
		if (filter.isFixedFilterInitialized())
		{
			oFF.DimensionUsageAnalyzer2.addDimensionsUsedInContainer(filter.getFixedFilter(), usedDimensions);
		}
		if (filter.isDynamicFilterInitialized())
		{
			oFF.DimensionUsageAnalyzer2.addDimensionsUsedInContainer(filter.getDynamicFilter(), usedDimensions);
		}
		usedDimensions.addAll(oFF.DimensionUsageAnalyzer2.getDimensionsUsedInLinkedFilters(queryModel));
		if (filter.isVisibilityFilterInitialized())
		{
			oFF.DimensionUsageAnalyzer2.addDimensionsUsedInContainer(filter.getVisibilityFilter(), usedDimensions);
		}
		var layeredVisibilityFilters = filter.getLinkedVisibilityFilters().getIterator();
		while (layeredVisibilityFilters.hasNext())
		{
			oFF.DimensionUsageAnalyzer2.addDimensionsUsedInContainer(layeredVisibilityFilters.next(), usedDimensions);
		}
	},
	getDimensionsUsedInFilter:function(filterExpression)
	{
			return oFF.DimensionUsageAnalyzer2.addDimensionsUsedInContainer(filterExpression, null);
	},
	getDimensionsUsedInLinkedFilters:function(queryModel)
	{
			var usedDimensions = oFF.XHashSetOfString.create();
		var linkedFilters = queryModel.getFilter().getLinkedFilters().getIterator();
		while (linkedFilters.hasNext())
		{
			oFF.DimensionUsageAnalyzer2.addDimensionsUsedInContainer(linkedFilters.next(), usedDimensions);
		}
		return usedDimensions;
	},
	hasComplexDimensionSelection:function(filterExpression)
	{
			return oFF.DimensionUsageAnalyzer2.getDimensionsUsedInFilter(filterExpression).size() > 1;
	},
	filterContainsCalculatedDimension:function(filterExpression)
	{
			return oFF.DimensionUsageAnalyzer2.containsCalculatedDimension(filterExpression.getQueryModel(), oFF.DimensionUsageAnalyzer2.getDimensionsUsedInFilter(filterExpression));
	},
	containsCalculatedDimension:function(queryModel, dimensions)
	{
			if (oFF.notNull(dimensions))
		{
			var dimensionIterator = dimensions.getIterator();
			while (dimensionIterator.hasNext())
			{
				var dimension = queryModel.getDimensionByName(dimensionIterator.next());
				if (oFF.notNull(dimension) && dimension.getDimensionType().isTypeOf(oFF.DimensionType.CALCULATED_DIMENSION))
				{
					return true;
				}
			}
		}
		return false;
	},
	addDimensionsUsedInUniversalDisplayHierarchies:function(queryModel, usedDimensions)
	{
			var universalDisplayHierarchies = queryModel.getUniversalDisplayHierarchies();
		var hierarchies = universalDisplayHierarchies.getHierarchies();
		var loadedDimensions = queryModel.getLoadedDimensions();
		var size = hierarchies.size();
		for (var i = 0; i < size; i++)
		{
			var udh = hierarchies.get(i);
			var targetDimension = loadedDimensions.getDimensionByName(udh.getName());
			if (oFF.notNull(targetDimension))
			{
				oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, targetDimension.getName());
				usedDimensions.addAll(udh.getDimensionNames());
			}
		}
	},
	addDimensionsUsedByLeveledHierarchies:function(queryModel, usedDimensions)
	{
			var referenceSet = usedDimensions.createSetCopy();
		var dimensionNames = referenceSet.getValuesAsReadOnlyListOfString();
		var loadedDimensions = queryModel.getLoadedDimensions();
		var numberOfDims = dimensionNames.size();
		for (var i = 0; i < numberOfDims; i++)
		{
			var dimName = dimensionNames.get(i);
			var dimension = loadedDimensions.getDimensionByName(dimName);
			if (oFF.notNull(dimension) && oFF.XCollectionUtils.hasElements(dimension.getLeveledHierarchies()))
			{
				var leveledHierarchies = dimension.getLeveledHierarchies();
				var numberOfHierarchies = leveledHierarchies.size();
				for (var hierarchy = 0; hierarchy < numberOfHierarchies; hierarchy++)
				{
					var leveledHierarchy = leveledHierarchies.get(hierarchy);
					var allLevel = leveledHierarchy.getAllLevel();
					var numberOfLevels = allLevel.size();
					for (var level = 0; level < numberOfLevels; level++)
					{
						var hierarchyLevel = allLevel.get(level);
						oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, hierarchyLevel.getLevelDimensionName());
					}
				}
			}
		}
	},
	addDimensionsUsedByFormulaCalculatedDimensions:function(queryModel, usedDimensions)
	{
			var dimensions = queryModel.getLoadedDimensions();
		for (var i = dimensions.size() - 1; i >= 0; i--)
		{
			var dimension = dimensions.get(i);
			if (dimension.getDimensionType() === oFF.DimensionType.FORMULA_CALCULATED_DIMENSION)
			{
				var formulaCalcDim = dimension;
				oFF.DimensionUsageAnalyzer2.addDimensionUsedInFormulaCalcFields(queryModel, usedDimensions, formulaCalcDim);
				var dependentCalculatedDimensions = formulaCalcDim.getDependentCalculatedDimensions();
				var dependentCalculatedDimensionsIter = dependentCalculatedDimensions.getIterator();
				while (dependentCalculatedDimensionsIter.hasNext())
				{
					var dependentCalculatedDimension = dependentCalculatedDimensionsIter.next();
					oFF.DimensionUsageAnalyzer2.addDimensionUsedInFormulaCalcFields(queryModel, usedDimensions, dependentCalculatedDimension);
				}
				oFF.DimensionUsageAnalyzer2.addUsedDimensionFromFieldNames(queryModel, usedDimensions, formulaCalcDim.getAggregationFieldNames());
			}
		}
	},
	addDimensionUsedInFormulaCalcFields:function(queryModel, usedDimensions, calculatedDimension)
	{
			var fieldIterator = calculatedDimension.getFieldIterator();
		while (fieldIterator.hasNext())
		{
			var formulaCalcField = fieldIterator.next();
			var formulaItemInfo = oFF.FormulaItemUtils.getFieldNamesFromFormula(formulaCalcField.getFormulaItem());
			var fieldNames = formulaItemInfo.getAttributeNames();
			oFF.DimensionUsageAnalyzer2.addUsedDimensionFromFieldNames(queryModel, usedDimensions, fieldNames);
		}
	},
	addUsedDimensionFromFieldNames:function(queryModel, usedDimensions, fieldNames)
	{
			var fieldNamesIter = fieldNames.getIterator();
		while (fieldNamesIter.hasNext())
		{
			var fieldName = fieldNamesIter.next();
			var field = queryModel.getFieldByNameOrAlias(fieldName);
			if (oFF.notNull(field))
			{
				oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, fieldName);
				oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, field.getDimension().getName());
			}
		}
	},
	addDimensionsUsedBySpatialClustering:function(queryModel, usedDimensions)
	{
			var spatialClusterSettings = queryModel.getSpatialClusterSettings();
		if (oFF.notNull(spatialClusterSettings) && spatialClusterSettings.isActive())
		{
			var clusterField = spatialClusterSettings.getClusterField();
			if (oFF.notNull(clusterField) && clusterField.getDimension() !== null)
			{
				oFF.DimensionUsageAnalyzer2._addNotNull(usedDimensions, clusterField.getDimension().getName());
			}
		}
	}
};

oFF.QInAExportFactory = function() {};
oFF.QInAExportFactory.prototype = new oFF.XObject();
oFF.QInAExportFactory.prototype._ff_c = "QInAExportFactory";

oFF.QInAExportFactory.s_factories = null;
oFF.QInAExportFactory.staticSetup = function()
{
	oFF.QInAExportFactory.s_factories = oFF.XHashMapByString.create();
};
oFF.QInAExportFactory.put = function(modelFormat, factory)
{
	oFF.QInAExportFactory.s_factories.put(modelFormat.getName(), factory);
};
oFF.QInAExportFactory.create = function(application, modelFormat, capabilities, memberReadModeContext)
{
	var formatToSerialize = modelFormat;
	if (formatToSerialize === oFF.QModelFormat.INA_REPOSITORY_DELTA && !application.getSession().hasFeature(oFF.FeatureToggleOlap.INA_REPOSITORY_DELTA))
	{
		formatToSerialize = formatToSerialize.getParent();
	}
	var factory = oFF.QInAExportFactory.s_factories.getByKey(formatToSerialize.getName());
	if (oFF.isNull(factory))
	{
		return null;
	}
	return factory.createExporter(application, formatToSerialize, capabilities, memberReadModeContext);
};
oFF.QInAExportFactory.createForValueHelp = function(application, capabilities)
{
	return oFF.QInAExportFactory.create(application, oFF.QModelFormat.INA_VALUE_HELP, capabilities, oFF.QContextType.SELECTOR);
};
oFF.QInAExportFactory.createForData = function(application, capabilities)
{
	return oFF.QInAExportFactory.create(application, oFF.QModelFormat.INA_DATA, capabilities, oFF.QContextType.RESULT_SET);
};
oFF.QInAExportFactory.createForPersistedQueryData = function(application, capabilities)
{
	return oFF.QInAExportFactory.create(application, oFF.QModelFormat.INA_PERSISTED_QUERY_DATA, capabilities, oFF.QContextType.RESULT_SET);
};
oFF.QInAExportFactory.createForRepository = function(application, capabilities)
{
	return oFF.QInAExportFactory.create(application, oFF.QModelFormat.INA_REPOSITORY, capabilities, null);
};
oFF.QInAExportFactory.createForLayer = function(application, capabilities)
{
	return oFF.QInAExportFactory.create(application, oFF.QModelFormat.LAYER, capabilities, null);
};
oFF.QInAExportFactory.createForCloning = function(application, capabilities)
{
	return oFF.QInAExportFactory.create(application, oFF.QModelFormat.INA_CLONE, capabilities, null);
};
oFF.QInAExportFactory.createForBlending = function(application)
{
	return oFF.QInAExportFactory.create(application, oFF.QModelFormat.INA_METADATA_BLENDING, null, null);
};

oFF.QInAImportFactory = function() {};
oFF.QInAImportFactory.prototype = new oFF.XObject();
oFF.QInAImportFactory.prototype._ff_c = "QInAImportFactory";

oFF.QInAImportFactory.s_factories = null;
oFF.QInAImportFactory.staticSetup = function()
{
	oFF.QInAImportFactory.s_factories = oFF.XHashMapByString.create();
};
oFF.QInAImportFactory.put = function(modelFormat, factory)
{
	oFF.QInAImportFactory.s_factories.put(modelFormat.getName(), factory);
};
oFF.QInAImportFactory.create = function(application, modelFormat, capabilities)
{
	var formatToDeSerialize = modelFormat;
	if (formatToDeSerialize === oFF.QModelFormat.INA_REPOSITORY_DELTA && !application.getSession().hasFeature(oFF.FeatureToggleOlap.INA_REPOSITORY_DELTA))
	{
		formatToDeSerialize = formatToDeSerialize.getParent();
	}
	var factory = oFF.QInAImportFactory.s_factories.getByKey(formatToDeSerialize.getName());
	if (oFF.isNull(factory))
	{
		return null;
	}
	return factory.createImporter(application, formatToDeSerialize, capabilities);
};
oFF.QInAImportFactory.createWithQueryManagerCapabilities = function(application, modelFormat, queryManager)
{
	var factory = oFF.QInAImportFactory.s_factories.getByKey(modelFormat.getName());
	if (oFF.isNull(factory))
	{
		return null;
	}
	return factory.createImporterWithQueryManagerCapabilities(application, modelFormat, queryManager);
};
oFF.QInAImportFactory.createForData = function(application, capabilities)
{
	return oFF.QInAImportFactory.create(application, oFF.QModelFormat.INA_DATA, capabilities);
};
oFF.QInAImportFactory.createForDataReinit = function(application, capabilities)
{
	return oFF.QInAImportFactory.create(application, oFF.QModelFormat.INA_DATA_REINIT, capabilities);
};
oFF.QInAImportFactory.createForRepository = function(application, capabilities)
{
	return oFF.QInAImportFactory.create(application, oFF.QModelFormat.INA_REPOSITORY, capabilities);
};
oFF.QInAImportFactory.createForMetadata = function(application, capabilities)
{
	return oFF.QInAImportFactory.create(application, oFF.QModelFormat.INA_METADATA, capabilities);
};
oFF.QInAImportFactory.createForMetadataCore = function(application, capabilities)
{
	return oFF.QInAImportFactory.create(application, oFF.QModelFormat.INA_METADATA_CORE, capabilities);
};
oFF.QInAImportFactory.createForCloning = function(application, capabilities)
{
	return oFF.QInAImportFactory.create(application, oFF.QModelFormat.INA_CLONE, capabilities);
};
oFF.QInAImportFactory.createForLayer = function(application, capabilities)
{
	return oFF.QInAImportFactory.create(application, oFF.QModelFormat.LAYER, capabilities);
};

oFF.QRankInfo = function() {};
oFF.QRankInfo.prototype = new oFF.XObject();
oFF.QRankInfo.prototype._ff_c = "QRankInfo";

oFF.QRankInfo.create = function(maxRows, complexSortForRank, conditionForRank)
{
	var rankInfo = new oFF.QRankInfo();
	rankInfo.m_maxRows = maxRows;
	rankInfo.m_complexSorting = oFF.XWeakReferenceUtil.getWeakRef(complexSortForRank);
	rankInfo.m_condition = oFF.XWeakReferenceUtil.getWeakRef(conditionForRank);
	rankInfo.setMeasuresAndVersion();
	rankInfo.setComparisonOperator();
	rankInfo.setAppliedDimensions();
	return rankInfo;
};
oFF.QRankInfo.prototype.m_complexSorting = null;
oFF.QRankInfo.prototype.m_condition = null;
oFF.QRankInfo.prototype.m_maxRows = 0;
oFF.QRankInfo.prototype.m_measure = null;
oFF.QRankInfo.prototype.m_secondaryMeasure = null;
oFF.QRankInfo.prototype.m_conditionComparisonOperator = null;
oFF.QRankInfo.prototype.m_versionElementId = null;
oFF.QRankInfo.prototype.m_versionDimension = null;
oFF.QRankInfo.prototype.m_appliedDimensions = null;
oFF.QRankInfo.prototype.getComplexSorting = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_complexSorting);
};
oFF.QRankInfo.prototype.getCondition = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_condition);
};
oFF.QRankInfo.prototype.getConditionName = function()
{
	var conditionName = null;
	if (this.getCondition() !== null)
	{
		conditionName = this.getCondition().getName();
	}
	return conditionName;
};
oFF.QRankInfo.prototype.getMaxRows = function()
{
	return this.m_maxRows;
};
oFF.QRankInfo.prototype.getMeasure = function()
{
	return this.m_measure;
};
oFF.QRankInfo.prototype.getSecondaryMeasure = function()
{
	return this.m_secondaryMeasure;
};
oFF.QRankInfo.prototype.getVersionElementId = function()
{
	return this.m_versionElementId;
};
oFF.QRankInfo.prototype.getVersionDimension = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_versionDimension);
};
oFF.QRankInfo.prototype.getComparisonOperator = function()
{
	return this.m_conditionComparisonOperator;
};
oFF.QRankInfo.prototype.setMeasuresAndVersion = function()
{
	var complexSorting = this.getComplexSorting();
	var condition = this.getCondition();
	if (oFF.notNull(complexSorting))
	{
		this.setMeasuresFromSort(complexSorting);
	}
	else if (oFF.notNull(condition))
	{
		this.setMeasuresFromCondition(condition);
	}
};
oFF.QRankInfo.prototype.setMeasuresFromCondition = function(condition)
{
	var thresholdZeroIndex = condition.getThresholds().get(0);
	var primaryAndSecondaryMeasures = this.getMeasureDimensions(thresholdZeroIndex);
	var primaryDimension = primaryAndSecondaryMeasures.get(0);
	var secondaryDimension = primaryAndSecondaryMeasures.get(1);
	var conditionComparisonOperator = thresholdZeroIndex.getComparisonOperator();
	if (conditionComparisonOperator === oFF.ConditionComparisonOperator.TOP_N || conditionComparisonOperator === oFF.ConditionComparisonOperator.BOTTOM_N)
	{
		var measureCoordinates = thresholdZeroIndex.getMeasureCoordinates();
		var numberOfMeasures = measureCoordinates.size();
		for (var j = 0; j < numberOfMeasures; j++)
		{
			var member = measureCoordinates.get(j);
			var dimension2 = member.getDimension();
			var dimensionType2 = dimension2.getDimensionType();
			if (!dimensionType2.isTypeOf(oFF.DimensionType.ABSTRACT_STRUCTURE) && dimensionType2 !== oFF.DimensionType.ACCOUNT)
			{
				this.m_versionElementId = member.getName();
				this.m_versionDimension = oFF.XWeakReferenceUtil.getWeakRef(dimension2);
			}
			if (oFF.XString.isEqual(dimension2.getName(), primaryDimension.getName()))
			{
				this.m_measure = member.getName();
			}
			else if (oFF.notNull(secondaryDimension) && oFF.XString.isEqual(dimension2.getName(), secondaryDimension.getName()) && !oFF.XString.isEqual(member.getName(), oFF.QModelConstants.MEASURE_SIGNED_DATA))
			{
				this.m_secondaryMeasure = member.getName();
			}
		}
	}
};
oFF.QRankInfo.prototype.getMeasureDimensions = function(thresholdZeroIndex)
{
	var measureCoordinates = thresholdZeroIndex.getMeasureCoordinates();
	var numberOfMeasures = measureCoordinates.size();
	var secondaryMeasureDimension = null;
	var measureDimension = null;
	var accountDimension = null;
	for (var j = 0; j < numberOfMeasures; j++)
	{
		var member = measureCoordinates.get(j);
		var dimension = member.getDimension();
		if (dimension.getDimensionType() === oFF.DimensionType.SECONDARY_STRUCTURE)
		{
			secondaryMeasureDimension = dimension;
		}
		else if (dimension.getDimensionType() === oFF.DimensionType.MEASURE_STRUCTURE)
		{
			measureDimension = dimension;
		}
		else if (dimension.getDimensionType() === oFF.DimensionType.ACCOUNT)
		{
			accountDimension = dimension;
		}
	}
	var primaryAndSecondaryMeasures = oFF.XList.create();
	primaryAndSecondaryMeasures.add(oFF.notNull(accountDimension) ? accountDimension : measureDimension);
	primaryAndSecondaryMeasures.add(oFF.notNull(accountDimension) ? measureDimension : secondaryMeasureDimension);
	return primaryAndSecondaryMeasures;
};
oFF.QRankInfo.prototype.setMeasuresFromSort = function(complexSorting)
{
	var elementPath = complexSorting.getElementPath();
	var accountDimensionExists = this.accountDimensionExists(elementPath);
	var numberOfElements = elementPath.size();
	for (var i = 0; i < numberOfElements; i++)
	{
		var pathElement = elementPath.get(i);
		var dimension = pathElement.getDimension();
		var dimensionType = dimension.getDimensionType();
		if (!dimensionType.isTypeOf(oFF.DimensionType.ABSTRACT_STRUCTURE) && dimensionType !== oFF.DimensionType.ACCOUNT)
		{
			this.m_versionElementId = pathElement.getSelectValue();
			this.m_versionDimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
		}
		if (accountDimensionExists)
		{
			if (dimensionType === oFF.DimensionType.ACCOUNT)
			{
				this.m_measure = pathElement.getSelectValue();
			}
			else if (dimensionType === oFF.DimensionType.MEASURE_STRUCTURE)
			{
				var secondaryMeasureName = pathElement.getSelectValue();
				if (!oFF.XString.isEqual(secondaryMeasureName, oFF.QModelConstants.MEASURE_SIGNED_DATA))
				{
					this.m_secondaryMeasure = secondaryMeasureName;
				}
			}
		}
		else
		{
			if (dimension.isMeasureStructure())
			{
				this.m_measure = pathElement.getSelectValue();
			}
			else if (dimensionType === oFF.DimensionType.SECONDARY_STRUCTURE)
			{
				var secondaryMeasureName2 = pathElement.getSelectValue();
				if (!oFF.XString.isEqual(secondaryMeasureName2, oFF.QModelConstants.MEASURE_SIGNED_DATA))
				{
					this.m_secondaryMeasure = secondaryMeasureName2;
				}
			}
		}
	}
};
oFF.QRankInfo.prototype.accountDimensionExists = function(elementPath)
{
	var numberOfPathElements = elementPath.size();
	if (numberOfPathElements === 1)
	{
		return false;
	}
	for (var i = 0; i < numberOfPathElements; i++)
	{
		if (elementPath.get(i).getDimension().getDimensionType() === oFF.DimensionType.ACCOUNT)
		{
			return true;
		}
	}
	return false;
};
oFF.QRankInfo.prototype.setAppliedDimensions = function()
{
	var appliedDimensions = null;
	var complexSorting = this.getComplexSorting();
	var condition = this.getCondition();
	if (oFF.notNull(complexSorting) && complexSorting.appliedTopOnIndividualDimension())
	{
		var queryModel = complexSorting.getQueryModel();
		var measureDimensionName = queryModel.getMeasureDimension().getName();
		appliedDimensions = oFF.XStream.of(queryModel.getRowsAxis().getDimensions()).mapToString( function(rowDim){
			return rowDim.getName();
		}.bind(this)).filter( function(s3){
			return !oFF.XString.isEqual(s3.getString(), measureDimensionName);
		}.bind(this)).collect(oFF.XStreamCollector.toListOfString( function(s4){
			return s4.getString();
		}.bind(this)));
		var dimensionsOnColumns = oFF.XStream.of(queryModel.getColumnsAxis().getDimensions()).mapToString( function(colDim){
			return colDim.getName();
		}.bind(this)).filter( function(s5){
			return !oFF.XString.isEqual(s5.getString(), measureDimensionName);
		}.bind(this)).collect(oFF.XStreamCollector.toListOfString( function(s6){
			return s6.getString();
		}.bind(this)));
		appliedDimensions.addAll(dimensionsOnColumns);
	}
	else if (oFF.notNull(condition))
	{
		appliedDimensions = oFF.XStream.of(condition.getEvaluationDimensions()).collect(oFF.XStreamCollector.toListOfString( function(dimension){
			return dimension.getName();
		}.bind(this)));
	}
	this.m_appliedDimensions = appliedDimensions;
};
oFF.QRankInfo.prototype.getAppliedDimensions = function()
{
	return this.m_appliedDimensions;
};
oFF.QRankInfo.prototype.setComparisonOperator = function()
{
	var complexSorting = this.getComplexSorting();
	if (oFF.notNull(complexSorting) && complexSorting.getDirection() === oFF.XSortDirection.DESCENDING)
	{
		this.m_conditionComparisonOperator = oFF.ConditionComparisonOperator.TOP_N;
	}
	else if (oFF.notNull(complexSorting) && complexSorting.getDirection() === oFF.XSortDirection.ASCENDING)
	{
		this.m_conditionComparisonOperator = oFF.ConditionComparisonOperator.BOTTOM_N;
	}
	var condition = this.getCondition();
	if (oFF.notNull(condition))
	{
		var thresholdZeroIndex = condition.getThresholds().get(0);
		this.m_conditionComparisonOperator = thresholdZeroIndex.getComparisonOperator();
	}
};

oFF.QStructureMemberSolveOrder = {

	DEFAULT_SOLVE_ORDER:0,
	CLIENT_DEFINED_CUSTOM_MEMBER_LOW:1000000,
	CLIENT_DEFINED_CUSTOM_MEMBER_HIGH:1000001,
	CLIENT_DEFINED_FORMULA_CALCULATED_DIMENSION:1000002,
	CLIENT_DEFINED_RESTRICTED_MEASURE_ON_MEASURE_STRUCTURE:-1,
	CURRENCY_MEASURE_WITH_ACCOUNT:-1,
	CURRENCY_MEASURE_UNIVERSAL_MEASURE:1,
	RESTRICTED_MEASURE_WITH_ACCOUNT:-1,
	RESTRICTED_MEASURE_UNIVERSAL_MEASURE:1
};

oFF.QCanonicalDateUtil = {

	createCanonicalDatesFromEntityValues:function(queryModel, timeDimension, hierarchyName, entityValues)
	{
			var canonicalDateContext = oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName);
		var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.createCanonicalDatesFromEntityValues(canonicalDateContext, entityValues);
	},
	createCanonicalDateFromEntityValue:function(queryModel, timeDimension, hierarchyName, entityValue)
	{
			var entityValues = oFF.XListOfString.create();
		entityValues.add(entityValue);
		var canonicalDates = oFF.QCanonicalDateUtil.createCanonicalDatesFromEntityValues(queryModel, timeDimension, hierarchyName, entityValues);
		return canonicalDates.get(0);
	},
	createCanonicalDateFromEntityValueInfo:function(queryModel, timeDimension, hierarchyName, entityKeyValue, levelType)
	{
			var canonicalDateContext = oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName);
		var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.createCanonicalDateFromEntityValueInfo(canonicalDateContext, entityKeyValue, oFF.QCanonicalDateUtil.convertHierarchyLevelTypeToDateTimeGranularity(levelType));
	},
	convertCanonicalDateToTargetLevelAndFiscalSpace:function(sourceQueryModel, sourceTimeDimension, sourceHierarchyName, sourceCanonicalDate, targetLevel, targetFiscalSpace)
	{
			var canonicalDateContext = oFF.QFactory.createCanonicalDateContext(sourceQueryModel, sourceTimeDimension, sourceHierarchyName);
		var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.convertCanonicalDateToTargetLevelAndFiscalSpace(canonicalDateContext, sourceCanonicalDate, oFF.QCanonicalDateUtil.convertHierarchyLevelTypeToDateTimeGranularity(targetLevel), targetFiscalSpace);
	},
	castCanonicalDateToLevel:function(queryModel, timeDimension, hierarchyName, canonicalDate, targetLevelType, useLast)
	{
			var canonicalDateContext = oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName);
		var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.castCanonicalDateToLevel(canonicalDateContext, canonicalDate, oFF.QCanonicalDateUtil.convertHierarchyLevelTypeToDateTimeGranularity(targetLevelType), useLast);
	},
	incrementCanonicalDate:function(queryModel, timeDimension, hierarchyName, canonicalDate, increments, incrementLevelType)
	{
			var canonicalDateContext = oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName);
		var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.incrementCanonicalDate(canonicalDateContext, canonicalDate, increments, oFF.QCanonicalDateUtil.convertHierarchyLevelTypeToDateTimeGranularity(incrementLevelType));
	},
	createEntityValueFromCanonicalDate:function(queryModel, timeDimension, hierarchyName, canonicalDate)
	{
			var canonicalDateContext = oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName);
		var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.createEntityValueFromCanonicalDate(canonicalDateContext, canonicalDate);
	},
	getEntityValueKeyFromCanonicalDate:function(queryModel, timeDimension, hierarchyName, canonicalDate)
	{
			var canonicalDateContext = oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName);
		var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.getEntityValueKeyFromCanonicalDate(canonicalDateContext, canonicalDate);
	},
	getLowestHierarchyLevelType:function(queryModel, timeDimension, hierarchyName, entityValues)
	{
			var lowestLevel = oFF.HierarchyLevelType.ALL;
		var iterator = entityValues.getIterator();
		while (iterator.hasNext())
		{
			var entityValueGranularity = oFF.QCanonicalDateUtil.getGranularityFromEntityValue(queryModel, timeDimension, hierarchyName, iterator.next());
			var entityValueLevelType = oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(entityValueGranularity);
			if (entityValueLevelType.getLevelIndex() > lowestLevel.getLevelIndex())
			{
				lowestLevel = entityValueLevelType;
			}
		}
		return lowestLevel;
	},
	getGranularityFromEntityValue:function(queryModel, timeDimension, hierarchyName, entityValue)
	{
			var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.getGranularityFromEntityValue(oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName), entityValue);
	},
	getHierarchyLevelTypeFromEntityValue:function(queryModel, timeDimension, hierarchyName, entityValue)
	{
			var provider = oFF.QCanonicalDateProvider.getInstance();
		return oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(provider.getGranularityFromEntityValue(oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName), entityValue));
	},
	isEqual:function(firstCanonicalDate, secondCanonicalDate)
	{
			return firstCanonicalDate.getGranularity() === secondCanonicalDate.getGranularity() && firstCanonicalDate.getYear() === secondCanonicalDate.getYear() && firstCanonicalDate.getMember() === secondCanonicalDate.getMember();
	},
	isBefore:function(queryModel, timeDimension, hierarchyName, firstCanonicalDate, secondCanonicalDate)
	{
			var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.isBefore(oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName), firstCanonicalDate, secondCanonicalDate);
	},
	isSameOrBefore:function(queryModel, timeDimension, hierarchyName, firstCanonicalDate, secondCanonicalDate)
	{
			var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.isSameOrBefore(oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName), firstCanonicalDate, secondCanonicalDate);
	},
	isAfter:function(queryModel, timeDimension, hierarchyName, firstCanonicalDate, secondCanonicalDate)
	{
			var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.isAfter(oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName), firstCanonicalDate, secondCanonicalDate);
	},
	isSameOrAfter:function(queryModel, timeDimension, hierarchyName, firstCanonicalDate, secondCanonicalDate)
	{
			var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.isSameOrAfter(oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName), firstCanonicalDate, secondCanonicalDate);
	},
	getDifferenceBetweenCanonicalDates:function(queryModel, timeDimension, hierarchyName, canonicalDate1, canonicalDate2, differenceLevelType)
	{
			var startCanonicalDate = canonicalDate2;
		if (oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(startCanonicalDate.getGranularity()) !== differenceLevelType)
		{
			startCanonicalDate = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, hierarchyName, startCanonicalDate, differenceLevelType, false);
		}
		var endCanonicalDate = canonicalDate1;
		if (oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(endCanonicalDate.getGranularity()) !== differenceLevelType)
		{
			endCanonicalDate = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, hierarchyName, endCanonicalDate, differenceLevelType, false);
		}
		var increment = 1;
		if (startCanonicalDate.getYear() > endCanonicalDate.getYear() || startCanonicalDate.getYear() === endCanonicalDate.getYear() && startCanonicalDate.getMember() >= endCanonicalDate.getMember())
		{
			increment = -1;
		}
		var difference = 0;
		while (!oFF.QCanonicalDateUtil.isEqual(startCanonicalDate, endCanonicalDate))
		{
			difference = difference + increment;
			startCanonicalDate = oFF.QCanonicalDateUtil.incrementCanonicalDate(queryModel, timeDimension, hierarchyName, startCanonicalDate, increment, differenceLevelType);
		}
		return difference;
	},
	convertDateTimeGranularityToHierarchyLevelType:function(granularity)
	{
			if (granularity === oFF.DateTimeGranularityType.ALL)
		{
			return oFF.HierarchyLevelType.ALL;
		}
		else if (granularity === oFF.DateTimeGranularityType.YEAR)
		{
			return oFF.HierarchyLevelType.TIME_YEAR;
		}
		else if (granularity === oFF.DateTimeGranularityType.HALFYEAR)
		{
			return oFF.HierarchyLevelType.TIME_HALF_YEAR;
		}
		else if (granularity === oFF.DateTimeGranularityType.CALQUARTER)
		{
			return oFF.HierarchyLevelType.TIME_QUARTER;
		}
		else if (granularity === oFF.DateTimeGranularityType.CALMONTH)
		{
			return oFF.HierarchyLevelType.TIME_MONTH;
		}
		else if (granularity === oFF.DateTimeGranularityType.WEEK)
		{
			return oFF.HierarchyLevelType.TIME_WEEK;
		}
		else if (granularity === oFF.DateTimeGranularityType.DAY)
		{
			return oFF.HierarchyLevelType.TIME_DAY;
		}
		else if (granularity === oFF.DateTimeGranularityType.HOUR)
		{
			return oFF.HierarchyLevelType.TIME_HOUR;
		}
		else if (granularity === oFF.DateTimeGranularityType.MINUTE)
		{
			return oFF.HierarchyLevelType.TIME_MINUTE;
		}
		else if (granularity === oFF.DateTimeGranularityType.SECOND)
		{
			return oFF.HierarchyLevelType.TIME_SECOND;
		}
		return null;
	},
	convertHierarchyLevelTypeToDateTimeGranularity:function(levelType)
	{
			if (levelType === oFF.HierarchyLevelType.ALL)
		{
			return oFF.DateTimeGranularityType.ALL;
		}
		else if (levelType === oFF.HierarchyLevelType.TIME_YEAR)
		{
			return oFF.DateTimeGranularityType.YEAR;
		}
		else if (levelType === oFF.HierarchyLevelType.TIME_HALF_YEAR)
		{
			return oFF.DateTimeGranularityType.HALFYEAR;
		}
		else if (levelType === oFF.HierarchyLevelType.TIME_QUARTER)
		{
			return oFF.DateTimeGranularityType.CALQUARTER;
		}
		else if (levelType === oFF.HierarchyLevelType.TIME_MONTH)
		{
			return oFF.DateTimeGranularityType.CALMONTH;
		}
		else if (levelType === oFF.HierarchyLevelType.TIME_WEEK)
		{
			return oFF.DateTimeGranularityType.WEEK;
		}
		else if (levelType === oFF.HierarchyLevelType.TIME_DAY)
		{
			return oFF.DateTimeGranularityType.DAY;
		}
		else if (levelType === oFF.HierarchyLevelType.TIME_HOUR)
		{
			return oFF.DateTimeGranularityType.HOUR;
		}
		else if (levelType === oFF.HierarchyLevelType.TIME_MINUTE)
		{
			return oFF.DateTimeGranularityType.MINUTE;
		}
		else if (levelType === oFF.HierarchyLevelType.TIME_SECOND)
		{
			return oFF.DateTimeGranularityType.SECOND;
		}
		return null;
	},
	convertTimeOperationGranularityToHierarchyLevelType:function(granularity)
	{
			if (granularity === oFF.QTimeOperationGranularity.YEAR)
		{
			return oFF.HierarchyLevelType.TIME_YEAR;
		}
		else if (granularity === oFF.QTimeOperationGranularity.HALF_YEAR)
		{
			return oFF.HierarchyLevelType.TIME_HALF_YEAR;
		}
		else if (granularity === oFF.QTimeOperationGranularity.QUARTER)
		{
			return oFF.HierarchyLevelType.TIME_QUARTER;
		}
		else if (granularity === oFF.QTimeOperationGranularity.MONTH)
		{
			return oFF.HierarchyLevelType.TIME_MONTH;
		}
		else if (granularity === oFF.QTimeOperationGranularity.WEEK)
		{
			return oFF.HierarchyLevelType.TIME_WEEK;
		}
		else if (granularity === oFF.QTimeOperationGranularity.DAY)
		{
			return oFF.HierarchyLevelType.TIME_DAY;
		}
		return null;
	},
	getMoreGranularConvertibleLevelType:function(levelType)
	{
			if (levelType === oFF.HierarchyLevelType.TIME_YEAR)
		{
			return oFF.HierarchyLevelType.TIME_HALF_YEAR;
		}
		else if (levelType === oFF.HierarchyLevelType.TIME_HALF_YEAR)
		{
			return oFF.HierarchyLevelType.TIME_QUARTER;
		}
		else if (levelType === oFF.HierarchyLevelType.TIME_QUARTER)
		{
			return oFF.HierarchyLevelType.TIME_MONTH;
		}
		else if (levelType === oFF.HierarchyLevelType.TIME_MONTH)
		{
			return oFF.HierarchyLevelType.TIME_DAY;
		}
		else if (levelType === oFF.HierarchyLevelType.TIME_WEEK)
		{
			return oFF.HierarchyLevelType.TIME_DAY;
		}
		else
		{
			return null;
		}
	},
	createCurrentCanonicalDate:function(queryModel, timeDimension, hierarchyName)
	{
			var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.createCurrentCanonicalDate(oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName), oFF.QCanonicalDateUtil.convertHierarchyLevelTypeToDateTimeGranularity(oFF.HierarchyLevelType.TIME_DAY));
	},
	createCurrentCanonicalDateWithTimeZoneOffset:function(queryModel, timeDimension, hierarchyName, timeZoneOffsetInMinutes)
	{
			var provider = oFF.QCanonicalDateProvider.getInstance();
		return provider.createCurrentCanonicalDateWithTimeZoneOffset(oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName), oFF.QCanonicalDateUtil.convertHierarchyLevelTypeToDateTimeGranularity(oFF.HierarchyLevelType.TIME_DAY), timeZoneOffsetInMinutes);
	},
	doesCanonicalDateSpanAcrossYears:function(queryModel, timeDimension, hierarchyName, canonicalDate)
	{
			if (canonicalDate.getGranularity() === oFF.DateTimeGranularityType.WEEK)
		{
			var startOfWeek = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, hierarchyName, canonicalDate, oFF.HierarchyLevelType.TIME_DAY, false);
			var endOfWeek = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, hierarchyName, canonicalDate, oFF.HierarchyLevelType.TIME_DAY, true);
			return startOfWeek.getYear() !== endOfWeek.getYear();
		}
		return false;
	}
};

oFF.QSelectionPlaceholder = function() {};
oFF.QSelectionPlaceholder.prototype = new oFF.XObject();
oFF.QSelectionPlaceholder.prototype._ff_c = "QSelectionPlaceholder";

oFF.QSelectionPlaceholder.ORIGINAL_LOW_VALUE = "originalLowValue";
oFF.QSelectionPlaceholder.prototype.m_originalLowValue = null;
oFF.QSelectionPlaceholder.prototype.setupSelectionPlaceholderFromStructure = function(selectionPlaceholderStructure)
{
	this.m_originalLowValue = selectionPlaceholderStructure.getStringByKey(oFF.QSelectionPlaceholder.ORIGINAL_LOW_VALUE);
};
oFF.QSelectionPlaceholder.prototype.serializeToJson = function()
{
	var selectionPlaceholderJson = oFF.PrFactory.createStructure();
	selectionPlaceholderJson.putString(oFF.QSelectionPlaceholder.ORIGINAL_LOW_VALUE, this.m_originalLowValue);
	return selectionPlaceholderJson;
};
oFF.QSelectionPlaceholder.prototype.getStringRepresentation = function()
{
	return this.serializeToJson().getStringRepresentation();
};
oFF.QSelectionPlaceholder.prototype.getOriginalLowValue = function()
{
	return this.m_originalLowValue;
};
oFF.QSelectionPlaceholder.prototype.setOriginalLowValue = function(originalLowValue)
{
	this.m_originalLowValue = originalLowValue;
};

oFF.QTimeDimensionUtil = {

	getAllLevelNamesFilterLevelTypeAll:function(timeDimension)
	{
			var dimensionLevelNames = oFF.XHashSetOfString.create();
		var excludedLevelTypes = oFF.XList.create();
		excludedLevelTypes.add(oFF.HierarchyLevelType.ALL);
		var leveledHierarchies = timeDimension.getLeveledHierarchies();
		if (oFF.isNull(leveledHierarchies))
		{
			return dimensionLevelNames;
		}
		var levelHierarchyIterator = leveledHierarchies.getIterator();
		while (levelHierarchyIterator.hasNext())
		{
			var hierarchy = levelHierarchyIterator.next();
			dimensionLevelNames.addAll(hierarchy.getAllHierarchyLevelNames(excludedLevelTypes));
		}
		return dimensionLevelNames;
	},
	findFirstLeveledHierarchyWithLevelType:function(timeDimension, levelTypeToFind)
	{
			var leveledHierarchies = timeDimension.getLeveledHierarchies();
		if (oFF.isNull(leveledHierarchies))
		{
			return null;
		}
		var leveledHierarchiesIterator = leveledHierarchies.getIterator();
		while (leveledHierarchiesIterator.hasNext())
		{
			var leveledHierarchy = leveledHierarchiesIterator.next();
			if (leveledHierarchy.getLevelByType(levelTypeToFind) !== null)
			{
				return leveledHierarchy;
			}
		}
		return null;
	},
	isDateOrTimeLikeDimension:function(dimension)
	{
			if (dimension.getQueryModel().getSystemType() !== oFF.SystemType.BW && (dimension.getDimensionType() === oFF.DimensionType.TIME || dimension.getDimensionType() === oFF.DimensionType.DATE))
		{
			return true;
		}
		if (dimension.getQueryModel().getSystemType() === oFF.SystemType.BW && dimension.getLeveledHierarchies() !== null)
		{
			var leveledHierarchyIterator = dimension.getLeveledHierarchies().getIterator();
			while (leveledHierarchyIterator.hasNext())
			{
				var leveledHierarchy = leveledHierarchyIterator.next();
				var hierarchyLevelIterator = leveledHierarchy.getHierarchyLevels().getIterator();
				while (hierarchyLevelIterator.hasNext())
				{
					var hierarchyLevel = hierarchyLevelIterator.next();
					var hierarchyLevelType = hierarchyLevel.getLevelType();
					if (hierarchyLevelType === oFF.HierarchyLevelType.TIME_YEAR || hierarchyLevelType === oFF.HierarchyLevelType.TIME_HALF_YEAR || hierarchyLevelType === oFF.HierarchyLevelType.TIME_QUARTER || hierarchyLevelType === oFF.HierarchyLevelType.TIME_MONTH || hierarchyLevelType === oFF.HierarchyLevelType.TIME_WEEK || hierarchyLevelType === oFF.HierarchyLevelType.TIME_DAY)
					{
						return true;
					}
				}
			}
		}
		if (dimension.getModelCapabilities().supportsHierarchyMetadata() && dimension.getHierarchies() !== null)
		{
			var hierarchyIterator = dimension.getHierarchies().getObjectsIterator();
			while (hierarchyIterator.hasNext())
			{
				var levelHasTheSameNameAsDimensionName = false;
				var hasValidHierarchyLevelType = false;
				var hierarchy = hierarchyIterator.next();
				var levelIterator = hierarchy.getHierarchyLevels().getIterator();
				while (levelIterator.hasNext())
				{
					var level = levelIterator.next();
					if (oFF.XString.isEqual(level.getLevelDimensionName(), dimension.getName()))
					{
						levelHasTheSameNameAsDimensionName = true;
					}
					var levelType = level.getLevelType();
					if (levelType === oFF.HierarchyLevelType.TIME_YEAR || levelType === oFF.HierarchyLevelType.TIME_HALF_YEAR || levelType === oFF.HierarchyLevelType.TIME_QUARTER || levelType === oFF.HierarchyLevelType.TIME_MONTH || levelType === oFF.HierarchyLevelType.TIME_WEEK || levelType === oFF.HierarchyLevelType.TIME_DAY)
					{
						hasValidHierarchyLevelType = true;
					}
				}
				if (!levelHasTheSameNameAsDimensionName && hasValidHierarchyLevelType)
				{
					return true;
				}
			}
		}
		return false;
	},
	findMostCompatibleHierarchy:function(timeDimension, levelTypesToMatch, fiscalSpaceType)
	{
			var mostCompatibleHierarchy = null;
		var candidateHierarchies = oFF.XList.create();
		var levelTypesToSearch = levelTypesToMatch;
		var timeHierarchies = timeDimension.getLeveledHierarchies();
		var timeHierarchiesWithFiscalSpaceType = oFF.XList.create();
		for (var i = 0; i < timeHierarchies.size(); i++)
		{
			var timeHierarchy = timeHierarchies.get(i);
			if (fiscalSpaceType === oFF.FiscalSpaceType.FISCAL && oFF.QTimeDimensionUtil.isFiscalTimeHierarchy(timeHierarchy) || fiscalSpaceType === oFF.FiscalSpaceType.CALENDAR && !oFF.QTimeDimensionUtil.isFiscalTimeHierarchy(timeHierarchy))
			{
				timeHierarchiesWithFiscalSpaceType.add(timeHierarchy);
			}
		}
		while (candidateHierarchies.size() === 0 && levelTypesToSearch.size() > 0)
		{
			candidateHierarchies.addAll(oFF.QTimeDimensionUtil.findHierarchiesWithMostMatchingLevels(timeHierarchiesWithFiscalSpaceType, levelTypesToSearch));
			if (candidateHierarchies.size() === 0)
			{
				levelTypesToSearch = oFF.QTimeDimensionUtil.increaseGranularityOfLevelTypes(levelTypesToSearch);
			}
		}
		var candidateHierarchiesWithHighestLevelCount = oFF.QTimeDimensionUtil.getHierarchiesWithHighestLevelCount(candidateHierarchies);
		if (candidateHierarchiesWithHighestLevelCount.size() === 1)
		{
			mostCompatibleHierarchy = candidateHierarchiesWithHighestLevelCount.get(0);
		}
		else
		{
			mostCompatibleHierarchy = oFF.QTimeDimensionUtil.findHierarchyWithMostGranularLevel(candidateHierarchiesWithHighestLevelCount);
		}
		return mostCompatibleHierarchy;
	},
	findHierarchiesWithMostMatchingLevels:function(candidateHierarchies, levelTypesToSearch)
	{
			var hierarchiesWithMostMatchingLevels = oFF.XList.create();
		var levelTypes = levelTypesToSearch.getValuesAsReadOnlyList();
		var maxNumOfMatchingevels = 0;
		for (var idxLeveledHierarchy = 0; idxLeveledHierarchy < candidateHierarchies.size(); idxLeveledHierarchy++)
		{
			var hierarchy = candidateHierarchies.get(idxLeveledHierarchy);
			var numOfMatchingLevels = 0;
			for (var i = 0; i < levelTypes.size(); i++)
			{
				if (hierarchy.getLevelByType(levelTypes.get(i)) !== null)
				{
					numOfMatchingLevels++;
				}
			}
			if (numOfMatchingLevels > maxNumOfMatchingevels)
			{
				hierarchiesWithMostMatchingLevels = oFF.XList.create();
				hierarchiesWithMostMatchingLevels.add(hierarchy);
				maxNumOfMatchingevels = numOfMatchingLevels;
			}
			else if (numOfMatchingLevels > 0 && numOfMatchingLevels === maxNumOfMatchingevels)
			{
				hierarchiesWithMostMatchingLevels.add(hierarchy);
			}
		}
		return hierarchiesWithMostMatchingLevels;
	},
	increaseGranularityOfLevelTypes:function(levelTypes)
	{
			var result = oFF.XSetOfNameObject.create();
		for (var iterator = levelTypes.getIterator(); iterator.hasNext(); )
		{
			var levelType = iterator.next();
			var moreGranularLevelType = oFF.QCanonicalDateUtil.getMoreGranularConvertibleLevelType(levelType);
			if (oFF.notNull(moreGranularLevelType))
			{
				result.add(moreGranularLevelType);
			}
		}
		return result;
	},
	getHierarchiesWithHighestLevelCount:function(leveledHierarchies)
	{
			var result = oFF.XList.create();
		var maxNumofLevels = 0;
		for (var i = 0; i < leveledHierarchies.size(); i++)
		{
			var leveledHierarchy = leveledHierarchies.get(i);
			var numOfLevels = leveledHierarchy.getAllLevel().size();
			if (numOfLevels >= maxNumofLevels)
			{
				if (numOfLevels > maxNumofLevels)
				{
					result = oFF.XList.create();
					maxNumofLevels = numOfLevels;
				}
				result.add(leveledHierarchy);
			}
		}
		return result;
	},
	findHierarchyWithMostGranularLevel:function(leveledHierarchies)
	{
			var lowestLevelIndex = -1;
		var result = null;
		for (var i = 0; i < leveledHierarchies.size(); i++)
		{
			var leveledHierarchy = leveledHierarchies.get(i);
			if (leveledHierarchy.getMostGranularLevel().getLevelType().getLevelIndex() > lowestLevelIndex)
			{
				result = leveledHierarchy;
				lowestLevelIndex = result.getMostGranularLevel().getLevelType().getLevelIndex();
			}
		}
		return result;
	},
	findAnyHierarchyLevelMatchingField:function(timeDimension, fieldMetadata)
	{
			var timeHierarchies = timeDimension.getLeveledHierarchies();
		if (timeHierarchies.size() === 0)
		{
			var iterator = timeDimension.getGroupingDimensions().getIterator();
			while (iterator.hasNext() && timeHierarchies.size() === 0)
			{
				var dimension = iterator.next();
				timeHierarchies = dimension.getLeveledHierarchies();
			}
		}
		for (var i = 0; i < timeHierarchies.size(); i++)
		{
			var matchingLevel = oFF.QTimeDimensionUtil.getHierarchyLevelMatchingField(timeDimension.getDimensionAccessor(), timeHierarchies.get(i), fieldMetadata);
			if (oFF.notNull(matchingLevel))
			{
				return matchingLevel;
			}
		}
		return null;
	},
	getHierarchyLevelMatchingField:function(dimensionAccessor, hierarchy, fieldMetadata)
	{
			var levels = hierarchy.getHierarchyLevels();
		for (var idxLevel = 0; idxLevel < levels.size(); idxLevel++)
		{
			var level = levels.get(idxLevel);
			var levelName = level.getLevelName();
			var levelDimension = dimensionAccessor.getDimensionByName(levelName);
			var levelFlatKeyFieldName = null;
			var levelHierarchyKeyFieldName = null;
			if (oFF.notNull(levelDimension))
			{
				levelFlatKeyFieldName = levelDimension.getFlatKeyField().getName();
				levelHierarchyKeyFieldName = levelDimension.getHierarchyKeyField().getName();
			}
			if (oFF.XString.isEqual(levelName, fieldMetadata.getName()) || oFF.XString.isEqual(levelFlatKeyFieldName, fieldMetadata.getName()) || oFF.XString.isEqual(levelHierarchyKeyFieldName, fieldMetadata.getName()) || oFF.XStringUtils.isNotNullAndNotEmpty(fieldMetadata.getAliasName()) && (oFF.XString.isEqual(levelName, fieldMetadata.getAliasName()) || oFF.XString.isEqual(levelFlatKeyFieldName, fieldMetadata.getAliasName()) || oFF.XString.isEqual(levelHierarchyKeyFieldName, fieldMetadata.getAliasName())))
			{
				return level;
			}
		}
		return null;
	},
	isFiscalTimeHierarchy:function(hierarchy)
	{
			return oFF.QTimeDimensionUtil.isFiscalTimeHierarchyName(hierarchy.getName());
	},
	isFiscalTimeHierarchyName:function(hierarchyName)
	{
			return oFF.notNull(hierarchyName) && oFF.XString.startsWith(hierarchyName, oFF.QTimeHierarchyLevelName.FISCAL_HIERARCHY_PREFIX);
	},
	areFiscalEnabledAndCompatible:function(timeDim1, timeDim2)
	{
			return timeDim1.getFiscalEnabled() && timeDim2.getFiscalEnabled() && timeDim1.getFiscalShift() === timeDim2.getFiscalShift();
	},
	mapFiscalHierarchyNameToCompatibleCalendarHierarchyName:function(fiscalHierarchyName)
	{
			if (oFF.XString.isEqual(fiscalHierarchyName, oFF.QTimeHierarchyLevelName.FYQP) || oFF.XString.isEqual(fiscalHierarchyName, oFF.QTimeHierarchyLevelName.FYP))
		{
			return oFF.QTimeHierarchyLevelName.YM;
		}
		else if (oFF.XString.isEqual(fiscalHierarchyName, oFF.QTimeHierarchyLevelName.FYQPD) || oFF.XString.isEqual(fiscalHierarchyName, oFF.QTimeHierarchyLevelName.FYPD))
		{
			return oFF.QTimeHierarchyLevelName.YMD;
		}
		throw oFF.XException.createIllegalArgumentException("fiscal hierarchy name provided is not supported");
	},
	setCartesianElementValues:function(cartesianElement, lowValue, highValue, field)
	{
			if (field.getValueType() === oFF.XValueType.DATE)
		{
			cartesianElement.getLow().setDate(oFF.XDate.createDateSafe(lowValue));
			if (oFF.XStringUtils.isNotNullAndNotEmpty(highValue))
			{
				cartesianElement.getHigh().setDate(oFF.XDate.createDateSafe(highValue));
			}
		}
		else
		{
			cartesianElement.setLowString(lowValue);
			if (oFF.XStringUtils.isNotNullAndNotEmpty(highValue))
			{
				cartesianElement.setHighString(highValue);
			}
		}
	},
	isFlexibleTimeDimension:function(timeDimension)
	{
			return timeDimension.isUserManaged() || timeDimension.isTimeConfigEnablePattern();
	}
};

oFF.QTimeMemberKeyConversionResult = function() {};
oFF.QTimeMemberKeyConversionResult.prototype = new oFF.XObject();
oFF.QTimeMemberKeyConversionResult.prototype._ff_c = "QTimeMemberKeyConversionResult";

oFF.QTimeMemberKeyConversionResult.createFromSingleKey = function(convertedKey, hierarchyName, levelType)
{
	var result = new oFF.QTimeMemberKeyConversionResult();
	result.setupTimeMemberKeyConversionResult(hierarchyName, levelType);
	result.m_convertedKeys.add(convertedKey);
	return result;
};
oFF.QTimeMemberKeyConversionResult.createFromRangeKeys = function(convertedStartKey, convertedEndKey, hierarchyName, levelType)
{
	var result = new oFF.QTimeMemberKeyConversionResult();
	result.setupTimeMemberKeyConversionResult(hierarchyName, levelType);
	result.m_convertedKeys.add(convertedStartKey);
	result.m_convertedKeys.add(convertedEndKey);
	result.m_isRange = true;
	return result;
};
oFF.QTimeMemberKeyConversionResult.createFromMultiKeys = function(convertedKeys, hierarchyName, levelType)
{
	var result = new oFF.QTimeMemberKeyConversionResult();
	result.setupTimeMemberKeyConversionResult(hierarchyName, levelType);
	result.m_convertedKeys.addAll(convertedKeys);
	return result;
};
oFF.QTimeMemberKeyConversionResult.prototype.m_convertedKeys = null;
oFF.QTimeMemberKeyConversionResult.prototype.m_hierarchyName = null;
oFF.QTimeMemberKeyConversionResult.prototype.m_levelType = null;
oFF.QTimeMemberKeyConversionResult.prototype.m_isRange = false;
oFF.QTimeMemberKeyConversionResult.prototype.setupTimeMemberKeyConversionResult = function(hierarchyName, levelType)
{
	this.m_hierarchyName = hierarchyName;
	this.m_levelType = levelType;
	this.m_convertedKeys = oFF.XListOfString.create();
	this.m_isRange = false;
};
oFF.QTimeMemberKeyConversionResult.prototype.copyFrom = function(other, flags)
{
	var otherResult = other;
	this.m_convertedKeys.copyFrom(otherResult.m_convertedKeys, null);
	this.m_hierarchyName = otherResult.m_hierarchyName;
	this.m_levelType = otherResult.m_levelType;
	this.m_isRange = otherResult.m_isRange;
};
oFF.QTimeMemberKeyConversionResult.prototype.releaseObject = function()
{
	oFF.XObjectExt.release(this.m_convertedKeys);
	this.m_hierarchyName = null;
	this.m_levelType = null;
};
oFF.QTimeMemberKeyConversionResult.prototype.isRange = function()
{
	return this.m_isRange;
};
oFF.QTimeMemberKeyConversionResult.prototype.isFlat = function()
{
	return oFF.isNull(this.m_hierarchyName);
};
oFF.QTimeMemberKeyConversionResult.prototype.getFirstKey = function()
{
	if (this.m_convertedKeys.size() === 0)
	{
		return null;
	}
	return this.m_convertedKeys.get(0);
};
oFF.QTimeMemberKeyConversionResult.prototype.getSecondKey = function()
{
	if (this.m_convertedKeys.size() > 1)
	{
		return this.m_convertedKeys.get(1);
	}
	else
	{
		return null;
	}
};
oFF.QTimeMemberKeyConversionResult.prototype.getList = function()
{
	return this.m_convertedKeys;
};
oFF.QTimeMemberKeyConversionResult.prototype.getLevelType = function()
{
	return this.m_levelType;
};
oFF.QTimeMemberKeyConversionResult.prototype.getHierarchyName = function()
{
	return this.m_hierarchyName;
};

oFF.QTimeMemberKeyConverter = function() {};
oFF.QTimeMemberKeyConverter.prototype = new oFF.XObject();
oFF.QTimeMemberKeyConverter.prototype._ff_c = "QTimeMemberKeyConverter";

oFF.QTimeMemberKeyConverter.create = function(sourceQueryModel, sourceTimeDimension, targetQueryModel, targetTimeDimension)
{
	var converter = new oFF.QTimeMemberKeyConverter();
	converter.m_sourceQueryModel = sourceQueryModel;
	converter.m_sourceTimeDimension = sourceTimeDimension;
	converter.m_targetQueryModel = targetQueryModel;
	converter.m_targetTimeDimension = targetTimeDimension;
	return converter;
};
oFF.QTimeMemberKeyConverter.prototype.m_sourceQueryModel = null;
oFF.QTimeMemberKeyConverter.prototype.m_sourceTimeDimension = null;
oFF.QTimeMemberKeyConverter.prototype.m_targetQueryModel = null;
oFF.QTimeMemberKeyConverter.prototype.m_targetTimeDimension = null;
oFF.QTimeMemberKeyConverter.prototype.copyFrom = function(other, flags)
{
	var xOther = other;
	this.m_sourceQueryModel = xOther.m_sourceQueryModel;
	this.m_sourceTimeDimension = xOther.m_sourceTimeDimension;
	this.m_targetQueryModel = xOther.m_targetQueryModel;
	this.m_targetTimeDimension = xOther.m_targetTimeDimension;
};
oFF.QTimeMemberKeyConverter.prototype.releaseObject = function()
{
	this.m_sourceQueryModel = null;
	this.m_sourceTimeDimension = null;
	this.m_targetQueryModel = null;
	this.m_targetTimeDimension = null;
};
oFF.QTimeMemberKeyConverter.prototype.convertToHierarchyMemberKey = function(memberKey, memberKeyHierarchyName, memberKeyFieldMetadata, targetHierarchyName)
{
	var canonicalDate = this.getCanonicalDateFromMemberKey(memberKey, memberKeyHierarchyName, memberKeyFieldMetadata);
	var canonicalDateLevelType = oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(canonicalDate.getGranularity());
	var targetHierarchy = this.m_targetTimeDimension.getLeveledHierarchy(targetHierarchyName);
	if (targetHierarchy.getLevelByType(canonicalDateLevelType) !== null)
	{
		var targetTimeMemberKey = oFF.QCanonicalDateUtil.createEntityValueFromCanonicalDate(this.m_targetQueryModel, this.m_targetTimeDimension, targetHierarchyName, canonicalDate);
		return oFF.QTimeMemberKeyConversionResult.createFromSingleKey(targetTimeMemberKey, targetHierarchyName, canonicalDateLevelType);
	}
	else if (targetHierarchy.getMostGranularLevel().getLevelType().getLevelIndex() > canonicalDateLevelType.getLevelIndex())
	{
		var targetLevelType = oFF.QCanonicalDateUtil.getMoreGranularConvertibleLevelType(canonicalDateLevelType);
		while (oFF.notNull(targetLevelType) && targetHierarchy.getMostGranularLevel().getLevelType().getLevelIndex() > targetLevelType.getLevelIndex() && targetHierarchy.getLevelByType(targetLevelType) !== null)
		{
			targetLevelType = oFF.QCanonicalDateUtil.getMoreGranularConvertibleLevelType(canonicalDateLevelType);
		}
		if (oFF.notNull(targetLevelType) && targetHierarchy.getLevelByType(targetLevelType) !== null)
		{
			var startCanonicalDate = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(this.m_sourceQueryModel, this.m_sourceTimeDimension, memberKeyHierarchyName, canonicalDate, targetLevelType, false);
			var endCanonicalDate = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(this.m_sourceQueryModel, this.m_sourceTimeDimension, memberKeyHierarchyName, canonicalDate, targetLevelType, true);
			var startTargetTimeMemberKey = oFF.QCanonicalDateUtil.getEntityValueKeyFromCanonicalDate(this.m_targetQueryModel, this.m_targetTimeDimension, targetHierarchyName, startCanonicalDate);
			var endTargetTimeMemberKey = oFF.QCanonicalDateUtil.getEntityValueKeyFromCanonicalDate(this.m_targetQueryModel, this.m_targetTimeDimension, targetHierarchyName, endCanonicalDate);
			return oFF.QTimeMemberKeyConversionResult.createFromRangeKeys(startTargetTimeMemberKey, endTargetTimeMemberKey, null, targetLevelType);
		}
	}
	return null;
};
oFF.QTimeMemberKeyConverter.prototype.convertToFlatMemberKey = function(memberKey, memberKeyHierarchyName, memberKeyFieldMetadata, targetFlatLevelType, targetHierarchyName)
{
	var canonicalDate = this.getCanonicalDateFromMemberKey(memberKey, memberKeyHierarchyName, memberKeyFieldMetadata);
	var canonicalDateLevelType = oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(canonicalDate.getGranularity());
	if (targetFlatLevelType.getLevelIndex() === canonicalDateLevelType.getLevelIndex())
	{
		var flatTargetTimeMemberKey = oFF.QCanonicalDateUtil.getEntityValueKeyFromCanonicalDate(this.m_targetQueryModel, this.m_targetTimeDimension, targetHierarchyName, canonicalDate);
		return oFF.QTimeMemberKeyConversionResult.createFromSingleKey(flatTargetTimeMemberKey, null, canonicalDateLevelType);
	}
	else if (targetFlatLevelType.getLevelIndex() > canonicalDateLevelType.getLevelIndex())
	{
		var startCanonicalDateFlat = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(this.m_sourceQueryModel, this.m_sourceTimeDimension, memberKeyHierarchyName, canonicalDate, targetFlatLevelType, false);
		var endCanonicalDateFlat = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(this.m_sourceQueryModel, this.m_sourceTimeDimension, memberKeyHierarchyName, canonicalDate, targetFlatLevelType, true);
		var startFlatTargetTimeMemberKey = oFF.QCanonicalDateUtil.getEntityValueKeyFromCanonicalDate(this.m_targetQueryModel, this.m_targetTimeDimension, targetHierarchyName, startCanonicalDateFlat);
		var endFlatTargetTimeMemberKey = oFF.QCanonicalDateUtil.getEntityValueKeyFromCanonicalDate(this.m_targetQueryModel, this.m_targetTimeDimension, targetHierarchyName, endCanonicalDateFlat);
		return oFF.QTimeMemberKeyConversionResult.createFromRangeKeys(startFlatTargetTimeMemberKey, endFlatTargetTimeMemberKey, null, targetFlatLevelType);
	}
	return null;
};
oFF.QTimeMemberKeyConverter.prototype.getCanonicalDateFromMemberKey = function(memberKey, memberKeyHierarchyName, memberKeyFieldMetadata)
{
	if (oFF.isNull(memberKeyHierarchyName))
	{
		var level = oFF.QTimeDimensionUtil.findAnyHierarchyLevelMatchingField(this.m_sourceTimeDimension, memberKeyFieldMetadata);
		return oFF.QCanonicalDateUtil.createCanonicalDateFromEntityValueInfo(this.m_sourceQueryModel, this.m_sourceTimeDimension, memberKeyHierarchyName, memberKey, level.getLevelType());
	}
	else
	{
		return oFF.QCanonicalDateUtil.createCanonicalDateFromEntityValue(this.m_sourceQueryModel, this.m_sourceTimeDimension, memberKeyHierarchyName, memberKey);
	}
};
oFF.QTimeMemberKeyConverter.prototype.convertAndFlattenRangeEndPoint = function(memberKey, memberKeyHierarchyName, memberKeyFieldMetadata, targetKeyFieldMetadata, targetHierarchyName, comparisonOperator, isRangeEnd)
{
	var canonicalDate;
	if (oFF.isNull(memberKeyHierarchyName))
	{
		var level = oFF.QTimeDimensionUtil.findAnyHierarchyLevelMatchingField(this.m_sourceTimeDimension, memberKeyFieldMetadata);
		canonicalDate = oFF.QCanonicalDateUtil.createCanonicalDateFromEntityValueInfo(this.m_sourceQueryModel, this.m_sourceTimeDimension, null, memberKey, level.getLevelType());
	}
	else
	{
		canonicalDate = oFF.QCanonicalDateUtil.createCanonicalDateFromEntityValue(this.m_sourceQueryModel, this.m_sourceTimeDimension, memberKeyHierarchyName, memberKey);
	}
	var originalLevelType = oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(canonicalDate.getGranularity());
	var targetLevelType = originalLevelType;
	if (memberKeyFieldMetadata !== targetKeyFieldMetadata)
	{
		targetLevelType = oFF.QTimeDimensionUtil.findAnyHierarchyLevelMatchingField(this.m_sourceTimeDimension, targetKeyFieldMetadata).getLevelType();
	}
	var mostCompatibleTargetTimeHierarchy = this.m_targetTimeDimension.getLeveledHierarchy(targetHierarchyName);
	while (this.shouldIncreaseLevelGranularity(memberKeyHierarchyName, targetLevelType, canonicalDate, mostCompatibleTargetTimeHierarchy))
	{
		targetLevelType = oFF.QCanonicalDateUtil.getMoreGranularConvertibleLevelType(targetLevelType);
	}
	if (oFF.notNull(memberKeyHierarchyName) || originalLevelType !== targetLevelType)
	{
		var useLast = comparisonOperator === oFF.ComparisonOperator.LESS_EQUAL || comparisonOperator === oFF.ComparisonOperator.LESS_THAN || comparisonOperator === oFF.ComparisonOperator.BETWEEN && isRangeEnd;
		var convertedCanonicalDate = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(this.m_sourceQueryModel, this.m_sourceTimeDimension, memberKeyHierarchyName, canonicalDate, targetLevelType, useLast);
		var convertedMemberKey = oFF.QCanonicalDateUtil.getEntityValueKeyFromCanonicalDate(this.m_targetQueryModel, this.m_targetTimeDimension, targetHierarchyName, convertedCanonicalDate);
		return oFF.QTimeMemberKeyConversionResult.createFromSingleKey(convertedMemberKey, null, targetLevelType);
	}
	return oFF.QTimeMemberKeyConversionResult.createFromSingleKey(memberKey, null, targetLevelType);
};
oFF.QTimeMemberKeyConverter.prototype.shouldIncreaseLevelGranularity = function(hierarchyName, levelType, canonicalDate, hierarchyToCheck)
{
	return hierarchyToCheck.getLevelByType(levelType) === null || levelType === oFF.HierarchyLevelType.TIME_HALF_YEAR || levelType === oFF.HierarchyLevelType.TIME_WEEK && oFF.QCanonicalDateUtil.doesCanonicalDateSpanAcrossYears(this.m_sourceQueryModel, this.m_sourceTimeDimension, hierarchyName, canonicalDate);
};
oFF.QTimeMemberKeyConverter.prototype.convertFiscalMemberKeyToCalendar = function(memberKey, memberKeyHierarchyName, memberKeyFieldMetadata, compatibleTargetCalendarHierarchyName)
{
	return this.convertFiscalMemberKeyToCalendarParams(memberKey, memberKeyHierarchyName, memberKeyFieldMetadata, compatibleTargetCalendarHierarchyName, false, false);
};
oFF.QTimeMemberKeyConverter.prototype.convertFiscalRangeEndPointToCalendar = function(memberKey, memberKeyHierarchyName, memberKeyFieldMetadata, compatibleTargetCalendarHierarchyName, isRangeEnd)
{
	return this.convertFiscalMemberKeyToCalendarParams(memberKey, memberKeyHierarchyName, memberKeyFieldMetadata, compatibleTargetCalendarHierarchyName, true, isRangeEnd);
};
oFF.QTimeMemberKeyConverter.prototype.convertFiscalMemberKeyToCalendarParams = function(memberKey, memberKeyHierarchyName, memberKeyFieldMetadata, compatibleTargetCalendarHierarchyName, isRangeEndpoint, isRangeEnd)
{
	var canonicalDate;
	var hierarchyName = memberKeyHierarchyName;
	if (oFF.isNull(hierarchyName))
	{
		var level = oFF.QTimeDimensionUtil.findAnyHierarchyLevelMatchingField(this.m_sourceTimeDimension, memberKeyFieldMetadata);
		canonicalDate = oFF.QCanonicalDateUtil.createCanonicalDateFromEntityValueInfo(this.m_sourceQueryModel, this.m_sourceTimeDimension, null, memberKey, level.getLevelType());
		hierarchyName = level.getHierarchy().getName();
	}
	else
	{
		canonicalDate = oFF.QCanonicalDateUtil.createCanonicalDateFromEntityValue(this.m_sourceQueryModel, this.m_sourceTimeDimension, hierarchyName, memberKey);
	}
	var canonicalDateLevelType = oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(canonicalDate.getGranularity());
	var fiscalCanonicalDatesToConvert = oFF.XList.create();
	if (canonicalDateLevelType === oFF.HierarchyLevelType.TIME_YEAR || canonicalDateLevelType === oFF.HierarchyLevelType.TIME_QUARTER)
	{
		var startMonthCanonicalDate = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(this.m_sourceQueryModel, this.m_sourceTimeDimension, hierarchyName, canonicalDate, oFF.HierarchyLevelType.TIME_MONTH, isRangeEndpoint && isRangeEnd);
		fiscalCanonicalDatesToConvert.add(startMonthCanonicalDate);
		if (!isRangeEndpoint)
		{
			var endMonthCanonicalDate = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(this.m_sourceQueryModel, this.m_sourceTimeDimension, hierarchyName, canonicalDate, oFF.HierarchyLevelType.TIME_MONTH, true);
			fiscalCanonicalDatesToConvert.add(endMonthCanonicalDate);
		}
	}
	else
	{
		fiscalCanonicalDatesToConvert.add(canonicalDate);
	}
	var calendarCanonicalDates = oFF.XList.create();
	for (var i = 0; i < fiscalCanonicalDatesToConvert.size(); i++)
	{
		var fiscalCanonicalDateToConvert = fiscalCanonicalDatesToConvert.get(i);
		var fiscalCanonicalDateToConvertLevelType = oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(fiscalCanonicalDateToConvert.getGranularity());
		calendarCanonicalDates.add(oFF.QCanonicalDateUtil.convertCanonicalDateToTargetLevelAndFiscalSpace(this.m_sourceQueryModel, this.m_sourceTimeDimension, hierarchyName, fiscalCanonicalDateToConvert, fiscalCanonicalDateToConvertLevelType, oFF.FiscalSpaceType.CALENDAR));
	}
	var convertedCalendarSpaceMemberKeys = oFF.XListOfString.create();
	var isFlatOutput = oFF.isNull(hierarchyName);
	if (calendarCanonicalDates.size() === 1)
	{
		convertedCalendarSpaceMemberKeys.add(this.createMemberKeyFromCanonicalDate(this.m_sourceQueryModel, this.m_sourceTimeDimension, compatibleTargetCalendarHierarchyName, calendarCanonicalDates.get(0), isFlatOutput));
	}
	else
	{
		var startCalendarCanonicalDate = calendarCanonicalDates.get(0);
		var endCalendarCanonicalDate = calendarCanonicalDates.get(1);
		var startCalendarCanonicalDateLevelType = oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(startCalendarCanonicalDate.getGranularity());
		while (!oFF.QCanonicalDateUtil.isEqual(startCalendarCanonicalDate, endCalendarCanonicalDate))
		{
			convertedCalendarSpaceMemberKeys.add(this.createMemberKeyFromCanonicalDate(this.m_sourceQueryModel, this.m_sourceTimeDimension, compatibleTargetCalendarHierarchyName, startCalendarCanonicalDate, isFlatOutput));
			startCalendarCanonicalDate = oFF.QCanonicalDateUtil.incrementCanonicalDate(this.m_sourceQueryModel, this.m_sourceTimeDimension, compatibleTargetCalendarHierarchyName, startCalendarCanonicalDate, 1, startCalendarCanonicalDateLevelType);
		}
		convertedCalendarSpaceMemberKeys.add(this.createMemberKeyFromCanonicalDate(this.m_sourceQueryModel, this.m_sourceTimeDimension, compatibleTargetCalendarHierarchyName, startCalendarCanonicalDate, isFlatOutput));
	}
	var resultLevelType = oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(calendarCanonicalDates.get(0).getGranularity());
	return oFF.QTimeMemberKeyConversionResult.createFromMultiKeys(convertedCalendarSpaceMemberKeys, isFlatOutput ? null : compatibleTargetCalendarHierarchyName, resultLevelType);
};
oFF.QTimeMemberKeyConverter.prototype.createMemberKeyFromCanonicalDate = function(queryModel, timeDimension, hierarchyName, canonicalDate, shouldCreateFlatKey)
{
	if (shouldCreateFlatKey)
	{
		return oFF.QCanonicalDateUtil.getEntityValueKeyFromCanonicalDate(queryModel, timeDimension, hierarchyName, canonicalDate);
	}
	else
	{
		return oFF.QCanonicalDateUtil.createEntityValueFromCanonicalDate(queryModel, timeDimension, hierarchyName, canonicalDate);
	}
};

oFF.QFValueHelpResolvedValue = function() {};
oFF.QFValueHelpResolvedValue.prototype = new oFF.XObject();
oFF.QFValueHelpResolvedValue.prototype._ff_c = "QFValueHelpResolvedValue";

oFF.QFValueHelpResolvedValue.create = function(low, high)
{
	var resolvedValue = new oFF.QFValueHelpResolvedValue();
	resolvedValue.m_low = low;
	resolvedValue.m_high = high;
	return resolvedValue;
};
oFF.QFValueHelpResolvedValue.prototype.m_low = null;
oFF.QFValueHelpResolvedValue.prototype.m_high = null;
oFF.QFValueHelpResolvedValue.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_low = null;
	this.m_high = null;
};
oFF.QFValueHelpResolvedValue.prototype.getLow = function()
{
	return this.m_low;
};
oFF.QFValueHelpResolvedValue.prototype.getHigh = function()
{
	return this.m_high;
};

oFF.QRequestSettings = function() {};
oFF.QRequestSettings.prototype = new oFF.XObject();
oFF.QRequestSettings.prototype._ff_c = "QRequestSettings";

oFF.QRequestSettings.create = function(offset, windowSize, isHierarchyShot)
{
	var newObj = new oFF.QRequestSettings();
	newObj.m_offset = offset;
	newObj.m_windowSize = windowSize;
	newObj.m_isHierarchyShot = isHierarchyShot;
	return newObj;
};
oFF.QRequestSettings.prototype.m_offset = 0;
oFF.QRequestSettings.prototype.m_windowSize = 0;
oFF.QRequestSettings.prototype.m_isHierarchyShot = false;
oFF.QRequestSettings.prototype.m_isDeltaDrill = false;
oFF.QRequestSettings.prototype.isHierarchyAssignedAndActive = function()
{
	return this.m_isHierarchyShot;
};
oFF.QRequestSettings.prototype.setDeltaDrill = function(isDeltaDrill)
{
	this.m_isDeltaDrill = isDeltaDrill;
};
oFF.QRequestSettings.prototype.isDeltaDrill = function()
{
	return this.m_isDeltaDrill;
};
oFF.QRequestSettings.prototype.getOffset = function()
{
	return this.m_offset;
};
oFF.QRequestSettings.prototype.getWindowSize = function()
{
	return this.m_windowSize;
};

oFF.QCustomVariableConfig = function() {};
oFF.QCustomVariableConfig.prototype = new oFF.XObject();
oFF.QCustomVariableConfig.prototype._ff_c = "QCustomVariableConfig";

oFF.QCustomVariableConfig.createConfig = function(queryManager)
{
	var obj = new oFF.QCustomVariableConfig();
	obj.m_queryManager = queryManager;
	return obj;
};
oFF.QCustomVariableConfig.prototype.m_queryManager = null;
oFF.QCustomVariableConfig.prototype.m_isMandatory = false;
oFF.QCustomVariableConfig.prototype.m_supportsMultipleValues = false;
oFF.QCustomVariableConfig.prototype.m_defaultValues = null;
oFF.QCustomVariableConfig.prototype.createOptionsListVariable = function(name, text, options)
{
	if (this.m_queryManager.getVariable(name) !== null)
	{
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate3("variable with name ", name, " already exists"));
	}
	var variableContainer = this.m_queryManager.getVariableContainer();
	var variable = oFF.QSimpleTypeVariable.createOptionListVariable(variableContainer, variableContainer, name, text, this.m_supportsMultipleValues);
	for (var i = 0; i < options.size(); i++)
	{
		var option = options.get(i);
		variable.createAndAddOption(option.getFirstString(), option.getSecondString());
	}
	if (oFF.XCollectionUtils.hasElements(this.m_defaultValues))
	{
		for (var j = 0; j < this.m_defaultValues.size(); j++)
		{
			var value = this.m_defaultValues.get(j);
			variable.addOptionByName(value.getStringRepresentation());
		}
	}
	this.finalizeVariable(variableContainer, variable);
	return variable;
};
oFF.QCustomVariableConfig.prototype.releaseObject = function()
{
	this.m_queryManager = null;
	this.m_defaultValues = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QCustomVariableConfig.prototype.finalizeVariable = function(variableManager, variableBase)
{
	variableBase.setCustomVariable(true);
	variableBase.setInputEnabled(true);
	variableBase.setMandatory(this.m_isMandatory);
	variableManager.addVariable(variableBase);
};
oFF.QCustomVariableConfig.prototype.setMandatory = function(mandatory)
{
	this.m_isMandatory = mandatory;
};
oFF.QCustomVariableConfig.prototype.setSupportsMultipleValues = function(supportsMultipleValues)
{
	this.m_supportsMultipleValues = supportsMultipleValues;
};
oFF.QCustomVariableConfig.prototype.setDefaultValues = function(defaultValues)
{
	this.m_defaultValues = defaultValues;
};

oFF.QTechnicalVariableNames = {

	NAMES:null,
	TECHNICAL_SUFFIXES:null,
	TECHNICAL_VARIABLES_INPUTSCHEDULE_FILTER:"InputSchedule.Filter",
	TECHNICAL_VARIABLES_PREFIX_SIGNEDDATA:"SignedData",
	TECHNICAL_VARIABLES_PREFIX_SIGNEDDATA_MISSING_RATE:"SignedDataMissingRate",
	TECHNICAL_VARIABLES_PREFIX_SIGNEDDATA_OTHER:"SignedDataOther",
	TECHNICAL_VARIABLES_SUFFIX_CURRENCY:".Currency",
	TECHNICAL_VARIABLES_SUFFIX_DATE:".Date",
	TECHNICAL_VARIABLES_SUFFIX_MONTHDELTA:".MonthDelta",
	TECHNICAL_VARIABLES_SUFFIX_RATETYPE:".RateType",
	TECHNICAL_VARIABLES_SUFFIX_CATEGORY:".Category",
	TECHNICAL_VARIABLES_SUFFIX_USEPRECONVERTED:".UsePreConverted",
	TECHNICAL_VARIABLES_SUFFIX_RATEVERSION:".RateVersion",
	staticSetup:function()
	{
			oFF.QTechnicalVariableNames.TECHNICAL_SUFFIXES = oFF.XListOfString.create();
		oFF.QTechnicalVariableNames.TECHNICAL_SUFFIXES.add(oFF.QTechnicalVariableNames.TECHNICAL_VARIABLES_SUFFIX_CURRENCY);
		oFF.QTechnicalVariableNames.TECHNICAL_SUFFIXES.add(oFF.QTechnicalVariableNames.TECHNICAL_VARIABLES_SUFFIX_DATE);
		oFF.QTechnicalVariableNames.TECHNICAL_SUFFIXES.add(oFF.QTechnicalVariableNames.TECHNICAL_VARIABLES_SUFFIX_MONTHDELTA);
		oFF.QTechnicalVariableNames.TECHNICAL_SUFFIXES.add(oFF.QTechnicalVariableNames.TECHNICAL_VARIABLES_SUFFIX_RATETYPE);
		oFF.QTechnicalVariableNames.TECHNICAL_SUFFIXES.add(oFF.QTechnicalVariableNames.TECHNICAL_VARIABLES_SUFFIX_CATEGORY);
		oFF.QTechnicalVariableNames.TECHNICAL_SUFFIXES.add(oFF.QTechnicalVariableNames.TECHNICAL_VARIABLES_SUFFIX_USEPRECONVERTED);
		oFF.QTechnicalVariableNames.TECHNICAL_SUFFIXES.add(oFF.QTechnicalVariableNames.TECHNICAL_VARIABLES_SUFFIX_RATEVERSION);
		oFF.QTechnicalVariableNames.NAMES = oFF.XListOfString.create();
		oFF.QTechnicalVariableNames.NAMES.add(oFF.QTechnicalVariableNames.TECHNICAL_VARIABLES_INPUTSCHEDULE_FILTER);
		oFF.QTechnicalVariableNames.addTechnicalVariables(oFF.QTechnicalVariableNames.NAMES, oFF.QTechnicalVariableNames.TECHNICAL_VARIABLES_PREFIX_SIGNEDDATA);
		oFF.QTechnicalVariableNames.addTechnicalVariables(oFF.QTechnicalVariableNames.NAMES, oFF.QTechnicalVariableNames.TECHNICAL_VARIABLES_PREFIX_SIGNEDDATA_MISSING_RATE);
		oFF.QTechnicalVariableNames.addTechnicalVariables(oFF.QTechnicalVariableNames.NAMES, oFF.QTechnicalVariableNames.TECHNICAL_VARIABLES_PREFIX_SIGNEDDATA_OTHER);
	},
	addTechnicalVariables:function(list, prefix)
	{
			for (var i = 0; i < oFF.QTechnicalVariableNames.TECHNICAL_SUFFIXES.size(); i++)
		{
			list.add(oFF.XStringUtils.concatenate2(prefix, oFF.QTechnicalVariableNames.TECHNICAL_SUFFIXES.get(i)));
		}
	},
	isTechnicalVariableName:function(name)
	{
			if (oFF.XStringUtils.isNullOrEmpty(name))
		{
			return false;
		}
		if (oFF.QTechnicalVariableNames.NAMES.contains(name))
		{
			return true;
		}
		if (oFF.XString.startsWith(name, oFF.QTechnicalVariableNames.TECHNICAL_VARIABLES_PREFIX_SIGNEDDATA_OTHER))
		{
			for (var i = 0; i < oFF.QTechnicalVariableNames.TECHNICAL_SUFFIXES.size(); i++)
			{
				if (oFF.XString.endsWith(name, oFF.QTechnicalVariableNames.TECHNICAL_SUFFIXES.get(i)))
				{
					var nameWithoutPreAndSuffix = oFF.XString.replace(oFF.XString.replace(name, oFF.QTechnicalVariableNames.TECHNICAL_VARIABLES_PREFIX_SIGNEDDATA_OTHER, ""), oFF.QTechnicalVariableNames.TECHNICAL_SUFFIXES.get(i), "");
					if (oFF.XInteger.convertFromStringWithDefault(nameWithoutPreAndSuffix, -1) !== -1)
					{
						return true;
					}
				}
			}
		}
		return false;
	}
};

oFF.QFrame = function() {};
oFF.QFrame.prototype = new oFF.XObject();
oFF.QFrame.prototype._ff_c = "QFrame";

oFF.QFrame._createFrame = function(start, startPreceding, end, endFollowing)
{
	var frame = new oFF.QFrame();
	frame.setStart(start);
	frame.setStartPreceding(startPreceding);
	frame.setEnd(end);
	frame.setEndFollowing(endFollowing);
	return frame;
};
oFF.QFrame.prototype.m_start = null;
oFF.QFrame.prototype.m_end = null;
oFF.QFrame.prototype.m_startPreceding = 0;
oFF.QFrame.prototype.m_endFollowing = 0;
oFF.QFrame.prototype.getStart = function()
{
	return this.m_start;
};
oFF.QFrame.prototype.setStart = function(start)
{
	this.m_start = start;
};
oFF.QFrame.prototype.getStartPreceding = function()
{
	return this.m_startPreceding;
};
oFF.QFrame.prototype.setStartPreceding = function(startPreceding)
{
	this.m_startPreceding = startPreceding;
};
oFF.QFrame.prototype.getEnd = function()
{
	return this.m_end;
};
oFF.QFrame.prototype.setEnd = function(end)
{
	this.m_end = end;
};
oFF.QFrame.prototype.getEndFollowing = function()
{
	return this.m_endFollowing;
};
oFF.QFrame.prototype.setEndFollowing = function(endFollowing)
{
	this.m_endFollowing = endFollowing;
};
oFF.QFrame.prototype.cloneExt = function(flags)
{
	var targetFrame = oFF.QFrame._createFrame(this.getStart(), this.getStartPreceding(), this.getEnd(), this.getEndFollowing());
	return targetFrame;
};
oFF.QFrame.prototype.releaseObject = function()
{
	this.m_start = null;
	this.m_end = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.QBindingFactory = function() {};
oFF.QBindingFactory.prototype = new oFF.DpBindingFactory();
oFF.QBindingFactory.prototype._ff_c = "QBindingFactory";

oFF.QBindingFactory.staticSetupOlapBindingFactory = function()
{
	oFF.DpBindingFactory.registerFactory(oFF.OlapComponentType.QUERY_SERVICE_CONFIG, new oFF.QBindingFactory());
};
oFF.QBindingFactory.prototype.newBindingProvider = function(component, path)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(path))
	{
		return oFF.QBindingProviderForAttributes.create(component, path);
	}
	else
	{
		return oFF.QBindingProviderForStd.create(component, path);
	}
};

oFF.QBindingProviderForAttributes = function() {};
oFF.QBindingProviderForAttributes.prototype = new oFF.XObject();
oFF.QBindingProviderForAttributes.prototype._ff_c = "QBindingProviderForAttributes";

oFF.QBindingProviderForAttributes.create = function(component, path)
{
	var newObj = new oFF.QBindingProviderForAttributes();
	newObj.m_component = component;
	newObj.m_path = path;
	return newObj;
};
oFF.QBindingProviderForAttributes.prototype.m_component = null;
oFF.QBindingProviderForAttributes.prototype.m_path = null;
oFF.QBindingProviderForAttributes.prototype.getSenderBindings = function()
{
	var list = oFF.XList.create();
	if (oFF.XString.startsWith(this.m_path, "cmds/all"))
	{
		list.add(oFF.SemanticBindingType.JSON);
	}
	else
	{
		list.add(oFF.SemanticBindingType.STRING);
	}
	return list;
};
oFF.QBindingProviderForAttributes.prototype.getReceiverBindings = function()
{
	var list = oFF.XList.create();
	if (oFF.XString.startsWith(this.m_path, "cmds/all"))
	{
		list.add(oFF.SemanticBindingType.JSON);
	}
	else
	{
		list.add(oFF.SemanticBindingType.STRING);
	}
	return list;
};
oFF.QBindingProviderForAttributes.prototype.getSenderProtocolBindings = function(type)
{
	var list = oFF.XList.create();
	if (oFF.XString.startsWith(this.m_path, "cmds/all"))
	{
		list.add(oFF.ProtocolBindingType.JSON);
	}
	else
	{
		list.add(oFF.ProtocolBindingType.STRING);
	}
	return list;
};
oFF.QBindingProviderForAttributes.prototype.getReceiverProtocolBindings = function(type)
{
	var list = oFF.XList.create();
	if (oFF.XString.startsWith(this.m_path, "cmds/all"))
	{
		list.add(oFF.ProtocolBindingType.JSON);
	}
	else
	{
		list.add(oFF.ProtocolBindingType.STRING);
	}
	return list;
};
oFF.QBindingProviderForAttributes.prototype.newSenderBinding = function(type, protocol)
{
	var dp = this.m_component;
	var senderBinding = null;
	if (oFF.XString.startsWith(this.m_path, "model/filters/") && oFF.XString.endsWith(this.m_path, "/description"))
	{
		senderBinding = oFF.QBindingAttributeFilterDescription.create(dp, type, protocol, this.m_path);
	}
	else if (oFF.XString.startsWith(this.m_path, "model/filters/SingleMemberSelection/"))
	{
		senderBinding = oFF.QBindingAttributeFilterSingleMemberSelection.create(dp, type, protocol, this.m_path);
	}
	else if (oFF.XString.startsWith(this.m_path, "model/Presentation/setting"))
	{
		senderBinding = oFF.QBindingAttributePresentation.create(dp, type, protocol, this.m_path);
	}
	else if (oFF.XString.startsWith(this.m_path, "model/Presentation/valuehelp"))
	{
		senderBinding = oFF.QBindingAttributePresentationValueHelp.create(dp, type, protocol, this.m_path);
	}
	else if (oFF.XString.startsWith(this.m_path, "cmds/all"))
	{
		senderBinding = oFF.QBindingMenu.create(dp, type, protocol, this.m_path);
	}
	return senderBinding;
};
oFF.QBindingProviderForAttributes.prototype.newReceiverBinding = function(type, protocol)
{
	var receiverBinding = null;
	var dp = this.m_component;
	if (oFF.XString.startsWith(this.m_path, "model/Presentation/setting"))
	{
		receiverBinding = oFF.QBindingAttributePresentation.create(dp, type, protocol, this.m_path);
	}
	return receiverBinding;
};
oFF.QBindingProviderForAttributes.prototype.toString = function()
{
	return this.m_path;
};

oFF.QBindingProviderForStd = function() {};
oFF.QBindingProviderForStd.prototype = new oFF.XObject();
oFF.QBindingProviderForStd.prototype._ff_c = "QBindingProviderForStd";

oFF.QBindingProviderForStd.create = function(component, path)
{
	var newObj = new oFF.QBindingProviderForStd();
	newObj.m_component = component;
	newObj.m_path = path;
	return newObj;
};
oFF.QBindingProviderForStd.prototype.m_component = null;
oFF.QBindingProviderForStd.prototype.m_path = null;
oFF.QBindingProviderForStd.prototype.getSenderBindings = function()
{
	var list = oFF.XList.create();
	list.add(oFF.SemanticBindingType.PIE);
	list.add(oFF.SemanticBindingType.LINE);
	list.add(oFF.SemanticBindingType.COLUMN);
	list.add(oFF.SemanticBindingType.BAR);
	list.add(oFF.SemanticBindingType.TIMESERIES);
	list.add(oFF.SemanticBindingType.BOXPLOT);
	list.add(oFF.SemanticBindingType.COMBBCL);
	list.add(oFF.SemanticBindingType.TABLE);
	list.add(oFF.SemanticBindingType.AREA);
	list.add(oFF.SemanticBindingType.SCATTER);
	list.add(oFF.SemanticBindingType.BUBBLE);
	list.add(oFF.SemanticBindingType.SPLINE);
	list.add(oFF.SemanticBindingType.VARIABLEPIE);
	list.add(oFF.SemanticBindingType.HEATMAP);
	list.add(oFF.SemanticBindingType.TREEMAP);
	list.add(oFF.SemanticBindingType.VARIWIDE);
	list.add(oFF.SemanticBindingType.WORDCLOUD);
	list.add(oFF.SemanticBindingType.BELLCURVE);
	list.add(oFF.SemanticBindingType.SCATTER);
	list.add(oFF.SemanticBindingType.BUBBLE);
	list.add(oFF.SemanticBindingType.CHART);
	list.add(oFF.SemanticBindingType.JSON);
	list.add(oFF.SemanticBindingType.STRING);
	list.add(oFF.SemanticBindingType.KPI);
	return list;
};
oFF.QBindingProviderForStd.prototype.getReceiverBindings = function()
{
	return oFF.XList.create();
};
oFF.QBindingProviderForStd.prototype.getSenderProtocolBindings = function(type)
{
	var list = oFF.XList.create();
	list.add(oFF.ProtocolBindingType.GOOGLE_CHART_PROTOCOL);
	list.add(oFF.ProtocolBindingType.HIGH_CHART_PROTOCOL);
	list.add(oFF.ProtocolBindingType.VIZ_FRAME_PROTOCOL);
	list.add(oFF.ProtocolBindingType.MICRO_CHART_PROTOCOL);
	list.add(oFF.ProtocolBindingType.SAP_KPI_PROTOCOL);
	list.add(oFF.ProtocolBindingType.PLAIN_GRID);
	list.add(oFF.ProtocolBindingType.FIREFLY_GRID);
	list.add(oFF.ProtocolBindingType.STRING);
	list.add(oFF.ProtocolBindingType.INTEGER);
	list.add(oFF.ProtocolBindingType.JSON);
	return list;
};
oFF.QBindingProviderForStd.prototype.getReceiverProtocolBindings = function(type)
{
	return oFF.XList.create();
};
oFF.QBindingProviderForStd.prototype.newSenderBinding = function(type, protocol)
{
	var dp = this.m_component;
	var senderBinding = oFF.QBindingResultset.create(dp, type, protocol);
	return senderBinding;
};
oFF.QBindingProviderForStd.prototype.newReceiverBinding = function(type, protocol)
{
	return null;
};
oFF.QBindingProviderForStd.prototype.toString = function()
{
	return this.m_path;
};

oFF.AbstractBlendingMapping = function() {};
oFF.AbstractBlendingMapping.prototype = new oFF.XObject();
oFF.AbstractBlendingMapping.prototype._ff_c = "AbstractBlendingMapping";

oFF.AbstractBlendingMapping.prototype.m_blendingDefinition = null;
oFF.AbstractBlendingMapping.prototype.m_mappingDefinitionType = null;
oFF.AbstractBlendingMapping.prototype.setupAbstractMapping = function(mappingType, blendingDefinition)
{
	this.m_mappingDefinitionType = mappingType;
	this.m_blendingDefinition = blendingDefinition;
};
oFF.AbstractBlendingMapping.prototype.copyFrom = function(other, flags)
{
	oFF.XObject.prototype.copyFrom.call( this , other, flags);
	var otherObj = other;
	this.m_mappingDefinitionType = otherObj.getMappingDefinitionType();
	this.m_blendingDefinition = otherObj.getBlendingDefinition();
};
oFF.AbstractBlendingMapping.prototype.getMappingDefinitionType = function()
{
	return this.m_mappingDefinitionType;
};
oFF.AbstractBlendingMapping.prototype.releaseObject = function()
{
	this.m_mappingDefinitionType = null;
	this.m_blendingDefinition = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.AbstractBlendingMapping.prototype.setBlendingDefinition = function(blendingDefinition)
{
	this.m_blendingDefinition = blendingDefinition;
};
oFF.AbstractBlendingMapping.prototype.getBlendingDefinition = function()
{
	return this.m_blendingDefinition;
};

oFF.BlendingHost = function() {};
oFF.BlendingHost.prototype = new oFF.XObject();
oFF.BlendingHost.prototype._ff_c = "BlendingHost";

oFF.BlendingHost.createWithSource = function(source)
{
	var queryModel = source.getQueryModel();
	var capabilities = queryModel.getModelCapabilities();
	var blendingHost = new oFF.BlendingHost();
	blendingHost.setupBlendingHost(queryModel.getQueryManager().getSystemDescription(), capabilities);
	blendingHost.m_blendingSource = source;
	return blendingHost;
};
oFF.BlendingHost.createWithSystemName = function(systemName, application)
{
	var olapEnvironment = application.getOlapEnvironment();
	var analyticCapabilities = olapEnvironment.getSystemContainer(systemName).getServiceCapabilities(oFF.ServerService.ANALYTIC);
	var systemDescription = application.getSystemLandscape().getSystemDescription(systemName);
	var blendingHost = new oFF.BlendingHost();
	blendingHost.setupBlendingHost(systemDescription, analyticCapabilities);
	return blendingHost;
};
oFF.BlendingHost.prototype.m_blendingSource = null;
oFF.BlendingHost.prototype.m_systemDescription = null;
oFF.BlendingHost.prototype.m_supportsCubeBlending = false;
oFF.BlendingHost.prototype.m_supportsRemoteBlending = false;
oFF.BlendingHost.prototype.m_supportsRemoteBlendingBW = false;
oFF.BlendingHost.prototype.setupBlendingHost = function(systemDescription, capability)
{
	this.m_systemDescription = systemDescription;
	this.m_supportsCubeBlending = capability.supportsCubeBlending();
	this.m_supportsRemoteBlending = capability.supportsRemoteBlending();
	this.m_supportsRemoteBlendingBW = capability.supportsRemoteBlendingBW();
};
oFF.BlendingHost.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_blendingSource = null;
	this.m_systemDescription = null;
};
oFF.BlendingHost.prototype.getSource = function()
{
	return this.m_blendingSource;
};
oFF.BlendingHost.prototype.getSystemDescription = function()
{
	return this.m_systemDescription;
};
oFF.BlendingHost.prototype.getSystemName = function()
{
	return this.m_systemDescription.getSystemName();
};
oFF.BlendingHost.prototype.isSystemMappingValid = function(remoteQueryManager)
{
	return this.m_systemDescription.isSystemMappingValid(remoteQueryManager.getSystemDescription());
};
oFF.BlendingHost.prototype.supportsCubeBlending = function()
{
	return this.m_supportsCubeBlending;
};
oFF.BlendingHost.prototype.supportsRemoteBlending = function()
{
	return this.m_supportsRemoteBlending;
};
oFF.BlendingHost.prototype.supportsRemoteBlendingBW = function()
{
	return this.m_supportsRemoteBlendingBW;
};
oFF.BlendingHost.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var xOther = other;
	if (!this.getSource().isEqualTo(xOther.getSource()))
	{
		return false;
	}
	if (!this.getSystemDescription().isEqualTo(xOther.getSystemDescription()))
	{
		return false;
	}
	if (this.supportsCubeBlending() !== xOther.supportsCubeBlending())
	{
		return false;
	}
	if (this.supportsRemoteBlending() !== xOther.supportsRemoteBlending())
	{
		return false;
	}
	if (this.supportsRemoteBlendingBW() !== xOther.supportsRemoteBlendingBW())
	{
		return false;
	}
	return true;
};

oFF.BlendingHostManager = function() {};
oFF.BlendingHostManager.prototype = new oFF.XObject();
oFF.BlendingHostManager.prototype._ff_c = "BlendingHostManager";

oFF.BlendingHostManager.create = function(blendingDefinition)
{
	var blendingHostManager = new oFF.BlendingHostManager();
	blendingHostManager.m_blendingDefinition = blendingDefinition;
	return blendingHostManager;
};
oFF.BlendingHostManager.prototype.m_blendingDefinition = null;
oFF.BlendingHostManager.prototype.m_blendingHost = null;
oFF.BlendingHostManager.prototype.m_application = null;
oFF.BlendingHostManager.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_blendingHost = oFF.XObjectExt.release(this.m_blendingHost);
	this.m_blendingDefinition = null;
	this.m_application = null;
};
oFF.BlendingHostManager.prototype.setSourceAsBlendingHost = function(source)
{
	this.m_blendingHost = oFF.XObjectExt.release(this.m_blendingHost);
	if (oFF.notNull(source))
	{
		this.m_blendingHost = oFF.BlendingHost.createWithSource(source);
	}
};
oFF.BlendingHostManager.prototype.setBlendingHost = function(blendingHost)
{
	this.m_blendingHost = blendingHost;
};
oFF.BlendingHostManager.prototype.getBlendingHost = function()
{
	this.updateBlendingHost();
	return this.m_blendingHost;
};
oFF.BlendingHostManager.prototype.updateBlendingHost = function()
{
	var minBlendingCapability = oFF.BlendingCapabilities.getMinCapabilityForBlendingHost(this.m_blendingDefinition.getSources());
	if (oFF.isNull(minBlendingCapability))
	{
		this.setBlendingHost(null);
	}
	else if (oFF.XString.isEqual(minBlendingCapability, oFF.BlendingCapabilities.BLENDING_CAPABILITY_LOCAL))
	{
		if (oFF.isNull(this.m_blendingHost))
		{
			this.setSourceAsBlendingHost(this.m_blendingDefinition.getSources().get(0));
		}
	}
	else if (!oFF.BlendingCapabilities.blendingHostSupportsCapability(this.m_blendingHost, minBlendingCapability))
	{
		this.setBlendingHost(this.findBlendingHost(minBlendingCapability));
	}
};
oFF.BlendingHostManager.prototype.findBlendingHost = function(minBlendingCapability)
{
	var primary = this.m_blendingDefinition.getSources().get(0);
	if (oFF.XString.isEqual(this.getMasterSystem(), this.getSystemName(primary)))
	{
		if (oFF.BlendingCapabilities.sourceSupportsCapability(primary, minBlendingCapability))
		{
			return oFF.BlendingHost.createWithSource(primary);
		}
		return null;
	}
	var systemsByMappingCount = this.getSystemsByMappingCount();
	var mappingCounts = oFF.XCollectionUtils.sortListAsIntegers(systemsByMappingCount.getKeysAsReadOnlyListOfString(), oFF.XSortDirection.DESCENDING);
	var numberOfDifferentMappingsCounts = mappingCounts.size();
	for (var i = 0; i < numberOfDifferentMappingsCounts; i++)
	{
		var systems = systemsByMappingCount.getByKey(mappingCounts.get(i));
		var blendingHost = this.getBlendingSourceFromList(systems, minBlendingCapability);
		if (oFF.notNull(blendingHost))
		{
			return blendingHost;
		}
		if (i === numberOfDifferentMappingsCounts - 1)
		{
			var defaultBlendingSystem = this.getDefaultBlendingSystem();
			var metadata = this.getServerMetadata(defaultBlendingSystem);
			if (oFF.notNull(metadata) && metadata.supportsAnalyticCapability(minBlendingCapability))
			{
				return oFF.BlendingHost.createWithSystemName(defaultBlendingSystem, this.getApplication());
			}
		}
		var systemName = this.getBestBlendingHostFromList(systems, minBlendingCapability);
		if (oFF.notNull(systemName))
		{
			return oFF.BlendingHost.createWithSystemName(systemName, this.getApplication());
		}
	}
	return null;
};
oFF.BlendingHostManager.prototype.getSystemsByMappingCount = function()
{
	var map = oFF.XHashMapByString.create();
	var blendingSources = this.m_blendingDefinition.getSources();
	var systemLandscape = this.getApplication().getSystemLandscape();
	var systemNames = systemLandscape.getSystemNames();
	var size = systemNames.size();
	for (var i = 0; i < size; i++)
	{
		var systemName = systemNames.get(i);
		var mappings = oFF.XInteger.convertToString(this.getMappingCount(systemName, blendingSources, systemLandscape));
		var systemsWithSameMappingCount = map.getByKey(mappings);
		if (oFF.notNull(systemsWithSameMappingCount))
		{
			systemsWithSameMappingCount.add(systemName);
		}
		else
		{
			var systems = oFF.XListOfString.create();
			systems.add(systemName);
			map.put(mappings, systems);
		}
	}
	return map;
};
oFF.BlendingHostManager.prototype.getMappingCount = function(systemName, blendingSources, systemLandscape)
{
	var systemDescription = systemLandscape.getSystemDescription(systemName);
	var mappings = 0;
	var size = blendingSources.size();
	for (var k = 0; k < size; k++)
	{
		var blendingSource = blendingSources.get(k);
		var blendingSourceQM = blendingSource.getQueryModel().getQueryManager();
		if (oFF.XString.isEqual(systemName, blendingSourceQM.getSystemName()) || systemDescription.isSystemMappingValid(blendingSourceQM.getSystemDescription()))
		{
			mappings++;
			continue;
		}
		var associatedSystem = this.getAssociatedSystemName(blendingSource);
		if (oFF.XStringUtils.isNotNullAndNotEmpty(associatedSystem))
		{
			var associatedSystemDescription = systemLandscape.getSystemDescription(associatedSystem);
			if (oFF.XString.isEqual(systemName, associatedSystem) || systemDescription.isSystemMappingValid(associatedSystemDescription))
			{
				mappings++;
			}
		}
	}
	return mappings;
};
oFF.BlendingHostManager.prototype.getBlendingSourceFromList = function(systemNames, minBlendingCapability)
{
	var system = null;
	var systemVersion = null;
	var blendingSource = null;
	var blendingSources = this.m_blendingDefinition.getSources();
	var size = blendingSources.size();
	for (var i = 0; i < size; i++)
	{
		var source = blendingSources.get(i);
		var systemName = this.getSystemName(source);
		if (systemNames.contains(systemName) && oFF.BlendingCapabilities.sourceSupportsCapability(source, minBlendingCapability))
		{
			var version = this.getVersion(source);
			if (oFF.isNull(system) || oFF.ServerVersionComparator.compare(systemVersion, version) === 1)
			{
				system = systemName;
				systemVersion = version;
				blendingSource = source;
			}
		}
		var associatedHanaSystem = this.getAssociatedSystemName(source);
		if (oFF.XStringUtils.isNotNullAndNotEmpty(associatedHanaSystem))
		{
			var serverMetadata = this.getServerMetadata(associatedHanaSystem);
			if (oFF.notNull(serverMetadata) && serverMetadata.supportsAnalyticCapability(minBlendingCapability))
			{
				var associatedHanaSystemVersion = serverMetadata.getVersion();
				if (oFF.isNull(system) || oFF.ServerVersionComparator.compare(systemVersion, associatedHanaSystemVersion) === 1)
				{
					system = associatedHanaSystem;
					systemVersion = associatedHanaSystemVersion;
					blendingSource = null;
				}
			}
		}
	}
	if (oFF.notNull(blendingSource))
	{
		return oFF.BlendingHost.createWithSource(blendingSource);
	}
	return oFF.notNull(system) ? oFF.BlendingHost.createWithSystemName(system, this.getApplication()) : null;
};
oFF.BlendingHostManager.prototype.getVersion = function(source)
{
	var queryManager = source.getQueryModel().getQueryManager();
	var serverMetadata = this.getServerMetadata(queryManager.getSystemName());
	if (oFF.notNull(serverMetadata))
	{
		return serverMetadata.getVersion();
	}
	return null;
};
oFF.BlendingHostManager.prototype.getBestBlendingHostFromList = function(systemNames, minBlendingCapability)
{
	var name = null;
	var version = null;
	var size = systemNames.size();
	for (var i = 0; i < size; i++)
	{
		var system = systemNames.get(i);
		var serverMetadata = this.getServerMetadata(system);
		if (oFF.notNull(serverMetadata) && serverMetadata.supportsAnalyticCapability(minBlendingCapability))
		{
			var serverVersion = serverMetadata.getVersion();
			if (oFF.isNull(name) || oFF.ServerVersionComparator.compare(version, serverVersion) === 1)
			{
				name = system;
				version = serverVersion;
			}
		}
	}
	return name;
};
oFF.BlendingHostManager.prototype.getApplication = function()
{
	if (oFF.isNull(this.m_application))
	{
		var sources = this.m_blendingDefinition.getSources();
		var queryModel = sources.get(0).getQueryModel();
		this.m_application = queryModel.getApplication();
	}
	return this.m_application;
};
oFF.BlendingHostManager.prototype.getDefaultBlendingSystem = function()
{
	var systemLandscape = this.getApplication().getSystemLandscape();
	return systemLandscape.getDefaultSystemName(oFF.SystemRole.PRIMARY_BLENDING_HOST);
};
oFF.BlendingHostManager.prototype.getMasterSystem = function()
{
	var systemLandscape = this.getApplication().getSystemLandscape();
	return systemLandscape.getMasterSystemName();
};
oFF.BlendingHostManager.prototype.getSystemName = function(source)
{
	return source.getQueryModel().getQueryManager().getSystemName();
};
oFF.BlendingHostManager.prototype.getAssociatedSystemName = function(source)
{
	var systemLandscape = this.getApplication().getSystemLandscape();
	var systemDescription = systemLandscape.getSystemDescription(this.getSystemName(source));
	if (oFF.notNull(systemDescription))
	{
		var associatedHanaSystem = systemDescription.getAssociatedHanaSystem();
		if (systemLandscape.getSystemDescription(associatedHanaSystem) !== null)
		{
			return associatedHanaSystem;
		}
	}
	return null;
};
oFF.BlendingHostManager.prototype.getServerMetadata = function(systemName)
{
	if (oFF.notNull(systemName))
	{
		var application = this.getApplication();
		if (application.getSession().hasFeature(oFF.FeatureToggleOlap.SERVER_METADATA_VIA_SYSTEM_CONNECT))
		{
			var systemConnect = application.getSystemConnect(systemName);
			if (oFF.notNull(systemConnect))
			{
				return systemConnect.getServerMetadata();
			}
		}
		else
		{
			var connection = application.getConnection(systemName);
			if (oFF.notNull(connection))
			{
				return connection.getServerMetadata();
			}
		}
	}
	return null;
};

oFF.QCapabilitiesDecorator = function() {};
oFF.QCapabilitiesDecorator.prototype = new oFF.XObject();
oFF.QCapabilitiesDecorator.prototype._ff_c = "QCapabilitiesDecorator";

oFF.QCapabilitiesDecorator.create = function(parent)
{
	var newObj = new oFF.QCapabilitiesDecorator();
	newObj.updateContext(parent);
	newObj.m_supportsCellValueOperand = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsIntersectLayers = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsComplexFilter = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsVisibilityFilter = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsComplexTupleFilter = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsSetOperand = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsSpatialFilter = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsSpatialFilterSrid = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsConvertToFlatFilter = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsCurrentMemberFilterExtension = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsSetOperandCurrentMemberSingleNavigation = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsUniversalDisplayHierarchiesZeroBased = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsUniversalDisplayHierarchiesCustomDimensions = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsUniversalDisplayHierarchies = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsHierarchyPath = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsUniqueHierarchyPath = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsHierarchyVirtualRootNode = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsHierarchyRestNode = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsHierarchyNavigationDeltaMode = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsHierNavCounter = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsHierarchyMetadata = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsHierarchyLevelMetadata = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsHierCarryingDim = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsHierAttHierFields = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsFixMetadataHierarchyAttributes = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsFixHierarchyFlagKeys = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsExpandBottomUp = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsDimensionHierarchyLevels = oFF.TriStateBool._DEFAULT;
	newObj.m_supportsCustomHierarchy = oFF.TriStateBool._DEFAULT;
	return newObj;
};
oFF.QCapabilitiesDecorator.prototype.m_parentCapabilities = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsCellValueOperand = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsIntersectLayers = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsComplexFilter = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsVisibilityFilter = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsComplexTupleFilter = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsSetOperand = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsSpatialFilter = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsSpatialFilterSrid = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsConvertToFlatFilter = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsCurrentMemberFilterExtension = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsSetOperandCurrentMemberSingleNavigation = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsUniversalDisplayHierarchiesZeroBased = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsUniversalDisplayHierarchiesCustomDimensions = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsUniversalDisplayHierarchies = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsHierarchyPath = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsUniqueHierarchyPath = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsHierarchyVirtualRootNode = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsHierarchyRestNode = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsHierarchyNavigationDeltaMode = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsHierNavCounter = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsHierarchyMetadata = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsHierarchyLevelMetadata = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsHierCarryingDim = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsHierAttHierFields = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsFixMetadataHierarchyAttributes = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsFixHierarchyFlagKeys = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsExpandBottomUp = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsDimensionHierarchyLevels = null;
oFF.QCapabilitiesDecorator.prototype.m_supportsCustomHierarchy = null;
oFF.QCapabilitiesDecorator.prototype.updateContext = function(parent)
{
	if (parent.getComponentType() === oFF.OlapComponentType.QUERY_MODEL)
	{
		this.m_parentCapabilities = parent.getModelCapabilities();
	}
	else
	{
		var parentParent = parent.getParent();
		this.m_parentCapabilities = oFF.isNull(parentParent) ? null : parentParent.getModelCapabilities();
	}
};
oFF.QCapabilitiesDecorator.prototype.releaseObject = function()
{
	this.m_parentCapabilities = null;
	this.m_supportsCellValueOperand = null;
	this.m_supportsIntersectLayers = null;
	this.m_supportsComplexFilter = null;
	this.m_supportsVisibilityFilter = null;
	this.m_supportsComplexTupleFilter = null;
	this.m_supportsSetOperand = null;
	this.m_supportsSpatialFilter = null;
	this.m_supportsSpatialFilterSrid = null;
	this.m_supportsConvertToFlatFilter = null;
	this.m_supportsCurrentMemberFilterExtension = null;
	this.m_supportsSetOperandCurrentMemberSingleNavigation = null;
	this.m_supportsUniversalDisplayHierarchiesZeroBased = null;
	this.m_supportsUniversalDisplayHierarchiesCustomDimensions = null;
	this.m_supportsUniversalDisplayHierarchies = null;
	this.m_supportsHierarchyPath = null;
	this.m_supportsUniqueHierarchyPath = null;
	this.m_supportsHierarchyVirtualRootNode = null;
	this.m_supportsHierarchyRestNode = null;
	this.m_supportsHierarchyNavigationDeltaMode = null;
	this.m_supportsHierNavCounter = null;
	this.m_supportsHierarchyMetadata = null;
	this.m_supportsHierarchyLevelMetadata = null;
	this.m_supportsHierCarryingDim = null;
	this.m_supportsHierAttHierFields = null;
	this.m_supportsFixMetadataHierarchyAttributes = null;
	this.m_supportsFixHierarchyFlagKeys = null;
	this.m_supportsExpandBottomUp = null;
	this.m_supportsDimensionHierarchyLevels = null;
	this.m_supportsCustomHierarchy = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QCapabilitiesDecorator.prototype.supportsMultiComplexFilter = function()
{
	return this.supportsComplexFilter() || this.supportsComplexTupleFilter();
};
oFF.QCapabilitiesDecorator.prototype.supportsComplexFilter = function()
{
	var result;
	if (this.m_supportsComplexFilter === oFF.TriStateBool._DEFAULT)
	{
		result = this.m_parentCapabilities.supportsComplexFilter();
	}
	else
	{
		result = this.m_supportsComplexFilter.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.setSupportsComplexFilter = function(supportsComplexFilter)
{
	this.m_supportsComplexFilter = oFF.TriStateBool.lookup(supportsComplexFilter);
};
oFF.QCapabilitiesDecorator.prototype.supportsCellValueOperand = function()
{
	var result;
	if (this.m_supportsCellValueOperand === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCellValueOperand();
	}
	else
	{
		result = this.m_supportsCellValueOperand.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.setSupportsCellValueOperand = function(supportsCellValueOperand)
{
	this.m_supportsCellValueOperand = oFF.TriStateBool.lookup(supportsCellValueOperand);
};
oFF.QCapabilitiesDecorator.prototype.supportsIntersectLayers = function()
{
	var result;
	if (this.m_supportsIntersectLayers === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsIntersectLayers();
	}
	else
	{
		result = this.m_supportsIntersectLayers.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.setSupportsIntersectLayers = function(supportsIntersectLayers)
{
	this.m_supportsIntersectLayers = oFF.TriStateBool.lookup(supportsIntersectLayers);
};
oFF.QCapabilitiesDecorator.prototype.supportsVisibilityFilter = function()
{
	var result;
	if (this.m_supportsVisibilityFilter === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsVisibilityFilter();
	}
	else
	{
		result = this.m_supportsVisibilityFilter.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.setSupportsVisibilityFilter = function(supportsVisibilityFilter)
{
	this.m_supportsVisibilityFilter = oFF.TriStateBool.lookup(supportsVisibilityFilter);
};
oFF.QCapabilitiesDecorator.prototype.supportsDataRefreshAndDataTopicality = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDataRefreshAndDataTopicality();
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedVariableDefinition = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedVariableDefinition();
};
oFF.QCapabilitiesDecorator.prototype.getSystemType = function()
{
	return oFF.isNull(this.m_parentCapabilities) ? null : this.m_parentCapabilities.getSystemType();
};
oFF.QCapabilitiesDecorator.prototype.getSystemName = function()
{
	return oFF.isNull(this.m_parentCapabilities) ? null : this.m_parentCapabilities.getSystemName();
};
oFF.QCapabilitiesDecorator.prototype.getServerMetadataVersion = function()
{
	return oFF.isNull(this.m_parentCapabilities) ? null : this.m_parentCapabilities.getServerMetadataVersion();
};
oFF.QCapabilitiesDecorator.prototype.supportsAverageCountNullZero = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsAverageCountNullZero();
};
oFF.QCapabilitiesDecorator.prototype.supportsCartesianFilterIntersect = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCartesianFilterIntersect();
};
oFF.QCapabilitiesDecorator.prototype.supportsCeScenarioParams = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCeScenarioParams();
};
oFF.QCapabilitiesDecorator.prototype.supportsConditions = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsConditions();
};
oFF.QCapabilitiesDecorator.prototype.supportsConditionsWithVersions = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsConditionsWithVersions();
};
oFF.QCapabilitiesDecorator.prototype.supportsConditionsOverride = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsConditionsOverride();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlending = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlending();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingOutOfContext = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingOutOfContext();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingProperties = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingProperties();
};
oFF.QCapabilitiesDecorator.prototype.supportsCustomDimensionFilterCapability = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCustomDimensionFilterCapability();
};
oFF.QCapabilitiesDecorator.prototype.supportsDataCells = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDataCells();
};
oFF.QCapabilitiesDecorator.prototype.supportsExceptionAggregationDimsFormulas = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExceptionAggregationDimsFormulas();
};
oFF.QCapabilitiesDecorator.prototype.supportsExceptions = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExceptions();
};
oFF.QCapabilitiesDecorator.prototype.supportsExceptionsV2 = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExceptionsV2();
};
oFF.QCapabilitiesDecorator.prototype.supportsExceptionSettings = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExceptionSettings();
};
oFF.QCapabilitiesDecorator.prototype.supportsExpandBottomUp = function()
{
	var result;
	if (this.m_supportsExpandBottomUp === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExpandBottomUp();
	}
	else
	{
		result = this.m_supportsExpandBottomUp.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedSort = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedSort();
};
oFF.QCapabilitiesDecorator.prototype.supportsFormulaMeasures = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsFormulaMeasures();
};
oFF.QCapabilitiesDecorator.prototype.supportsHierarchyLevelMetadata = function()
{
	var result;
	if (this.m_supportsHierarchyLevelMetadata === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsHierarchyLevelMetadata();
	}
	else
	{
		result = this.m_supportsHierarchyLevelMetadata.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsDimensionHierarchyLevels = function()
{
	var result;
	if (this.m_supportsDimensionHierarchyLevels === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDimensionHierarchyLevels();
	}
	else
	{
		result = this.m_supportsDimensionHierarchyLevels.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsHierarchyLevelOffsetFilter = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsHierarchyLevelOffsetFilter();
};
oFF.QCapabilitiesDecorator.prototype.supportsHierarchyMetadata = function()
{
	var result;
	if (this.m_supportsHierarchyMetadata === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsHierarchyMetadata();
	}
	else
	{
		result = this.m_supportsHierarchyMetadata.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsHierarchyNavigationDeltaMode = function()
{
	var result;
	if (this.m_supportsHierarchyNavigationDeltaMode === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsHierarchyNavigationDeltaMode();
	}
	else
	{
		result = this.m_supportsHierarchyNavigationDeltaMode.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsHierarchyTrapezoidFilter = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsHierarchyTrapezoidFilter();
};
oFF.QCapabilitiesDecorator.prototype.supportsIgnoreExternalDimensions = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsIgnoreExternalDimensions();
};
oFF.QCapabilitiesDecorator.prototype.supportsKeepOriginalTexts = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsKeepOriginalTexts();
};
oFF.QCapabilitiesDecorator.prototype.supportsLocaleSorting = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsLocaleSorting();
};
oFF.QCapabilitiesDecorator.prototype.supportsMemberVisibility = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsMemberVisibility();
};
oFF.QCapabilitiesDecorator.prototype.supportsRestrictedMeasures = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsRestrictedMeasures();
};
oFF.QCapabilitiesDecorator.prototype.supportsResultsetFacets = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsResultsetFacets();
};
oFF.QCapabilitiesDecorator.prototype.supportsSpatialClustering = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSpatialClustering();
};
oFF.QCapabilitiesDecorator.prototype.supportsSpatialTransformation = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSpatialTransformation();
};
oFF.QCapabilitiesDecorator.prototype.supportsUnifiedDataCells = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsUnifiedDataCells();
};
oFF.QCapabilitiesDecorator.prototype.supportsHierarchyPath = function()
{
	var result;
	if (this.m_supportsHierarchyPath === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsHierarchyPath();
	}
	else
	{
		result = this.m_supportsHierarchyPath.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsUniqueHierarchyPath = function()
{
	var result;
	if (this.m_supportsUniqueHierarchyPath === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsUniqueHierarchyPath();
	}
	else
	{
		result = this.m_supportsUniqueHierarchyPath.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsMetadataDataCategory = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsMetadataDataCategory();
};
oFF.QCapabilitiesDecorator.prototype.supportsSortNewValues = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSortNewValues();
};
oFF.QCapabilitiesDecorator.prototype.supportsIgnoreUnitOfZeroValueInAggregation = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsIgnoreUnitOfZeroValueInAggregation();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingWithNSubqueries = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingWithNSubqueries();
};
oFF.QCapabilitiesDecorator.prototype.supportsRemoteBlendingWithSplittedSerializationRequests = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsRemoteBlendingWithSplittedSerializationRequests();
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedDimensionsChangeDefaultRenamingAndDescription = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedDimensionsChangeDefaultRenamingAndDescription();
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedDimensionsCopyAllHierarchies = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedDimensionsCopyAllHierarchies();
};
oFF.QCapabilitiesDecorator.prototype.supportsFixMetadataHierarchyAttributes = function()
{
	var result;
	if (this.m_supportsFixMetadataHierarchyAttributes === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsFixMetadataHierarchyAttributes();
	}
	else
	{
		result = this.m_supportsFixMetadataHierarchyAttributes.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsUniversalDisplayHierarchies = function()
{
	var result;
	if (this.m_supportsUniversalDisplayHierarchies === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsUniversalDisplayHierarchies();
	}
	else
	{
		result = this.m_supportsUniversalDisplayHierarchies.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsUniversalDisplayHierarchiesCustomDimensions = function()
{
	var result;
	if (this.m_supportsUniversalDisplayHierarchiesCustomDimensions === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsUniversalDisplayHierarchiesCustomDimensions();
	}
	else
	{
		result = this.m_supportsUniversalDisplayHierarchiesCustomDimensions.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsRemoteBlending = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsRemoteBlending();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeCache = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeCache();
};
oFF.QCapabilitiesDecorator.prototype.supportsCatalogServiceV2 = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCatalogServiceV2();
};
oFF.QCapabilitiesDecorator.prototype.supportsCustomSort = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCustomSort();
};
oFF.QCapabilitiesDecorator.prototype.supportsTuplesOperand = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsTuplesOperand();
};
oFF.QCapabilitiesDecorator.prototype.supportsRemoteBlendingBW = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsRemoteBlendingBW();
};
oFF.QCapabilitiesDecorator.prototype.supportsResultSetUnitIndex = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsResultSetUnitIndex();
};
oFF.QCapabilitiesDecorator.prototype.supportsCustomMeasureSortOrder = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCustomMeasureSortOrder();
};
oFF.QCapabilitiesDecorator.prototype.supportsComplexTupleFilter = function()
{
	var result;
	if (this.m_supportsComplexTupleFilter === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsComplexTupleFilter();
	}
	else
	{
		result = this.m_supportsComplexTupleFilter.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsNullFilter = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsNullFilter();
};
oFF.QCapabilitiesDecorator.prototype.supportsNormalizePercentageInterval = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsNormalizePercentageInterval();
};
oFF.QCapabilitiesDecorator.prototype.supportsExcludeNodeInComplexFilter = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExcludeNodeInComplexFilter();
};
oFF.QCapabilitiesDecorator.prototype.supportsSortDirectionForHierarchySortType = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSortDirectionForHierarchySortType();
};
oFF.QCapabilitiesDecorator.prototype.supportsServerSideSorts = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsServerSideSorts();
};
oFF.QCapabilitiesDecorator.prototype.supportsExcludeOnHierarchy = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExcludeOnHierarchy();
};
oFF.QCapabilitiesDecorator.prototype.supportsDefaultResultSetAttributes = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDefaultResultSetAttributes();
};
oFF.QCapabilitiesDecorator.prototype.supportsFilterStateInFirefly = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsFilterStateInFirefly();
};
oFF.QCapabilitiesDecorator.prototype.supportsMultipleFiltersOnSameDimension = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsMultipleFiltersOnSameDimension();
};
oFF.QCapabilitiesDecorator.prototype.supportsMultipleNonFlatFiltersOnHierarchy = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsMultipleNonFlatFiltersOnHierarchy();
};
oFF.QCapabilitiesDecorator.prototype.supportsDefaultMeasureAddedForClustering = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDefaultMeasureAddedForClustering();
};
oFF.QCapabilitiesDecorator.prototype.supportsRankForTopN = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsRankForTopN();
};
oFF.QCapabilitiesDecorator.prototype.supportsUpdatedOn = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsUpdatedOn();
};
oFF.QCapabilitiesDecorator.prototype.supportsUpdatedBy = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsUpdatedBy();
};
oFF.QCapabilitiesDecorator.prototype.supportsSourceName = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSourceName();
};
oFF.QCapabilitiesDecorator.prototype.supportsSourceDescription = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSourceDescription();
};
oFF.QCapabilitiesDecorator.prototype.supportsF4FilterForTextField = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsF4FilterForTextField();
};
oFF.QCapabilitiesDecorator.prototype.supportsSidPresentation = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSidPresentation();
};
oFF.QCapabilitiesDecorator.prototype.supportsExceptionAggregationAvgNullSelectionMember = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExceptionAggregationAvgNullSelectionMember();
};
oFF.QCapabilitiesDecorator.prototype.supportsExceptionAggregationCountNullSelectionMember = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExceptionAggregationCountNullSelectionMember();
};
oFF.QCapabilitiesDecorator.prototype.supportsStatisticalAggregations = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsStatisticalAggregations();
};
oFF.QCapabilitiesDecorator.prototype.supportsVarianceOperator = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsVarianceOperator();
};
oFF.QCapabilitiesDecorator.prototype.supportsTotalOperator = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsTotalOperator();
};
oFF.QCapabilitiesDecorator.prototype.supportsAsyncRemoteModelValidation = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsAsyncRemoteModelValidation();
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedKeyFigureProperties = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedKeyFigureProperties();
};
oFF.QCapabilitiesDecorator.prototype.supportsDetailedResponseExpansion = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDetailedResponseExpansion();
};
oFF.QCapabilitiesDecorator.prototype.supportsDynamicVariableRefresh = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDynamicVariableRefresh();
};
oFF.QCapabilitiesDecorator.prototype.supportsQueryCurrencyTranslation = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsQueryCurrencyTranslation();
};
oFF.QCapabilitiesDecorator.prototype.supportsCurrencyTranslation = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCurrencyTranslation();
};
oFF.QCapabilitiesDecorator.prototype.supportsMeasureMemberCurrencyTranslations = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsMeasureMemberCurrencyTranslations();
};
oFF.QCapabilitiesDecorator.prototype.supportsHierarchyRestNode = function()
{
	var result;
	if (this.m_supportsHierarchyRestNode === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsHierarchyRestNode();
	}
	else
	{
		result = this.m_supportsHierarchyRestNode.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsHierarchyVirtualRootNode = function()
{
	var result;
	if (this.m_supportsHierarchyVirtualRootNode === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsHierarchyVirtualRootNode();
	}
	else
	{
		result = this.m_supportsHierarchyVirtualRootNode.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsStructureRestrictionsInValueHelp = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsStructureRestrictionsInValueHelp();
};
oFF.QCapabilitiesDecorator.prototype.supportsSpatialChoropleth = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSpatialChoropleth();
};
oFF.QCapabilitiesDecorator.prototype.supportsCustomHierarchy = function()
{
	var result;
	if (this.m_supportsCustomHierarchy === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCustomHierarchy();
	}
	else
	{
		result = this.m_supportsCustomHierarchy.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsInaCurrentMember = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsInaCurrentMember();
};
oFF.QCapabilitiesDecorator.prototype.supportsDimensionDefaultMember = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDimensionDefaultMember();
};
oFF.QCapabilitiesDecorator.prototype.supportsDimensionVisibility = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDimensionVisibility();
};
oFF.QCapabilitiesDecorator.prototype.supportsDisplayHierarchyFixInFilter = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDisplayHierarchyFixInFilter();
};
oFF.QCapabilitiesDecorator.prototype.supportsCustomMemberKeySortOrder = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCustomMemberKeySortOrder();
};
oFF.QCapabilitiesDecorator.prototype.supportsCustomMemberKeySortOrderExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCustomMemberKeySortOrderExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedDimensionVisibility = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedDimensionVisibility();
};
oFF.QCapabilitiesDecorator.prototype.supportsDynamicTimeMeasure = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDynamicTimeMeasure();
};
oFF.QCapabilitiesDecorator.prototype.supportsConditionalResults = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsConditionalResults();
};
oFF.QCapabilitiesDecorator.prototype.supportsConditionalResultVisibility = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsConditionalResultVisibility();
};
oFF.QCapabilitiesDecorator.prototype.getSupportedResultAlignmentLevel = function()
{
	return oFF.isNull(this.m_parentCapabilities) ? oFF.QModelLevel.NONE : this.m_parentCapabilities.getSupportedResultAlignmentLevel();
};
oFF.QCapabilitiesDecorator.prototype.getSupportedResultVisibilityLevel = function()
{
	return oFF.isNull(this.m_parentCapabilities) ? oFF.QModelLevel.NONE : this.m_parentCapabilities.getSupportedResultVisibilityLevel();
};
oFF.QCapabilitiesDecorator.prototype.getResultStructureReorderingCapability = function()
{
	return oFF.isNull(this.m_parentCapabilities) ? oFF.ReorderingCapability.NONE : this.m_parentCapabilities.getResultStructureReorderingCapability();
};
oFF.QCapabilitiesDecorator.prototype.getSupportedResultAlignments = function()
{
	return oFF.isNull(this.m_parentCapabilities) ? null : this.m_parentCapabilities.getSupportedResultAlignments();
};
oFF.QCapabilitiesDecorator.prototype.supportsResultAlignmentType = function(resultAlignment)
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsResultAlignmentType(resultAlignment);
};
oFF.QCapabilitiesDecorator.prototype.getSupportedConditionalResults = function()
{
	return oFF.isNull(this.m_parentCapabilities) ? null : this.m_parentCapabilities.getSupportedConditionalResults();
};
oFF.QCapabilitiesDecorator.prototype.setSupportsComplexTupleFilter = function(supportsComplexTupleFilter)
{
	this.m_supportsComplexTupleFilter = oFF.TriStateBool.lookup(supportsComplexTupleFilter);
};
oFF.QCapabilitiesDecorator.prototype.supportsCalculatedDimensions = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCalculatedDimensions();
};
oFF.QCapabilitiesDecorator.prototype.supportsMeasureBasedVariance = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsMeasureBasedVariance();
};
oFF.QCapabilitiesDecorator.prototype.supportsVersionBasedVariance = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsVersionBasedVariance();
};
oFF.QCapabilitiesDecorator.prototype.supportsTimeBasedVariance = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsTimeBasedVariance();
};
oFF.QCapabilitiesDecorator.prototype.supportsTimeBasedVarianceWithNavigationAndExternalFilter = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsTimeBasedVarianceWithNavigationAndExternalFilter();
};
oFF.QCapabilitiesDecorator.prototype.supportsTimeBasedVarianceWithMultipleTime = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsTimeBasedVarianceWithMultipleTime();
};
oFF.QCapabilitiesDecorator.prototype.supportsTimeBasedVarianceShowAllLevels = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsTimeBasedVarianceShowAllLevels();
};
oFF.QCapabilitiesDecorator.prototype.supportsTimeBasedVarianceWithFilterClosureUnderDisplayDrill = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsTimeBasedVarianceWithFilterClosureUnderDisplayDrill();
};
oFF.QCapabilitiesDecorator.prototype.supportsTimeBasedVarianceWithNestedSelectionsOnTime = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsTimeBasedVarianceWithNestedSelectionsOnTime();
};
oFF.QCapabilitiesDecorator.prototype.supportsTimeBasedVarianceInBlending = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsTimeBasedVarianceInBlending();
};
oFF.QCapabilitiesDecorator.prototype.supportsHierarchyLevelDrilling = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsHierarchyLevelDrilling();
};
oFF.QCapabilitiesDecorator.prototype.supportsZeroSuppression = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsZeroSuppression();
};
oFF.QCapabilitiesDecorator.prototype.supportsResultSetInterval = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsResultSetInterval();
};
oFF.QCapabilitiesDecorator.prototype.supportsSetOperand = function()
{
	var result;
	if (this.m_supportsSetOperand === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSetOperand();
	}
	else
	{
		result = this.m_supportsSetOperand.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.setSupportsSetOperand = function(supportsSetOperand)
{
	this.m_supportsSetOperand = oFF.TriStateBool.lookup(supportsSetOperand);
};
oFF.QCapabilitiesDecorator.prototype.supportsConvertToFlatFilter = function()
{
	var result;
	if (this.m_supportsConvertToFlatFilter === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsConvertToFlatFilter();
	}
	else
	{
		result = this.m_supportsConvertToFlatFilter.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsSpatialFilter = function()
{
	var result;
	if (this.m_supportsSpatialFilter === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSpatialFilter();
	}
	else
	{
		result = this.m_supportsSpatialFilter.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsSpatialFilterSrid = function()
{
	var result;
	if (this.m_supportsSpatialFilterSrid === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSpatialFilterSrid();
	}
	else
	{
		result = this.m_supportsSpatialFilterSrid.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.setSupportsConvertToFlatFilter = function(supportsConvertToFlatFilter)
{
	this.m_supportsConvertToFlatFilter = oFF.TriStateBool.lookup(supportsConvertToFlatFilter);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsSpatialFilter = function(supportsSpatialFilter)
{
	this.m_supportsSpatialFilter = oFF.TriStateBool.lookup(supportsSpatialFilter);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsSpatialFilterSrid = function(supportsSpatialFilterSrid)
{
	this.m_supportsSpatialFilterSrid = oFF.TriStateBool.lookup(supportsSpatialFilterSrid);
};
oFF.QCapabilitiesDecorator.prototype.supportsCummulative = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCummulative();
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedDimensions = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedDimensions();
};
oFF.QCapabilitiesDecorator.prototype.supportsHierarchyNavCounter = function()
{
	var result;
	if (this.m_supportsHierNavCounter === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsHierarchyNavCounter();
	}
	else
	{
		result = this.m_supportsHierNavCounter.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsHierarchyAttHierFields = function()
{
	var result;
	if (this.m_supportsHierAttHierFields === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsHierarchyAttHierFields();
	}
	else
	{
		result = this.m_supportsHierAttHierFields.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsHierarchyCarryingDim = function()
{
	var result;
	if (this.m_supportsHierCarryingDim === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsHierarchyCarryingDim();
	}
	else
	{
		result = this.m_supportsHierCarryingDim.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsSapDate = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSapDate();
};
oFF.QCapabilitiesDecorator.prototype.supportsCustomDimensionMemberExecutionStep = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCustomDimensionMemberExecutionStep();
};
oFF.QCapabilitiesDecorator.prototype.supportsNumberAsString = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsNumberAsString();
};
oFF.QCapabilitiesDecorator.prototype.supportsSupplements = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSupplements();
};
oFF.QCapabilitiesDecorator.prototype.supportsSuppressSupplements = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSuppressSupplements();
};
oFF.QCapabilitiesDecorator.prototype.supportsFixHierarchyFlatKeys = function()
{
	var result;
	if (this.m_supportsFixHierarchyFlagKeys === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsFixHierarchyFlatKeys();
	}
	else
	{
		result = this.m_supportsFixHierarchyFlagKeys.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsAggregationNopNull = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsAggregationNopNull();
};
oFF.QCapabilitiesDecorator.prototype.supportsAggregationNopNullZero = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsAggregationNopNullZero();
};
oFF.QCapabilitiesDecorator.prototype.supportsPlanningOnCalculatedDimensions = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsPlanningOnCalculatedDimensions();
};
oFF.QCapabilitiesDecorator.prototype.supportsCustomDimension2 = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCustomDimension2();
};
oFF.QCapabilitiesDecorator.prototype.supportsWindowFunctions = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsWindowFunctions();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingAggregation = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingAggregation();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingSorting = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingSorting();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingReadmode = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingReadmode();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingCustomMember = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingCustomMember();
};
oFF.QCapabilitiesDecorator.prototype.supportsCurrentMemberFilterExtension = function()
{
	var result;
	if (this.m_supportsCurrentMemberFilterExtension === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCurrentMemberFilterExtension();
	}
	else
	{
		result = this.m_supportsCurrentMemberFilterExtension.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsSetOperandCurrentMemberSingleNavigation = function()
{
	var result;
	if (this.m_supportsSetOperandCurrentMemberSingleNavigation === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSetOperandCurrentMemberSingleNavigation();
	}
	else
	{
		result = this.m_supportsSetOperandCurrentMemberSingleNavigation.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.setSupportsCurrentMemberFilterExtension = function(supportsCurrentMemberFilterExtension)
{
	this.m_supportsCurrentMemberFilterExtension = oFF.TriStateBool.lookup(supportsCurrentMemberFilterExtension);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsSetOperandCurrentMemberSingleNavigation = function(supportsSetOperandCurrentMemberSingleNavigation)
{
	this.m_supportsSetOperandCurrentMemberSingleNavigation = oFF.TriStateBool.lookup(supportsSetOperandCurrentMemberSingleNavigation);
};
oFF.QCapabilitiesDecorator.prototype.supportsClientInfo = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsClientInfo();
};
oFF.QCapabilitiesDecorator.prototype.supportsUniversalDisplayHierarchiesZeroBased = function()
{
	var result;
	if (this.m_supportsUniversalDisplayHierarchiesZeroBased === oFF.TriStateBool._DEFAULT)
	{
		result = oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsUniversalDisplayHierarchiesZeroBased();
	}
	else
	{
		result = this.m_supportsUniversalDisplayHierarchiesZeroBased.getBoolean();
	}
	return result;
};
oFF.QCapabilitiesDecorator.prototype.supportsRemoteFilter = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsRemoteFilter();
};
oFF.QCapabilitiesDecorator.prototype.supportsDynamicRestrictionOnFormula = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDynamicRestrictionOnFormula();
};
oFF.QCapabilitiesDecorator.prototype.supportsVisualAggregation = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsVisualAggregation();
};
oFF.QCapabilitiesDecorator.prototype.supportsNamedCustomMember = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsNamedCustomMember();
};
oFF.QCapabilitiesDecorator.prototype.supportsSuppressKeyfigureCalculation = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSuppressKeyfigureCalculation();
};
oFF.QCapabilitiesDecorator.prototype.supportsRequestTimezone = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsRequestTimezone();
};
oFF.QCapabilitiesDecorator.prototype.supportsMultiSource = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsMultiSource();
};
oFF.QCapabilitiesDecorator.prototype.supportsVirtualDescription = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsVirtualDescription();
};
oFF.QCapabilitiesDecorator.prototype.supportsCorrectDimensionDescription = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCorrectDimensionDescription();
};
oFF.QCapabilitiesDecorator.prototype.supportsCorrectDimensionDescriptionExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCorrectDimensionDescriptionExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsRSCellFormatTypeSpecific = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsRSCellFormatTypeSpecific();
};
oFF.QCapabilitiesDecorator.prototype.supportsMetadataDimensionOthers = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsMetadataDimensionOthers();
};
oFF.QCapabilitiesDecorator.prototype.supportsMeasureMemberDefinition = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsMeasureMemberDefinition();
};
oFF.QCapabilitiesDecorator.prototype.supportsMeasureMemberDetails = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsMeasureMemberDetails();
};
oFF.QCapabilitiesDecorator.prototype.supportsMeasureMemberType = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsMeasureMemberType();
};
oFF.QCapabilitiesDecorator.prototype.supportsCustomMeasuresInMetadata = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCustomMeasuresInMetadata();
};
oFF.QCapabilitiesDecorator.prototype.supportsValueHelpWithAttributes = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsValueHelpWithAttributes();
};
oFF.QCapabilitiesDecorator.prototype.supportsReportReportInterface = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsReportReportInterface();
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedDimensionsFieldMapping = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedDimensionsFieldMapping();
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedDimensionsJoinColumns = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedDimensionsJoinColumns();
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedDimensionsOuterJoin = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedDimensionsOuterJoin();
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedDimensionsSkip = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedDimensionsSkip();
};
oFF.QCapabilitiesDecorator.prototype.supportsResultSetHierarchyLevel = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsResultSetHierarchyLevel();
};
oFF.QCapabilitiesDecorator.prototype.supportsQueryDataCellModelDefaults = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsQueryDataCellModelDefaults();
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedDimensionsJoinCardinality = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedDimensionsJoinCardinality();
};
oFF.QCapabilitiesDecorator.prototype.supportsVariableVariants = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsVariableVariants();
};
oFF.QCapabilitiesDecorator.prototype.supportsFunctionalValueHelp = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsFunctionalValueHelp();
};
oFF.QCapabilitiesDecorator.prototype.supportsExplicitDrillOnFilteredNodes = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExplicitDrillOnFilteredNodes();
};
oFF.QCapabilitiesDecorator.prototype.supportsLowerLevelNodeAlignment = function(alignment)
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsLowerLevelNodeAlignment(alignment);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsCustomHierarchy = function(supportsCustomHierarchy)
{
	this.m_supportsCustomHierarchy = oFF.TriStateBool.lookup(supportsCustomHierarchy);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsDimensionHierarchyLevels = function(supportsDimensionHierarchyLevels)
{
	this.m_supportsDimensionHierarchyLevels = oFF.TriStateBool.lookup(supportsDimensionHierarchyLevels);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsExpandBottomUp = function(supportsExpandBottomUp)
{
	this.m_supportsExpandBottomUp = oFF.TriStateBool.lookup(supportsExpandBottomUp);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsFixHierarchyFlatKeys = function(supportsFixHierarchyFlatKeys)
{
	this.m_supportsFixHierarchyFlagKeys = oFF.TriStateBool.lookup(supportsFixHierarchyFlatKeys);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsFixMetadataHierarchyAttributes = function(supportsFixMetadataHierarchyAttributes)
{
	this.m_supportsFixMetadataHierarchyAttributes = oFF.TriStateBool.lookup(supportsFixMetadataHierarchyAttributes);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsHierarchyAttHierFields = function(supportsHierAttHierFields)
{
	this.m_supportsHierAttHierFields = oFF.TriStateBool.lookup(supportsHierAttHierFields);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsHierarchyCarryingDim = function(supportsHierCarryingDim)
{
	this.m_supportsHierCarryingDim = oFF.TriStateBool.lookup(supportsHierCarryingDim);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsHierarchyLevelMetadata = function(supportsHierarchyLevelMetadata)
{
	this.m_supportsHierarchyLevelMetadata = oFF.TriStateBool.lookup(supportsHierarchyLevelMetadata);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsHierarchyMetadata = function(supportsHierarchyMetadata)
{
	this.m_supportsHierarchyMetadata = oFF.TriStateBool.lookup(supportsHierarchyMetadata);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsHierarchyNavCounter = function(supportsHierarchyNavCounter)
{
	this.m_supportsHierNavCounter = oFF.TriStateBool.lookup(supportsHierarchyNavCounter);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsHierarchyNavigationDeltaMode = function(supportsHierarchyNavigationDeltaMode)
{
	this.m_supportsHierarchyNavigationDeltaMode = oFF.TriStateBool.lookup(supportsHierarchyNavigationDeltaMode);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsHierarchyRestNode = function(supportsHierarchyRestNode)
{
	this.m_supportsHierarchyRestNode = oFF.TriStateBool.lookup(supportsHierarchyRestNode);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsHierarchyVirtualRootNode = function(supportsHierarchyVirtualRootNode)
{
	this.m_supportsHierarchyVirtualRootNode = oFF.TriStateBool.lookup(supportsHierarchyVirtualRootNode);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsHierarchyPath = function(supportsHierarchyPath)
{
	this.m_supportsHierarchyPath = oFF.TriStateBool.lookup(supportsHierarchyPath);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsUniqueHierarchyPath = function(supportsUniqueHierarchyPath)
{
	this.m_supportsUniqueHierarchyPath = oFF.TriStateBool.lookup(supportsUniqueHierarchyPath);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsUniversalDisplayHierarchies = function(supportsUniversalDisplayHierarchies)
{
	this.m_supportsUniversalDisplayHierarchies = oFF.TriStateBool.lookup(supportsUniversalDisplayHierarchies);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsUniversalDisplayHierarchiesCustomDimensions = function(supportsUniversalDisplayHierarchiesCustomDimensions)
{
	this.m_supportsUniversalDisplayHierarchiesCustomDimensions = oFF.TriStateBool.lookup(supportsUniversalDisplayHierarchiesCustomDimensions);
};
oFF.QCapabilitiesDecorator.prototype.setSupportsUniversalDisplayHierarchiesZeroBased = function(supportsUniversalDisplayHierarchiesZeroBased)
{
	this.m_supportsUniversalDisplayHierarchiesZeroBased = oFF.TriStateBool.lookup(supportsUniversalDisplayHierarchiesZeroBased);
};
oFF.QCapabilitiesDecorator.prototype.supportsUniversalModel = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsUniversalModel();
};
oFF.QCapabilitiesDecorator.prototype.supportsTechnicalAxis = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsTechnicalAxis();
};
oFF.QCapabilitiesDecorator.prototype.supportsFilteringAcrossModels = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsFilteringAcrossModels();
};
oFF.QCapabilitiesDecorator.prototype.supportsPrequeryBasedFilteringAcrossModels = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsPrequeryBasedFilteringAcrossModels();
};
oFF.QCapabilitiesDecorator.prototype.supportsPrequeryBasedFilteringAcrossModelsExt = function(other)
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsPrequeryBasedFilteringAcrossModelsExt(other);
};
oFF.QCapabilitiesDecorator.prototype.supportsFilterMeasureBased = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsFilterMeasureBased();
};
oFF.QCapabilitiesDecorator.prototype.supportsRootOrphansAfterVisibilityFilter = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsRootOrphansAfterVisibilityFilter();
};
oFF.QCapabilitiesDecorator.prototype.supportsExceptionAggregationFirstLastSelectionMember = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExceptionAggregationFirstLastSelectionMember();
};
oFF.QCapabilitiesDecorator.prototype.supportsResultSetCellExplain = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsResultSetCellExplain();
};
oFF.QCapabilitiesDecorator.prototype.supportsInputReadinessWithNavigationalAttributes = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsInputReadinessWithNavigationalAttributes();
};
oFF.QCapabilitiesDecorator.prototype.supportsIteratedFormula = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsIteratedFormula();
};
oFF.QCapabilitiesDecorator.prototype.supportsSortType = function(sortType)
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSortType(sortType);
};
oFF.QCapabilitiesDecorator.prototype.supportsBreakGrouping = function(sortType)
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsBreakGrouping(sortType);
};
oFF.QCapabilitiesDecorator.prototype.supportsPreserveGrouping = function(sortType)
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsPreserveGrouping(sortType);
};
oFF.QCapabilitiesDecorator.prototype.supportsDimensionSorting = function(dimension, sortType)
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDimensionSorting(dimension, sortType);
};
oFF.QCapabilitiesDecorator.prototype.supportsFieldSorting = function(field)
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsFieldSorting(field);
};
oFF.QCapabilitiesDecorator.prototype.supportsDataCellSorting = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDataCellSorting();
};
oFF.QCapabilitiesDecorator.prototype.supportsComplexSorting = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsComplexSorting();
};
oFF.QCapabilitiesDecorator.prototype.supportsMeasureSorting = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsMeasureSorting();
};
oFF.QCapabilitiesDecorator.prototype.supportsAttributeValueLookupExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsAttributeValueLookupExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsCellValueOperandExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCellValueOperandExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsIgnoreExternalDimensionsExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsIgnoreExternalDimensionsExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsSetOperandCurrentMemberSingleNavigationExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsSetOperandCurrentMemberSingleNavigationExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsCurrentMemberFilterExtensionExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCurrentMemberFilterExtensionExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsExceptionAggregationDimsFormulasExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExceptionAggregationDimsFormulasExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingPropertiesExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingPropertiesExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingSortingExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingSortingExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingCustomMemberExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingCustomMemberExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingReadmodeExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingReadmodeExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingOutOfContextExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingOutOfContextExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsCubeBlendingAggregationExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCubeBlendingAggregationExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsExceptionSettingsExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExceptionSettingsExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsAggregationNopNullExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsAggregationNopNullExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsAggregationNopNullZeroExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsAggregationNopNullZeroExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsMultipleExAggDimsInCalcPlanExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsMultipleExAggDimsInCalcPlanExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedDimensionsChangeDefaultRenamingAndDescriptionExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedDimensionsChangeDefaultRenamingAndDescriptionExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsExtendedDimensionsCopyAllHierarchiesExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExtendedDimensionsCopyAllHierarchiesExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsFixMetadataHierarchyAttributesExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsFixMetadataHierarchyAttributesExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsRemoteBlendingExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsRemoteBlendingExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsCalculatedDimensionsExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCalculatedDimensionsExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsPlanningOnCalculatedDimensionsExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsPlanningOnCalculatedDimensionsExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsCustomDimension2Ext = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCustomDimension2Ext();
};
oFF.QCapabilitiesDecorator.prototype.supportsResultSetUnitIndexExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsResultSetUnitIndexExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsExceptionAggregationCountNullSelectionMemberExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExceptionAggregationCountNullSelectionMemberExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsExceptionAggregationAvgNullSelectionMemberExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExceptionAggregationAvgNullSelectionMemberExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsExceptionAggregationFirstLastSelectionMemberExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExceptionAggregationFirstLastSelectionMemberExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsExceptionAggregationOnSelectionExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsExceptionAggregationOnSelectionExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsRestrictedMeasureDynamicTimeExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsRestrictedMeasureDynamicTimeExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsDifferenceFromCalculationExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDifferenceFromCalculationExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsDimensionToMeasureCalculationExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDimensionToMeasureCalculationExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsRemoteFilterExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsRemoteFilterExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsStatisticalAggregationsExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsStatisticalAggregationsExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsResultSetCellExplainExt = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsResultSetCellExplainExt();
};
oFF.QCapabilitiesDecorator.prototype.supportsCompoundGrowthRate = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCompoundGrowthRate();
};
oFF.QCapabilitiesDecorator.prototype.supportsNullZeroSuppression = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsNullZeroSuppression();
};
oFF.QCapabilitiesDecorator.prototype.supportsCDSProjectionViews = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCDSProjectionViews();
};
oFF.QCapabilitiesDecorator.prototype.supportsCellDocumentId = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsCellDocumentId();
};
oFF.QCapabilitiesDecorator.prototype.supportsAutoVariableSubmit = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsAutoVariableSubmit();
};
oFF.QCapabilitiesDecorator.prototype.supportsDimensionKeyAttributes = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsDimensionKeyAttributes();
};
oFF.QCapabilitiesDecorator.prototype.supportsHierarchyPathPresentationType = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsHierarchyPathPresentationType();
};
oFF.QCapabilitiesDecorator.prototype.supportsUndefinedTupleCountTotals = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsUndefinedTupleCountTotals();
};
oFF.QCapabilitiesDecorator.prototype.supportsTextInHierarchyForCharacteristicsWithoutText = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsTextInHierarchyForCharacteristicsWithoutText();
};
oFF.QCapabilitiesDecorator.prototype.supportsPagingTupleCountBeforeSlicing = function()
{
	return oFF.notNull(this.m_parentCapabilities) && this.m_parentCapabilities.supportsPagingTupleCountBeforeSlicing();
};

oFF.XCommand = function() {};
oFF.XCommand.prototype = new oFF.XObject();
oFF.XCommand.prototype._ff_c = "XCommand";

oFF.XCommand.prototype.m_commandContext = null;
oFF.XCommand.prototype.m_final = false;
oFF.XCommand.prototype.m_parameters = null;
oFF.XCommand.prototype.m_followUpCommands = null;
oFF.XCommand.prototype.m_followUpCommandParameterMappings = null;
oFF.XCommand.prototype.getCommandContext = function()
{
	return this.m_commandContext;
};
oFF.XCommand.prototype.setupCommand = function(commandContext)
{
	this.m_commandContext = commandContext;
	this.m_final = false;
	this.m_parameters = oFF.XHashMapByString.create();
	this.m_followUpCommands = oFF.XHashMapByString.create();
	this.m_followUpCommandParameterMappings = oFF.XHashMapByString.create();
};
oFF.XCommand.prototype.releaseObject = function()
{
	this.m_parameters = oFF.XObjectExt.release(this.m_parameters);
	this.m_followUpCommands = oFF.XObjectExt.release(this.m_followUpCommands);
	this.m_followUpCommandParameterMappings = oFF.XObjectExt.release(this.m_followUpCommandParameterMappings);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.XCommand.prototype.addParameter = function(parameterName, parameterValue)
{
	this.assertFinal(false);
	oFF.XStringUtils.checkStringNotEmpty(parameterName, "illegal parameter name");
	this.m_parameters.put(parameterName, parameterValue);
	return this;
};
oFF.XCommand.prototype.getParameter = function(parameterName)
{
	oFF.XStringUtils.checkStringNotEmpty(parameterName, "illegal parameter name");
	return this.m_parameters.getByKey(parameterName);
};
oFF.XCommand.prototype.addParameterString = function(parameterName, parameterValue)
{
	return this.addParameter(parameterName, oFF.XStringValue.create(parameterValue));
};
oFF.XCommand.prototype.addParameterBoolean = function(parameterName, parameterValue)
{
	return this.addParameter(parameterName, oFF.XBooleanValue.create(parameterValue));
};
oFF.XCommand.prototype.addParameterInteger = function(parameterName, parameterValue)
{
	return this.addParameter(parameterName, oFF.XIntegerValue.create(parameterValue));
};
oFF.XCommand.prototype.assertFinal = function(shouldBeFinal)
{
	if (this.m_final !== shouldBeFinal)
	{
		throw oFF.XException.createIllegalStateException("final");
	}
};
oFF.XCommand.prototype.setFollowUpCommand = function(followUpType, command)
{
	this.assertFinal(false);
	if (oFF.isNull(command))
	{
		this.m_followUpCommands.remove(followUpType.getName());
	}
	else
	{
		this.m_followUpCommands.put(followUpType.getName(), command);
	}
	return this;
};
oFF.XCommand.prototype.getFollowUpCommand = function(followUpType)
{
	return this.m_followUpCommands.getByKey(followUpType.getName());
};
oFF.XCommand.prototype.setFollowUpCommandParameterMapping = function(followUpType, followUpParameterName, resultParameterName)
{
	this.assertFinal(false);
	oFF.XStringUtils.checkStringNotEmpty(followUpParameterName, "illegal parameter name");
	var deleteParameter = oFF.XStringUtils.isNullOrEmpty(resultParameterName);
	var parameterMappings = this.m_followUpCommandParameterMappings.getByKey(followUpType.getName());
	if (oFF.isNull(parameterMappings))
	{
		if (!deleteParameter)
		{
			parameterMappings = oFF.XHashMapOfStringByString.create();
			this.m_followUpCommandParameterMappings.put(followUpType.getName(), parameterMappings);
			parameterMappings.put(followUpParameterName, resultParameterName);
		}
	}
	else
	{
		if (deleteParameter)
		{
			parameterMappings.remove(followUpParameterName);
			if (parameterMappings.isEmpty())
			{
				this.m_followUpCommandParameterMappings.remove(followUpType.getName());
			}
		}
		else
		{
			parameterMappings.put(followUpParameterName, resultParameterName);
		}
	}
	return this;
};
oFF.XCommand.prototype.getFollowUpParameterMappings = function(followUpType)
{
	this.assertFinal(true);
	return this.m_followUpCommandParameterMappings.getByKey(followUpType.getName());
};
oFF.XCommand.prototype.processCommand = function(syncType, commandListener, customIdentifier)
{
	this.m_final = true;
	var commandResultClass = this.getCommandResultClass();
	var newInstance = commandResultClass.newInstance(this);
	var commandResult = newInstance;
	return commandResult.processCommand(this, syncType, commandListener, customIdentifier);
};

oFF.XCommandResult = function() {};
oFF.XCommandResult.prototype = new oFF.XObject();
oFF.XCommandResult.prototype._ff_c = "XCommandResult";

oFF.XCommandResult.prototype.m_command = null;
oFF.XCommandResult.prototype.m_syncType = null;
oFF.XCommandResult.prototype.m_commandListener = null;
oFF.XCommandResult.prototype.m_customIdentifier = null;
oFF.XCommandResult.prototype.m_messageManager = null;
oFF.XCommandResult.prototype.m_extResult = null;
oFF.XCommandResult.prototype.m_resultParameters = null;
oFF.XCommandResult.prototype.m_processFinished = false;
oFF.XCommandResult.prototype.m_followUpFinished = false;
oFF.XCommandResult.prototype.m_followUpCommandsSize = 0;
oFF.XCommandResult.prototype.m_followUpCommandsProcessed = 0;
oFF.XCommandResult.prototype.m_followUpCommandResults = null;
oFF.XCommandResult.prototype.getCommand = function()
{
	return this.m_command;
};
oFF.XCommandResult.prototype.getCommandBase = function()
{
	return this.m_command;
};
oFF.XCommandResult.prototype.getMessageManager = function()
{
	return this.m_messageManager;
};
oFF.XCommandResult.prototype.getSyncType = function()
{
	return this.m_syncType;
};
oFF.XCommandResult.prototype.processCommand = function(command, syncType, commandListener, customIdentifier)
{
	this.m_command = command;
	this.m_syncType = syncType;
	this.m_commandListener = commandListener;
	this.m_customIdentifier = customIdentifier;
	this.m_messageManager = oFF.MessageManagerSimple.createMessageManager();
	this.m_extResult = oFF.ExtResult.createWithExternalMessages(this, this.m_messageManager);
	this.m_resultParameters = oFF.XHashMapByString.create();
	this.m_followUpCommandResults = oFF.XHashMapByString.create();
	this.m_processFinished = false;
	this.m_followUpFinished = false;
	this.m_followUpCommandsSize = 0;
	this.m_followUpCommandsProcessed = 0;
	this.process();
	return this.m_extResult;
};
oFF.XCommandResult.prototype.releaseObject = function()
{
	this.m_command = null;
	this.m_syncType = null;
	this.m_commandListener = null;
	this.m_customIdentifier = null;
	this.m_messageManager = oFF.XObjectExt.release(this.m_messageManager);
	this.m_extResult = oFF.XObjectExt.release(this.m_extResult);
	this.m_resultParameters = oFF.XObjectExt.release(this.m_resultParameters);
	this.m_followUpCommandResults = oFF.XObjectExt.release(this.m_followUpCommandResults);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.XCommandResult.prototype.onProcessFinished = function()
{
	this.m_processFinished = true;
	var followUpTypesToProcess = this.getFollowUpTypesToProcess();
	this.m_followUpCommandsSize = followUpTypesToProcess.size();
	if (this.m_followUpCommandsSize > 0)
	{
		this.processFollowUpCommands(followUpTypesToProcess);
	}
	else
	{
		this.m_followUpFinished = true;
		this.onNotifyListener();
	}
};
oFF.XCommandResult.prototype.getFollowUpTypesToProcess = function()
{
	this.assertProcessFinished(true);
	this.assertFollowUpFinished(false);
	var followUpTypes = oFF.XList.create();
	if (this.getFollowUpCommand(oFF.XCommandFollowUpType.ALWAYS) !== null)
	{
		followUpTypes.add(oFF.XCommandFollowUpType.ALWAYS);
	}
	if (this.getMessageManager().hasErrors())
	{
		if (this.getFollowUpCommand(oFF.XCommandFollowUpType.ERROR) !== null)
		{
			followUpTypes.add(oFF.XCommandFollowUpType.ERROR);
		}
	}
	else
	{
		if (this.getFollowUpCommand(oFF.XCommandFollowUpType.SUCCESS) !== null)
		{
			followUpTypes.add(oFF.XCommandFollowUpType.SUCCESS);
		}
	}
	return followUpTypes;
};
oFF.XCommandResult.prototype.processFollowUpCommands = function(followUpTypesToProcess)
{
	for (var typesIndex = 0; typesIndex < followUpTypesToProcess.size(); typesIndex++)
	{
		var followUpType = followUpTypesToProcess.get(typesIndex);
		var followUpCommand = this.getFollowUpCommand(followUpType);
		var parameterValuesEffective = this.getFollowUpParameterValuesEffective(followUpType);
		if (oFF.notNull(parameterValuesEffective))
		{
			var parameterNames = parameterValuesEffective.getKeysAsReadOnlyListOfString();
			for (var namesIndex = 0; namesIndex < parameterNames.size(); namesIndex++)
			{
				var parameterName = parameterNames.get(namesIndex);
				var parameterValue = parameterValuesEffective.getByKey(parameterName);
				followUpCommand.addParameter(parameterName, parameterValue);
			}
		}
		followUpCommand.processCommand(this.getSyncType(), this, followUpType);
	}
};
oFF.XCommandResult.prototype.onNotifyListener = function()
{
	if (oFF.notNull(this.m_commandListener))
	{
		this.m_commandListener.onCommandProcessed(this.m_extResult, this, this.m_customIdentifier);
	}
};
oFF.XCommandResult.prototype.assertProcessFinished = function(shouldBeFinished)
{
	if (this.m_processFinished !== shouldBeFinished)
	{
		throw oFF.XException.createIllegalStateException("Processing state is not as expected");
	}
};
oFF.XCommandResult.prototype.assertFollowUpFinished = function(shouldBeFinished)
{
	if (this.m_followUpFinished !== shouldBeFinished)
	{
		throw oFF.XException.createIllegalStateException("FollowUp state is not as expected");
	}
};
oFF.XCommandResult.prototype.addResultParameter = function(parameterName, parameterValue)
{
	this.assertProcessFinished(false);
	oFF.XStringUtils.checkStringNotEmpty(parameterName, "illegal parameter name");
	this.m_resultParameters.put(parameterName, parameterValue);
	return this;
};
oFF.XCommandResult.prototype.getResultParameter = function(parameterName)
{
	this.assertProcessFinished(true);
	oFF.XStringUtils.checkStringNotEmpty(parameterName, "illegal parameter name");
	return this.m_resultParameters.getByKey(parameterName);
};
oFF.XCommandResult.prototype.addFollowUpCommandResult = function(followUpType, commandResult)
{
	this.assertFollowUpFinished(false);
	if (oFF.isNull(commandResult))
	{
		this.m_followUpCommandResults.remove(followUpType.getName());
	}
	else
	{
		this.m_followUpCommandResults.put(followUpType.getName(), commandResult);
	}
};
oFF.XCommandResult.prototype.getFollowUpCommandResult = function(followUpType)
{
	this.assertFollowUpFinished(true);
	return this.m_followUpCommandResults.getByKey(followUpType.getName());
};
oFF.XCommandResult.prototype.getParameterStrict = function(parameterName)
{
	var parameterValue = this.getCommandBase().getParameter(parameterName);
	oFF.XObjectExt.assertNotNullExt(parameterValue, "parameter null");
	return parameterValue;
};
oFF.XCommandResult.prototype.getParameter = function(parameterName)
{
	var parameterValue = this.getCommandBase().getParameter(parameterName);
	if (oFF.isNull(parameterValue))
	{
		return null;
	}
	return parameterValue;
};
oFF.XCommandResult.prototype.getParameterStringStrict = function(parameterName)
{
	var parameterValue = this.getCommandBase().getParameter(parameterName);
	oFF.XObjectExt.assertNotNullExt(parameterValue, "parameter null");
	return parameterValue.getString();
};
oFF.XCommandResult.prototype.getParameterString = function(parameterName)
{
	var parameterValue = this.getCommandBase().getParameter(parameterName);
	if (oFF.isNull(parameterValue))
	{
		return null;
	}
	return parameterValue.getString();
};
oFF.XCommandResult.prototype.getFollowUpCommand = function(followUpType)
{
	return this.getCommandBase().getFollowUpCommand(followUpType);
};
oFF.XCommandResult.prototype.getFollowUpParameterValuesEffective = function(followUpType)
{
	this.assertProcessFinished(true);
	var resultParameterValues = null;
	var parameterMappings = this.getCommandBase().getFollowUpParameterMappings(followUpType);
	if (oFF.notNull(parameterMappings))
	{
		var mappingKeys = parameterMappings.getKeysAsReadOnlyListOfString();
		for (var mappingIndex = 0; mappingIndex < mappingKeys.size(); mappingIndex++)
		{
			var targetParameterName = mappingKeys.get(mappingIndex);
			var sourceParameterName = parameterMappings.getByKey(targetParameterName);
			var sourceResultValue = this.getResultParameter(sourceParameterName);
			if (oFF.notNull(sourceResultValue))
			{
				if (oFF.isNull(resultParameterValues))
				{
					resultParameterValues = oFF.XHashMapByString.create();
				}
				resultParameterValues.put(targetParameterName, sourceResultValue);
			}
		}
	}
	return resultParameterValues;
};
oFF.XCommandResult.prototype.onCommandProcessed = function(extResult, commandResult, customIdentifier)
{
	this.assertFollowUpFinished(false);
	if (this.m_followUpCommandsProcessed >= this.m_followUpCommandsSize)
	{
		throw oFF.XException.createIllegalStateException("internal error");
	}
	oFF.MessageUtil.checkNoError(extResult);
	var followUpType = customIdentifier;
	this.addFollowUpCommandResult(followUpType, commandResult);
	this.m_followUpCommandsProcessed++;
	if (this.m_followUpCommandsProcessed === this.m_followUpCommandsSize)
	{
		this.m_followUpFinished = true;
		this.onNotifyListener();
	}
};

oFF.QCmdContextOlapFactory = function() {};
oFF.QCmdContextOlapFactory.prototype = new oFF.QCmdContextFactory();
oFF.QCmdContextOlapFactory.prototype._ff_c = "QCmdContextOlapFactory";

oFF.QCmdContextOlapFactory.staticSetupOlapFactory = function()
{
	var factory = new oFF.QCmdContextOlapFactory();
	oFF.QCmdContextFactory.register(factory);
};
oFF.QCmdContextOlapFactory.prototype.newCmdContext = function(olapApplication, component)
{
	var olapComponentType = component.getComponentType();
	if (olapComponentType === oFF.OlapComponentType.QUERY_MODEL || olapComponentType === oFF.OlapComponentType.QUERY_MANAGER || olapComponentType === oFF.OlapComponentType.QUERY_SERVICE_CONFIG)
	{
		return oFF.QConvenienceCommands.create(olapApplication, component);
	}
	return null;
};

oFF.QCurrencyObject = function() {};
oFF.QCurrencyObject.prototype = new oFF.XObject();
oFF.QCurrencyObject.prototype._ff_c = "QCurrencyObject";

oFF.QCurrencyObject.create = function(name, text)
{
	var result = new oFF.QCurrencyObject();
	result.setName(name);
	result.setText(text);
	return result;
};
oFF.QCurrencyObject.prototype.m_name = null;
oFF.QCurrencyObject.prototype.m_text = null;
oFF.QCurrencyObject.prototype.getName = function()
{
	return this.m_name;
};
oFF.QCurrencyObject.prototype.setName = function(name)
{
	this.m_name = name;
};
oFF.QCurrencyObject.prototype.getText = function()
{
	return this.m_text;
};
oFF.QCurrencyObject.prototype.setText = function(text)
{
	this.m_text = text;
};

oFF.QMeasureHelpMetadataSelector = function() {};
oFF.QMeasureHelpMetadataSelector.prototype = new oFF.XObject();
oFF.QMeasureHelpMetadataSelector.prototype._ff_c = "QMeasureHelpMetadataSelector";

oFF.QMeasureHelpMetadataSelector.createMeasureHelpMetadataSelector = function()
{
	return new oFF.QMeasureHelpMetadataSelector();
};
oFF.QMeasureHelpMetadataSelector.prototype.m_numericScale = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_numericPrecision = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_numericShift = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_unitType = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_unitFixed = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_unitName = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_unitTextName = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_dataType = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_rateType = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_unitDimensionName = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_unitDimensionProperty = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_dataTypePrecision = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_dataTypeScale = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_dataTypeInternal = null;
oFF.QMeasureHelpMetadataSelector.prototype.m_measureType = null;
oFF.QMeasureHelpMetadataSelector.prototype.releaseObject = function()
{
	this.m_numericScale = oFF.XObjectExt.release(this.m_numericScale);
	this.m_numericPrecision = oFF.XObjectExt.release(this.m_numericPrecision);
	this.m_numericShift = oFF.XObjectExt.release(this.m_numericShift);
	this.m_dataTypeScale = oFF.XObjectExt.release(this.m_dataTypeScale);
	this.m_dataTypePrecision = oFF.XObjectExt.release(this.m_dataTypePrecision);
	this.m_unitType = null;
	this.m_unitFixed = null;
	this.m_unitName = null;
	this.m_unitTextName = null;
	this.m_dataType = null;
	this.m_dataTypeInternal = null;
	this.m_rateType = null;
	this.m_unitDimensionName = null;
	this.m_unitDimensionProperty = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QMeasureHelpMetadataSelector.prototype.getNumericScale = function()
{
	return this.m_numericScale;
};
oFF.QMeasureHelpMetadataSelector.prototype.setNumericScale = function(scale)
{
	this.m_numericScale = oFF.XIntegerValue.create(scale);
};
oFF.QMeasureHelpMetadataSelector.prototype.getMeasureType = function()
{
	return this.m_measureType;
};
oFF.QMeasureHelpMetadataSelector.prototype.getNumericPrecision = function()
{
	return this.m_numericPrecision;
};
oFF.QMeasureHelpMetadataSelector.prototype.setMeasureType = function(measureType)
{
	this.m_measureType = measureType;
};
oFF.QMeasureHelpMetadataSelector.prototype.resetNumericPrecision = function()
{
	this.m_numericPrecision = null;
};
oFF.QMeasureHelpMetadataSelector.prototype.resetNumericScale = function()
{
	this.m_numericScale = null;
};
oFF.QMeasureHelpMetadataSelector.prototype.resetNumericShift = function()
{
	this.m_numericShift = null;
};
oFF.QMeasureHelpMetadataSelector.prototype.setNumericPrecision = function(precision)
{
	this.m_numericPrecision = oFF.XIntegerValue.create(precision);
};
oFF.QMeasureHelpMetadataSelector.prototype.getNumericShift = function()
{
	return this.m_numericShift;
};
oFF.QMeasureHelpMetadataSelector.prototype.setNumericShift = function(shift)
{
	this.m_numericShift = oFF.XIntegerValue.create(shift);
};
oFF.QMeasureHelpMetadataSelector.prototype.getUnitType = function()
{
	return this.m_unitType;
};
oFF.QMeasureHelpMetadataSelector.prototype.setUnitType = function(unitType)
{
	this.m_unitType = unitType;
};
oFF.QMeasureHelpMetadataSelector.prototype.getUnitFixed = function()
{
	return this.m_unitFixed;
};
oFF.QMeasureHelpMetadataSelector.prototype.setUnitFixed = function(unitFixed)
{
	this.m_unitFixed = unitFixed;
};
oFF.QMeasureHelpMetadataSelector.prototype.setDataTypePrecision = function(precision)
{
	this.m_dataTypePrecision = oFF.XIntegerValue.create(precision);
};
oFF.QMeasureHelpMetadataSelector.prototype.setDataTypeScale = function(scale)
{
	this.m_dataTypeScale = oFF.XIntegerValue.create(scale);
};
oFF.QMeasureHelpMetadataSelector.prototype.resetDataTypePrecision = function()
{
	this.m_dataTypePrecision = null;
};
oFF.QMeasureHelpMetadataSelector.prototype.resetDataTypeScale = function()
{
	this.m_dataTypeScale = null;
};
oFF.QMeasureHelpMetadataSelector.prototype.getUnitName = function()
{
	return this.m_unitName;
};
oFF.QMeasureHelpMetadataSelector.prototype.setUnitName = function(unitName)
{
	this.m_unitName = unitName;
};
oFF.QMeasureHelpMetadataSelector.prototype.getUnitTextName = function()
{
	return this.m_unitTextName;
};
oFF.QMeasureHelpMetadataSelector.prototype.setUnitTextName = function(unitTextName)
{
	this.m_unitTextName = unitTextName;
};
oFF.QMeasureHelpMetadataSelector.prototype.getDataType = function()
{
	return this.m_dataType;
};
oFF.QMeasureHelpMetadataSelector.prototype.getDataTypeInternal = function()
{
	return this.m_dataTypeInternal;
};
oFF.QMeasureHelpMetadataSelector.prototype.setDataType = function(dataType)
{
	this.m_dataType = dataType;
};
oFF.QMeasureHelpMetadataSelector.prototype.setDataTypeInternal = function(dataType)
{
	this.m_dataTypeInternal = dataType;
};
oFF.QMeasureHelpMetadataSelector.prototype.getRateType = function()
{
	return this.m_rateType;
};
oFF.QMeasureHelpMetadataSelector.prototype.getDataTypePrecision = function()
{
	return this.m_dataTypePrecision;
};
oFF.QMeasureHelpMetadataSelector.prototype.getDataTypeScale = function()
{
	return this.m_dataTypeScale;
};
oFF.QMeasureHelpMetadataSelector.prototype.setRateType = function(rateType)
{
	this.m_rateType = rateType;
};
oFF.QMeasureHelpMetadataSelector.prototype.getUnitDimensionName = function()
{
	return this.m_unitDimensionName;
};
oFF.QMeasureHelpMetadataSelector.prototype.setUnitDimensionName = function(unitDimensionName)
{
	this.m_unitDimensionName = unitDimensionName;
};
oFF.QMeasureHelpMetadataSelector.prototype.getUnitDimensionProperty = function()
{
	return this.m_unitDimensionProperty;
};
oFF.QMeasureHelpMetadataSelector.prototype.setUnitDimensionProperty = function(unitDimensionProperty)
{
	this.m_unitDimensionProperty = unitDimensionProperty;
};

oFF.HierarchyCatalogItem = function() {};
oFF.HierarchyCatalogItem.prototype = new oFF.XObject();
oFF.HierarchyCatalogItem.prototype._ff_c = "HierarchyCatalogItem";

oFF.HierarchyCatalogItem.createCatalogItem = function()
{
	var catalogItem = new oFF.HierarchyCatalogItem();
	catalogItem.setHierarchyType(oFF.HierarchyType.UNKNOWN);
	return catalogItem;
};
oFF.HierarchyCatalogItem.createCopy = function(item)
{
	if (oFF.isNull(item))
	{
		return null;
	}
	var copy = oFF.HierarchyCatalogItem.createCatalogItem();
	copy.setHierarchyName(item.getHierarchyName());
	copy.setDimensionName(item.getDimensionName());
	if (item.hasHierarchyLongText())
	{
		copy.setHierarchyLongText(item.getHierarchyLongText());
	}
	if (item.hasHierarchyMediumText())
	{
		copy.setHierarchyMediumText(item.getHierarchyMediumText());
	}
	if (item.hasHierarchyShortText())
	{
		copy.setHierarchyShortText(item.getHierarchyShortText());
	}
	if (item.hasVersionName())
	{
		copy.setVersionName(item.getVersionName());
	}
	if (item.hasVersionDisplayKey())
	{
		copy.setVersionDisplayKey(item.getVersionDisplayKey());
	}
	if (item.hasVersionDescription())
	{
		copy.setVersionDescription(item.getVersionDescription());
	}
	copy.setDateTo(oFF.XObjectExt.cloneIfNotNull(item.getDateTo()));
	copy.setDateFrom(oFF.XObjectExt.cloneIfNotNull(item.getDateFrom()));
	if (item.hasOwner())
	{
		copy.setOwner(item.getOwner());
	}
	if (item.hasHierId())
	{
		copy.setHierId(item.getHierId());
	}
	if (item.hasHierType())
	{
		copy.setHierType(item.getHierType());
	}
	if (item.hasObjectVersion())
	{
		copy.setObjectVersion(item.getObjectVersion());
	}
	copy.setIsRemote(item.isRemote());
	copy.setIsModeled(item.isModeled());
	if (item.supportsHierarchyLevels())
	{
		copy.setSupportsHierarchyLevels(true);
		var hierarchyLevelsCopy = oFF.XList.create();
		var hierarchyLevels = item.getHierarchyLevels();
		if (oFF.notNull(hierarchyLevels))
		{
			for (var levelIndex = 0; levelIndex < hierarchyLevels.size(); levelIndex++)
			{
				var hierarchyLevel = hierarchyLevels.get(levelIndex);
				hierarchyLevelsCopy.add(oFF.HierarchyCatalogLevel.createCopy(hierarchyLevel));
			}
		}
		copy.setHierarchyLevels(hierarchyLevelsCopy);
	}
	copy.setHierarchyType(item.getHierarchyType());
	copy.setRestNode(item.getRestNode());
	copy.setVirtualRootNode(item.getVirtualRootNode());
	copy.setCustomHierarchyDefinition(item.getCustomHierarchyDefinition());
	return copy;
};
oFF.HierarchyCatalogItem.prototype.m_hierarchyName = null;
oFF.HierarchyCatalogItem.prototype.m_dimensionName = null;
oFF.HierarchyCatalogItem.prototype.m_hierarchyShortText = null;
oFF.HierarchyCatalogItem.prototype.m_hasHierarchyShortText = false;
oFF.HierarchyCatalogItem.prototype.m_hierarchyMediumText = null;
oFF.HierarchyCatalogItem.prototype.m_hasHierarchyMediumText = false;
oFF.HierarchyCatalogItem.prototype.m_hierarchyLongText = null;
oFF.HierarchyCatalogItem.prototype.m_hasHierarchyLongText = false;
oFF.HierarchyCatalogItem.prototype.m_versionName = null;
oFF.HierarchyCatalogItem.prototype.m_hasVersionName = false;
oFF.HierarchyCatalogItem.prototype.m_versionDisplayKey = null;
oFF.HierarchyCatalogItem.prototype.m_hasVersionDisplayKey = false;
oFF.HierarchyCatalogItem.prototype.m_versionDescription = null;
oFF.HierarchyCatalogItem.prototype.m_hasVersionDescription = false;
oFF.HierarchyCatalogItem.prototype.m_dateTo = null;
oFF.HierarchyCatalogItem.prototype.m_dateFrom = null;
oFF.HierarchyCatalogItem.prototype.m_owner = null;
oFF.HierarchyCatalogItem.prototype.m_hasOwner = false;
oFF.HierarchyCatalogItem.prototype.m_hierId = null;
oFF.HierarchyCatalogItem.prototype.m_hasHierId = false;
oFF.HierarchyCatalogItem.prototype.m_hierType = null;
oFF.HierarchyCatalogItem.prototype.m_hasHierType = false;
oFF.HierarchyCatalogItem.prototype.m_objectVersion = null;
oFF.HierarchyCatalogItem.prototype.m_hasObjectVersion = false;
oFF.HierarchyCatalogItem.prototype.m_isRemote = false;
oFF.HierarchyCatalogItem.prototype.m_isModeled = false;
oFF.HierarchyCatalogItem.prototype.m_supportsHierarchyLevels = false;
oFF.HierarchyCatalogItem.prototype.m_hierarchyLevels = null;
oFF.HierarchyCatalogItem.prototype.m_hierarchyType = null;
oFF.HierarchyCatalogItem.prototype.m_restNode = null;
oFF.HierarchyCatalogItem.prototype.m_virtualRootNode = null;
oFF.HierarchyCatalogItem.prototype.m_customHierarchyDefinition = null;
oFF.HierarchyCatalogItem.prototype.releaseObject = function()
{
	this.m_hierarchyName = null;
	this.m_dimensionName = null;
	this.m_hierarchyShortText = null;
	this.m_hierarchyMediumText = null;
	this.m_hierarchyLongText = null;
	this.m_versionName = null;
	this.m_versionDisplayKey = null;
	this.m_versionDescription = null;
	this.m_dateTo = oFF.XObjectExt.release(this.m_dateTo);
	this.m_dateFrom = oFF.XObjectExt.release(this.m_dateFrom);
	this.m_owner = null;
	this.m_hierId = null;
	this.m_hierType = null;
	this.m_objectVersion = null;
	this.m_hierarchyLevels = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_hierarchyLevels);
	this.m_hierarchyType = null;
	this.m_restNode = null;
	this.m_virtualRootNode = null;
	this.m_customHierarchyDefinition = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.HierarchyCatalogItem.prototype.setHierarchyName = function(hierarchyName)
{
	this.m_hierarchyName = hierarchyName;
};
oFF.HierarchyCatalogItem.prototype.getHierarchyName = function()
{
	return this.m_hierarchyName;
};
oFF.HierarchyCatalogItem.prototype.setDimensionName = function(dimensionName)
{
	this.m_dimensionName = dimensionName;
};
oFF.HierarchyCatalogItem.prototype.getDimensionName = function()
{
	return this.m_dimensionName;
};
oFF.HierarchyCatalogItem.prototype.setVersionName = function(versionName)
{
	this.m_versionName = versionName;
	this.m_hasVersionName = true;
};
oFF.HierarchyCatalogItem.prototype.hasVersionName = function()
{
	return this.m_hasVersionName;
};
oFF.HierarchyCatalogItem.prototype.getVersionName = function()
{
	return this.m_versionName;
};
oFF.HierarchyCatalogItem.prototype.setVersionDisplayKey = function(versionDisplayKey)
{
	this.m_versionDisplayKey = versionDisplayKey;
	this.m_hasVersionDisplayKey = true;
};
oFF.HierarchyCatalogItem.prototype.setVersionDescription = function(versionDescription)
{
	this.m_versionDescription = versionDescription;
	this.m_hasVersionDescription = true;
};
oFF.HierarchyCatalogItem.prototype.hasVersionDescription = function()
{
	return this.m_hasVersionDescription;
};
oFF.HierarchyCatalogItem.prototype.getVersionDescription = function()
{
	return this.m_versionDescription;
};
oFF.HierarchyCatalogItem.prototype.setHierarchyShortText = function(hierarchyShortText)
{
	this.m_hierarchyShortText = hierarchyShortText;
	this.m_hasHierarchyShortText = true;
};
oFF.HierarchyCatalogItem.prototype.hasHierarchyShortText = function()
{
	return this.m_hasHierarchyShortText;
};
oFF.HierarchyCatalogItem.prototype.getHierarchyShortText = function()
{
	return this.m_hierarchyShortText;
};
oFF.HierarchyCatalogItem.prototype.setHierarchyMediumText = function(hierarchyMediumText)
{
	this.m_hierarchyMediumText = hierarchyMediumText;
	this.m_hasHierarchyMediumText = true;
};
oFF.HierarchyCatalogItem.prototype.hasHierarchyMediumText = function()
{
	return this.m_hasHierarchyMediumText;
};
oFF.HierarchyCatalogItem.prototype.getHierarchyMediumText = function()
{
	return this.m_hierarchyMediumText;
};
oFF.HierarchyCatalogItem.prototype.setHierarchyLongText = function(hierarchyLongText)
{
	this.m_hierarchyLongText = hierarchyLongText;
	this.m_hasHierarchyLongText = true;
};
oFF.HierarchyCatalogItem.prototype.hasHierarchyLongText = function()
{
	return this.m_hasHierarchyLongText;
};
oFF.HierarchyCatalogItem.prototype.getHierarchyLongText = function()
{
	return this.m_hierarchyLongText;
};
oFF.HierarchyCatalogItem.prototype.getHierarchyDescription = function()
{
	if (this.hasHierarchyShortText() && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_hierarchyShortText))
	{
		return this.m_hierarchyShortText;
	}
	else if (this.hasHierarchyMediumText() && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_hierarchyMediumText))
	{
		return this.m_hierarchyMediumText;
	}
	else if (this.hasHierarchyLongText() && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_hierarchyLongText))
	{
		return this.m_hierarchyLongText;
	}
	return null;
};
oFF.HierarchyCatalogItem.prototype.setDateTo = function(dateTo)
{
	this.m_dateTo = dateTo;
};
oFF.HierarchyCatalogItem.prototype.getDateTo = function()
{
	return this.m_dateTo;
};
oFF.HierarchyCatalogItem.prototype.setDateFrom = function(dateFrom)
{
	this.m_dateFrom = dateFrom;
};
oFF.HierarchyCatalogItem.prototype.getDateFrom = function()
{
	return this.m_dateFrom;
};
oFF.HierarchyCatalogItem.prototype.setOwner = function(owner)
{
	this.m_owner = owner;
	this.m_hasOwner = true;
};
oFF.HierarchyCatalogItem.prototype.hasOwner = function()
{
	return this.m_hasOwner;
};
oFF.HierarchyCatalogItem.prototype.getOwner = function()
{
	return this.m_owner;
};
oFF.HierarchyCatalogItem.prototype.setHierId = function(hierId)
{
	this.m_hierId = hierId;
	this.m_hasHierId = true;
};
oFF.HierarchyCatalogItem.prototype.hasHierId = function()
{
	return this.m_hasHierId;
};
oFF.HierarchyCatalogItem.prototype.getHierId = function()
{
	return this.m_hierId;
};
oFF.HierarchyCatalogItem.prototype.setHierType = function(hierType)
{
	this.m_hierType = hierType;
	this.m_hasHierType = true;
};
oFF.HierarchyCatalogItem.prototype.hasHierType = function()
{
	return this.m_hasHierType;
};
oFF.HierarchyCatalogItem.prototype.getHierType = function()
{
	return this.m_hierType;
};
oFF.HierarchyCatalogItem.prototype.setObjectVersion = function(objectVersion)
{
	this.m_objectVersion = objectVersion;
	this.m_hasObjectVersion = true;
};
oFF.HierarchyCatalogItem.prototype.hasObjectVersion = function()
{
	return this.m_hasObjectVersion;
};
oFF.HierarchyCatalogItem.prototype.getObjectVersion = function()
{
	return this.m_objectVersion;
};
oFF.HierarchyCatalogItem.prototype.setIsRemote = function(isRemote)
{
	this.m_isRemote = isRemote;
};
oFF.HierarchyCatalogItem.prototype.isRemote = function()
{
	return this.m_isRemote;
};
oFF.HierarchyCatalogItem.prototype.setIsModeled = function(isModeled)
{
	this.m_isModeled = isModeled;
};
oFF.HierarchyCatalogItem.prototype.isModeled = function()
{
	return this.m_isModeled;
};
oFF.HierarchyCatalogItem.prototype.cloneExt = function(flags)
{
	return oFF.HierarchyCatalogItem.createCopy(this);
};
oFF.HierarchyCatalogItem.prototype.appendDecoratedString = function(buffer, value)
{
	buffer.append("[");
	if (oFF.notNull(value))
	{
		buffer.append(value);
	}
	buffer.append("]");
};
oFF.HierarchyCatalogItem.prototype.appendDecoratedStringIfTrue = function(buffer, value, condition)
{
	if (condition)
	{
		this.appendDecoratedString(buffer, value);
	}
	else
	{
		this.appendDecoratedString(buffer, null);
	}
};
oFF.HierarchyCatalogItem.prototype.appendDecoratedObject = function(buffer, object)
{
	if (oFF.isNull(object))
	{
		this.appendDecoratedString(buffer, null);
	}
	else
	{
		this.appendDecoratedString(buffer, object.toString());
	}
};
oFF.HierarchyCatalogItem.prototype.toString = function()
{
	var sb = oFF.XStringBuffer.create();
	this.appendDecoratedString(sb, this.m_dimensionName);
	sb.append(" - ");
	this.appendDecoratedString(sb, this.m_hierarchyName);
	sb.append("[");
	if (this.hasHierarchyLongText())
	{
		sb.append(this.getHierarchyLongText());
	}
	else
	{
		sb.append("<null>");
	}
	sb.append("|");
	if (this.hasHierarchyMediumText())
	{
		sb.append(this.getHierarchyMediumText());
	}
	else
	{
		sb.append("<null>");
	}
	sb.append("|");
	if (this.hasHierarchyShortText())
	{
		sb.append(this.getHierarchyShortText());
	}
	else
	{
		sb.append("<null>");
	}
	sb.append("]");
	this.appendDecoratedStringIfTrue(sb, this.m_versionName, this.hasVersionName());
	this.appendDecoratedStringIfTrue(sb, this.m_versionDescription, this.hasVersionDescription());
	this.appendDecoratedObject(sb, this.m_dateTo);
	this.appendDecoratedObject(sb, this.m_dateFrom);
	this.appendDecoratedStringIfTrue(sb, this.m_owner, this.hasOwner());
	this.appendDecoratedStringIfTrue(sb, this.m_hierId, this.hasHierId());
	sb.append("[").appendBoolean(this.m_isRemote).append("]");
	sb.append("[").appendBoolean(this.m_isModeled).append("]");
	sb.append("[").appendBoolean(this.isCustomHierarchy()).append("]");
	if (oFF.notNull(this.m_hierarchyType) && this.m_hierarchyType !== oFF.HierarchyType.UNKNOWN)
	{
		this.appendDecoratedObject(sb, this.m_hierarchyType);
		if (this.m_hierarchyType.isLeveledHierarchy())
		{
			sb.append("[Is Leveled Hierarchy]");
		}
	}
	if (this.supportsHierarchyLevels())
	{
		var levels = this.getHierarchyLevels();
		if (oFF.XCollectionUtils.hasElements(levels))
		{
			for (var i = 0; i < levels.size(); i++)
			{
				sb.appendNewLine().append(levels.get(i).toString());
			}
		}
	}
	return sb.toString();
};
oFF.HierarchyCatalogItem.prototype.getVersionDisplayKey = function()
{
	return this.m_versionDisplayKey;
};
oFF.HierarchyCatalogItem.prototype.hasVersionDisplayKey = function()
{
	return this.m_hasVersionDisplayKey;
};
oFF.HierarchyCatalogItem.prototype.setSupportsHierarchyLevels = function(supportsHierarchyLevels)
{
	this.m_supportsHierarchyLevels = supportsHierarchyLevels;
};
oFF.HierarchyCatalogItem.prototype.supportsHierarchyLevels = function()
{
	return this.m_supportsHierarchyLevels;
};
oFF.HierarchyCatalogItem.prototype.assertSupportsHierarchyLevels = function()
{
	if (!this.supportsHierarchyLevels())
	{
		return;
	}
};
oFF.HierarchyCatalogItem.prototype.setHierarchyLevels = function(hierarchyLevels)
{
	this.assertSupportsHierarchyLevels();
	this.m_hierarchyLevels = hierarchyLevels;
};
oFF.HierarchyCatalogItem.prototype.getHierarchyLevels = function()
{
	this.assertSupportsHierarchyLevels();
	return this.m_hierarchyLevels;
};
oFF.HierarchyCatalogItem.prototype.setHierarchyType = function(hierarchyType)
{
	this.m_hierarchyType = hierarchyType;
};
oFF.HierarchyCatalogItem.prototype.getHierarchyType = function()
{
	return this.m_hierarchyType;
};
oFF.HierarchyCatalogItem.prototype.getRestNode = function()
{
	return this.m_restNode;
};
oFF.HierarchyCatalogItem.prototype.setRestNode = function(restNode)
{
	this.m_restNode = restNode;
};
oFF.HierarchyCatalogItem.prototype.setVirtualRootNode = function(virtualRootNode)
{
	this.m_virtualRootNode = virtualRootNode;
};
oFF.HierarchyCatalogItem.prototype.getVirtualRootNode = function()
{
	return this.m_virtualRootNode;
};
oFF.HierarchyCatalogItem.prototype.setCustomHierarchyDefinition = function(customHierarchyDefinition)
{
	this.m_customHierarchyDefinition = customHierarchyDefinition;
};
oFF.HierarchyCatalogItem.prototype.isCustomHierarchy = function()
{
	return oFF.notNull(this.m_customHierarchyDefinition);
};
oFF.HierarchyCatalogItem.prototype.getCustomHierarchyDefinition = function()
{
	return this.m_customHierarchyDefinition;
};

oFF.HierarchyCatalogResult = function() {};
oFF.HierarchyCatalogResult.prototype = new oFF.XObject();
oFF.HierarchyCatalogResult.prototype._ff_c = "HierarchyCatalogResult";

oFF.HierarchyCatalogResult.create = function()
{
	var object = new oFF.HierarchyCatalogResult();
	object.m_items = oFF.XList.create();
	return object;
};
oFF.HierarchyCatalogResult.prototype.m_items = null;
oFF.HierarchyCatalogResult.prototype.releaseObject = function()
{
	this.m_items = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_items);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.HierarchyCatalogResult.prototype.containsHierarchy = function(name)
{
	var size = this.m_items.size();
	for (var i = 0; i < size; i++)
	{
		if (oFF.XString.isEqual(this.m_items.get(i).getHierarchyName(), name))
		{
			return true;
		}
	}
	return false;
};
oFF.HierarchyCatalogResult.prototype.addItem = function(item)
{
	this.m_items.add(item);
};
oFF.HierarchyCatalogResult.prototype.addAllItems = function(items)
{
	this.m_items.addAll(items);
};
oFF.HierarchyCatalogResult.prototype.getObjectsIterator = function()
{
	return this.m_items.getIterator();
};
oFF.HierarchyCatalogResult.prototype.getObjects = function()
{
	return this.m_items;
};
oFF.HierarchyCatalogResult.prototype.toString = function()
{
	var sb = oFF.XStringBuffer.create();
	if (oFF.notNull(this.m_items))
	{
		for (var i = 0; i < this.m_items.size(); i++)
		{
			if (i > 0)
			{
				sb.appendNewLine();
			}
			sb.append(this.m_items.get(i).toString());
		}
	}
	return sb.toString();
};
oFF.HierarchyCatalogResult.prototype.cloneExt = function(flags)
{
	var copy = new oFF.HierarchyCatalogResult();
	copy.m_items = oFF.XCollectionUtils.createListOfClones(this.m_items);
	return copy;
};

oFF.QCalculationManager = function() {};
oFF.QCalculationManager.prototype = new oFF.XObject();
oFF.QCalculationManager.prototype._ff_c = "QCalculationManager";

oFF.QCalculationManager.createCalculationManager = function(dimension)
{
	var calculationManager = new oFF.QCalculationManager();
	calculationManager.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
	return calculationManager;
};
oFF.QCalculationManager.prototype.m_dimension = null;
oFF.QCalculationManager.prototype.getDimension = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_dimension);
};
oFF.QCalculationManager.prototype.releaseObject = function()
{
	this.m_dimension = oFF.XObjectExt.release(this.m_dimension);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.QCalculationManager.prototype.getSupportedFormulaOperators = function()
{
	var olapSystemContainer = this.getDimension().getQueryManager().getOlapSystemContainer();
	var formulaOperators = olapSystemContainer.processSupportedFormulaOperators(oFF.SyncType.BLOCKING, null, null);
	if (formulaOperators.hasErrors())
	{
		return null;
	}
	var supportedFormulaOperators = formulaOperators.getData();
	oFF.XObjectExt.release(formulaOperators);
	var allowedFormulaOperatorList = this.getDimension().getOlapEnv().getAllowedFormulaOperatorList();
	if (oFF.XCollectionUtils.hasElements(allowedFormulaOperatorList))
	{
		var allowedFormulaOperators = oFF.XListOfString.create();
		var supportedFormulaOperatorIt = supportedFormulaOperators.getIterator();
		while (supportedFormulaOperatorIt.hasNext())
		{
			var supportedFormulaOperator = supportedFormulaOperatorIt.next();
			if (allowedFormulaOperatorList.contains(supportedFormulaOperator))
			{
				allowedFormulaOperators.add(supportedFormulaOperator);
			}
		}
		return allowedFormulaOperators;
	}
	return supportedFormulaOperators;
};
oFF.QCalculationManager.prototype.addNewRestrictedMeasure = function(name, text)
{
	return this.getDimension().addNewRestrictedMeasure(name, text);
};
oFF.QCalculationManager.prototype.addNewFormulaMeasure = function(name, text)
{
	return this.getDimension().addNewFormulaMeasure(name, text);
};
oFF.QCalculationManager.prototype.addNewVarianceMeasure = function(name, text)
{
	return this.getDimension().addNewVarianceMeasure(name, text);
};
oFF.QCalculationManager.prototype.addNewExceptionAggregationMeasure = function(name, text)
{
	return this.getDimension().addNewExceptionAggregationMeasure(name, text);
};
oFF.QCalculationManager.prototype.getMaxNumberOfDimensionsForExceptionAggregation = function(memberType, aggrType)
{
	return this.getDimension().getConvenienceCommands().getMaxNumberOfDimensionsForExceptionAggregation(memberType, aggrType);
};
oFF.QCalculationManager.prototype.getSupportedDimensionsForExceptionAggregation = function(memberType, aggrType)
{
	return this.getDimension().getConvenienceCommands().getSupportedDimensionsForExceptionAggregation(memberType, aggrType);
};
oFF.QCalculationManager.prototype.getSupportedExceptionAggregationTypes = function(memberType)
{
	return this.getDimension().getConvenienceCommands().getSupportedExceptionAggregationTypes(memberType);
};

oFF.QTimeConvertedFAMSelectionPlaceholder = function() {};
oFF.QTimeConvertedFAMSelectionPlaceholder.prototype = new oFF.QSelectionPlaceholder();
oFF.QTimeConvertedFAMSelectionPlaceholder.prototype._ff_c = "QTimeConvertedFAMSelectionPlaceholder";

oFF.QTimeConvertedFAMSelectionPlaceholder.TARGET_GRANULARITY = "targetGranularity";
oFF.QTimeConvertedFAMSelectionPlaceholder.QM_FILTER_MODEL = "qmFilterModel";
oFF.QTimeConvertedFAMSelectionPlaceholder.SOURCE_CANONICAL_DATE_CONTEXT = "sourceCanonicalDateContext";
oFF.QTimeConvertedFAMSelectionPlaceholder.createTimeConvertedFAMSelectionPlaceholderFromPlaceholderString = function(selectionPlaceholderString)
{
	try
	{
		var selectionPlaceholderJson = oFF.JsonParserFactory.createFromString(selectionPlaceholderString);
		var selectionPlaceholderStructure = selectionPlaceholderJson.asStructure();
		var timeSelectionPlaceholder = new oFF.QTimeConvertedFAMSelectionPlaceholder();
		timeSelectionPlaceholder.setupSelectionPlaceholderFromStructure(selectionPlaceholderStructure);
		return timeSelectionPlaceholder;
	}
	catch (e)
	{
		return null;
	}
};
oFF.QTimeConvertedFAMSelectionPlaceholder.createTimeConvertedFAMSelectionPlaceholder = function(queryModel, timeDimension, filterOp, qmFilterModel, sourceDatasetId, sourceTimeDimensionName, sourceHierarchyName)
{
	var timeSelectionPlaceholder = new oFF.QTimeConvertedFAMSelectionPlaceholder();
	var flatHierarchylevel = oFF.QTimeDimensionUtil.findAnyHierarchyLevelMatchingField(timeDimension, filterOp.getFieldMetadata());
	var levelType = flatHierarchylevel.getLevelType();
	timeSelectionPlaceholder.setTargetGranularity(oFF.QCanonicalDateUtil.convertHierarchyLevelTypeToDateTimeGranularity(levelType));
	timeSelectionPlaceholder.setQmFilterModel(qmFilterModel);
	timeSelectionPlaceholder.setOriginalLowValue(filterOp.getLow().getString());
	var iterator = queryModel.getOlapEnv().getAllAreaQueryManager().getIterator();
	while (iterator.hasNext())
	{
		var sourceQueryModel = iterator.next().getQueryModel();
		if (oFF.XString.isEqual(sourceQueryModel.getDatasetId(), sourceDatasetId))
		{
			var sourceTimeDimension = sourceQueryModel.getDimensionByName(sourceTimeDimensionName);
			if (oFF.notNull(sourceTimeDimension))
			{
				var sourceCanonicalDateContext = oFF.QFactory.createCanonicalDateContext(sourceQueryModel, sourceTimeDimension, sourceHierarchyName);
				timeSelectionPlaceholder.setSourceCanonicalDateContext(sourceCanonicalDateContext.serializeToJson().getStringRepresentation());
			}
			break;
		}
	}
	return timeSelectionPlaceholder;
};
oFF.QTimeConvertedFAMSelectionPlaceholder.prototype.m_targetGranularity = null;
oFF.QTimeConvertedFAMSelectionPlaceholder.prototype.m_qmFilterModel = null;
oFF.QTimeConvertedFAMSelectionPlaceholder.prototype.m_sourceCanonicalDateContext = null;
oFF.QTimeConvertedFAMSelectionPlaceholder.prototype.setupSelectionPlaceholderFromStructure = function(selectionPlaceholderStructure)
{
	oFF.QSelectionPlaceholder.prototype.setupSelectionPlaceholderFromStructure.call( this , selectionPlaceholderStructure);
	this.m_targetGranularity = oFF.DateTimeGranularityType.lookup(selectionPlaceholderStructure.getStringByKey(oFF.QTimeConvertedFAMSelectionPlaceholder.TARGET_GRANULARITY));
	this.m_qmFilterModel = selectionPlaceholderStructure.getStringByKey(oFF.QTimeConvertedFAMSelectionPlaceholder.QM_FILTER_MODEL);
	this.m_sourceCanonicalDateContext = selectionPlaceholderStructure.getStringByKey(oFF.QTimeConvertedFAMSelectionPlaceholder.SOURCE_CANONICAL_DATE_CONTEXT);
};
oFF.QTimeConvertedFAMSelectionPlaceholder.prototype.serializeToJson = function()
{
	var selectionPlaceholderJson = oFF.QSelectionPlaceholder.prototype.serializeToJson.call( this );
	if (oFF.notNull(this.m_targetGranularity))
	{
		selectionPlaceholderJson.putString(oFF.QTimeConvertedFAMSelectionPlaceholder.TARGET_GRANULARITY, this.m_targetGranularity.getName());
	}
	selectionPlaceholderJson.putString(oFF.QTimeConvertedFAMSelectionPlaceholder.QM_FILTER_MODEL, this.m_qmFilterModel);
	selectionPlaceholderJson.putString(oFF.QTimeConvertedFAMSelectionPlaceholder.SOURCE_CANONICAL_DATE_CONTEXT, this.m_sourceCanonicalDateContext);
	return selectionPlaceholderJson;
};
oFF.QTimeConvertedFAMSelectionPlaceholder.prototype.getTargetGranularity = function()
{
	return this.m_targetGranularity;
};
oFF.QTimeConvertedFAMSelectionPlaceholder.prototype.setTargetGranularity = function(granularity)
{
	this.m_targetGranularity = granularity;
};
oFF.QTimeConvertedFAMSelectionPlaceholder.prototype.getQmFilterModel = function()
{
	return this.m_qmFilterModel;
};
oFF.QTimeConvertedFAMSelectionPlaceholder.prototype.setQmFilterModel = function(qmFilterModel)
{
	this.m_qmFilterModel = qmFilterModel;
};
oFF.QTimeConvertedFAMSelectionPlaceholder.prototype.getSourceCanonicalDateContext = function()
{
	return this.m_sourceCanonicalDateContext;
};
oFF.QTimeConvertedFAMSelectionPlaceholder.prototype.setSourceCanonicalDateContext = function(sourceCanonicalDateContext)
{
	this.m_sourceCanonicalDateContext = sourceCanonicalDateContext;
};

oFF.QTimeSelectionPlaceholder = function() {};
oFF.QTimeSelectionPlaceholder.prototype = new oFF.QSelectionPlaceholder();
oFF.QTimeSelectionPlaceholder.prototype._ff_c = "QTimeSelectionPlaceholder";

oFF.QTimeSelectionPlaceholder.GRANULARITY = "granularity";
oFF.QTimeSelectionPlaceholder.SHIFT = "shift";
oFF.QTimeSelectionPlaceholder.CCD_ID = "ccdId";
oFF.QTimeSelectionPlaceholder.createTimeSelectionPlaceholderFromPlaceholderString = function(selectionPlaceholderString)
{
	try
	{
		var selectionPlaceholderJson = oFF.JsonParserFactory.createFromString(selectionPlaceholderString);
		var selectionPlaceholderStructure = selectionPlaceholderJson.asStructure();
		var timeSelectionPlaceholder = new oFF.QTimeSelectionPlaceholder();
		timeSelectionPlaceholder.setupSelectionPlaceholderFromStructure(selectionPlaceholderStructure);
		return timeSelectionPlaceholder;
	}
	catch (e)
	{
		return null;
	}
};
oFF.QTimeSelectionPlaceholder.prototype.m_granularity = null;
oFF.QTimeSelectionPlaceholder.prototype.m_shift = 0;
oFF.QTimeSelectionPlaceholder.prototype.m_ccdId = null;
oFF.QTimeSelectionPlaceholder.prototype.setupSelectionPlaceholderFromStructure = function(selectionPlaceholderStructure)
{
	oFF.QSelectionPlaceholder.prototype.setupSelectionPlaceholderFromStructure.call( this , selectionPlaceholderStructure);
	this.m_granularity = oFF.DateTimeGranularityType.lookup(selectionPlaceholderStructure.getStringByKey(oFF.QTimeSelectionPlaceholder.GRANULARITY));
	this.m_shift = selectionPlaceholderStructure.getIntegerByKey(oFF.QTimeSelectionPlaceholder.SHIFT);
	this.m_ccdId = selectionPlaceholderStructure.getStringByKey(oFF.QTimeSelectionPlaceholder.CCD_ID);
};
oFF.QTimeSelectionPlaceholder.prototype.serializeToJson = function()
{
	var selectionPlaceholderJson = oFF.QSelectionPlaceholder.prototype.serializeToJson.call( this );
	if (oFF.notNull(this.m_granularity))
	{
		selectionPlaceholderJson.putString(oFF.QTimeSelectionPlaceholder.GRANULARITY, this.m_granularity.getName());
	}
	selectionPlaceholderJson.putInteger(oFF.QTimeSelectionPlaceholder.SHIFT, this.m_shift);
	if (oFF.notNull(this.m_ccdId))
	{
		selectionPlaceholderJson.putString(oFF.QTimeSelectionPlaceholder.CCD_ID, this.m_ccdId);
	}
	return selectionPlaceholderJson;
};
oFF.QTimeSelectionPlaceholder.prototype.getGranularity = function()
{
	return this.m_granularity;
};
oFF.QTimeSelectionPlaceholder.prototype.setGranularity = function(granularity)
{
	this.m_granularity = granularity;
};
oFF.QTimeSelectionPlaceholder.prototype.getShift = function()
{
	return this.m_shift;
};
oFF.QTimeSelectionPlaceholder.prototype.setShift = function(shift)
{
	this.m_shift = shift;
};
oFF.QTimeSelectionPlaceholder.prototype.getCcdId = function()
{
	return this.m_ccdId;
};
oFF.QTimeSelectionPlaceholder.prototype.setCcdId = function(ccdId)
{
	this.m_ccdId = ccdId;
};

oFF.QBindingAttribute = function() {};
oFF.QBindingAttribute.prototype = new oFF.XObjectExt();
oFF.QBindingAttribute.prototype._ff_c = "QBindingAttribute";

oFF.QBindingAttribute.prototype.m_dataManifest = null;
oFF.QBindingAttribute.prototype.m_cmds = null;
oFF.QBindingAttribute.prototype.m_listenerSender = null;
oFF.QBindingAttribute.prototype.m_customIdentifier = null;
oFF.QBindingAttribute.prototype.m_isAttachedToServiceConfig = false;
oFF.QBindingAttribute.prototype.m_isProcessingServiceConfig = false;
oFF.QBindingAttribute.prototype.m_splittedPath = null;
oFF.QBindingAttribute.prototype.setupBind = function(cmds, type, protocol, path)
{
	this.setup();
	this.m_cmds = cmds;
	this.m_splittedPath = oFF.XStringTokenizer.splitString(path, "/");
	this.tryAttachingToServiceConfig();
};
oFF.QBindingAttribute.prototype.releaseObject = function()
{
	this.m_cmds = null;
	this.m_listenerSender = null;
	this.m_customIdentifier = null;
	oFF.XObjectExt.prototype.releaseObject.call( this );
};
oFF.QBindingAttribute.prototype.getComponentType = function()
{
	return oFF.IoComponentType.BINDING_SENDER;
};
oFF.QBindingAttribute.prototype.getSession = function()
{
	return oFF.isNull(this.m_cmds) ? null : this.m_cmds.getSession();
};
oFF.QBindingAttribute.prototype.getQueryManager = function()
{
	return oFF.isNull(this.m_cmds) ? null : this.m_cmds.getQueryManager();
};
oFF.QBindingAttribute.prototype.getConvenienceCommands = function()
{
	var queryManager = this.getQueryManager();
	return oFF.isNull(queryManager) ? null : queryManager.getConvenienceCommands();
};
oFF.QBindingAttribute.prototype.processSenderUpdate = function()
{
	this.log("processSenderUpdate");
	if (oFF.notNull(this.m_cmds))
	{
		this.tryAttachingToServiceConfig();
		this.tryProcessingServiceConfig();
	}
};
oFF.QBindingAttribute.prototype.tryAttachingToServiceConfig = function()
{
	this.log("tryAttachingToServiceConfig()");
	if (oFF.notNull(this.m_cmds))
	{
		if (!this.m_isAttachedToServiceConfig)
		{
			var serviceConfig = this.m_cmds.getQueryServiceConfig();
			if (oFF.notNull(serviceConfig))
			{
				this.m_isAttachedToServiceConfig = true;
				serviceConfig.processQueryManagerCreation(oFF.SyncType.REGISTER, this, null);
			}
		}
	}
};
oFF.QBindingAttribute.prototype.tryProcessingServiceConfig = function()
{
	this.log("tryProcessingServiceConfig");
	if (oFF.notNull(this.m_cmds))
	{
		if (this.m_isAttachedToServiceConfig && !this.m_isProcessingServiceConfig)
		{
			var serviceConfig = this.m_cmds.getQueryServiceConfig();
			if (oFF.notNull(serviceConfig))
			{
				this.m_isProcessingServiceConfig = true;
				serviceConfig.processQueryManagerCreation(null, null, null);
			}
		}
	}
};
oFF.QBindingAttribute.prototype.onQueryManagerCreated = function(extResult, queryManager, customIdentifier)
{
	this.log("onQueryManagerCreated");
	this.m_dataManifest = oFF.DpDataManifestFactory.createByMessages(extResult);
	if (oFF.notNull(this.m_listenerSender))
	{
		this.m_listenerSender.onSenderValueChanged(this, this.m_customIdentifier);
	}
	if (extResult.isValid())
	{
		var queryModel = queryManager.getQueryModel();
		queryModel.registerChangedListener(this, null);
	}
};
oFF.QBindingAttribute.prototype.onModelComponentChanged = function(modelComponent, customIdentifier)
{
	if (oFF.notNull(this.m_listenerSender))
	{
		this.m_listenerSender.onSenderValueChanged(this, this.m_customIdentifier);
	}
};
oFF.QBindingAttribute.prototype.onCmdContextChanged = function()
{
	this.log("onCmdContextChanged");
};
oFF.QBindingAttribute.prototype.isReceiverReady = function()
{
	return this.isSenderValueReady();
};
oFF.QBindingAttribute.prototype.isSenderValueReady = function()
{
	this.log("isSenderValueReady");
	var isSenderValueReady = false;
	if (oFF.notNull(this.m_cmds))
	{
		var queryManager = this.m_cmds.getQueryManager();
		isSenderValueReady = oFF.notNull(queryManager);
	}
	return isSenderValueReady;
};
oFF.QBindingAttribute.prototype.getString = function()
{
	if (oFF.notNull(this.m_cmds))
	{
		var queryManager = this.m_cmds.getQueryManager();
		if (oFF.notNull(queryManager))
		{
			var text = queryManager.getQueryModel().getText();
			return text;
		}
	}
	return null;
};
oFF.QBindingAttribute.prototype.setString = function(value) {};
oFF.QBindingAttribute.prototype.getElement = function()
{
	var result = null;
	return result;
};
oFF.QBindingAttribute.prototype.setElement = function(element) {};
oFF.QBindingAttribute.prototype.getDataManifest = function()
{
	return this.m_dataManifest;
};
oFF.QBindingAttribute.prototype.setDataManifest = function(dataManifest)
{
	this.m_dataManifest = dataManifest;
};
oFF.QBindingAttribute.prototype.registerValueChangedListener = function(listener, customIdentifier)
{
	this.m_listenerSender = listener;
	this.m_customIdentifier = customIdentifier;
};
oFF.QBindingAttribute.prototype.unregisterValueChangedListener = function(listener)
{
	this.m_listenerSender = null;
	this.m_customIdentifier = null;
};
oFF.QBindingAttribute.prototype.registerReceiverReadyListener = function(listener, customIdentifier)
{
	this.m_customIdentifier = customIdentifier;
};
oFF.QBindingAttribute.prototype.unregisterReceiverReadyListener = function(listener)
{
	this.m_customIdentifier = null;
};

oFF.QBindingResultset = function() {};
oFF.QBindingResultset.prototype = new oFF.XObjectExt();
oFF.QBindingResultset.prototype._ff_c = "QBindingResultset";

oFF.QBindingResultset.m_prompting = false;
oFF.QBindingResultset.create = function(cmds, type, protocol)
{
	var newObj = new oFF.QBindingResultset();
	newObj.setupBind(cmds, type, protocol);
	return newObj;
};
oFF.QBindingResultset.prototype.m_dataManifest = null;
oFF.QBindingResultset.prototype.m_cmds = null;
oFF.QBindingResultset.prototype.m_type = null;
oFF.QBindingResultset.prototype.m_protocol = null;
oFF.QBindingResultset.prototype.m_listener = null;
oFF.QBindingResultset.prototype.m_customIdentifier = null;
oFF.QBindingResultset.prototype.m_requestCounter = 0;
oFF.QBindingResultset.prototype.m_isAttachedToServiceConfig = false;
oFF.QBindingResultset.prototype.m_isProcessingServiceConfig = false;
oFF.QBindingResultset.prototype.m_isAttachedToQueryManager = false;
oFF.QBindingResultset.prototype.m_tryProcessingQueryManager = false;
oFF.QBindingResultset.prototype.setupBind = function(cmds, type, protocol)
{
	this.m_cmds = cmds;
	this.m_type = type;
	this.m_protocol = protocol;
	this.tryAttachingToServiceConfig();
	this.tryAttachingToQueryExecution();
};
oFF.QBindingResultset.prototype.releaseObject = function()
{
	this.m_cmds = null;
	this.m_listener = null;
	this.m_customIdentifier = null;
	oFF.XObjectExt.prototype.releaseObject.call( this );
};
oFF.QBindingResultset.prototype.getComponentType = function()
{
	return oFF.IoComponentType.BINDING_SENDER;
};
oFF.QBindingResultset.prototype.getSession = function()
{
	if (oFF.notNull(this.m_cmds))
	{
		return this.m_cmds.getSession();
	}
	else
	{
		return null;
	}
};
oFF.QBindingResultset.prototype.processSenderUpdate = function()
{
	this.log("processSenderUpdate");
	if (oFF.notNull(this.m_cmds))
	{
		this.tryAttachingToServiceConfig();
		this.tryProcessingServiceConfig();
		this.tryAttachingToQueryExecution();
		this.tryProcessingQueryManager();
	}
};
oFF.QBindingResultset.prototype.tryAttachingToServiceConfig = function()
{
	this.log("tryAttachingToServiceConfig()");
	if (oFF.notNull(this.m_cmds))
	{
		if (!this.m_isAttachedToServiceConfig)
		{
			var serviceConfig = this.m_cmds.getQueryServiceConfig();
			if (oFF.notNull(serviceConfig))
			{
				this.m_isAttachedToServiceConfig = true;
				serviceConfig.processQueryManagerCreation(oFF.SyncType.REGISTER, this, null);
			}
		}
	}
};
oFF.QBindingResultset.prototype.tryProcessingServiceConfig = function()
{
	this.log("tryProcessingServiceConfig");
	if (oFF.notNull(this.m_cmds))
	{
		if (this.m_isAttachedToServiceConfig && !this.m_isProcessingServiceConfig)
		{
			var serviceConfig = this.m_cmds.getQueryServiceConfig();
			if (oFF.notNull(serviceConfig))
			{
				this.m_isProcessingServiceConfig = true;
				serviceConfig.processQueryManagerCreation(null, null, null);
			}
		}
	}
};
oFF.QBindingResultset.prototype.onQueryManagerCreated = function(extResult, queryManager, customIdentifier)
{
	this.log("onQueryManagerCreated");
	this.m_dataManifest = oFF.DpDataManifestFactory.createByMessages(extResult);
	this.tryAttachingToQueryExecution();
};
oFF.QBindingResultset.prototype.tryAttachingToQueryExecution = function()
{
	this.log("tryAttachingToQueryManager");
	if (oFF.notNull(this.m_cmds))
	{
		if (this.m_isAttachedToServiceConfig && !this.m_isAttachedToQueryManager)
		{
			var queryManager = this.m_cmds.getQueryManager();
			if (oFF.notNull(queryManager))
			{
				this.m_isAttachedToQueryManager = true;
				if (queryManager.getInitSettings().getMode() !== oFF.QueryManagerMode.RAW_QUERY)
				{
					queryManager.getQueryModel().registerChangedListener(this, null);
				}
				queryManager.processQueryExecution(oFF.SyncType.REGISTER, this, null);
				if (this.m_tryProcessingQueryManager)
				{
					this.tryProcessingQueryManager();
				}
			}
		}
	}
};
oFF.QBindingResultset.prototype.onModelComponentChanged = function(modelComponent, customIdentifier)
{
	this.tryProcessingQueryManager();
};
oFF.QBindingResultset.prototype.tryProcessingQueryManager = function()
{
	this.log("tryProcessingQueryManager");
	this.m_tryProcessingQueryManager = true;
	if (oFF.notNull(this.m_cmds))
	{
		if (this.m_isAttachedToServiceConfig && this.m_isAttachedToQueryManager)
		{
			var queryManager = this.m_cmds.getQueryManager();
			if (oFF.notNull(queryManager))
			{
				this.m_tryProcessingQueryManager = false;
				this.m_requestCounter++;
				if (queryManager.hasVariables())
				{
					var initSettings = queryManager.getInitSettings();
					var definitionType = initSettings.getDefinitionType();
					var definitionAsStructure = initSettings.getDefinitionAsStructure();
					if (oFF.notNull(definitionType) && oFF.notNull(definitionAsStructure))
					{
						var preparator = oFF.QueryPreparatorFactory.newInstance(definitionType);
						if (oFF.notNull(preparator))
						{
							preparator.prepareAfterMetadataBeforeVariables(queryManager, definitionAsStructure);
						}
					}
				}
				this.log(oFF.XStringBuffer.create().append("Request Counter: ").appendInt(this.m_requestCounter).toString());
				var aExit = this.getSession().getSessionSingletons().getByKey("variable_exit");
				if (queryManager.hasVariables() && oFF.notNull(aExit))
				{
					if (oFF.QBindingResultset.m_prompting)
					{
						return;
					}
					oFF.QBindingResultset.m_prompting = true;
					aExit.replaceVariables(queryManager, this);
				}
				else
				{
					queryManager.processQueryExecution(null, null, null);
				}
			}
		}
	}
};
oFF.QBindingResultset.prototype.onQueryExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	this.m_dataManifest = oFF.DpDataManifestFactory.createByMessages(extResult);
	this.log("onQueryExecuted");
	if (oFF.notNull(this.m_listener))
	{
		this.m_listener.onSenderValueChanged(this, this.m_customIdentifier);
	}
};
oFF.QBindingResultset.prototype.onCmdContextChanged = function()
{
	this.log("onCmdContextChanged");
};
oFF.QBindingResultset.prototype.isSenderValueReady = function()
{
	this.log("isSenderValueReady");
	var isSenderValueReady = false;
	if (oFF.notNull(this.m_cmds))
	{
		var queryManager = this.m_cmds.getQueryManager();
		if (oFF.notNull(queryManager))
		{
			var syncState = queryManager.getResultSetSyncState();
			isSenderValueReady = syncState.isInSync();
		}
	}
	return isSenderValueReady;
};
oFF.QBindingResultset.prototype.getString = function()
{
	if (oFF.notNull(this.m_cmds))
	{
		var grid = null;
		var queryManager = this.m_cmds.getQueryManager();
		if (oFF.notNull(queryManager))
		{
			var rs = queryManager.getClassicResultSet();
			grid = oFF.ReferenceGridFactory.createReferenceGridSimple(rs);
		}
		if (oFF.notNull(grid))
		{
			var gridValue = grid.exportToAscii(50);
			this.log(gridValue);
			return gridValue;
		}
	}
	return null;
};
oFF.QBindingResultset.prototype.getElement = function()
{
	var result = null;
	if (oFF.notNull(this.m_cmds))
	{
		var queryManager = this.m_cmds.getQueryManager();
		if (oFF.notNull(queryManager))
		{
			result = queryManager.getAbstractRendering(this.m_type, this.m_protocol);
		}
	}
	return result;
};
oFF.QBindingResultset.prototype.getDataManifest = function()
{
	return this.m_dataManifest;
};
oFF.QBindingResultset.prototype.registerValueChangedListener = function(listener, customIdentifier)
{
	this.log("registerValueChangedListener");
	this.m_listener = listener;
	this.m_customIdentifier = customIdentifier;
};
oFF.QBindingResultset.prototype.unregisterValueChangedListener = function(listener)
{
	this.log("unregisterValueChangedListener");
	this.m_listener = null;
	this.m_customIdentifier = null;
};
oFF.QBindingResultset.prototype.releaseControl = function()
{
	oFF.QBindingResultset.m_prompting = false;
};

oFF.BlendingAttributeMapping = function() {};
oFF.BlendingAttributeMapping.prototype = new oFF.AbstractBlendingMapping();
oFF.BlendingAttributeMapping.prototype._ff_c = "BlendingAttributeMapping";

oFF.BlendingAttributeMapping.create = function(attributeName, isLinkKey, blendingDefinition)
{
	var mapping = new oFF.BlendingAttributeMapping();
	mapping.setupExt(attributeName, isLinkKey, blendingDefinition);
	return mapping;
};
oFF.BlendingAttributeMapping.prototype.m_attributeMappings = null;
oFF.BlendingAttributeMapping.prototype.m_attributeName = null;
oFF.BlendingAttributeMapping.prototype.m_constantMappings = null;
oFF.BlendingAttributeMapping.prototype.m_isLinkKey = false;
oFF.BlendingAttributeMapping.prototype.setupExt = function(attributeName, isLinkKey, blendingDefinition)
{
	oFF.XStringUtils.checkStringNotEmpty(attributeName, "The attribute name must not be null!");
	oFF.XObjectExt.assertNotNullExt(blendingDefinition, "Blending definition must not be null!");
	this.m_attributeMappings = oFF.XList.create();
	this.m_constantMappings = oFF.XList.create();
	this.m_attributeName = attributeName;
	this.m_isLinkKey = isLinkKey;
	oFF.AbstractBlendingMapping.prototype.setupAbstractMapping.call( this , oFF.BlendingMappingDefinitionType.ATTRIBUTE, blendingDefinition);
};
oFF.BlendingAttributeMapping.prototype.addAttributeMappingDefinition = function(attributeMappingDefinition)
{
	this.m_attributeMappings.add(attributeMappingDefinition);
};
oFF.BlendingAttributeMapping.prototype.addNewAttributeDimensionMappingDefinition = function(field, queryAliasName)
{
	var attributeMappingDefinition = this.newAttributeMappingDefinition(field, queryAliasName);
	this.addAttributeMappingDefinition(attributeMappingDefinition);
	return attributeMappingDefinition;
};
oFF.BlendingAttributeMapping.prototype.addNewAttributeDimensionMappingDefinitionByName = function(fieldName, queryAliasName)
{
	var attributeMappingDefinitionByName = this.newAttributeMappingDefinitionByName(fieldName, queryAliasName);
	this.addAttributeMappingDefinition(attributeMappingDefinitionByName);
	return attributeMappingDefinitionByName;
};
oFF.BlendingAttributeMapping.prototype.addNewAttributeDimensionMappingDefinitionByObject = function(field)
{
	var attributeMappingDefinition = this.newAttributeMappingDefinitionByObject(field);
	this.addAttributeMappingDefinition(attributeMappingDefinition);
	return attributeMappingDefinition;
};
oFF.BlendingAttributeMapping.prototype.cloneExt = function(flags)
{
	return this.cloneMapping();
};
oFF.BlendingAttributeMapping.prototype.cloneMapping = function()
{
	var blendingDefinition = this.getBlendingDefinition();
	var clone = blendingDefinition.newAttributeMapping(this.getAttributeName(), this.isLinkKey());
	var iterator = this.getAttributeMappingDefinitions().getIterator();
	while (iterator.hasNext())
	{
		var mappingDefinition = iterator.next();
		clone.addAttributeMappingDefinition(mappingDefinition.cloneMappingDefinition());
	}
	oFF.XObjectExt.release(iterator);
	var constantMappingIterator = this.getConstantMappings().getIterator();
	while (constantMappingIterator.hasNext())
	{
		var constantMapping = constantMappingIterator.next();
		clone.addConstantMapping(constantMapping.cloneMappingDefinition());
	}
	oFF.XObjectExt.release(constantMappingIterator);
	return clone;
};
oFF.BlendingAttributeMapping.prototype.getAttributeMappingDefinitions = function()
{
	return this.m_attributeMappings;
};
oFF.BlendingAttributeMapping.prototype.getConstantMappings = function()
{
	return this.m_constantMappings;
};
oFF.BlendingAttributeMapping.prototype.getAttributeName = function()
{
	return this.m_attributeName;
};
oFF.BlendingAttributeMapping.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherGeneral = other;
	if (this.getMappingDefinitionType() !== otherGeneral.getMappingDefinitionType())
	{
		return false;
	}
	var xOther = other;
	if (!oFF.XString.isEqual(this.getAttributeName(), xOther.getAttributeName()))
	{
		return false;
	}
	if (this.isLinkKey() !== xOther.isLinkKey())
	{
		return false;
	}
	if (!this.getAttributeMappingDefinitions().isEqualTo(xOther.getAttributeMappingDefinitions()))
	{
		return false;
	}
	return true;
};
oFF.BlendingAttributeMapping.prototype.isLinkKey = function()
{
	return this.m_isLinkKey;
};
oFF.BlendingAttributeMapping.prototype.newAttributeMappingDefinition = function(field, queryAliasName)
{
	oFF.BlendingValidation.isFieldValidForBlending(field, null, true);
	return oFF.BlendingMappingDefinition.createAttributeMapping(field.getName(), queryAliasName);
};
oFF.BlendingAttributeMapping.prototype.newAttributeMappingDefinitionByName = function(fieldName, queryAliasName)
{
	var blendingQueryModel = this.getBlendingDefinition().getBlendingSourceByAlias(queryAliasName);
	oFF.XObjectExt.assertNotNullExt(blendingQueryModel, oFF.XStringUtils.concatenate3("No Blending source found for alias '", queryAliasName, "'!"));
	var fieldByName = blendingQueryModel.getFieldByName(fieldName);
	return this.newAttributeMappingDefinition(fieldByName, queryAliasName);
};
oFF.BlendingAttributeMapping.prototype.newAttributeMappingDefinitionByObject = function(field)
{
	var queryAliasName = this.getBlendingDefinition().getBlendingAliasByQueryModel(field.getContext().getQueryModel());
	return this.newAttributeMappingDefinition(field, queryAliasName);
};
oFF.BlendingAttributeMapping.prototype.addConstantMapping = function(constantMapping)
{
	this.m_constantMappings.add(constantMapping);
};
oFF.BlendingAttributeMapping.prototype.addNewConstantMapping = function(memberKey, queryAliasName)
{
	var blendingQueryModel = this.getBlendingDefinition().getBlendingSourceByAlias(queryAliasName);
	oFF.XObjectExt.assertNotNullExt(blendingQueryModel, oFF.XStringUtils.concatenate3("No Blending source found for alias '", queryAliasName, "'!"));
	var newConstantMapping = oFF.BlendingConstantMapping.createConstantMapping(memberKey, queryAliasName);
	this.addConstantMapping(newConstantMapping);
	return newConstantMapping;
};
oFF.BlendingAttributeMapping.prototype.releaseObject = function()
{
	this.m_attributeMappings = oFF.XObjectExt.release(this.m_attributeMappings);
	this.m_constantMappings = oFF.XObjectExt.release(this.m_constantMappings);
	this.m_attributeName = null;
	oFF.AbstractBlendingMapping.prototype.releaseObject.call( this );
};
oFF.BlendingAttributeMapping.prototype.removeAttributeMappingDefinitionAt = function(indexToRemove)
{
	this.m_attributeMappings.removeAt(indexToRemove);
};
oFF.BlendingAttributeMapping.prototype.setAttributeName = function(attributeName)
{
	this.m_attributeName = attributeName;
};
oFF.BlendingAttributeMapping.prototype.setIsLinkKey = function(isLinkKey)
{
	this.m_isLinkKey = isLinkKey;
};

oFF.BlendingConstantMapping = function() {};
oFF.BlendingConstantMapping.prototype = new oFF.AbstractBlendingMapping();
oFF.BlendingConstantMapping.prototype._ff_c = "BlendingConstantMapping";

oFF.BlendingConstantMapping.createConstantMapping = function(memberKey, queryAliasName)
{
	var constantMappingDefinition = new oFF.BlendingConstantMapping();
	constantMappingDefinition.setupExt(queryAliasName, memberKey, oFF.BlendingMappingDefinitionType.CONSTANT);
	return constantMappingDefinition;
};
oFF.BlendingConstantMapping.prototype.m_queryAliasName = null;
oFF.BlendingConstantMapping.prototype.m_valueType = null;
oFF.BlendingConstantMapping.prototype.m_memberKey = null;
oFF.BlendingConstantMapping.prototype.cloneMappingDefinition = function()
{
	return oFF.BlendingConstantMapping.createConstantMapping(this.getMemberName(), this.getQueryAliasName());
};
oFF.BlendingConstantMapping.prototype.cloneExt = function(flags)
{
	return this.cloneMappingDefinition();
};
oFF.BlendingConstantMapping.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherGeneral = other;
	if (this.getMappingDefinitionType() !== otherGeneral.getMappingDefinitionType())
	{
		return false;
	}
	var xOther = other;
	if (!oFF.XString.isEqual(this.getMemberName(), xOther.getMemberName()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getQueryAliasName(), xOther.getQueryAliasName()))
	{
		return false;
	}
	if (this.getValueType() !== xOther.getValueType())
	{
		return false;
	}
	return true;
};
oFF.BlendingConstantMapping.prototype.setupExt = function(queryAliasName, memberKey, mappingType)
{
	oFF.XStringUtils.checkStringNotEmpty(queryAliasName, "Query Alias name is null!");
	oFF.AbstractBlendingMapping.prototype.setupAbstractMapping.call( this , mappingType, null);
	this.m_queryAliasName = queryAliasName;
	this.m_memberKey = memberKey;
	this.m_valueType = oFF.XValueType.STRING;
};
oFF.BlendingConstantMapping.prototype.releaseObject = function()
{
	this.m_queryAliasName = null;
	this.m_valueType = null;
	this.m_memberKey = null;
	oFF.AbstractBlendingMapping.prototype.releaseObject.call( this );
};
oFF.BlendingConstantMapping.prototype.getQueryAliasName = function()
{
	return this.m_queryAliasName;
};
oFF.BlendingConstantMapping.prototype.getMemberName = function()
{
	return this.m_memberKey;
};
oFF.BlendingConstantMapping.prototype.toString = function()
{
	var sb = oFF.XStringBuffer.create();
	sb.append(this.m_queryAliasName).append(".");
	sb.append(this.m_memberKey);
	sb.append("(").append(this.getMappingDefinitionType().getName()).append(")");
	return sb.toString();
};
oFF.BlendingConstantMapping.prototype.getValueType = function()
{
	return this.m_valueType;
};

oFF.BlendingDefinition = function() {};
oFF.BlendingDefinition.prototype = new oFF.XObject();
oFF.BlendingDefinition.prototype._ff_c = "BlendingDefinition";

oFF.BlendingDefinition.create = function()
{
	var blending = new oFF.BlendingDefinition();
	blending.m_mappings = oFF.XLinkedHashMapByString.create();
	blending.m_sources = oFF.XLinkedHashMapByString.create();
	blending.m_blendingHostManager = oFF.BlendingHostManager.create(blending);
	return blending;
};
oFF.BlendingDefinition.prototype.m_mappings = null;
oFF.BlendingDefinition.prototype.m_sources = null;
oFF.BlendingDefinition.prototype.m_blendingHostManager = null;
oFF.BlendingDefinition.prototype.cloneBlendingDefinition = function()
{
	return this.cloneExt(null);
};
oFF.BlendingDefinition.prototype.cloneExt = function(flags)
{
	var clone = oFF.BlendingDefinition.create();
	clone.copyFrom(this, flags);
	return clone;
};
oFF.BlendingDefinition.prototype.copyFrom = function(other, flags)
{
	oFF.XObject.prototype.copyFrom.call( this , other, flags);
	var otherObject = other;
	var blendingHost = otherObject.getBlendingHost();
	var sourceIterator = otherObject.getSources().getIterator();
	while (sourceIterator.hasNext())
	{
		var source = sourceIterator.next();
		var sourceClone = source.cloneExt(flags);
		this.addSource(sourceClone);
		if (oFF.notNull(blendingHost) && source === blendingHost.getSource())
		{
			this.setSourceAsBlendingHost(sourceClone);
		}
	}
	oFF.XObjectExt.release(sourceIterator);
	var mappingIterator = otherObject.getMappings().getIterator();
	while (mappingIterator.hasNext())
	{
		var mapping = mappingIterator.next();
		var cloneMapping = mapping.cloneExt(flags);
		cloneMapping.setBlendingDefinition(this);
		this.addMapping(cloneMapping);
	}
	oFF.XObjectExt.release(mappingIterator);
};
oFF.BlendingDefinition.prototype.setBlendingHost = function(blendingHost)
{
	this.m_blendingHostManager.setBlendingHost(blendingHost);
};
oFF.BlendingDefinition.prototype.setSourceAsBlendingHost = function(source)
{
	this.m_blendingHostManager.setSourceAsBlendingHost(source);
};
oFF.BlendingDefinition.prototype.getBlendingHost = function()
{
	return this.m_blendingHostManager.getBlendingHost();
};
oFF.BlendingDefinition.prototype.addSingleMemberFilterByDimensionNameToSourceQueryByAlias = function(sourceQueryAlias, sourceDimensionName, sourceMemberName, comparisonOperator)
{
	var sourceQuery = this.getBlendingSourceByAlias(sourceQueryAlias);
	oFF.XObjectExt.assertNotNullExt(sourceQuery, oFF.XStringUtils.concatenate3("No Source Query for Alias '", sourceQueryAlias, "' was found!"));
	var addSingleMemberFilterByDimensionName = sourceQuery.getConvenienceCommands().addSingleMemberFilterByDimensionName(sourceDimensionName, sourceMemberName, comparisonOperator);
	return addSingleMemberFilterByDimensionName;
};
oFF.BlendingDefinition.prototype.releaseObject = function()
{
	this.m_mappings = oFF.XObjectExt.release(this.m_mappings);
	this.m_sources = oFF.XObjectExt.release(this.m_sources);
	this.m_blendingHostManager = oFF.XObjectExt.release(this.m_blendingHostManager);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.BlendingDefinition.prototype.addMapping = function(mapping)
{
	oFF.XObjectExt.assertNotNullExt(mapping, "Mapping is null");
	this.m_mappings.put(mapping.getMemberName(), mapping);
	return this;
};
oFF.BlendingDefinition.prototype.removeMappingByName = function(memberAliasName)
{
	this.m_mappings.remove(memberAliasName);
	return this;
};
oFF.BlendingDefinition.prototype.getMappings = function()
{
	return this.m_mappings.getValuesAsReadOnlyList();
};
oFF.BlendingDefinition.prototype.addSource = function(source)
{
	oFF.XObjectExt.assertNotNullExt(source, "Source is null");
	var queryModel = source.getQueryModel();
	var capabilities = queryModel.getModelCapabilities();
	oFF.XBooleanUtils.checkTrue(capabilities.supportsCubeBlending(), "The backend is not capable of blending!");
	if (!capabilities.supportsCubeBlendingWithNSubqueries() && this.m_sources.size() >= oFF.BlendingCapabilities.getMaxNumberOfBlendingQueries())
	{
		throw oFF.XException.createRuntimeException("Currently only 2 sources are allowed");
	}
	if (this.m_sources.containsKey(source.getQueryAliasName()))
	{
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate3("The query alias '", source.getQueryAliasName(), "' is not unique!"));
	}
	oFF.BlendingValidation.isQueryModelValidForBlending(queryModel, null);
	this.m_sources.put(source.getQueryAliasName(), source);
	return this;
};
oFF.BlendingDefinition.prototype.removeSourceByName = function(queryAliasName)
{
	var source = this.m_sources.getByKey(queryAliasName);
	this.m_sources.remove(queryAliasName);
	var blendingHost = this.getBlendingHost();
	if (oFF.notNull(blendingHost) && blendingHost.getSource() === source)
	{
		this.setBlendingHost(null);
	}
	return this;
};
oFF.BlendingDefinition.prototype.getSources = function()
{
	return this.m_sources.getValuesAsReadOnlyList();
};
oFF.BlendingDefinition.prototype.newSource = function(queryModel, queryAliasName)
{
	oFF.XStringUtils.checkStringNotEmpty(queryAliasName, "The query alias must not be empty or null!");
	oFF.BlendingValidation.isQueryModelValidForBlending(queryModel, null);
	return oFF.BlendingSource.create(queryModel, queryAliasName);
};
oFF.BlendingDefinition.prototype.addNewSource = function(queryModel, queryAliasName)
{
	var newSource = this.newSource(queryModel, queryAliasName);
	this.addSource(newSource);
	return newSource;
};
oFF.BlendingDefinition.prototype.newDimensionMapping = function(linkType, aliasName)
{
	oFF.XStringUtils.checkStringNotEmpty(aliasName, "The member alias must not be empty or null!");
	var dimensionMapping = this.newMapping(linkType);
	dimensionMapping.setMemberName(aliasName);
	return dimensionMapping;
};
oFF.BlendingDefinition.prototype.addNewDimensionMapping = function(linkType, aliasName)
{
	var dimensionMapping = this.newDimensionMapping(linkType, aliasName);
	this.addMapping(dimensionMapping);
	return dimensionMapping;
};
oFF.BlendingDefinition.prototype.getBlendingAliasByQueryModel = function(queryModel)
{
	if (oFF.isNull(queryModel))
	{
		return null;
	}
	var sourceIterator = this.getSources().getIterator();
	while (sourceIterator.hasNext())
	{
		var blendingSource = sourceIterator.next();
		if (blendingSource.getQueryModel() === queryModel)
		{
			oFF.XObjectExt.release(sourceIterator);
			return blendingSource.getQueryAliasName();
		}
	}
	oFF.XObjectExt.release(sourceIterator);
	return null;
};
oFF.BlendingDefinition.prototype.getBlendingSourceByAlias = function(queryAliasName)
{
	var blendingSource = this.m_sources.getByKey(queryAliasName);
	if (oFF.isNull(blendingSource))
	{
		return null;
	}
	return blendingSource.getQueryModel();
};
oFF.BlendingDefinition.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var xOther = other;
	if (!this.getMappings().isEqualTo(xOther.getMappings()))
	{
		return false;
	}
	if (!this.getSources().isEqualTo(xOther.getSources()))
	{
		return false;
	}
	if (!(this.getBlendingHost() === null && xOther.getBlendingHost() === null) && this.getBlendingHost() !== null && xOther.getBlendingHost() !== null && !this.getBlendingHost().isEqualTo(xOther.getBlendingHost()))
	{
		return false;
	}
	return true;
};
oFF.BlendingDefinition.prototype.getMappingByAliasName = function(aliasName)
{
	return this.m_mappings.getByKey(aliasName);
};
oFF.BlendingDefinition.prototype.isRemoteBlending = function()
{
	var blendingHost = this.getBlendingHost();
	var blendingHostSystemName = blendingHost.getSystemName();
	var iterator = this.m_sources.getIterator();
	while (iterator.hasNext())
	{
		var queryModel = iterator.next().getQueryModel();
		var systemName = queryModel.getQueryManager().getSystemName();
		if (!oFF.XString.isEqual(blendingHostSystemName, systemName))
		{
			return true;
		}
	}
	return false;
};
oFF.BlendingDefinition.prototype.newMapping = function(linkType)
{
	return oFF.BlendingMapping.create(linkType, this);
};
oFF.BlendingDefinition.prototype.newAttributeMapping = function(attributeName, isLinkKey)
{
	return oFF.BlendingAttributeMapping.create(attributeName, isLinkKey, this);
};

oFF.BlendingMapping = function() {};
oFF.BlendingMapping.prototype = new oFF.AbstractBlendingMapping();
oFF.BlendingMapping.prototype._ff_c = "BlendingMapping";

oFF.BlendingMapping.create = function(linkType, blendingDefinition)
{
	oFF.XObjectExt.assertNotNullExt(linkType, "Blending link type is null");
	oFF.XObjectExt.assertNotNullExt(blendingDefinition, "Blending definition is null");
	var mapping = new oFF.BlendingMapping();
	mapping.setupExt(linkType, blendingDefinition);
	return mapping;
};
oFF.BlendingMapping.prototype.m_attributeMappings = null;
oFF.BlendingMapping.prototype.m_constantMappings = null;
oFF.BlendingMapping.prototype.m_dimensionMappingDefinitions = null;
oFF.BlendingMapping.prototype.m_isPreservingMembers = false;
oFF.BlendingMapping.prototype.m_isReturningOriginKeys = false;
oFF.BlendingMapping.prototype.m_linkType = null;
oFF.BlendingMapping.prototype.m_memberName = null;
oFF.BlendingMapping.prototype.setupExt = function(linkType, blendingDefinition)
{
	oFF.AbstractBlendingMapping.prototype.setupAbstractMapping.call( this , oFF.BlendingMappingDefinitionType.DIMENSION, blendingDefinition);
	this.m_linkType = linkType;
	this.m_dimensionMappingDefinitions = oFF.XList.create();
	this.m_attributeMappings = oFF.XList.create();
	this.m_constantMappings = oFF.XList.create();
	this.m_isPreservingMembers = false;
	this.m_isReturningOriginKeys = true;
};
oFF.BlendingMapping.prototype.addAttributeMapping = function(attributeMapping)
{
	this.m_attributeMappings.add(attributeMapping);
};
oFF.BlendingMapping.prototype.addConstantMapping = function(constantMapping)
{
	this.m_constantMappings.add(constantMapping);
};
oFF.BlendingMapping.prototype.addMappingDefinition = function(mappingDefinition)
{
	oFF.XObjectExt.assertNotNullExt(mappingDefinition, "Mapping definition is null");
	if (this.getBlendingDefinition() !== null)
	{
		if (this.m_dimensionMappingDefinitions.size() >= this.getBlendingDefinition().getSources().size())
		{
			throw oFF.XException.createIllegalArgumentException("Cannot add more dimension mappings than blending sources");
		}
	}
	this.m_dimensionMappingDefinitions.add(mappingDefinition);
	return this;
};
oFF.BlendingMapping.prototype.addNewAttributeMappingByName = function(attributeName, isLinkKey)
{
	var attributeMapping = this.newAttributeMappingByName(attributeName, isLinkKey);
	this.addAttributeMapping(attributeMapping);
	return attributeMapping;
};
oFF.BlendingMapping.prototype.addNewConstantMapping = function(memberKey, queryAliasName)
{
	var newConstantMapping = this.newConstantMapping(memberKey, queryAliasName);
	this.addConstantMapping(newConstantMapping);
	return newConstantMapping;
};
oFF.BlendingMapping.prototype.addNewDimensionMappingDefinition = function(dimension, queryAliasName)
{
	var dimensionBlendingMappingDefinition = this.newDimensionMappingDefinition(dimension, queryAliasName);
	this.addMappingDefinition(dimensionBlendingMappingDefinition);
	return dimensionBlendingMappingDefinition;
};
oFF.BlendingMapping.prototype.addNewDimensionMappingDefinitionByObject = function(dimension)
{
	var dimensionMappingDefinition = this.newDimensionMappingDefinitionByObject(dimension);
	this.addMappingDefinition(dimensionMappingDefinition);
	return dimensionMappingDefinition;
};
oFF.BlendingMapping.prototype.addNewDimensionMappingDefinitionByName = function(dimensionName, queryAliasName)
{
	var dimensionMappingDefinition = this.newDimensionMappingDefinitionByName(dimensionName, queryAliasName);
	this.addMappingDefinition(dimensionMappingDefinition);
	return dimensionMappingDefinition;
};
oFF.BlendingMapping.prototype.cloneMapping = function()
{
	return this.cloneExt(null);
};
oFF.BlendingMapping.prototype.cloneExt = function(flags)
{
	var newObj = new oFF.BlendingMapping();
	newObj.copyFrom(this, flags);
	return newObj;
};
oFF.BlendingMapping.prototype.copyFrom = function(other, flags)
{
	oFF.AbstractBlendingMapping.prototype.copyFrom.call( this , other, flags);
	var otherMapping = other;
	this.m_linkType = otherMapping.getLinkType();
	this.m_memberName = otherMapping.getMemberName();
	this.m_isPreservingMembers = otherMapping.isPreservingMembers();
	this.m_isReturningOriginKeys = otherMapping.isReturningOriginKeys();
	this.m_dimensionMappingDefinitions = oFF.XList.create();
	this.m_attributeMappings = oFF.XList.create();
	this.m_constantMappings = oFF.XList.create();
	var definitionIterator = otherMapping.getMappingDefinitions().getIterator();
	while (definitionIterator.hasNext())
	{
		var definition = definitionIterator.next();
		var cloneDef = definition.cloneMappingDefinition();
		this.addMappingDefinition(cloneDef);
	}
	var attributeMappingIterator = otherMapping.getAttributeMappings().getIterator();
	while (attributeMappingIterator.hasNext())
	{
		var attributeMapping = attributeMappingIterator.next();
		var cloneAttributeMapping = attributeMapping.clone();
		this.addAttributeMapping(cloneAttributeMapping);
	}
	var constantMappingIterator = otherMapping.getConstantMappings().getIterator();
	while (constantMappingIterator.hasNext())
	{
		var constantMapping = constantMappingIterator.next();
		var cloneConstantMapping = constantMapping.cloneMappingDefinition();
		this.addConstantMapping(cloneConstantMapping);
	}
};
oFF.BlendingMapping.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherGeneral = other;
	if (this.getMappingDefinitionType() !== otherGeneral.getMappingDefinitionType())
	{
		return false;
	}
	var xOther = other;
	if (!oFF.XString.isEqual(this.getMemberName(), xOther.getMemberName()))
	{
		return false;
	}
	if (!this.getMappingDefinitions().isEqualTo(xOther.getMappingDefinitions()))
	{
		return false;
	}
	if (!this.getConstantMappings().isEqualTo(xOther.getConstantMappings()))
	{
		return false;
	}
	if (!this.getAttributeMappings().isEqualTo(xOther.getAttributeMappings()))
	{
		return false;
	}
	return true;
};
oFF.BlendingMapping.prototype.getAttributeMappings = function()
{
	return this.m_attributeMappings;
};
oFF.BlendingMapping.prototype.getConstantMappings = function()
{
	return this.m_constantMappings;
};
oFF.BlendingMapping.prototype.getLinkType = function()
{
	return this.m_linkType;
};
oFF.BlendingMapping.prototype.getMappingDefinitions = function()
{
	return this.m_dimensionMappingDefinitions;
};
oFF.BlendingMapping.prototype.getMemberName = function()
{
	return this.m_memberName;
};
oFF.BlendingMapping.prototype.isPreservingMembers = function()
{
	return this.m_isPreservingMembers;
};
oFF.BlendingMapping.prototype.newAttributeMappingByName = function(attributeName, isLinkKey)
{
	oFF.XStringUtils.checkStringNotEmpty(attributeName, "The attribute name must not be empty!");
	var blendingDefinition = this.getBlendingDefinition();
	return blendingDefinition.newAttributeMapping(attributeName, isLinkKey);
};
oFF.BlendingMapping.prototype.newConstantMapping = function(memberKey, queryAliasName)
{
	var blendingQueryModel = this.getBlendingDefinition().getBlendingSourceByAlias(queryAliasName);
	oFF.XObjectExt.assertNotNullExt(blendingQueryModel, oFF.XStringUtils.concatenate3("No Blending source found for alias '", queryAliasName, "'!"));
	return oFF.BlendingConstantMapping.createConstantMapping(memberKey, queryAliasName);
};
oFF.BlendingMapping.prototype.newDimensionMappingDefinitionByObject = function(dimension)
{
	oFF.XObjectExt.assertNotNullExt(dimension, "The dimension must not be null!");
	var queryAliasName = this.getBlendingDefinition().getBlendingAliasByQueryModel(dimension.getQueryModel());
	return this.newDimensionMappingDefinition(dimension, queryAliasName);
};
oFF.BlendingMapping.prototype.newDimensionMappingDefinition = function(dimension, queryAliasName)
{
	oFF.XObjectExt.assertNotNullExt(dimension, "The dimension must not be null!");
	oFF.XStringUtils.checkStringNotEmpty(queryAliasName, "The query alias name must not be null or empty!");
	oFF.BlendingValidation.isDimensionValidForBlending(dimension, null, false);
	return oFF.BlendingMappingDefinition.createDimensionMapping(dimension.getName(), queryAliasName);
};
oFF.BlendingMapping.prototype.newDimensionMappingDefinitionByName = function(dimensionName, queryAliasName)
{
	var blendingQueryModel = this.getBlendingDefinition().getBlendingSourceByAlias(queryAliasName);
	oFF.XObjectExt.assertNotNullExt(blendingQueryModel, oFF.XStringUtils.concatenate3("No Blending source found for alias '", queryAliasName, "'!"));
	var dimension = blendingQueryModel.getDimensionByName(dimensionName);
	return this.newDimensionMappingDefinition(dimension, queryAliasName);
};
oFF.BlendingMapping.prototype.removeAttributeMappingAt = function(indexToRemove)
{
	this.m_attributeMappings.removeAt(indexToRemove);
};
oFF.BlendingMapping.prototype.removeMappingDefinitionAt = function(indexToRemove)
{
	this.m_dimensionMappingDefinitions.removeAt(indexToRemove);
	return this;
};
oFF.BlendingMapping.prototype.setIsPreservingMembers = function(isPreserving)
{
	if (this.m_isPreservingMembers !== isPreserving)
	{
		this.m_isPreservingMembers = isPreserving;
	}
};
oFF.BlendingMapping.prototype.setMemberName = function(memberName)
{
	if (!oFF.XString.isEqual(this.m_memberName, memberName))
	{
		this.m_memberName = memberName;
	}
};
oFF.BlendingMapping.prototype.releaseObject = function()
{
	this.m_dimensionMappingDefinitions = oFF.XObjectExt.release(this.m_dimensionMappingDefinitions);
	this.m_attributeMappings = oFF.XObjectExt.release(this.m_attributeMappings);
	this.m_constantMappings = oFF.XObjectExt.release(this.m_constantMappings);
	this.m_linkType = null;
	this.m_memberName = null;
	oFF.AbstractBlendingMapping.prototype.releaseObject.call( this );
};
oFF.BlendingMapping.prototype.toString = function()
{
	var sb = oFF.XStringBuffer.create();
	if (oFF.notNull(this.m_dimensionMappingDefinitions))
	{
		sb.append(this.m_dimensionMappingDefinitions.toString());
	}
	sb.append("\n\tLinked with: ").append(this.m_linkType.getName());
	sb.append("\n\tDefinition Type: ").append(this.getMappingDefinitionType().getName());
	sb.append("\n\tMember Alias: ").append(this.m_memberName);
	if (this.m_linkType === oFF.BlendingLinkType.NONE)
	{
		sb.append("\n\tIs Preserving Members: ");
		sb.appendBoolean(this.m_isPreservingMembers);
		sb.append("\n\tIs Returning Folding Keys:");
		sb.appendBoolean(this.m_isReturningOriginKeys);
	}
	return sb.toString();
};
oFF.BlendingMapping.prototype.isReturningOriginKeys = function()
{
	return this.m_isReturningOriginKeys;
};
oFF.BlendingMapping.prototype.setIsReturningOriginKeys = function(isReturningOriginKeys)
{
	if (this.m_isReturningOriginKeys !== isReturningOriginKeys)
	{
		this.m_isReturningOriginKeys = isReturningOriginKeys;
	}
};
oFF.BlendingMapping.prototype.setLinkType = function(linkType)
{
	this.m_linkType = linkType;
};

oFF.BlendingMappingDefinition = function() {};
oFF.BlendingMappingDefinition.prototype = new oFF.AbstractBlendingMapping();
oFF.BlendingMappingDefinition.prototype._ff_c = "BlendingMappingDefinition";

oFF.BlendingMappingDefinition.createDimensionMapping = function(dimensionName, queryAliasName)
{
	var dimensionMappingDefinition = new oFF.BlendingMappingDefinition();
	dimensionMappingDefinition.setupExt(queryAliasName, dimensionName, oFF.BlendingMappingDefinitionType.DIMENSION);
	return dimensionMappingDefinition;
};
oFF.BlendingMappingDefinition.createAttributeMapping = function(attributeName, queryAliasName)
{
	var dimensionMappingDefinition = new oFF.BlendingMappingDefinition();
	dimensionMappingDefinition.setupExt(queryAliasName, attributeName, oFF.BlendingMappingDefinitionType.ATTRIBUTE);
	return dimensionMappingDefinition;
};
oFF.BlendingMappingDefinition.createConstantMapping = function(memberKey, queryAliasName)
{
	var dimensionMappingDefinition = new oFF.BlendingMappingDefinition();
	dimensionMappingDefinition.setupExt(queryAliasName, memberKey, oFF.BlendingMappingDefinitionType.CONSTANT);
	return dimensionMappingDefinition;
};
oFF.BlendingMappingDefinition.prototype.m_queryAliasName = null;
oFF.BlendingMappingDefinition.prototype.m_memberName = null;
oFF.BlendingMappingDefinition.prototype.cloneMappingDefinition = function()
{
	if (this.getMappingDefinitionType() === oFF.BlendingMappingDefinitionType.ATTRIBUTE)
	{
		return oFF.BlendingMappingDefinition.createAttributeMapping(this.getMemberName(), this.getQueryAliasName());
	}
	if (this.getMappingDefinitionType() === oFF.BlendingMappingDefinitionType.CONSTANT)
	{
		return oFF.BlendingMappingDefinition.createConstantMapping(this.getMemberName(), this.getQueryAliasName());
	}
	return oFF.BlendingMappingDefinition.createDimensionMapping(this.getMemberName(), this.getQueryAliasName());
};
oFF.BlendingMappingDefinition.prototype.cloneExt = function(flags)
{
	return this.cloneMappingDefinition();
};
oFF.BlendingMappingDefinition.prototype.setupExt = function(queryAliasName, memberName, mappingType)
{
	oFF.XStringUtils.checkStringNotEmpty(queryAliasName, "Query alias name is null");
	oFF.XStringUtils.checkStringNotEmpty(memberName, "Member name is null");
	oFF.AbstractBlendingMapping.prototype.setupAbstractMapping.call( this , mappingType, null);
	this.m_queryAliasName = queryAliasName;
	this.m_memberName = memberName;
};
oFF.BlendingMappingDefinition.prototype.releaseObject = function()
{
	this.m_queryAliasName = null;
	this.m_memberName = null;
	oFF.AbstractBlendingMapping.prototype.releaseObject.call( this );
};
oFF.BlendingMappingDefinition.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherGeneral = other;
	if (this.getMappingDefinitionType() !== otherGeneral.getMappingDefinitionType())
	{
		return false;
	}
	var xOther = other;
	if (!oFF.XString.isEqual(this.getMemberName(), xOther.getMemberName()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getQueryAliasName(), xOther.getQueryAliasName()))
	{
		return false;
	}
	return true;
};
oFF.BlendingMappingDefinition.prototype.getQueryAliasName = function()
{
	return this.m_queryAliasName;
};
oFF.BlendingMappingDefinition.prototype.getMemberName = function()
{
	return this.m_memberName;
};
oFF.BlendingMappingDefinition.prototype.toString = function()
{
	var sb = oFF.XStringBuffer.create();
	sb.append(this.m_queryAliasName).append(".");
	sb.append(this.m_memberName);
	sb.append("(").append(this.getMappingDefinitionType().getName()).append(")");
	return sb.toString();
};

oFF.BlendingProcessConfig = function() {};
oFF.BlendingProcessConfig.prototype = new oFF.XObjectExt();
oFF.BlendingProcessConfig.prototype._ff_c = "BlendingProcessConfig";

oFF.BlendingProcessConfig.create = function(primaryQueryManager, secondaryQueryManager, modelDimensionLinks, queryModelLinkSettings)
{
	var config = new oFF.BlendingProcessConfig();
	config.m_primaryQueryManager = primaryQueryManager;
	config.m_secondaryQueryManager = secondaryQueryManager;
	config.m_modelDimensionLinks = modelDimensionLinks;
	config.m_queryModelLinkSettings = queryModelLinkSettings;
	config.m_outOfContextLinkDimensionNames = oFF.XHashSetOfString.create();
	return config;
};
oFF.BlendingProcessConfig.prototype.m_primaryQueryManager = null;
oFF.BlendingProcessConfig.prototype.m_secondaryQueryManager = null;
oFF.BlendingProcessConfig.prototype.m_modelDimensionLinks = null;
oFF.BlendingProcessConfig.prototype.m_queryModelLinkSettings = null;
oFF.BlendingProcessConfig.prototype.m_outOfContextLinkDimensionNames = null;
oFF.BlendingProcessConfig.prototype.releaseObject = function()
{
	this.m_primaryQueryManager = null;
	this.m_secondaryQueryManager = null;
	this.m_modelDimensionLinks = null;
	this.m_queryModelLinkSettings = oFF.XObjectExt.release(this.m_queryModelLinkSettings);
	this.m_outOfContextLinkDimensionNames = oFF.XObjectExt.release(this.m_outOfContextLinkDimensionNames);
};
oFF.BlendingProcessConfig.prototype.getPrimaryQueryManager = function()
{
	return this.m_primaryQueryManager;
};
oFF.BlendingProcessConfig.prototype.setFirstQueryManager = function(queryManager)
{
	this.m_primaryQueryManager = queryManager;
};
oFF.BlendingProcessConfig.prototype.getSecondaryQueryManager = function()
{
	return this.m_secondaryQueryManager;
};
oFF.BlendingProcessConfig.prototype.getModelDimensionLinks = function()
{
	return this.m_modelDimensionLinks;
};
oFF.BlendingProcessConfig.prototype.getQueryModelLinkSettings = function()
{
	return this.m_queryModelLinkSettings;
};
oFF.BlendingProcessConfig.prototype.getOutOfContextLinkDimensionNames = function()
{
	return this.m_outOfContextLinkDimensionNames.getValuesAsReadOnlyListOfString();
};
oFF.BlendingProcessConfig.prototype.addOutOfContextLinkDimensionNames = function(dimensionName)
{
	this.m_outOfContextLinkDimensionNames.add(dimensionName);
};

oFF.QCmdBindResultset = function() {};
oFF.QCmdBindResultset.prototype = new oFF.XObjectExt();
oFF.QCmdBindResultset.prototype._ff_c = "QCmdBindResultset";

oFF.QCmdBindResultset.create = function(cmds, type, protocol)
{
	var newObj = new oFF.QCmdBindResultset();
	newObj.setupBind(cmds, type, protocol);
	return newObj;
};
oFF.QCmdBindResultset.prototype.m_dataManifest = null;
oFF.QCmdBindResultset.prototype.m_cmds = null;
oFF.QCmdBindResultset.prototype.m_type = null;
oFF.QCmdBindResultset.prototype.m_protocol = null;
oFF.QCmdBindResultset.prototype.m_listener = null;
oFF.QCmdBindResultset.prototype.m_customIdentifier = null;
oFF.QCmdBindResultset.prototype.m_requestCounter = 0;
oFF.QCmdBindResultset.prototype.m_isAttachedToServiceConfig = false;
oFF.QCmdBindResultset.prototype.m_isProcessingServiceConfig = false;
oFF.QCmdBindResultset.prototype.m_isAttachedToQueryManager = false;
oFF.QCmdBindResultset.prototype.m_tryProcessingQueryManager = false;
oFF.QCmdBindResultset.prototype.setupBind = function(cmds, type, protocol)
{
	this.m_cmds = cmds;
	this.m_type = type;
	this.m_protocol = protocol;
	this.tryAttachingToServiceConfig();
	this.tryAttachingToQueryExecution();
};
oFF.QCmdBindResultset.prototype.releaseObject = function()
{
	this.m_cmds = null;
	this.m_listener = null;
	this.m_customIdentifier = null;
	oFF.XObjectExt.prototype.releaseObject.call( this );
};
oFF.QCmdBindResultset.prototype.getComponentType = function()
{
	return oFF.IoComponentType.BINDING_SENDER;
};
oFF.QCmdBindResultset.prototype.getSession = function()
{
	if (oFF.notNull(this.m_cmds))
	{
		return this.m_cmds.getSession();
	}
	else
	{
		return null;
	}
};
oFF.QCmdBindResultset.prototype.getLogWriter = function()
{
	var session = this.getSession();
	if (oFF.notNull(session))
	{
		return session.getLogWriter();
	}
	else
	{
		return null;
	}
};
oFF.QCmdBindResultset.prototype.processSenderUpdate = function()
{
	this.log("processSenderUpdate");
	if (oFF.notNull(this.m_cmds))
	{
		this.tryAttachingToServiceConfig();
		this.tryProcessingServiceConfig();
		this.tryAttachingToQueryExecution();
		this.tryProcessingQueryManager();
	}
};
oFF.QCmdBindResultset.prototype.tryAttachingToServiceConfig = function()
{
	this.log("tryAttachingToServiceConfig()");
	if (oFF.notNull(this.m_cmds))
	{
		if (!this.m_isAttachedToServiceConfig)
		{
			var serviceConfig = this.m_cmds.getQueryServiceConfig();
			if (oFF.notNull(serviceConfig))
			{
				this.m_isAttachedToServiceConfig = true;
				serviceConfig.processQueryManagerCreation(oFF.SyncType.REGISTER, this, null);
			}
		}
	}
};
oFF.QCmdBindResultset.prototype.tryProcessingServiceConfig = function()
{
	this.log("tryProcessingServiceConfig");
	if (oFF.notNull(this.m_cmds))
	{
		if (this.m_isAttachedToServiceConfig && !this.m_isProcessingServiceConfig)
		{
			var serviceConfig = this.m_cmds.getQueryServiceConfig();
			if (oFF.notNull(serviceConfig))
			{
				this.m_isProcessingServiceConfig = true;
				serviceConfig.processQueryManagerCreation(null, null, null);
			}
		}
	}
};
oFF.QCmdBindResultset.prototype.onQueryManagerCreated = function(extResult, queryManager, customIdentifier)
{
	this.log("onQueryManagerCreated");
	this.m_dataManifest = oFF.DpDataManifestFactory.createByMessages(extResult);
	this.tryAttachingToQueryExecution();
};
oFF.QCmdBindResultset.prototype.tryAttachingToQueryExecution = function()
{
	this.log("tryAttachingToQueryManager");
	if (oFF.notNull(this.m_cmds))
	{
		if (this.m_isAttachedToServiceConfig && !this.m_isAttachedToQueryManager)
		{
			var queryManager = this.m_cmds.getQueryManager();
			if (oFF.notNull(queryManager))
			{
				this.m_isAttachedToQueryManager = true;
				queryManager.getQueryModel().registerChangedListener(this, null);
				queryManager.processQueryExecution(oFF.SyncType.REGISTER, this, null);
				if (this.m_tryProcessingQueryManager)
				{
					this.tryProcessingQueryManager();
				}
			}
		}
	}
};
oFF.QCmdBindResultset.prototype.onModelComponentChanged = function(modelComponent, customIdentifier)
{
	this.tryProcessingQueryManager();
};
oFF.QCmdBindResultset.prototype.tryProcessingQueryManager = function()
{
	this.log("tryProcessingQueryManager");
	this.m_tryProcessingQueryManager = true;
	if (oFF.notNull(this.m_cmds))
	{
		if (this.m_isAttachedToServiceConfig && this.m_isAttachedToQueryManager)
		{
			var queryManager = this.m_cmds.getQueryManager();
			if (oFF.notNull(queryManager))
			{
				this.m_tryProcessingQueryManager = false;
				this.m_requestCounter++;
				this.log(oFF.XStringBuffer.create().append("Request Counter: ").appendInt(this.m_requestCounter).toString());
				queryManager.processQueryExecution(null, null, null);
			}
		}
	}
};
oFF.QCmdBindResultset.prototype.onQueryExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	this.m_dataManifest = oFF.DpDataManifestFactory.createByMessages(extResult);
	this.log("onQueryExecuted");
	if (oFF.notNull(this.m_listener))
	{
		this.m_listener.onSenderValueChanged(this, this.m_customIdentifier);
	}
};
oFF.QCmdBindResultset.prototype.onCmdContextChanged = function()
{
	this.log("onCmdContextChanged");
};
oFF.QCmdBindResultset.prototype.isSenderValueReady = function()
{
	this.log("isSenderValueReady");
	var isSenderValueReady = false;
	if (oFF.notNull(this.m_cmds))
	{
		var queryManager = this.m_cmds.getQueryManager();
		if (oFF.notNull(queryManager))
		{
			var syncState = queryManager.getResultSetSyncState();
			isSenderValueReady = syncState.isInSync();
		}
	}
	return isSenderValueReady;
};
oFF.QCmdBindResultset.prototype.getString = function()
{
	if (oFF.notNull(this.m_cmds))
	{
		var grid = this.m_cmds.getReferenceGrid(false);
		if (oFF.notNull(grid))
		{
			var gridValue = grid.exportToAscii(50);
			this.log(gridValue);
			return gridValue;
		}
	}
	return null;
};
oFF.QCmdBindResultset.prototype.getElement = function()
{
	return oFF.isNull(this.m_cmds) ? null : this.m_cmds.getAbstractRendering(this.m_type, this.m_protocol);
};
oFF.QCmdBindResultset.prototype.getDataManifest = function()
{
	return this.m_dataManifest;
};
oFF.QCmdBindResultset.prototype.registerValueChangedListener = function(listener, customIdentifier)
{
	this.log("registerValueChangedListener");
	this.m_listener = listener;
	this.m_customIdentifier = customIdentifier;
};
oFF.QCmdBindResultset.prototype.unregisterValueChangedListener = function(listener)
{
	this.log("unregisterValueChangedListener");
	this.m_listener = null;
	this.m_customIdentifier = null;
};

oFF.QCurrencyTranslationObject = function() {};
oFF.QCurrencyTranslationObject.prototype = new oFF.XObject();
oFF.QCurrencyTranslationObject.prototype._ff_c = "QCurrencyTranslationObject";

oFF.QCurrencyTranslationObject.create = function(name, text, targetCurrency)
{
	var result = new oFF.QCurrencyTranslationObject();
	result.setName(name);
	result.setText(text);
	result.setTargetCurrency(targetCurrency);
	return result;
};
oFF.QCurrencyTranslationObject.prototype.m_name = null;
oFF.QCurrencyTranslationObject.prototype.m_text = null;
oFF.QCurrencyTranslationObject.prototype.m_targetCurrency = null;
oFF.QCurrencyTranslationObject.prototype.setTargetCurrency = function(targetCurrency)
{
	this.m_targetCurrency = targetCurrency;
};
oFF.QCurrencyTranslationObject.prototype.getName = function()
{
	return this.m_name;
};
oFF.QCurrencyTranslationObject.prototype.setName = function(name)
{
	this.m_name = name;
};
oFF.QCurrencyTranslationObject.prototype.getText = function()
{
	return this.m_text;
};
oFF.QCurrencyTranslationObject.prototype.setErrorHandling = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.getErrorHandling = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.supportsErrorHandling = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.supportsTargetCurrency = function()
{
	return oFF.XStringUtils.isNullOrEmpty(this.m_targetCurrency);
};
oFF.QCurrencyTranslationObject.prototype.supportsTargetCurrencyAsField = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.supportsTargetCurrencyAsVariable = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.supportsDefaultCurrency = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.requiresTargetCurrency = function()
{
	return oFF.XStringUtils.isNullOrEmpty(this.m_targetCurrency);
};
oFF.QCurrencyTranslationObject.prototype.isMissingTargetCurrency = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.supportsReferenceDate = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.supportsReferenceDateAsField = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.requiresReferenceDate = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.isMissingReferenceDate = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.supportsOffsetInDays = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.supportsOffsetInMonths = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.supportsRateName = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.requiresRateName = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.isMissingRateName = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.supportsPlanningParameters = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.setFixedTargetCurrencyByString = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.isTargetCurrencyFixed = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.getFixedTargetCurrency = function()
{
	return this.m_targetCurrency;
};
oFF.QCurrencyTranslationObject.prototype.setTargetCurrencyByFieldName = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.setTargetCurrencyByField = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.getTargetCurrencyField = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.getTargetCurrencyFieldName = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.isTargetCurrencyField = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.setTargetCurrencyByVariableName = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.setTargetCurrencyByVariable = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.getTargetCurrencyVariable = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.getTargetCurrencyVariableName = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.isTargetCurrencyVariable = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.setDefaultCurrency = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.isDefaultCurrency = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.setFixedReferenceDateByString = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.setFixedReferenceDateByDateValue = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.isReferenceDateFixed = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.getFixedReferenceDate = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.getFixedReferenceDateAsString = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.setReferenceDateByFieldName = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.setReferenceDateByField = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.isReferenceDateField = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.getReferenceDateField = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.getReferenceDateFieldName = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.setDynamicReferenceDate = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.setDynamicReferenceDateWithOffsetAndGranularity = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.setReferenceDateByFieldOffsetAndGranularity = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.setReferenceDateByFieldNameOffsetAndGranularity = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.getDateOffset = function()
{
	return 0;
};
oFF.QCurrencyTranslationObject.prototype.getDateOffsetGranularity = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.setFixedRateNameByString = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.isFixedRateName = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.getFixedRateName = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.setRateNameByFieldName = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.setRateNameByField = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.isRateNameField = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.getRateNameField = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.getRateNameFieldName = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.setFixedRateType = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.setDynamicRateType = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.getFixedRateType = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.setFixedCategory = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.getFixedCategory = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.setFixedRateVersion = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.getFixedRateVersion = function()
{
	return null;
};
oFF.QCurrencyTranslationObject.prototype.setDynamicRateVersionAndCategory = oFF.noSupport;
oFF.QCurrencyTranslationObject.prototype.isParametersComplete = function()
{
	return false;
};
oFF.QCurrencyTranslationObject.prototype.setText = function(text)
{
	this.m_text = text;
};

oFF.QFilterAcrossModelsTransientObjectGenerator = function() {};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype = new oFF.XObjectExt();
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype._ff_c = "QFilterAcrossModelsTransientObjectGenerator";

oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.m_name = null;
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.m_sourceContext = null;
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.m_targetContext = null;
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.m_links = null;
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.m_measureNames = null;
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.m_secondaryMeasureNames = null;
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.m_sourceFilters = null;
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.m_messageManager = null;
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.m_parent = null;
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.setupFilterAcrossModelsTransientObjectGenerator = function(parent, name, sourceContext, targetContext, messageManager, links, sourceFilters, measureNames, secondaryMeasureNames)
{
	this.m_parent = parent;
	this.m_name = name;
	this.m_sourceContext = sourceContext;
	this.m_targetContext = targetContext;
	this.m_messageManager = messageManager;
	this.m_links = links;
	this.m_sourceFilters = sourceFilters;
	this.m_measureNames = measureNames;
	this.m_secondaryMeasureNames = secondaryMeasureNames;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.releaseObject = function()
{
	this.m_name = null;
	this.m_targetContext = null;
	this.m_sourceContext = null;
	this.m_links = null;
	this.m_measureNames = null;
	this.m_secondaryMeasureNames = null;
	this.m_sourceFilters = null;
	this.m_parent = null;
	this.m_messageManager = null;
	oFF.XObjectExt.prototype.releaseObject.call( this );
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.generateTransientDimensions = function()
{
	return oFF.XList.create();
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.generateTransientFilters = function()
{
	return oFF.XList.create();
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.getTargetContext = function()
{
	return this.m_targetContext;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.setTargetContext = function(context)
{
	this.m_targetContext = context;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.getSourceContext = function()
{
	return this.m_sourceContext;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.setSourceContext = function(context)
{
	this.m_sourceContext = context;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.getMeasureNames = function()
{
	return this.m_measureNames;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.setMeasureNames = function(measureNames)
{
	this.m_measureNames = measureNames;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.getSecondaryMeasureNames = function()
{
	return this.m_secondaryMeasureNames;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.setSecondaryMeasureNames = function(measureNames)
{
	this.m_secondaryMeasureNames = measureNames;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.getLinks = function()
{
	return this.m_links;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.setLinks = function(links)
{
	this.m_links = links;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.getName = function()
{
	return this.m_name;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.setName = function(name)
{
	this.m_name = name;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.getSourceFilters = function()
{
	return this.m_sourceFilters;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.setSourceFilters = function(sourceFilters)
{
	this.m_sourceFilters = sourceFilters;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.getParent = function()
{
	return this.m_parent;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.getMessageManager = function()
{
	return this.m_messageManager;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.setMessageManager = function(messageManager)
{
	this.m_messageManager = messageManager;
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.createKeyRefForFirstSharedLink = function(linkPart)
{
	var storageName = oFF.QFilterAcrossModelsLinkUtil.getSharedLinkStorageName(this.m_links, linkPart);
	if (oFF.isNull(storageName))
	{
		return null;
	}
	else
	{
		return oFF.QFactory.createKeyRef(storageName, null, this.getName());
	}
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.getFirstSecondaryFieldLink = function(context)
{
	return oFF.QFilterAcrossModelsLinkUtil.getFirstSecondaryLinkPartForContext(this.m_links, context);
};
oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.isContextTypeOfBw = function(context)
{
	return context.getQueryModel().getConvenienceCommands().isTypeOfBw();
};

oFF.CustomHierarchyElement = function() {};
oFF.CustomHierarchyElement.prototype = new oFF.XObject();
oFF.CustomHierarchyElement.prototype._ff_c = "CustomHierarchyElement";

oFF.CustomHierarchyElement.prototype.m_name = null;
oFF.CustomHierarchyElement.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_name = null;
};
oFF.CustomHierarchyElement.prototype.setName = function(name)
{
	this.m_name = name;
};
oFF.CustomHierarchyElement.prototype.getName = function()
{
	return this.m_name;
};
oFF.CustomHierarchyElement.prototype.isEqualTo = function(other)
{
	if (this === other)
	{
		return true;
	}
	if (oFF.isNull(other))
	{
		return false;
	}
	var otherElement = other;
	return oFF.XString.isEqual(this.getName(), otherElement.getName()) && this.isMemberElement() === otherElement.isMemberElement();
};
oFF.CustomHierarchyElement.prototype.toString = function()
{
	return this.getName();
};

oFF.LovManager = function() {};
oFF.LovManager.prototype = new oFF.XObject();
oFF.LovManager.prototype._ff_c = "LovManager";

oFF.LovManager.create = function(queryManager)
{
	var lovManager = new oFF.LovManager();
	lovManager.m_queryManager = queryManager;
	lovManager.m_processes = oFF.XList.create();
	lovManager.resetState();
	return lovManager;
};
oFF.LovManager.prototype.m_queryManager = null;
oFF.LovManager.prototype.m_lovAbstractionEnabled = false;
oFF.LovManager.prototype.m_includeMeasures = false;
oFF.LovManager.prototype.m_automaticVhReadModeConfigEnabled = false;
oFF.LovManager.prototype.m_automaticVhDrillLevelConfigEnabled = false;
oFF.LovManager.prototype.m_ignoreMultipleDrillsInVh = false;
oFF.LovManager.prototype.m_restoreSettingsAfterImplicitSubmit = false;
oFF.LovManager.prototype.m_processes = null;
oFF.LovManager.prototype.releaseObject = function()
{
	oFF.XObject.prototype.releaseObject.call( this );
	this.m_queryManager = null;
	this.m_processes = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_processes);
};
oFF.LovManager.prototype.copyFrom = function(other, flags)
{
	oFF.XObject.prototype.copyFrom.call( this , other, flags);
	var otherLovManager = other;
	this.m_lovAbstractionEnabled = otherLovManager.isLovAbstractionEnabled();
	this.m_includeMeasures = otherLovManager.isIncludeMeasures();
	this.m_automaticVhReadModeConfigEnabled = otherLovManager.isAutomaticValueHelpReadModeConfigurationEnabled();
	this.m_automaticVhDrillLevelConfigEnabled = otherLovManager.isAutomaticValueHelpDrillLevelConfigurationEnabled();
	this.m_ignoreMultipleDrillsInVh = otherLovManager.isIgnoreMultipleDrillsInValueHelp();
	this.m_restoreSettingsAfterImplicitSubmit = otherLovManager.isRestoreSettingsAfterImplicitSubmit();
};
oFF.LovManager.prototype.resetState = function()
{
	this.m_includeMeasures = false;
	this.m_automaticVhReadModeConfigEnabled = true;
	this.m_automaticVhDrillLevelConfigEnabled = true;
	this.m_ignoreMultipleDrillsInVh = false;
	this.m_restoreSettingsAfterImplicitSubmit = false;
};
oFF.LovManager.prototype.processListOfValues = function(dimension, includeMeasures, syncType, listener, customIdentifier)
{
	return this.processListOfValuesByConfig(this.createLovConfig(dimension, includeMeasures), syncType, listener, customIdentifier);
};
oFF.LovManager.prototype.processListOfValuesByConfig = function(config, syncType, listener, customIdentifier)
{
	var lovProcess = oFF.QFactory.createLovProcess(this.m_queryManager, config);
	this.m_processes.add(lovProcess);
	lovProcess.execute(syncType, listener, customIdentifier);
	return lovProcess;
};
oFF.LovManager.prototype.createLovCapabilities = function(dimension, includeMeasures)
{
	return this.createLovConfig(dimension, includeMeasures);
};
oFF.LovManager.prototype.createConfigForActiveResultSetContainer = function(resultSetContainer)
{
	var config = this.createLovConfig(null, this.m_includeMeasures);
	config.setUseActiveResultSetContainer(true);
	this.setKeyFigureCalculation(resultSetContainer, config);
	return config;
};
oFF.LovManager.prototype.createLovConfig = function(dimension, includeMeasures)
{
	var processConfig = oFF.LovProcessConfig.create(this.m_queryManager.getQueryModel(), dimension, includeMeasures, this.m_ignoreMultipleDrillsInVh);
	processConfig.setAutomaticValueHelpReadModeConfigurationEnabled(this.m_automaticVhReadModeConfigEnabled);
	processConfig.setAutomaticValueHelpDrillLevelConfigurationEnabled(this.m_automaticVhDrillLevelConfigEnabled);
	processConfig.setRestoreSettingsAfterImplicitSubmit(this.m_restoreSettingsAfterImplicitSubmit);
	return processConfig;
};
oFF.LovManager.prototype.setLovAbstractionEnabled = function(lovAbstractionEnabled, resetState)
{
	this.m_lovAbstractionEnabled = lovAbstractionEnabled;
	if (resetState)
	{
		this.resetState();
	}
	if (lovAbstractionEnabled)
	{
		this.notifyNodeChanged();
	}
};
oFF.LovManager.prototype.isLovAbstractionEnabled = function()
{
	return this.m_lovAbstractionEnabled;
};
oFF.LovManager.prototype.setIncludeMeasures = function(includeMeasures)
{
	if (this.m_includeMeasures !== includeMeasures)
	{
		this.m_includeMeasures = includeMeasures;
		this.notifyNodeChanged();
	}
};
oFF.LovManager.prototype.isIncludeMeasures = function()
{
	return this.m_includeMeasures;
};
oFF.LovManager.prototype.setAutomaticValueHelpReadModeConfigurationEnabled = function(automaticValueHelpReadModeConfigurationEnabled)
{
	if (this.m_automaticVhReadModeConfigEnabled !== automaticValueHelpReadModeConfigurationEnabled)
	{
		this.m_automaticVhReadModeConfigEnabled = automaticValueHelpReadModeConfigurationEnabled;
		this.notifyNodeChanged();
	}
};
oFF.LovManager.prototype.isAutomaticValueHelpReadModeConfigurationEnabled = function()
{
	return this.m_automaticVhReadModeConfigEnabled;
};
oFF.LovManager.prototype.setAutomaticValueHelpDrillLevelConfigurationEnabled = function(automaticValueHelpDrillLevelConfigurationEnabled)
{
	if (this.m_automaticVhDrillLevelConfigEnabled !== automaticValueHelpDrillLevelConfigurationEnabled)
	{
		this.m_automaticVhDrillLevelConfigEnabled = automaticValueHelpDrillLevelConfigurationEnabled;
		this.notifyNodeChanged();
	}
};
oFF.LovManager.prototype.isAutomaticValueHelpDrillLevelConfigurationEnabled = function()
{
	return this.m_automaticVhDrillLevelConfigEnabled;
};
oFF.LovManager.prototype.setRestoreSettingsAfterImplicitSubmit = function(restoreSettingsAfterImplicitSubmit)
{
	this.m_restoreSettingsAfterImplicitSubmit = restoreSettingsAfterImplicitSubmit;
};
oFF.LovManager.prototype.isRestoreSettingsAfterImplicitSubmit = function()
{
	return this.m_restoreSettingsAfterImplicitSubmit;
};
oFF.LovManager.prototype.setIgnoreMultipleDrillsInValueHelp = function(ignoreMultipleDrillsInValueHelp)
{
	if (this.m_ignoreMultipleDrillsInVh !== ignoreMultipleDrillsInValueHelp)
	{
		this.m_ignoreMultipleDrillsInVh = ignoreMultipleDrillsInValueHelp;
		this.notifyNodeChanged();
	}
};
oFF.LovManager.prototype.isIgnoreMultipleDrillsInValueHelp = function()
{
	return this.m_ignoreMultipleDrillsInVh;
};
oFF.LovManager.prototype.setKeyFigureCalculation = function(resultSetContainer, config)
{
	resultSetContainer.setSuppressKeyfigureCalculation(!config.isIncludeMeasures());
	if (resultSetContainer.isKeyfigureCalculationSuppressed())
	{
		var queryModel = resultSetContainer.getQueryModel();
		this.deactivateZeroSuppression(queryModel.getRowsAxis());
		this.deactivateZeroSuppression(queryModel.getColumnsAxis());
		var measureStructure = queryModel.getDimensionByType(oFF.DimensionType.MEASURE_STRUCTURE);
		if (oFF.notNull(measureStructure) && measureStructure.getAxisType() !== oFF.AxisType.COLUMNS && config.getDimension() !== measureStructure)
		{
			queryModel.getColumnsAxis().add(measureStructure);
		}
		var secondaryStructure = queryModel.getDimensionByType(oFF.DimensionType.SECONDARY_STRUCTURE);
		if (oFF.notNull(secondaryStructure) && secondaryStructure.getAxisType() !== oFF.AxisType.COLUMNS && config.getDimension() !== secondaryStructure)
		{
			queryModel.getColumnsAxis().add(secondaryStructure);
		}
	}
};
oFF.LovManager.prototype.deactivateZeroSuppression = function(axis)
{
	if (axis.supportsZeroSuppression())
	{
		axis.setZeroSuppressionType(oFF.ZeroSuppressionType.NONE);
	}
};
oFF.LovManager.prototype.notifyNodeChanged = function()
{
	if (this.m_lovAbstractionEnabled)
	{
		var queryModel = this.m_queryManager.getQueryModel();
		queryModel.notifyNodeChanged();
	}
};

oFF.QPersistedPlaceholderTag = function() {};
oFF.QPersistedPlaceholderTag.prototype = new oFF.XObject();
oFF.QPersistedPlaceholderTag.prototype._ff_c = "QPersistedPlaceholderTag";

oFF.QPersistedPlaceholderTag.PERSISTED_QUERY_PLACEHOLDER = "PersistedQueryPlaceholder";
oFF.QPersistedPlaceholderTag.prototype.m_name = null;
oFF.QPersistedPlaceholderTag.prototype.m_canonicalDateContext = null;
oFF.QPersistedPlaceholderTag.prototype.setupPersistedPlaceholderTag = function(name, canonicalDateContext)
{
	this.m_name = name;
	this.m_canonicalDateContext = canonicalDateContext;
};
oFF.QPersistedPlaceholderTag.prototype.getName = function()
{
	return this.m_name;
};
oFF.QPersistedPlaceholderTag.prototype.setName = function(name)
{
	this.m_name = name;
};
oFF.QPersistedPlaceholderTag.prototype.getCanonicalDateContext = function()
{
	return this.m_canonicalDateContext;
};
oFF.QPersistedPlaceholderTag.prototype.setCanonicalDateContext = function(canonicalDateContext)
{
	this.m_canonicalDateContext = canonicalDateContext;
};

oFF.QTimeSelectionPlaceholderToDate = function() {};
oFF.QTimeSelectionPlaceholderToDate.prototype = new oFF.QTimeSelectionPlaceholder();
oFF.QTimeSelectionPlaceholderToDate.prototype._ff_c = "QTimeSelectionPlaceholderToDate";

oFF.QTimeSelectionPlaceholderToDate.TIME_OPERATION_GRANULARITY = "timeOperationGranularity";
oFF.QTimeSelectionPlaceholderToDate.createTimeSelectionPlaceholderToDateFromPlaceholderString = function(selectionPlaceholderString)
{
	try
	{
		var selectionPlaceholderJson = oFF.JsonParserFactory.createFromString(selectionPlaceholderString);
		var selectionPlaceholderStructure = selectionPlaceholderJson.asStructure();
		var timeSelectionPlaceholder = new oFF.QTimeSelectionPlaceholderToDate();
		timeSelectionPlaceholder.setupSelectionPlaceholderToDateFromStructure(selectionPlaceholderStructure);
		return timeSelectionPlaceholder;
	}
	catch (e)
	{
		return null;
	}
};
oFF.QTimeSelectionPlaceholderToDate.prototype.m_timeOperationGranularity = null;
oFF.QTimeSelectionPlaceholderToDate.prototype.setupSelectionPlaceholderToDateFromStructure = function(selectionPlaceholderStructure)
{
	oFF.QTimeSelectionPlaceholder.prototype.setupSelectionPlaceholderFromStructure.call( this , selectionPlaceholderStructure);
	this.m_timeOperationGranularity = oFF.DateTimeGranularityType.lookup(selectionPlaceholderStructure.getStringByKey(oFF.QTimeSelectionPlaceholderToDate.TIME_OPERATION_GRANULARITY));
};
oFF.QTimeSelectionPlaceholderToDate.prototype.serializeToJson = function()
{
	var selectionPlaceholderJson = oFF.QTimeSelectionPlaceholder.prototype.serializeToJson.call( this );
	if (oFF.notNull(this.m_timeOperationGranularity))
	{
		selectionPlaceholderJson.putString(oFF.QTimeSelectionPlaceholderToDate.TIME_OPERATION_GRANULARITY, this.m_timeOperationGranularity.getName());
	}
	return selectionPlaceholderJson;
};
oFF.QTimeSelectionPlaceholderToDate.prototype.getTimeOperationGranularity = function()
{
	return this.m_timeOperationGranularity;
};
oFF.QTimeSelectionPlaceholderToDate.prototype.setTimeOperationGranularity = function(timeOperationGranularity)
{
	this.m_timeOperationGranularity = timeOperationGranularity;
};

oFF.ValueHelpListenerDecorator = function() {};
oFF.ValueHelpListenerDecorator.prototype = new oFF.XObject();
oFF.ValueHelpListenerDecorator.prototype._ff_c = "ValueHelpListenerDecorator";

oFF.ValueHelpListenerDecorator.create = function(originalListener)
{
	var wrapper = new oFF.ValueHelpListenerDecorator();
	wrapper.m_originalListener = originalListener;
	return wrapper;
};
oFF.ValueHelpListenerDecorator.prototype.m_originalListener = null;
oFF.ValueHelpListenerDecorator.prototype.m_result = null;
oFF.ValueHelpListenerDecorator.prototype.releaseObject = function()
{
	this.m_originalListener = null;
	this.m_result = null;
};
oFF.ValueHelpListenerDecorator.prototype.getResult = function()
{
	return this.m_result;
};
oFF.ValueHelpListenerDecorator.prototype.onValuehelpExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	this.m_result = this.rewriteToNodeResponse(extResult);
	if (oFF.notNull(this.m_originalListener))
	{
		this.m_originalListener.onValuehelpExecuted(this.m_result, resultSetContainer, customIdentifier);
	}
};
oFF.ValueHelpListenerDecorator.prototype.rewriteToNodeResponse = function(result)
{
	var nodes = null;
	var data = result.getData();
	if (oFF.notNull(data))
	{
		nodes = oFF.XList.create();
		var size = data.size();
		for (var i = 0; i < size; i++)
		{
			nodes.add(data.get(i));
		}
	}
	return oFF.ExtResult.create(nodes, result);
};

oFF.QBindingAttributeFilterDescription = function() {};
oFF.QBindingAttributeFilterDescription.prototype = new oFF.QBindingAttribute();
oFF.QBindingAttributeFilterDescription.prototype._ff_c = "QBindingAttributeFilterDescription";

oFF.QBindingAttributeFilterDescription.create = function(cmds, type, protocol, path)
{
	var newObj = new oFF.QBindingAttributeFilterDescription();
	newObj.setupBind(cmds, type, protocol, path);
	return newObj;
};
oFF.QBindingAttributeFilterDescription.prototype.getString = function()
{
	if (oFF.notNull(this.m_cmds))
	{
		var queryManager = this.m_cmds.getQueryManager();
		if (oFF.notNull(queryManager))
		{
			var filterType = this.m_splittedPath.get(2);
			var filter = queryManager.getQueryModel().getFilter();
			var expression = null;
			if (oFF.XString.isEqual(filterType, "dynamic"))
			{
				expression = filter.getDynamicFilter();
			}
			else if (oFF.XString.isEqual(filterType, "fixed"))
			{
				expression = filter.getFixedFilter();
			}
			var text = null;
			if (oFF.notNull(expression))
			{
				text = expression.serializeToString(oFF.QModelFormat.INA_REPOSITORY);
			}
			return text;
		}
	}
	return null;
};

oFF.QBindingAttributeFilterSingleMemberSelection = function() {};
oFF.QBindingAttributeFilterSingleMemberSelection.prototype = new oFF.QBindingAttribute();
oFF.QBindingAttributeFilterSingleMemberSelection.prototype._ff_c = "QBindingAttributeFilterSingleMemberSelection";

oFF.QBindingAttributeFilterSingleMemberSelection.create = function(cmds, type, protocol, path)
{
	var newObj = new oFF.QBindingAttributeFilterSingleMemberSelection();
	newObj.setupBind(cmds, type, protocol, path);
	return newObj;
};
oFF.QBindingAttributeFilterSingleMemberSelection.prototype.getString = function()
{
	return null;
};
oFF.QBindingAttributeFilterSingleMemberSelection.prototype.setString = function(value)
{
	oFF.QBindingAttribute.prototype.setString.call( this , value);
};

oFF.QBindingAttributePresentation = function() {};
oFF.QBindingAttributePresentation.prototype = new oFF.QBindingAttribute();
oFF.QBindingAttributePresentation.prototype._ff_c = "QBindingAttributePresentation";

oFF.QBindingAttributePresentation.create = function(cmds, type, protocol, path)
{
	var newObj = new oFF.QBindingAttributePresentation();
	newObj.setupBind(cmds, type, protocol, path);
	newObj.m_dimName = newObj.m_splittedPath.get(3);
	return newObj;
};
oFF.QBindingAttributePresentation.prototype.m_dimName = null;
oFF.QBindingAttributePresentation.prototype.getString = function()
{
	var queryManager = this.getQueryManager();
	if (oFF.notNull(queryManager))
	{
		var dimension = queryManager.getQueryModel().getDimensionByName(this.m_dimName);
		if (oFF.notNull(dimension))
		{
			var resultSetFields = dimension.getResultSetFields();
			if (resultSetFields.size() === 1)
			{
				var field = resultSetFields.get(0);
				var presentationType = field.getPresentationType();
				return presentationType.getName();
			}
		}
	}
	return null;
};
oFF.QBindingAttributePresentation.prototype.setString = function(value)
{
	var cmds = this.getConvenienceCommands();
	if (oFF.notNull(cmds) && oFF.notNull(value))
	{
		var presentationType = oFF.PresentationType.lookup(value);
		if (oFF.notNull(presentationType))
		{
			cmds.setField(null, this.m_dimName, presentationType, null, oFF.QContextType.RESULT_SET);
		}
	}
};

oFF.QBindingAttributePresentationValueHelp = function() {};
oFF.QBindingAttributePresentationValueHelp.prototype = new oFF.QBindingAttribute();
oFF.QBindingAttributePresentationValueHelp.prototype._ff_c = "QBindingAttributePresentationValueHelp";

oFF.QBindingAttributePresentationValueHelp.create = function(cmds, type, protocol, path)
{
	var newObj = new oFF.QBindingAttributePresentationValueHelp();
	newObj.setupBind(cmds, type, protocol, path);
	return newObj;
};
oFF.QBindingAttributePresentationValueHelp.prototype.getString = function()
{
	return null;
};
oFF.QBindingAttributePresentationValueHelp.prototype.setString = function(value)
{
	oFF.QBindingAttribute.prototype.setString.call( this , value);
};

oFF.QBindingMenu = function() {};
oFF.QBindingMenu.prototype = new oFF.QBindingAttribute();
oFF.QBindingMenu.prototype._ff_c = "QBindingMenu";

oFF.QBindingMenu.NAME = "Name";
oFF.QBindingMenu.TEXT = "Text";
oFF.QBindingMenu.SCRIPT = "Script";
oFF.QBindingMenu.ITEMS = "Items";
oFF.QBindingMenu.create = function(cmds, type, protocol, path)
{
	var newObj = new oFF.QBindingMenu();
	newObj.setupBind(cmds, type, protocol, path);
	return newObj;
};
oFF.QBindingMenu.prototype.getElement = function()
{
	var root = null;
	var queryManager = this.getQueryManager();
	if (oFF.notNull(queryManager))
	{
		var model = queryManager.getQueryModel();
		root = oFF.PrFactory.createStructure();
		var dpName = "DP1";
		var items = root.putNewList(oFF.QBindingMenu.ITEMS);
		var queryList = this.addNode(items, "Query", "Query");
		var bufferVar = oFF.XStringBuffer.create().append("$('dialog:variablescreen')");
		bufferVar.append(".setDataProvider('").append(dpName).append("').open();");
		this.addLeaf(queryList, "VariableScreen", "Variable Screen", bufferVar.toString());
		var dimItems = this.addNode(items, "Dims", "Dimensions");
		var dimensions = model.getDimensions();
		for (var i = 0; i < dimensions.size(); i++)
		{
			var currentDim = dimensions.get(i);
			var dimPropItems = this.addNode(dimItems, currentDim.getName(), this.getText(currentDim));
			var currentPresentations = this.addNode(dimPropItems, "SetPresentation", "Set Presentation");
			var fields = currentDim.getFields();
			for (var k = 0; k < fields.size(); k++)
			{
				var field = fields.getFieldAt(k);
				var presentationType = field.getPresentationType();
				var buffer = oFF.XStringBuffer.create().append("$('dp:").append(dpName).append("')");
				buffer.append(".clearAllResultSetFields('").append(currentDim.getName()).append("')");
				buffer.append(".addFieldByTypeToResultSetStr('").append(currentDim.getName()).append("','").append(presentationType.getName()).append("');");
				var theScript = buffer.toString();
				this.addLeaf(currentPresentations, presentationType.getName(), presentationType.getName(), theScript);
			}
			if (currentPresentations.size() === 0)
			{
				dimPropItems.removeAt(dimPropItems.size() - 1);
			}
			var axisOp = this.addNode(dimPropItems, "MoveTo", "Move to axis...");
			this.addMoveToOp(dpName, axisOp, currentDim, oFF.AxisType.COLUMNS);
			this.addMoveToOp(dpName, axisOp, currentDim, oFF.AxisType.ROWS);
			this.addMoveToOp(dpName, axisOp, currentDim, oFF.AxisType.FREE);
			if (axisOp.size() === 0)
			{
				dimPropItems.removeAt(dimPropItems.size() - 1);
			}
		}
		var axesItems = this.addNode(items, "Axes", "Axes");
		this.addAxisOperations(dpName, axesItems, oFF.AxisType.ROWS);
		this.addAxisOperations(dpName, axesItems, oFF.AxisType.COLUMNS);
	}
	return root;
};
oFF.QBindingMenu.prototype.addAxisOperations = function(dpName, parentList, axisType)
{
	var axesItems = this.addNode(parentList, axisType.getName(), axisType.getName());
	var theScript = oFF.XStringBuffer.create().append("$('dp:").append(dpName).append("').clearAxisStr('").append(axisType.getName()).append("');").toString();
	this.addLeaf(axesItems, oFF.XStringUtils.concatenate2("ClearAxis", axisType.getName()), "Clear", theScript);
};
oFF.QBindingMenu.prototype.getText = function(nameTextObj)
{
	var text = nameTextObj.getText();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(text))
	{
		return text;
	}
	else
	{
		return nameTextObj.getName();
	}
};
oFF.QBindingMenu.prototype.addMoveToOp = function(dpName, axisOp, currentDim, axisType)
{
	if (currentDim.getAxisType() !== axisType && currentDim.supportsAxis(axisType))
	{
		var theScript = oFF.XStringBuffer.create().append("$('dp:").append(dpName).append("').moveDimensionToAxisStr('").append(currentDim.getName()).append("','").append(axisType.getName()).append("');").toString();
		this.addLeaf(axisOp, axisType.getName(), axisType.getName(), theScript);
	}
};
oFF.QBindingMenu.prototype.addLeaf = function(items, name, text, script)
{
	var theStructure = items.addNewStructure();
	theStructure.putString(oFF.QBindingMenu.NAME, name);
	theStructure.putString(oFF.QBindingMenu.TEXT, text);
	theStructure.putString(oFF.QBindingMenu.SCRIPT, script);
	return theStructure;
};
oFF.QBindingMenu.prototype.addNode = function(items, name, text)
{
	var theStructure = items.addNewStructure();
	theStructure.putString(oFF.QBindingMenu.NAME, name);
	theStructure.putString(oFF.QBindingMenu.TEXT, text);
	var theItems = theStructure.putNewList(oFF.QBindingMenu.ITEMS);
	return theItems;
};
oFF.QBindingMenu.prototype.onModelComponentChanged = function(modelComponent, customIdentifier)
{
	oFF.QBindingAttribute.prototype.onModelComponentChanged.call( this , modelComponent, customIdentifier);
};

oFF.QCapabilities = function() {};
oFF.QCapabilities.prototype = new oFF.XObject();
oFF.QCapabilities.prototype._ff_c = "QCapabilities";

oFF.QCapabilities.create = function()
{
	var newObj = new oFF.QCapabilities();
	newObj.m_supportedResultAlignmentLevel = oFF.QModelLevel.NONE;
	newObj.m_supportedVisibilityLocation = oFF.QModelLevel.NONE;
	newObj.m_supportedReorderingCapability = oFF.ReorderingCapability.NONE;
	newObj.m_supportedResultAlignment = oFF.XList.create();
	newObj.m_supportedConditionalResults = oFF.XList.create();
	newObj.m_supportedSortingTypes = oFF.XSetOfNameObject.create();
	newObj.m_supportedBreakGrouping = oFF.XSetOfNameObject.create();
	return newObj;
};
oFF.QCapabilities.prototype.m_systemType = null;
oFF.QCapabilities.prototype.m_systemName = null;
oFF.QCapabilities.prototype.m_serverMetadataVersion = null;
oFF.QCapabilities.prototype.m_supportsExtendedVariableDefinition = false;
oFF.QCapabilities.prototype.m_supportsCustomDimensionFilterCapability = false;
oFF.QCapabilities.prototype.m_supportsFormulaMeasures = false;
oFF.QCapabilities.prototype.m_supportsRestrictedMeasures = false;
oFF.QCapabilities.prototype.m_supportsResultsetFacets = false;
oFF.QCapabilities.prototype.m_supportsConditionalResultVisibility = false;
oFF.QCapabilities.prototype.m_supportsConditionalResults = false;
oFF.QCapabilities.prototype.m_supportsCartesianFilterIntersect = false;
oFF.QCapabilities.prototype.m_supportsCheckVariables = false;
oFF.QCapabilities.prototype.m_supportsDirectVariableTransfer = false;
oFF.QCapabilities.prototype.m_supportsShutdown = false;
oFF.QCapabilities.prototype.m_supportsCellValueOperand = false;
oFF.QCapabilities.prototype.m_supportsIntersectLayers = false;
oFF.QCapabilities.prototype.m_supportsComplexFilter = false;
oFF.QCapabilities.prototype.m_supportsVisibilityFilter = false;
oFF.QCapabilities.prototype.m_supportsDataCellMixedValues = false;
oFF.QCapabilities.prototype.m_supportsSetOperand = false;
oFF.QCapabilities.prototype.m_supportsConvertToFlatFilter = false;
oFF.QCapabilities.prototype.m_supportsCummulative = false;
oFF.QCapabilities.prototype.m_supportsHierNavCounter = false;
oFF.QCapabilities.prototype.m_supportsHierAttHierFields = false;
oFF.QCapabilities.prototype.m_supportsHierCarryingDim = false;
oFF.QCapabilities.prototype.m_supportsSortTypes = false;
oFF.QCapabilities.prototype.m_supportsSpatialFilter = false;
oFF.QCapabilities.prototype.m_supportsSpatialFilterSrid = false;
oFF.QCapabilities.prototype.m_supportsExtendedDimensions = false;
oFF.QCapabilities.prototype.m_supportsExtendedDimensionsOuterJoin = false;
oFF.QCapabilities.prototype.m_supportsExtendedDimensionsSkip = false;
oFF.QCapabilities.prototype.m_supportsExtendedDimensionsJoinColumns = false;
oFF.QCapabilities.prototype.m_supportsExtendedDimensionsFieldMapping = false;
oFF.QCapabilities.prototype.m_supportsExtendedDimensionsJoinCardinality = false;
oFF.QCapabilities.prototype.m_supportsSortNewValues = false;
oFF.QCapabilities.prototype.m_supportsIgnoreUnitOfZeroValueInAggregation = false;
oFF.QCapabilities.prototype.m_supportsCubeBlendingWithNSubqueries = false;
oFF.QCapabilities.prototype.m_supportsCubeBlendingPersistanceType = false;
oFF.QCapabilities.prototype.m_supportsExtendedDimensionsChangeDefaultRenamingAndDescription = false;
oFF.QCapabilities.prototype.m_supportsExtendedDimensionsCopyAllHierarchies = false;
oFF.QCapabilities.prototype.m_supportsFixMetadataHierarchyAttributes = false;
oFF.QCapabilities.prototype.m_supportsUniversalDisplayHierarchies = false;
oFF.QCapabilities.prototype.m_supportsUniversalDisplayHierarchiesCustomDimensions = false;
oFF.QCapabilities.prototype.m_supportsUniversalDisplayHierarchiesZeroBased = false;
oFF.QCapabilities.prototype.m_supportsRemoteBlending = false;
oFF.QCapabilities.prototype.m_supportsCubeCache = false;
oFF.QCapabilities.prototype.m_supportsCatalogServiceV2 = false;
oFF.QCapabilities.prototype.m_supportsCustomSort = false;
oFF.QCapabilities.prototype.m_supportsDataRefreshAndDataTopicality = false;
oFF.QCapabilities.prototype.m_supportsRemoteBlendingBW = false;
oFF.QCapabilities.prototype.m_supportsTuplesOperand = false;
oFF.QCapabilities.prototype.m_supportsCustomMeasureSortOrder = false;
oFF.QCapabilities.prototype.m_supportsComplexTupleFilter = false;
oFF.QCapabilities.prototype.m_supportsF4FilterForTextField = false;
oFF.QCapabilities.prototype.m_supportsSidPresentation = false;
oFF.QCapabilities.prototype.m_supportsExceptionAggregationAvgNullSelectionMember = false;
oFF.QCapabilities.prototype.m_supportsExceptionAggregationCountNullSelectionMember = false;
oFF.QCapabilities.prototype.m_supportsStatisticalAggregations = false;
oFF.QCapabilities.prototype.m_supportsVarianceOperator = false;
oFF.QCapabilities.prototype.m_supportsTotalOperator = false;
oFF.QCapabilities.prototype.m_supportsAsyncRemoteModelValidation = false;
oFF.QCapabilities.prototype.m_supportsExtendedKeyFigureProperties = false;
oFF.QCapabilities.prototype.m_supportsDetailedResponseExpansion = false;
oFF.QCapabilities.prototype.m_supportsDynamicVariableRefresh = false;
oFF.QCapabilities.prototype.m_supportsQueryCurrencyTranslation = false;
oFF.QCapabilities.prototype.m_supportsCurrencyTranslation = false;
oFF.QCapabilities.prototype.m_supportsStructureRestrictionsInValueHelp = false;
oFF.QCapabilities.prototype.m_supportsSpatialChoropleth = false;
oFF.QCapabilities.prototype.m_supportsCustomHierarchy = false;
oFF.QCapabilities.prototype.m_supportsInaCurrentMember = false;
oFF.QCapabilities.prototype.m_supportsDimensionVisibility = false;
oFF.QCapabilities.prototype.m_supportsDimensionDefaultMember = false;
oFF.QCapabilities.prototype.m_supportsDisplayHierarchyFixInFilter = false;
oFF.QCapabilities.prototype.m_supportsCustomMemberKeySortOrder = false;
oFF.QCapabilities.prototype.m_supportsSpatialTransformation = false;
oFF.QCapabilities.prototype.m_supportsMemberVisibility = false;
oFF.QCapabilities.prototype.m_supportsHierarchyMetadata = false;
oFF.QCapabilities.prototype.m_supportsDimensionHierarchyLevels = false;
oFF.QCapabilities.prototype.m_supportsHierarchyLevelMetadata = false;
oFF.QCapabilities.prototype.m_supportsHierarchyNavigationDeltaMode = false;
oFF.QCapabilities.prototype.m_supportsCeScenarioParams = false;
oFF.QCapabilities.prototype.m_supportsLocaleSorting = false;
oFF.QCapabilities.prototype.m_supportsHierarchyLevelOffsetFilter = false;
oFF.QCapabilities.prototype.m_supportsHierarchyTrapezoidFilter = false;
oFF.QCapabilities.prototype.m_supportsUnifiedDataCells = false;
oFF.QCapabilities.prototype.m_supportsAverageCountNullZero = false;
oFF.QCapabilities.prototype.m_supportsExceptionsV2 = false;
oFF.QCapabilities.prototype.m_supportsSpatialClustering = false;
oFF.QCapabilities.prototype.m_supportsKeepOriginalTexts = false;
oFF.QCapabilities.prototype.m_supportsConditions = false;
oFF.QCapabilities.prototype.m_supportsExtendedSort = false;
oFF.QCapabilities.prototype.m_supportsDataCells = false;
oFF.QCapabilities.prototype.m_supportsExpandBottomUp = false;
oFF.QCapabilities.prototype.m_supportsIgnoreExternalDimensions = false;
oFF.QCapabilities.prototype.m_supportsExceptionAggregationDimsFormulas = false;
oFF.QCapabilities.prototype.m_supportsExceptionSettings = false;
oFF.QCapabilities.prototype.m_supportsExceptions = false;
oFF.QCapabilities.prototype.m_supportsHierarchyVirtualRootNode = false;
oFF.QCapabilities.prototype.m_supportsHierarchyRestNode = false;
oFF.QCapabilities.prototype.m_supportsCubeBlending = false;
oFF.QCapabilities.prototype.m_supportsCubeBlendingProperties = false;
oFF.QCapabilities.prototype.m_supportsCubeBlendingOutOfContext = false;
oFF.QCapabilities.prototype.m_supportsCubeBlendingAggregation = false;
oFF.QCapabilities.prototype.m_supportsCubeBlendingReadmode = false;
oFF.QCapabilities.prototype.m_supportsCubeBlendingSorting = false;
oFF.QCapabilities.prototype.m_supportsCubeBlendingCustomMember = false;
oFF.QCapabilities.prototype.m_supportsMetadataDataCategory = false;
oFF.QCapabilities.prototype.m_supportsHierarchyPath = false;
oFF.QCapabilities.prototype.m_supportsUniqueHierarchyPath = false;
oFF.QCapabilities.prototype.m_supportsExtendedDimensionVisibility = false;
oFF.QCapabilities.prototype.m_supportsResultSetUnitIndex = false;
oFF.QCapabilities.prototype.m_supportsMetadataDataSourceDefinitionValidation = false;
oFF.QCapabilities.prototype.m_supportsAsyncBatchRequests = false;
oFF.QCapabilities.prototype.m_supportsVariableVariants = false;
oFF.QCapabilities.prototype.m_supportsCalculatedDimensions = false;
oFF.QCapabilities.prototype.m_supportsPlanningOnCalculatedDimensions = false;
oFF.QCapabilities.prototype.m_supportsZeroSuppression = false;
oFF.QCapabilities.prototype.m_supportsResultSetInterval = false;
oFF.QCapabilities.prototype.m_supportsSapDate = false;
oFF.QCapabilities.prototype.m_supportsSupplements = false;
oFF.QCapabilities.prototype.m_supportsSuppressSupplements = false;
oFF.QCapabilities.prototype.m_supportsNumberAsString = false;
oFF.QCapabilities.prototype.m_supportsCustomDimensionMemberExecutionStep = false;
oFF.QCapabilities.prototype.m_supportsFixHierarchyFlagKeys = false;
oFF.QCapabilities.prototype.m_supportsAttributeValueLookup = false;
oFF.QCapabilities.prototype.m_supportsAggregationNopNull = false;
oFF.QCapabilities.prototype.m_supportsAggregationNopNullZero = false;
oFF.QCapabilities.prototype.m_supportsCustomDimension2 = false;
oFF.QCapabilities.prototype.m_supportsWindowFunction = false;
oFF.QCapabilities.prototype.m_supportsMultipleExAggDimsInCalcPlan = false;
oFF.QCapabilities.prototype.m_supportsSetOperandCurrentMemberSingleNavigation = false;
oFF.QCapabilities.prototype.m_supportsCurrentMemberFilterExtension = false;
oFF.QCapabilities.prototype.m_supportsClientInfo = false;
oFF.QCapabilities.prototype.m_supportsRemoteFilter = false;
oFF.QCapabilities.prototype.m_supportsDynamicRestrictionOnFormula = false;
oFF.QCapabilities.prototype.m_supportsNamedCustomMember = false;
oFF.QCapabilities.prototype.m_supportsVersionParameters = false;
oFF.QCapabilities.prototype.m_supportsVersionPrivileges = false;
oFF.QCapabilities.prototype.m_supportsSuppressKeyfigureCalculation = false;
oFF.QCapabilities.prototype.m_supportsReinitVariables = false;
oFF.QCapabilities.prototype.m_supportsVariableMasking = false;
oFF.QCapabilities.prototype.m_supportsRequestTimezone = false;
oFF.QCapabilities.prototype.m_supportsMultiSource = false;
oFF.QCapabilities.prototype.m_supportsServerState = false;
oFF.QCapabilities.prototype.m_supportsHierarchyCatalog = false;
oFF.QCapabilities.prototype.m_supportsInputReadinessStates = false;
oFF.QCapabilities.prototype.m_supportsReturnedDataSelection = false;
oFF.QCapabilities.prototype.m_supportsVirtualDescription = false;
oFF.QCapabilities.prototype.m_supportsMeasureMemberDefinition = false;
oFF.QCapabilities.prototype.m_supportsMeasureMemberDetails = false;
oFF.QCapabilities.prototype.m_supportsMeasureMemberType = false;
oFF.QCapabilities.prototype.m_supportsValueHelpWithAttributes = false;
oFF.QCapabilities.prototype.m_supportsEncodedResultset = false;
oFF.QCapabilities.prototype.m_supportsVisualAggregation = false;
oFF.QCapabilities.prototype.m_supportsRunAsUser = false;
oFF.QCapabilities.prototype.m_supportsNewValuesImplicitUnlock = false;
oFF.QCapabilities.prototype.m_supportsNewValuesExtendedFormat = false;
oFF.QCapabilities.prototype.m_supportsReportReportInterface = false;
oFF.QCapabilities.prototype.m_supportsCancelRunningQueries = false;
oFF.QCapabilities.prototype.m_supportsObtainability = false;
oFF.QCapabilities.prototype.m_supportsResultSetHierarchyLevel = false;
oFF.QCapabilities.prototype.m_supportsQueryDataCellModelDefaults = false;
oFF.QCapabilities.prototype.m_supportsFunctionalValueHelp = false;
oFF.QCapabilities.prototype.m_supportsUniversalModel = false;
oFF.QCapabilities.prototype.m_supportsTechnicalAxis = false;
oFF.QCapabilities.prototype.m_supportsBatchRsStreaming = false;
oFF.QCapabilities.prototype.m_supportsResultSetEffectiveFilter = false;
oFF.QCapabilities.prototype.m_supportsCorrectDimensionDescription = false;
oFF.QCapabilities.prototype.m_supportsRootOrphansAfterVisibilityFilter = false;
oFF.QCapabilities.prototype.m_supportsMeasureMemberCurrencyTranslatons = false;
oFF.QCapabilities.prototype.m_supportsRSCellFormatTypeSpecific = false;
oFF.QCapabilities.prototype.m_supportsMetadataDimensionOthers = false;
oFF.QCapabilities.prototype.m_supportsAutomaticVariableSubmit = false;
oFF.QCapabilities.prototype.m_supportsExceptionAggregationFirstLastSelectionMember = false;
oFF.QCapabilities.prototype.m_supportsResultSetCellExplain = false;
oFF.QCapabilities.prototype.m_supportsMaintainsVariableVariants = false;
oFF.QCapabilities.prototype.m_supportsNullZeroSuppression = false;
oFF.QCapabilities.prototype.m_supportsIteratedFormula = false;
oFF.QCapabilities.prototype.m_supportsInputReadinessWithNavigationalAttributes = false;
oFF.QCapabilities.prototype.m_supportsCDSProjectionViews = false;
oFF.QCapabilities.prototype.m_supportsCellDocumentId = false;
oFF.QCapabilities.prototype.m_supportsDimensionKeyAttributes = false;
oFF.QCapabilities.prototype.m_supportsHierarchyPathPresentationType = false;
oFF.QCapabilities.prototype.m_supportsUndefinedTupleCountTotals = false;
oFF.QCapabilities.prototype.m_supportsTextInHierarchyForCharacteristicsWithoutText = false;
oFF.QCapabilities.prototype.m_supportsPagingTupleCountBeforeSlicing = false;
oFF.QCapabilities.prototype.m_supportsBatchBlendingRsStreaming = false;
oFF.QCapabilities.prototype.m_supportedResultAlignmentLevel = null;
oFF.QCapabilities.prototype.m_supportedVisibilityLocation = null;
oFF.QCapabilities.prototype.m_supportedReorderingCapability = null;
oFF.QCapabilities.prototype.m_supportedResultAlignment = null;
oFF.QCapabilities.prototype.m_supportedConditionalResults = null;
oFF.QCapabilities.prototype.m_supportedSortingTypes = null;
oFF.QCapabilities.prototype.m_supportedBreakGrouping = null;
oFF.QCapabilities.prototype.cloneExt = function(flags)
{
	var target = new oFF.QCapabilities();
	target.m_systemType = this.m_systemType;
	target.m_systemName = this.m_systemName;
	target.m_serverMetadataVersion = this.m_serverMetadataVersion;
	target.m_supportsExtendedVariableDefinition = this.m_supportsExtendedVariableDefinition;
	target.m_supportsCustomDimensionFilterCapability = this.m_supportsCustomDimensionFilterCapability;
	target.m_supportsFormulaMeasures = this.m_supportsFormulaMeasures;
	target.m_supportsRestrictedMeasures = this.m_supportsRestrictedMeasures;
	target.m_supportsResultsetFacets = this.m_supportsResultsetFacets;
	target.m_supportsConditionalResultVisibility = this.m_supportsConditionalResultVisibility;
	target.m_supportsConditionalResults = this.m_supportsConditionalResults;
	target.m_supportsCartesianFilterIntersect = this.m_supportsCartesianFilterIntersect;
	target.m_supportsCheckVariables = this.m_supportsCheckVariables;
	target.m_supportsDirectVariableTransfer = this.m_supportsDirectVariableTransfer;
	target.m_supportsShutdown = this.m_supportsShutdown;
	target.m_supportsCellValueOperand = this.m_supportsCellValueOperand;
	target.m_supportsIntersectLayers = this.m_supportsIntersectLayers;
	target.m_supportsComplexFilter = this.m_supportsComplexFilter;
	target.m_supportsVisibilityFilter = this.m_supportsVisibilityFilter;
	target.m_supportsDataCellMixedValues = this.m_supportsDataCellMixedValues;
	target.m_supportsSetOperand = this.m_supportsSetOperand;
	target.m_supportsConvertToFlatFilter = this.m_supportsConvertToFlatFilter;
	target.m_supportsCummulative = this.m_supportsCummulative;
	target.m_supportsHierNavCounter = this.m_supportsHierNavCounter;
	target.m_supportsHierAttHierFields = this.m_supportsHierAttHierFields;
	target.m_supportsHierCarryingDim = this.m_supportsHierCarryingDim;
	target.m_supportsSortTypes = this.m_supportsSortTypes;
	target.m_supportsSpatialFilter = this.m_supportsSpatialFilter;
	target.m_supportsSpatialFilterSrid = this.m_supportsSpatialFilterSrid;
	target.m_supportsExtendedDimensions = this.m_supportsExtendedDimensions;
	target.m_supportsExtendedDimensionsOuterJoin = this.m_supportsExtendedDimensionsOuterJoin;
	target.m_supportsExtendedDimensionsSkip = this.m_supportsExtendedDimensionsSkip;
	target.m_supportsExtendedDimensionsJoinColumns = this.m_supportsExtendedDimensionsJoinColumns;
	target.m_supportsExtendedDimensionsFieldMapping = this.m_supportsExtendedDimensionsFieldMapping;
	target.m_supportsExtendedDimensionsJoinCardinality = this.m_supportsExtendedDimensionsJoinCardinality;
	target.m_supportsSortNewValues = this.m_supportsSortNewValues;
	target.m_supportsIgnoreUnitOfZeroValueInAggregation = this.m_supportsIgnoreUnitOfZeroValueInAggregation;
	target.m_supportsCubeBlendingWithNSubqueries = this.m_supportsCubeBlendingWithNSubqueries;
	target.m_supportsCubeBlendingPersistanceType = this.m_supportsCubeBlendingPersistanceType;
	target.m_supportsExtendedDimensionsChangeDefaultRenamingAndDescription = this.m_supportsExtendedDimensionsChangeDefaultRenamingAndDescription;
	target.m_supportsExtendedDimensionsCopyAllHierarchies = this.m_supportsExtendedDimensionsCopyAllHierarchies;
	target.m_supportsFixMetadataHierarchyAttributes = this.m_supportsFixMetadataHierarchyAttributes;
	target.m_supportsUniversalDisplayHierarchies = this.m_supportsUniversalDisplayHierarchies;
	target.m_supportsUniversalDisplayHierarchiesCustomDimensions = this.m_supportsUniversalDisplayHierarchiesCustomDimensions;
	target.m_supportsUniversalDisplayHierarchiesZeroBased = this.m_supportsUniversalDisplayHierarchiesZeroBased;
	target.m_supportsRemoteBlending = this.m_supportsRemoteBlending;
	target.m_supportsCubeCache = this.m_supportsCubeCache;
	target.m_supportsCatalogServiceV2 = this.m_supportsCatalogServiceV2;
	target.m_supportsCustomSort = this.m_supportsCustomSort;
	target.m_supportsDataRefreshAndDataTopicality = this.m_supportsDataRefreshAndDataTopicality;
	target.m_supportsRemoteBlendingBW = this.m_supportsRemoteBlendingBW;
	target.m_supportsTuplesOperand = this.m_supportsTuplesOperand;
	target.m_supportsCustomMeasureSortOrder = this.m_supportsCustomMeasureSortOrder;
	target.m_supportsComplexTupleFilter = this.m_supportsComplexTupleFilter;
	target.m_supportsF4FilterForTextField = this.m_supportsF4FilterForTextField;
	target.m_supportsSidPresentation = this.m_supportsSidPresentation;
	target.m_supportsExceptionAggregationAvgNullSelectionMember = this.m_supportsExceptionAggregationAvgNullSelectionMember;
	target.m_supportsExceptionAggregationCountNullSelectionMember = this.m_supportsExceptionAggregationCountNullSelectionMember;
	target.m_supportsStatisticalAggregations = this.m_supportsStatisticalAggregations;
	target.m_supportsVarianceOperator = this.m_supportsVarianceOperator;
	target.m_supportsTotalOperator = this.m_supportsTotalOperator;
	target.m_supportsAsyncRemoteModelValidation = this.m_supportsAsyncRemoteModelValidation;
	target.m_supportsExtendedKeyFigureProperties = this.m_supportsExtendedKeyFigureProperties;
	target.m_supportsDetailedResponseExpansion = this.m_supportsDetailedResponseExpansion;
	target.m_supportsDynamicVariableRefresh = this.m_supportsDynamicVariableRefresh;
	target.m_supportsQueryCurrencyTranslation = this.m_supportsQueryCurrencyTranslation;
	target.m_supportsCurrencyTranslation = this.m_supportsCurrencyTranslation;
	target.m_supportsMeasureMemberCurrencyTranslatons = this.m_supportsMeasureMemberCurrencyTranslatons;
	target.m_supportsStructureRestrictionsInValueHelp = this.m_supportsStructureRestrictionsInValueHelp;
	target.m_supportsSpatialChoropleth = this.m_supportsSpatialChoropleth;
	target.m_supportsCustomHierarchy = this.m_supportsCustomHierarchy;
	target.m_supportsRSCellFormatTypeSpecific = this.m_supportsRSCellFormatTypeSpecific;
	target.m_supportsMetadataDimensionOthers = this.m_supportsMetadataDimensionOthers;
	target.m_supportsInaCurrentMember = this.m_supportsInaCurrentMember;
	target.m_supportsDimensionVisibility = this.m_supportsDimensionVisibility;
	target.m_supportsDimensionDefaultMember = this.m_supportsDimensionDefaultMember;
	target.m_supportsDisplayHierarchyFixInFilter = this.m_supportsDisplayHierarchyFixInFilter;
	target.m_supportsCustomMemberKeySortOrder = this.m_supportsCustomMemberKeySortOrder;
	target.m_supportsSpatialTransformation = this.m_supportsSpatialTransformation;
	target.m_supportsMemberVisibility = this.m_supportsMemberVisibility;
	target.m_supportsHierarchyMetadata = this.m_supportsHierarchyMetadata;
	target.m_supportsDimensionHierarchyLevels = this.m_supportsDimensionHierarchyLevels;
	target.m_supportsHierarchyLevelMetadata = this.m_supportsHierarchyLevelMetadata;
	target.m_supportsHierarchyNavigationDeltaMode = this.m_supportsHierarchyNavigationDeltaMode;
	target.m_supportsCeScenarioParams = this.m_supportsCeScenarioParams;
	target.m_supportsLocaleSorting = this.m_supportsLocaleSorting;
	target.m_supportsHierarchyLevelOffsetFilter = this.m_supportsHierarchyLevelOffsetFilter;
	target.m_supportsHierarchyTrapezoidFilter = this.m_supportsHierarchyTrapezoidFilter;
	target.m_supportsUnifiedDataCells = this.m_supportsUnifiedDataCells;
	target.m_supportsAverageCountNullZero = this.m_supportsAverageCountNullZero;
	target.m_supportsExceptionsV2 = this.m_supportsExceptionsV2;
	target.m_supportsSpatialClustering = this.m_supportsSpatialClustering;
	target.m_supportsKeepOriginalTexts = this.m_supportsKeepOriginalTexts;
	target.m_supportsConditions = this.m_supportsConditions;
	target.m_supportsExtendedSort = this.m_supportsExtendedSort;
	target.m_supportsDataCells = this.m_supportsDataCells;
	target.m_supportsExpandBottomUp = this.m_supportsExpandBottomUp;
	target.m_supportsIgnoreExternalDimensions = this.m_supportsIgnoreExternalDimensions;
	target.m_supportsExceptionAggregationDimsFormulas = this.m_supportsExceptionAggregationDimsFormulas;
	target.m_supportsExceptionSettings = this.m_supportsExceptionSettings;
	target.m_supportsExceptions = this.m_supportsExceptions;
	target.m_supportsHierarchyVirtualRootNode = this.m_supportsHierarchyVirtualRootNode;
	target.m_supportsHierarchyRestNode = this.m_supportsHierarchyRestNode;
	target.m_supportsCubeBlending = this.m_supportsCubeBlending;
	target.m_supportsCubeBlendingProperties = this.m_supportsCubeBlendingProperties;
	target.m_supportsCubeBlendingOutOfContext = this.m_supportsCubeBlendingOutOfContext;
	target.m_supportsCubeBlendingAggregation = this.m_supportsCubeBlendingAggregation;
	target.m_supportsCubeBlendingReadmode = this.m_supportsCubeBlendingReadmode;
	target.m_supportsCubeBlendingSorting = this.m_supportsCubeBlendingSorting;
	target.m_supportsCubeBlendingCustomMember = this.m_supportsCubeBlendingCustomMember;
	target.m_supportsMetadataDataCategory = this.m_supportsMetadataDataCategory;
	target.m_supportsHierarchyPath = this.m_supportsHierarchyPath;
	target.m_supportsUniqueHierarchyPath = this.m_supportsUniqueHierarchyPath;
	target.m_supportsExtendedDimensionVisibility = this.m_supportsExtendedDimensionVisibility;
	target.m_supportsResultSetUnitIndex = this.m_supportsResultSetUnitIndex;
	target.m_supportsMetadataDataSourceDefinitionValidation = this.m_supportsMetadataDataSourceDefinitionValidation;
	target.m_supportsAsyncBatchRequests = this.m_supportsAsyncBatchRequests;
	target.m_supportsVariableVariants = this.m_supportsVariableVariants;
	target.m_supportsCalculatedDimensions = this.m_supportsCalculatedDimensions;
	target.m_supportsPlanningOnCalculatedDimensions = this.m_supportsPlanningOnCalculatedDimensions;
	target.m_supportsZeroSuppression = this.m_supportsZeroSuppression;
	target.m_supportsResultSetInterval = this.m_supportsResultSetInterval;
	target.m_supportsSapDate = this.m_supportsSapDate;
	target.m_supportsSupplements = this.m_supportsSupplements;
	target.m_supportsSuppressSupplements = this.m_supportsSuppressSupplements;
	target.m_supportsNumberAsString = this.m_supportsNumberAsString;
	target.m_supportsCustomDimensionMemberExecutionStep = this.m_supportsCustomDimensionMemberExecutionStep;
	target.m_supportsFixHierarchyFlagKeys = this.m_supportsFixHierarchyFlagKeys;
	target.m_supportsAttributeValueLookup = this.m_supportsAttributeValueLookup;
	target.m_supportsAggregationNopNull = this.m_supportsAggregationNopNull;
	target.m_supportsAggregationNopNullZero = this.m_supportsAggregationNopNullZero;
	target.m_supportsCustomDimension2 = this.m_supportsCustomDimension2;
	target.m_supportsWindowFunction = this.m_supportsWindowFunction;
	target.m_supportsMultipleExAggDimsInCalcPlan = this.m_supportsMultipleExAggDimsInCalcPlan;
	target.m_supportsSetOperandCurrentMemberSingleNavigation = this.m_supportsSetOperandCurrentMemberSingleNavigation;
	target.m_supportsCurrentMemberFilterExtension = this.m_supportsCurrentMemberFilterExtension;
	target.m_supportsClientInfo = this.m_supportsClientInfo;
	target.m_supportsRemoteFilter = this.m_supportsRemoteFilter;
	target.m_supportsDynamicRestrictionOnFormula = this.m_supportsDynamicRestrictionOnFormula;
	target.m_supportsNamedCustomMember = this.m_supportsNamedCustomMember;
	target.m_supportsVersionParameters = this.m_supportsVersionParameters;
	target.m_supportsVersionPrivileges = this.m_supportsVersionPrivileges;
	target.m_supportsSuppressKeyfigureCalculation = this.m_supportsSuppressKeyfigureCalculation;
	target.m_supportsReinitVariables = this.m_supportsReinitVariables;
	target.m_supportsVariableMasking = this.m_supportsVariableMasking;
	target.m_supportsRequestTimezone = this.m_supportsRequestTimezone;
	target.m_supportsMultiSource = this.m_supportsMultiSource;
	target.m_supportsServerState = this.m_supportsServerState;
	target.m_supportsHierarchyCatalog = this.m_supportsHierarchyCatalog;
	target.m_supportsInputReadinessStates = this.m_supportsInputReadinessStates;
	target.m_supportsReturnedDataSelection = this.m_supportsReturnedDataSelection;
	target.m_supportsVirtualDescription = this.m_supportsVirtualDescription;
	target.m_supportsMeasureMemberDefinition = this.m_supportsMeasureMemberDefinition;
	target.m_supportsMeasureMemberDetails = this.m_supportsMeasureMemberDetails;
	target.m_supportsMeasureMemberType = this.m_supportsMeasureMemberType;
	target.m_supportsValueHelpWithAttributes = this.m_supportsValueHelpWithAttributes;
	target.m_supportsEncodedResultset = this.m_supportsEncodedResultset;
	target.m_supportsVisualAggregation = this.m_supportsVisualAggregation;
	target.m_supportsRunAsUser = this.m_supportsRunAsUser;
	target.m_supportsNewValuesImplicitUnlock = this.m_supportsNewValuesImplicitUnlock;
	target.m_supportsNewValuesExtendedFormat = this.m_supportsNewValuesExtendedFormat;
	target.m_supportsReportReportInterface = this.m_supportsReportReportInterface;
	target.m_supportsCancelRunningQueries = this.m_supportsCancelRunningQueries;
	target.m_supportsObtainability = this.m_supportsObtainability;
	target.m_supportsResultSetHierarchyLevel = this.m_supportsResultSetHierarchyLevel;
	target.m_supportsQueryDataCellModelDefaults = this.m_supportsQueryDataCellModelDefaults;
	target.m_supportsFunctionalValueHelp = this.m_supportsFunctionalValueHelp;
	target.m_supportsUniversalModel = this.m_supportsUniversalModel;
	target.m_supportsTechnicalAxis = this.m_supportsTechnicalAxis;
	target.m_supportsBatchRsStreaming = this.m_supportsBatchRsStreaming;
	target.m_supportsBatchBlendingRsStreaming = this.m_supportsBatchBlendingRsStreaming;
	target.m_supportsResultSetEffectiveFilter = this.m_supportsResultSetEffectiveFilter;
	target.m_supportsCorrectDimensionDescription = this.m_supportsCorrectDimensionDescription;
	target.m_supportsRootOrphansAfterVisibilityFilter = this.m_supportsRootOrphansAfterVisibilityFilter;
	target.m_supportsAutomaticVariableSubmit = this.m_supportsAutomaticVariableSubmit;
	target.m_supportsExceptionAggregationFirstLastSelectionMember = this.m_supportsExceptionAggregationFirstLastSelectionMember;
	target.m_supportsResultSetCellExplain = this.m_supportsResultSetCellExplain;
	target.m_supportsNullZeroSuppression = this.m_supportsNullZeroSuppression;
	target.m_supportsInputReadinessWithNavigationalAttributes = this.m_supportsInputReadinessWithNavigationalAttributes;
	target.m_supportedResultAlignmentLevel = this.m_supportedResultAlignmentLevel;
	target.m_supportedVisibilityLocation = this.m_supportedVisibilityLocation;
	target.m_supportedReorderingCapability = this.m_supportedReorderingCapability;
	target.m_supportsIteratedFormula = this.m_supportsIteratedFormula;
	target.m_supportsCDSProjectionViews = this.m_supportsCDSProjectionViews;
	target.m_supportsCellDocumentId = this.m_supportsCellDocumentId;
	target.m_supportsDimensionKeyAttributes = this.m_supportsDimensionKeyAttributes;
	target.m_supportsHierarchyPathPresentationType = this.m_supportsHierarchyPathPresentationType;
	target.m_supportsUndefinedTupleCountTotals = this.m_supportsUndefinedTupleCountTotals;
	target.m_supportsTextInHierarchyForCharacteristicsWithoutText = this.m_supportsTextInHierarchyForCharacteristicsWithoutText;
	target.m_supportsPagingTupleCountBeforeSlicing = this.m_supportsPagingTupleCountBeforeSlicing;
	target.m_supportsMaintainsVariableVariants = this.m_supportsMaintainsVariableVariants;
	target.m_supportedResultAlignment = oFF.XList.create();
	target.m_supportedResultAlignment.addAll(this.getSupportedResultAlignments());
	target.m_supportedConditionalResults = oFF.XList.create();
	target.m_supportedConditionalResults.addAll(this.getSupportedConditionalResults());
	target.m_supportedSortingTypes = oFF.XSetOfNameObject.create();
	target.m_supportedSortingTypes.addAll(this.m_supportedSortingTypes);
	target.m_supportedBreakGrouping = oFF.XSetOfNameObject.create();
	target.m_supportedBreakGrouping.addAll(this.m_supportedBreakGrouping);
	return target;
};
oFF.QCapabilities.prototype.supportsExtendedVariableDefinition = function()
{
	return this.m_supportsExtendedVariableDefinition;
};
oFF.QCapabilities.prototype.setSupportsExtendedVariableDefinition = function(supportsExtendedVariableDefinition)
{
	this.m_supportsExtendedVariableDefinition = supportsExtendedVariableDefinition;
};
oFF.QCapabilities.prototype.supportsCartesianFilterIntersect = function()
{
	return this.m_supportsCartesianFilterIntersect;
};
oFF.QCapabilities.prototype.setSupportsCartesianFilterIntersect = function(supportsCartesianFilterIntersect)
{
	this.m_supportsCartesianFilterIntersect = supportsCartesianFilterIntersect;
};
oFF.QCapabilities.prototype.supportsCustomDimensionFilterCapability = function()
{
	return this.m_supportsCustomDimensionFilterCapability;
};
oFF.QCapabilities.prototype.setSupportsCustomDimensionFilterCapability = function(supportsCustomDimensionFilter)
{
	this.m_supportsCustomDimensionFilterCapability = supportsCustomDimensionFilter;
};
oFF.QCapabilities.prototype.supportsLocaleSorting = function()
{
	return this.m_supportsLocaleSorting;
};
oFF.QCapabilities.prototype.setSupportsLocaleSorting = function(supportsLocaleSorting)
{
	this.m_supportsLocaleSorting = supportsLocaleSorting;
};
oFF.QCapabilities.prototype.supportsResultsetFacets = function()
{
	return this.m_supportsResultsetFacets;
};
oFF.QCapabilities.prototype.setSupportsResultsetFacets = function(supportsResultsetFacets)
{
	this.m_supportsResultsetFacets = supportsResultsetFacets;
};
oFF.QCapabilities.prototype.supportsDataCells = function()
{
	return this.m_supportsDataCells;
};
oFF.QCapabilities.prototype.setSupportsDataCells = function(supportsDataCells)
{
	this.m_supportsDataCells = supportsDataCells;
};
oFF.QCapabilities.prototype.supportsExtendedSort = function()
{
	return this.m_supportsExtendedSort;
};
oFF.QCapabilities.prototype.setSupportsExtendedSort = function(supportsExtendedSort)
{
	this.m_supportsExtendedSort = supportsExtendedSort;
};
oFF.QCapabilities.prototype.supportsConditions = function()
{
	return this.m_supportsConditions;
};
oFF.QCapabilities.prototype.setSupportsConditions = function(supportsConditions)
{
	this.m_supportsConditions = supportsConditions;
};
oFF.QCapabilities.prototype.supportsConditionsWithVersions = function()
{
	return this.m_supportsConditions && oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsConditionsOverride = function()
{
	return this.m_supportsConditions && oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.UNV);
};
oFF.QCapabilities.prototype.supportsExpandBottomUp = function()
{
	return this.m_supportsExpandBottomUp;
};
oFF.QCapabilities.prototype.setSupportsExpandBottomUp = function(supportsExpandBottomUp)
{
	this.m_supportsExpandBottomUp = supportsExpandBottomUp;
};
oFF.QCapabilities.prototype.supportsCubeBlending = function()
{
	return this.m_supportsCubeBlending;
};
oFF.QCapabilities.prototype.setSupportsCubeBlending = function(supportsCubeBlending)
{
	this.m_supportsCubeBlending = supportsCubeBlending;
};
oFF.QCapabilities.prototype.supportsHierarchyTrapezoidFilter = function()
{
	return this.m_supportsHierarchyTrapezoidFilter;
};
oFF.QCapabilities.prototype.setSupportsHierarchyTrapezoidFilter = function(supportsHierarchyTrapezoidFilter)
{
	this.m_supportsHierarchyTrapezoidFilter = supportsHierarchyTrapezoidFilter;
};
oFF.QCapabilities.prototype.supportsSpatialClustering = function()
{
	return this.m_supportsSpatialClustering;
};
oFF.QCapabilities.prototype.setSupportsSpatialClustering = function(supportsSpatialClustering)
{
	this.m_supportsSpatialClustering = supportsSpatialClustering;
};
oFF.QCapabilities.prototype.supportsAverageCountNullZero = function()
{
	return this.m_supportsAverageCountNullZero;
};
oFF.QCapabilities.prototype.setSupportsAverageCountNullZero = function(supportsAverageCountNullZero)
{
	this.m_supportsAverageCountNullZero = supportsAverageCountNullZero;
};
oFF.QCapabilities.prototype.supportsCeScenarioParams = function()
{
	return this.m_supportsCeScenarioParams;
};
oFF.QCapabilities.prototype.setSupportsCeScenarioParams = function(supportsCeScenarioParams)
{
	this.m_supportsCeScenarioParams = supportsCeScenarioParams;
};
oFF.QCapabilities.prototype.supportsHierarchyLevelOffsetFilter = function()
{
	return this.m_supportsHierarchyLevelOffsetFilter;
};
oFF.QCapabilities.prototype.setSupportsHierarchyLevelOffsetFilter = function(supportsHierarchyLevelOffsetFilter)
{
	this.m_supportsHierarchyLevelOffsetFilter = supportsHierarchyLevelOffsetFilter;
};
oFF.QCapabilities.prototype.supportsMetadataDataCategory = function()
{
	return this.m_supportsMetadataDataCategory;
};
oFF.QCapabilities.prototype.setSupportsMetadataDataCategory = function(supportsMetadataDataCategory)
{
	this.m_supportsMetadataDataCategory = supportsMetadataDataCategory;
};
oFF.QCapabilities.prototype.supportsHierarchyPath = function()
{
	return this.m_supportsHierarchyPath;
};
oFF.QCapabilities.prototype.setSupportsHierarchyPath = function(supportsHierarchyPath)
{
	this.m_supportsHierarchyPath = supportsHierarchyPath;
};
oFF.QCapabilities.prototype.supportsUniqueHierarchyPath = function()
{
	return this.m_supportsUniqueHierarchyPath;
};
oFF.QCapabilities.prototype.setSupportsUniqueHierarchyPath = function(supportsUniqueHierarchyPath)
{
	this.m_supportsUniqueHierarchyPath = supportsUniqueHierarchyPath;
};
oFF.QCapabilities.prototype.supportsCubeBlendingProperties = function()
{
	return this.m_supportsCubeBlendingProperties;
};
oFF.QCapabilities.prototype.setSupportsCubeBlendingProperties = function(supportsCubeBlendingProperties)
{
	this.m_supportsCubeBlendingProperties = supportsCubeBlendingProperties;
};
oFF.QCapabilities.prototype.supportsExceptionAggregationDimsFormulas = function()
{
	return this.m_supportsExceptionAggregationDimsFormulas;
};
oFF.QCapabilities.prototype.setSupportsExceptionAggregationDimsFormulas = function(supportsExceptionAggregationDimsFormulas)
{
	this.m_supportsExceptionAggregationDimsFormulas = supportsExceptionAggregationDimsFormulas;
};
oFF.QCapabilities.prototype.supportsIgnoreExternalDimensions = function()
{
	return this.m_supportsIgnoreExternalDimensions;
};
oFF.QCapabilities.prototype.setSupportsIgnoreExternalDimensions = function(supportsIgnoreExternalDimensions)
{
	this.m_supportsIgnoreExternalDimensions = supportsIgnoreExternalDimensions;
};
oFF.QCapabilities.prototype.supportsHierarchyNavigationDeltaMode = function()
{
	return this.m_supportsHierarchyNavigationDeltaMode;
};
oFF.QCapabilities.prototype.setSupportsHierarchyNavigationDeltaMode = function(supportsHierarchyNavigationDeltaMode)
{
	this.m_supportsHierarchyNavigationDeltaMode = supportsHierarchyNavigationDeltaMode;
};
oFF.QCapabilities.prototype.supportsHierarchyMetadata = function()
{
	return this.m_supportsHierarchyMetadata;
};
oFF.QCapabilities.prototype.setSupportsHierarchyMetadata = function(supportsHierarchyMetadata)
{
	this.m_supportsHierarchyMetadata = supportsHierarchyMetadata;
};
oFF.QCapabilities.prototype.supportsExceptions = function()
{
	return this.m_supportsExceptions;
};
oFF.QCapabilities.prototype.setSupportsExceptions = function(supportsExceptions)
{
	this.m_supportsExceptions = supportsExceptions;
};
oFF.QCapabilities.prototype.supportsExceptionsV2 = function()
{
	return this.m_supportsExceptionsV2;
};
oFF.QCapabilities.prototype.setSupportsExceptionsV2 = function(supportsExceptionsV2)
{
	this.m_supportsExceptionsV2 = supportsExceptionsV2;
};
oFF.QCapabilities.prototype.supportsHierarchyLevelMetadata = function()
{
	return this.m_supportsHierarchyLevelMetadata;
};
oFF.QCapabilities.prototype.setSupportsHierarchyLevelMetadata = function(supportsHierarchyLevelMetadata)
{
	this.m_supportsHierarchyLevelMetadata = supportsHierarchyLevelMetadata;
};
oFF.QCapabilities.prototype.supportsDimensionHierarchyLevels = function()
{
	return this.m_supportsDimensionHierarchyLevels;
};
oFF.QCapabilities.prototype.setSupportsDimensionHierarchyLevels = function(supportsDimensionHierarchyLevels)
{
	this.m_supportsDimensionHierarchyLevels = supportsDimensionHierarchyLevels;
};
oFF.QCapabilities.prototype.supportsExceptionSettings = function()
{
	return this.m_supportsExceptionSettings;
};
oFF.QCapabilities.prototype.setSupportsExceptionSettings = function(supportsExceptionSettings)
{
	this.m_supportsExceptionSettings = supportsExceptionSettings;
};
oFF.QCapabilities.prototype.setSupportsConditionalResult = function(supportsConditionalResults)
{
	this.m_supportsConditionalResults = supportsConditionalResults;
};
oFF.QCapabilities.prototype.supportsConditionalResults = function()
{
	return this.m_supportsConditionalResults;
};
oFF.QCapabilities.prototype.setSupportsConditionalResultVisibility = function(supportsConditionalResultVisibility)
{
	this.m_supportsConditionalResultVisibility = supportsConditionalResultVisibility;
};
oFF.QCapabilities.prototype.supportsConditionalResultVisibility = function()
{
	return this.m_supportsConditionalResultVisibility;
};
oFF.QCapabilities.prototype.supportsRestrictedMeasures = function()
{
	return this.m_supportsRestrictedMeasures;
};
oFF.QCapabilities.prototype.setSupportsRestrictedMeasures = function(supportsRestrictedMeasures)
{
	this.m_supportsRestrictedMeasures = supportsRestrictedMeasures;
};
oFF.QCapabilities.prototype.supportsFormulaMeasures = function()
{
	return this.m_supportsFormulaMeasures;
};
oFF.QCapabilities.prototype.setSupportsFormulaMeasures = function(supportsFormulaMeasures)
{
	this.m_supportsFormulaMeasures = supportsFormulaMeasures;
};
oFF.QCapabilities.prototype.supportsKeepOriginalTexts = function()
{
	return this.m_supportsKeepOriginalTexts;
};
oFF.QCapabilities.prototype.setSupportsKeepOriginalTexts = function(supportsKeepOriginalTexts)
{
	this.m_supportsKeepOriginalTexts = supportsKeepOriginalTexts;
};
oFF.QCapabilities.prototype.supportsUnifiedDataCells = function()
{
	return this.m_supportsUnifiedDataCells;
};
oFF.QCapabilities.prototype.setSupportsUnifiedDataCells = function(supportsUnifiedDataCells)
{
	this.m_supportsUnifiedDataCells = supportsUnifiedDataCells;
};
oFF.QCapabilities.prototype.getSupportedResultAlignmentLevel = function()
{
	return this.m_supportedResultAlignmentLevel;
};
oFF.QCapabilities.prototype.setSupportedResultAlignmentLevel = function(supportedAlignmentLocation)
{
	this.m_supportedResultAlignmentLevel = supportedAlignmentLocation;
};
oFF.QCapabilities.prototype.getSupportedResultVisibilityLevel = function()
{
	return this.m_supportedVisibilityLocation;
};
oFF.QCapabilities.prototype.setSupportedVisibilityLocation = function(supportedVisibilityLocation)
{
	this.m_supportedVisibilityLocation = supportedVisibilityLocation;
};
oFF.QCapabilities.prototype.getResultStructureReorderingCapability = function()
{
	return this.m_supportedReorderingCapability;
};
oFF.QCapabilities.prototype.setResultStructureReorderingCapability = function(supportedReorderingCapability)
{
	this.m_supportedReorderingCapability = supportedReorderingCapability;
};
oFF.QCapabilities.prototype.getSupportedResultAlignments = function()
{
	return this.m_supportedResultAlignment;
};
oFF.QCapabilities.prototype.supportsResultAlignmentType = function(resultAlignment)
{
	return this.m_supportedResultAlignment.contains(resultAlignment);
};
oFF.QCapabilities.prototype.addSupportedResultAlignment = function(supportedResultAlignment)
{
	this.m_supportedResultAlignment.add(supportedResultAlignment);
};
oFF.QCapabilities.prototype.clearSupportedResultAlignment = function()
{
	this.m_supportedResultAlignment.clear();
};
oFF.QCapabilities.prototype.addSupportedConditionalElement = function(element)
{
	this.m_supportedConditionalResults.add(element);
};
oFF.QCapabilities.prototype.getSupportedConditionalResults = function()
{
	return this.m_supportedConditionalResults;
};
oFF.QCapabilities.prototype.getSystemType = function()
{
	return this.m_systemType;
};
oFF.QCapabilities.prototype.setSystemType = function(systemType)
{
	this.m_systemType = systemType;
};
oFF.QCapabilities.prototype.getSystemName = function()
{
	return this.m_systemName;
};
oFF.QCapabilities.prototype.setSystemName = function(systemName)
{
	this.m_systemName = systemName;
};
oFF.QCapabilities.prototype.getServerMetadataVersion = function()
{
	return this.m_serverMetadataVersion;
};
oFF.QCapabilities.prototype.setServerMetadataVersion = function(serverMetadataVersion)
{
	this.m_serverMetadataVersion = serverMetadataVersion;
};
oFF.QCapabilities.prototype.supportsCheckVariables = function()
{
	return this.m_supportsCheckVariables;
};
oFF.QCapabilities.prototype.setSupportsCheckVariables = function(supportsCheckVariables)
{
	this.m_supportsCheckVariables = supportsCheckVariables;
};
oFF.QCapabilities.prototype.supportsReInitVariables = function()
{
	return this.m_supportsReinitVariables;
};
oFF.QCapabilities.prototype.setSupportsReinitVariables = function(supportsReinitVariables)
{
	this.m_supportsReinitVariables = supportsReinitVariables;
};
oFF.QCapabilities.prototype.supportsDirectVariableTransfer = function()
{
	return this.m_supportsDirectVariableTransfer;
};
oFF.QCapabilities.prototype.setSupportsDirectVariableTransfer = function(supportsDirectVariableTransfer)
{
	this.m_supportsDirectVariableTransfer = supportsDirectVariableTransfer;
};
oFF.QCapabilities.prototype.supportsReturnedDataSelection = function()
{
	return this.m_supportsReturnedDataSelection;
};
oFF.QCapabilities.prototype.setSupportsReturnedDataSelection = function(supportsReturnedDataSelection)
{
	this.m_supportsReturnedDataSelection = supportsReturnedDataSelection;
};
oFF.QCapabilities.prototype.supportsShutdown = function()
{
	return this.m_supportsShutdown;
};
oFF.QCapabilities.prototype.setSupportsShutdown = function(supportsShutdown)
{
	this.m_supportsShutdown = supportsShutdown;
};
oFF.QCapabilities.prototype.supportsMultiComplexFilter = function()
{
	return this.supportsComplexFilter() || this.supportsComplexTupleFilter();
};
oFF.QCapabilities.prototype.supportsComplexFilter = function()
{
	return this.m_supportsComplexFilter;
};
oFF.QCapabilities.prototype.setSupportsComplexFilter = function(supportsComplexFilter)
{
	this.m_supportsComplexFilter = supportsComplexFilter;
};
oFF.QCapabilities.prototype.supportsCellValueOperand = function()
{
	return this.m_supportsCellValueOperand;
};
oFF.QCapabilities.prototype.setSupportsCellValueOperand = function(supportsCellValueOperand)
{
	this.m_supportsCellValueOperand = supportsCellValueOperand;
};
oFF.QCapabilities.prototype.supportsIntersectLayers = function()
{
	return this.m_supportsIntersectLayers;
};
oFF.QCapabilities.prototype.setSupportsIntersectLayers = function(supportsIntersectLayers)
{
	this.m_supportsIntersectLayers = supportsIntersectLayers;
};
oFF.QCapabilities.prototype.supportsVisibilityFilter = function()
{
	return this.m_supportsVisibilityFilter;
};
oFF.QCapabilities.prototype.setSupportsVisibilityFilter = function(supportsVisibilityFilter)
{
	this.m_supportsVisibilityFilter = supportsVisibilityFilter;
};
oFF.QCapabilities.prototype.setSupportsObtainability = function(supportsObtainability)
{
	this.m_supportsObtainability = supportsObtainability;
};
oFF.QCapabilities.prototype.supportsObtainability = function()
{
	return this.m_supportsObtainability;
};
oFF.QCapabilities.prototype.supportsDataCellMixedValues = function()
{
	return this.m_supportsDataCellMixedValues;
};
oFF.QCapabilities.prototype.setSupportsDataCellMixedValues = function(supportsDataCellMixedValues)
{
	this.m_supportsDataCellMixedValues = supportsDataCellMixedValues;
};
oFF.QCapabilities.prototype.supportsSetOperand = function()
{
	return this.m_supportsSetOperand;
};
oFF.QCapabilities.prototype.setSupportsSetOperand = function(supportsSetOperand)
{
	this.m_supportsSetOperand = supportsSetOperand;
};
oFF.QCapabilities.prototype.supportsConvertToFlatFilter = function()
{
	return this.m_supportsConvertToFlatFilter;
};
oFF.QCapabilities.prototype.setSupportsConvertToFlatFilter = function(supportsConvertToFlatFilter)
{
	this.m_supportsConvertToFlatFilter = supportsConvertToFlatFilter;
};
oFF.QCapabilities.prototype.supportsCummulative = function()
{
	return this.m_supportsCummulative;
};
oFF.QCapabilities.prototype.setSupportsCummulative = function(supportsCummulative)
{
	this.m_supportsCummulative = supportsCummulative;
};
oFF.QCapabilities.prototype.supportsHierarchyNavCounter = function()
{
	return this.m_supportsHierNavCounter;
};
oFF.QCapabilities.prototype.setSupportsHierarchyNavCounter = function(supportsHierarchyNavCounter)
{
	this.m_supportsHierNavCounter = supportsHierarchyNavCounter;
};
oFF.QCapabilities.prototype.supportsHierarchyAttHierFields = function()
{
	return this.m_supportsHierAttHierFields;
};
oFF.QCapabilities.prototype.setSupportsHierarchyAttHierFields = function(supportsHierAttHierFields)
{
	this.m_supportsHierAttHierFields = supportsHierAttHierFields;
};
oFF.QCapabilities.prototype.supportsHierarchyCarryingDim = function()
{
	return this.m_supportsHierCarryingDim;
};
oFF.QCapabilities.prototype.setSupportsHierarchyCarryingDim = function(supportsHierCarryingDim)
{
	this.m_supportsHierCarryingDim = supportsHierCarryingDim;
};
oFF.QCapabilities.prototype.supportsSortTypes = function()
{
	return this.m_supportsSortTypes;
};
oFF.QCapabilities.prototype.setSupportsSortTypes = function(supportsSortTypes)
{
	this.m_supportsSortTypes = supportsSortTypes;
};
oFF.QCapabilities.prototype.supportsSpatialFilter = function()
{
	return this.m_supportsSpatialFilter;
};
oFF.QCapabilities.prototype.setSupportsSpatialFilter = function(supportsSpatialFilter)
{
	this.m_supportsSpatialFilter = supportsSpatialFilter;
};
oFF.QCapabilities.prototype.supportsSpatialFilterSrid = function()
{
	return this.m_supportsSpatialFilterSrid;
};
oFF.QCapabilities.prototype.setSupportsSpatialFilterSrid = function(supportsSpatialFilterSrid)
{
	this.m_supportsSpatialFilterSrid = supportsSpatialFilterSrid;
};
oFF.QCapabilities.prototype.setSupportsExtendedDimensionsJoinCardinality = function(supportsExtendedDimensionsJoinCardinality)
{
	this.m_supportsExtendedDimensionsJoinCardinality = supportsExtendedDimensionsJoinCardinality;
};
oFF.QCapabilities.prototype.supportsExtendedDimensionsJoinCardinality = function()
{
	return this.m_supportsExtendedDimensionsJoinCardinality;
};
oFF.QCapabilities.prototype.supportsExtendedDimensions = function()
{
	return this.m_supportsExtendedDimensions;
};
oFF.QCapabilities.prototype.setSupportsExtendedDimensions = function(supportsExtendedDimensions)
{
	this.m_supportsExtendedDimensions = supportsExtendedDimensions;
};
oFF.QCapabilities.prototype.supportsCubeBlendingOutOfContext = function()
{
	return this.m_supportsCubeBlendingOutOfContext;
};
oFF.QCapabilities.prototype.setSupportsCubeBlendingOutOfContext = function(supportsCubeBlendingOutOfContext)
{
	this.m_supportsCubeBlendingOutOfContext = supportsCubeBlendingOutOfContext;
};
oFF.QCapabilities.prototype.supportsInputReadinessStates = function()
{
	return this.m_supportsInputReadinessStates;
};
oFF.QCapabilities.prototype.setSupportsInputReadinessStates = function(supportsInputReadinessStates)
{
	this.m_supportsInputReadinessStates = supportsInputReadinessStates;
};
oFF.QCapabilities.prototype.supportsSortNewValues = function()
{
	return this.m_supportsSortNewValues;
};
oFF.QCapabilities.prototype.setSupportsSortNewValues = function(supportsSortNewValues)
{
	this.m_supportsSortNewValues = supportsSortNewValues;
};
oFF.QCapabilities.prototype.supportsIgnoreUnitOfZeroValueInAggregation = function()
{
	return this.m_supportsIgnoreUnitOfZeroValueInAggregation;
};
oFF.QCapabilities.prototype.setSupportsIgnoreUnitOfZeroValueInAggregation = function(supportsIgnoreUnitOfZeroValueInAggregation)
{
	this.m_supportsIgnoreUnitOfZeroValueInAggregation = supportsIgnoreUnitOfZeroValueInAggregation;
};
oFF.QCapabilities.prototype.supportsCubeBlendingWithNSubqueries = function()
{
	return this.m_supportsCubeBlendingWithNSubqueries;
};
oFF.QCapabilities.prototype.setSupportsCubeBlendingWithNSubqueries = function(supportsCubeBlendingWithNSubqueries)
{
	this.m_supportsCubeBlendingWithNSubqueries = supportsCubeBlendingWithNSubqueries;
};
oFF.QCapabilities.prototype.supportsRemoteBlendingWithSplittedSerializationRequests = function()
{
	return this.m_supportsCubeBlendingPersistanceType;
};
oFF.QCapabilities.prototype.setSupportsRemoteBlendingWithSplittedSerializationRequests = function(supportsRemoteBlendingWithSplittedSerializationRequests)
{
	this.m_supportsCubeBlendingPersistanceType = supportsRemoteBlendingWithSplittedSerializationRequests;
};
oFF.QCapabilities.prototype.supportsExtendedDimensionsChangeDefaultRenamingAndDescription = function()
{
	return this.m_supportsExtendedDimensionsChangeDefaultRenamingAndDescription;
};
oFF.QCapabilities.prototype.setSupportsExtendedDimensionsChangeDefaultRenamingAndDescription = function(supportsExtDimChangeDefaultRenamingAndDesc)
{
	this.m_supportsExtendedDimensionsChangeDefaultRenamingAndDescription = supportsExtDimChangeDefaultRenamingAndDesc;
};
oFF.QCapabilities.prototype.supportsExtendedDimensionsCopyAllHierarchies = function()
{
	return this.m_supportsExtendedDimensionsCopyAllHierarchies;
};
oFF.QCapabilities.prototype.setSupportsExtendedDimensionsCopyAllHierarchies = function(supportsExtDimCopyAllHierarchies)
{
	this.m_supportsExtendedDimensionsCopyAllHierarchies = supportsExtDimCopyAllHierarchies;
};
oFF.QCapabilities.prototype.supportsFixMetadataHierarchyAttributes = function()
{
	return this.m_supportsFixMetadataHierarchyAttributes;
};
oFF.QCapabilities.prototype.setSupportsFixMetadataHierarchyAttributes = function(supportsFixMetadataHierarchyAttributes)
{
	this.m_supportsFixMetadataHierarchyAttributes = supportsFixMetadataHierarchyAttributes;
};
oFF.QCapabilities.prototype.setSupportsUniversalDisplayHierarchies = function(supportsUniversalDisplayHierarchies)
{
	this.m_supportsUniversalDisplayHierarchies = supportsUniversalDisplayHierarchies;
};
oFF.QCapabilities.prototype.setSupportsUniversalDisplayHierarchiesCustomDimensions = function(supportsUniversalDisplayHierarchiesCustomDimensions)
{
	this.m_supportsUniversalDisplayHierarchiesCustomDimensions = supportsUniversalDisplayHierarchiesCustomDimensions;
};
oFF.QCapabilities.prototype.supportsUniversalDisplayHierarchies = function()
{
	return this.m_supportsUniversalDisplayHierarchies;
};
oFF.QCapabilities.prototype.supportsUniversalDisplayHierarchiesCustomDimensions = function()
{
	return this.m_supportsUniversalDisplayHierarchiesCustomDimensions;
};
oFF.QCapabilities.prototype.setSupportsRemoteBlending = function(supportsRemoteBlending)
{
	this.m_supportsRemoteBlending = supportsRemoteBlending;
};
oFF.QCapabilities.prototype.supportsRemoteBlending = function()
{
	return this.m_supportsRemoteBlending;
};
oFF.QCapabilities.prototype.setSupportsCubeCache = function(supportsCubeCache)
{
	this.m_supportsCubeCache = supportsCubeCache;
};
oFF.QCapabilities.prototype.supportsCubeCache = function()
{
	return this.m_supportsCubeCache;
};
oFF.QCapabilities.prototype.setSupportsCatalogServiceV2 = function(supportsCatalogServiceV2)
{
	this.m_supportsCatalogServiceV2 = supportsCatalogServiceV2;
};
oFF.QCapabilities.prototype.supportsCatalogServiceV2 = function()
{
	return this.m_supportsCatalogServiceV2;
};
oFF.QCapabilities.prototype.supportsCustomSort = function()
{
	return this.m_supportsCustomSort;
};
oFF.QCapabilities.prototype.setSupportsCustomSort = function(supportsCustomSort)
{
	this.m_supportsCustomSort = supportsCustomSort;
};
oFF.QCapabilities.prototype.supportsTuplesOperand = function()
{
	return this.m_supportsTuplesOperand;
};
oFF.QCapabilities.prototype.setSupportsTuplesOperand = function(supportsTuplesOperand)
{
	this.m_supportsTuplesOperand = supportsTuplesOperand;
};
oFF.QCapabilities.prototype.supportsDataRefreshAndDataTopicality = function()
{
	return this.m_supportsDataRefreshAndDataTopicality;
};
oFF.QCapabilities.prototype.setSupportsDataRefreshAndDataTopicality = function(supportsDataRefreshAndDataTopicality)
{
	this.m_supportsDataRefreshAndDataTopicality = supportsDataRefreshAndDataTopicality;
};
oFF.QCapabilities.prototype.setSupportsRemoteBlendingBW = function(supportsRemoteBlendingBW)
{
	this.m_supportsRemoteBlendingBW = supportsRemoteBlendingBW;
};
oFF.QCapabilities.prototype.supportsRemoteBlendingBW = function()
{
	return this.m_supportsRemoteBlendingBW;
};
oFF.QCapabilities.prototype.supportsResultSetUnitIndex = function()
{
	return this.m_supportsResultSetUnitIndex;
};
oFF.QCapabilities.prototype.setSupportsResultSetUnitIndex = function(supportsResultSetUnitIndex)
{
	this.m_supportsResultSetUnitIndex = supportsResultSetUnitIndex;
};
oFF.QCapabilities.prototype.supportsCustomMeasureSortOrder = function()
{
	return this.m_supportsCustomMeasureSortOrder;
};
oFF.QCapabilities.prototype.setSupportsComplexTupleFilter = function(supportsComplexTupleFilter)
{
	this.m_supportsComplexTupleFilter = supportsComplexTupleFilter;
};
oFF.QCapabilities.prototype.supportsComplexTupleFilter = function()
{
	return this.m_supportsComplexTupleFilter;
};
oFF.QCapabilities.prototype.supportsNullFilter = function()
{
	return oFF.notNull(this.m_systemType) && !this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsNormalizePercentageInterval = function()
{
	return oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsExcludeNodeInComplexFilter = function()
{
	return oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.HANA);
};
oFF.QCapabilities.prototype.supportsSortDirectionForHierarchySortType = function()
{
	return oFF.notNull(this.m_systemType) && (this.m_systemType.isTypeOf(oFF.SystemType.HANA) || this.m_systemType.isTypeOf(oFF.SystemType.UNV));
};
oFF.QCapabilities.prototype.supportsServerSideSorts = function()
{
	return oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsExcludeOnHierarchy = function()
{
	return oFF.notNull(this.m_systemType) && !this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsDefaultResultSetAttributes = function()
{
	return oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsFilterStateInFirefly = function()
{
	return oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsMultipleFiltersOnSameDimension = function()
{
	return oFF.notNull(this.m_systemType) && !this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsMultipleNonFlatFiltersOnHierarchy = function()
{
	return oFF.notNull(this.m_systemType) && !this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsDefaultMeasureAddedForClustering = function()
{
	return oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsRankForTopN = function()
{
	return oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsUpdatedOn = function()
{
	return oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsUpdatedBy = function()
{
	return oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsSourceName = function()
{
	return oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsSourceDescription = function()
{
	return oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.setSupportsCustomMeasureSortOrder = function(supportsCustomMeasureSortOrder)
{
	this.m_supportsCustomMeasureSortOrder = supportsCustomMeasureSortOrder;
};
oFF.QCapabilities.prototype.supportsF4FilterForTextField = function()
{
	return this.m_supportsF4FilterForTextField;
};
oFF.QCapabilities.prototype.setSupportsF4FilterForTextField = function(supportsF4FilterForTextField)
{
	this.m_supportsF4FilterForTextField = supportsF4FilterForTextField;
};
oFF.QCapabilities.prototype.supportsSidPresentation = function()
{
	return this.m_supportsSidPresentation;
};
oFF.QCapabilities.prototype.setSupportsSidPresentation = function(supportsSidPresentation)
{
	this.m_supportsSidPresentation = supportsSidPresentation;
};
oFF.QCapabilities.prototype.supportsExceptionAggregationAvgNullSelectionMember = function()
{
	return this.m_supportsExceptionAggregationAvgNullSelectionMember;
};
oFF.QCapabilities.prototype.setSupportsExceptionAggregationAvgNullSelectionMember = function(supportExcepAggAvgNullSelMember)
{
	this.m_supportsExceptionAggregationAvgNullSelectionMember = supportExcepAggAvgNullSelMember;
};
oFF.QCapabilities.prototype.supportsExceptionAggregationCountNullSelectionMember = function()
{
	return this.m_supportsExceptionAggregationCountNullSelectionMember;
};
oFF.QCapabilities.prototype.setSupportsExceptionAggregationCountNullSelectionMember = function(supportExcepAggCountNullSelMember)
{
	this.m_supportsExceptionAggregationCountNullSelectionMember = supportExcepAggCountNullSelMember;
};
oFF.QCapabilities.prototype.supportsStatisticalAggregations = function()
{
	return this.m_supportsStatisticalAggregations;
};
oFF.QCapabilities.prototype.setSupportsStatisticalAggregations = function(supportStatisticalAggregations)
{
	this.m_supportsStatisticalAggregations = supportStatisticalAggregations;
};
oFF.QCapabilities.prototype.setSupportsVarianceOperator = function(supportsVarianceOperator)
{
	this.m_supportsVarianceOperator = supportsVarianceOperator;
};
oFF.QCapabilities.prototype.supportsVarianceOperator = function()
{
	return this.m_supportsVarianceOperator;
};
oFF.QCapabilities.prototype.setSupportsAsyncRemoteModelValidation = function(supportsAsyncRemoteModelValidation)
{
	this.m_supportsAsyncRemoteModelValidation = supportsAsyncRemoteModelValidation;
};
oFF.QCapabilities.prototype.supportsAsyncRemoteModelValidation = function()
{
	return this.m_supportsAsyncRemoteModelValidation;
};
oFF.QCapabilities.prototype.setSupportsExtendedKeyFigureProperties = function(supportsExtendedKeyFigureProperties)
{
	this.m_supportsExtendedKeyFigureProperties = supportsExtendedKeyFigureProperties;
};
oFF.QCapabilities.prototype.supportsExtendedKeyFigureProperties = function()
{
	return this.m_supportsExtendedKeyFigureProperties;
};
oFF.QCapabilities.prototype.setSupportsDetailedResponseExpansion = function(supportsDetailedResponseExpansion)
{
	this.m_supportsDetailedResponseExpansion = supportsDetailedResponseExpansion;
};
oFF.QCapabilities.prototype.supportsDetailedResponseExpansion = function()
{
	return this.m_supportsDetailedResponseExpansion;
};
oFF.QCapabilities.prototype.setSupportsDynamicVariableRefresh = function(supportsDynamicVariableRefresh)
{
	this.m_supportsDynamicVariableRefresh = supportsDynamicVariableRefresh;
};
oFF.QCapabilities.prototype.supportsDynamicVariableRefresh = function()
{
	return this.m_supportsDynamicVariableRefresh;
};
oFF.QCapabilities.prototype.setSupportsQueryCurrencyTranslation = function(supportsQueryCurrencyTranslation)
{
	this.m_supportsQueryCurrencyTranslation = supportsQueryCurrencyTranslation;
};
oFF.QCapabilities.prototype.supportsQueryCurrencyTranslation = function()
{
	return this.m_supportsQueryCurrencyTranslation;
};
oFF.QCapabilities.prototype.setSupportsCurrencyTranslation = function(supportsCurrencyTranslation)
{
	this.m_supportsCurrencyTranslation = supportsCurrencyTranslation;
};
oFF.QCapabilities.prototype.setSupportsMeasureMemberCurrencyTranslations = function(supportsMeasureMemberCurrencyTranslations)
{
	this.m_supportsMeasureMemberCurrencyTranslatons = supportsMeasureMemberCurrencyTranslations;
};
oFF.QCapabilities.prototype.supportsCurrencyTranslation = function()
{
	return this.m_supportsCurrencyTranslation;
};
oFF.QCapabilities.prototype.supportsMeasureMemberCurrencyTranslations = function()
{
	return this.m_supportsMeasureMemberCurrencyTranslatons;
};
oFF.QCapabilities.prototype.supportsNullZeroSuppression = function()
{
	return this.m_supportsNullZeroSuppression;
};
oFF.QCapabilities.prototype.supportsHierarchyRestNode = function()
{
	return this.m_supportsHierarchyRestNode;
};
oFF.QCapabilities.prototype.setSupportsHierarchyRestNode = function(supportsHierarchyRestNode)
{
	this.m_supportsHierarchyRestNode = supportsHierarchyRestNode;
};
oFF.QCapabilities.prototype.supportsHierarchyVirtualRootNode = function()
{
	return this.m_supportsHierarchyVirtualRootNode;
};
oFF.QCapabilities.prototype.setSupportsHierarchyVirtualRootNode = function(supportsHierarchyVirtualRootNode)
{
	this.m_supportsHierarchyVirtualRootNode = supportsHierarchyVirtualRootNode;
};
oFF.QCapabilities.prototype.supportsStructureRestrictionsInValueHelp = function()
{
	return this.m_supportsStructureRestrictionsInValueHelp;
};
oFF.QCapabilities.prototype.setSupportsStructureRestrictionsInValueHelp = function(supportsStructureRestrictionsInValueHelp)
{
	this.m_supportsStructureRestrictionsInValueHelp = supportsStructureRestrictionsInValueHelp;
};
oFF.QCapabilities.prototype.supportsSpatialChoropleth = function()
{
	return this.m_supportsSpatialChoropleth;
};
oFF.QCapabilities.prototype.setSupportsSpatialChoropleth = function(supportsSpatialChoropleth)
{
	this.m_supportsSpatialChoropleth = supportsSpatialChoropleth;
};
oFF.QCapabilities.prototype.supportsCustomHierarchy = function()
{
	return this.m_supportsCustomHierarchy;
};
oFF.QCapabilities.prototype.setSupportsCustomHierarchy = function(supportsCustomHierarchy)
{
	this.m_supportsCustomHierarchy = supportsCustomHierarchy;
};
oFF.QCapabilities.prototype.setSupportsInaCurrentMember = function(supportsInaCurrentMember)
{
	this.m_supportsInaCurrentMember = supportsInaCurrentMember;
};
oFF.QCapabilities.prototype.supportsInaCurrentMember = function()
{
	return this.m_supportsInaCurrentMember;
};
oFF.QCapabilities.prototype.supportsDimensionDefaultMember = function()
{
	return this.m_supportsDimensionDefaultMember;
};
oFF.QCapabilities.prototype.setSupportsDimensionDefaultMember = function(supportsDimensionDefaultMember)
{
	this.m_supportsDimensionDefaultMember = supportsDimensionDefaultMember;
};
oFF.QCapabilities.prototype.supportsDimensionVisibility = function()
{
	return this.m_supportsDimensionVisibility;
};
oFF.QCapabilities.prototype.setSupportsDimensionVisibility = function(supportsDimensionVisibility)
{
	this.m_supportsDimensionVisibility = supportsDimensionVisibility;
};
oFF.QCapabilities.prototype.supportsDisplayHierarchyFixInFilter = function()
{
	return this.m_supportsDisplayHierarchyFixInFilter;
};
oFF.QCapabilities.prototype.setSupportsDisplayHierarchyFixInFilter = function(supportsDisplayHierarchyFixInFilter)
{
	this.m_supportsDisplayHierarchyFixInFilter = supportsDisplayHierarchyFixInFilter;
};
oFF.QCapabilities.prototype.supportsCustomMemberKeySortOrder = function()
{
	return this.m_supportsCustomMemberKeySortOrder;
};
oFF.QCapabilities.prototype.supportsCustomMemberKeySortOrderExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline2();
		}
		if (this.m_systemType.isTypeOf(oFF.SystemType.UNV))
		{
			return this.supportsUnvBaseline3();
		}
		if (this.m_systemType.isTypeOf(oFF.SystemType.BW))
		{
			return this.supportsCustomMemberKeySortOrder();
		}
	}
	return false;
};
oFF.QCapabilities.prototype.setSupportsCustomMemberKeySortOrder = function(supportsCustomMemberKeySortOrder)
{
	this.m_supportsCustomMemberKeySortOrder = supportsCustomMemberKeySortOrder;
};
oFF.QCapabilities.prototype.supportsSpatialTransformation = function()
{
	return this.m_supportsSpatialTransformation;
};
oFF.QCapabilities.prototype.setSupportsSpatialTransformation = function(supportsSpatialTransformation)
{
	this.m_supportsSpatialTransformation = supportsSpatialTransformation;
};
oFF.QCapabilities.prototype.supportsMemberVisibility = function()
{
	return this.m_supportsMemberVisibility;
};
oFF.QCapabilities.prototype.setSupportsMemberVisibility = function(supportsMemberVisibility)
{
	this.m_supportsMemberVisibility = supportsMemberVisibility;
};
oFF.QCapabilities.prototype.supportsExtendedDimensionVisibility = function()
{
	return this.m_supportsExtendedDimensionVisibility;
};
oFF.QCapabilities.prototype.setSupportsExtendedDimensionVisibility = function(supportsExtendedDimensionVisibility)
{
	this.m_supportsExtendedDimensionVisibility = supportsExtendedDimensionVisibility;
};
oFF.QCapabilities.prototype.supportsDynamicTimeMeasure = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return true;
		}
		else if (this.m_systemType.isTypeOf(oFF.SystemType.BW))
		{
			return this.supportsInaCurrentMember() && this.supportsIgnoreExternalDimensions() && this.supportsUniversalDisplayHierarchiesCustomDimensions();
		}
	}
	return false;
};
oFF.QCapabilities.prototype.supportsMetadataDataSourceDefinitionValidation = function()
{
	return this.m_supportsMetadataDataSourceDefinitionValidation;
};
oFF.QCapabilities.prototype.setSupportsMetadataDataSourceDefinitionValidation = function(supportsMetadataDataSourceDefinitionValidation)
{
	this.m_supportsMetadataDataSourceDefinitionValidation = supportsMetadataDataSourceDefinitionValidation;
};
oFF.QCapabilities.prototype.supportsAsyncBatchRequests = function()
{
	return this.m_supportsAsyncBatchRequests;
};
oFF.QCapabilities.prototype.supportsPersistedInaQuery = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return true;
		}
	}
	return false;
};
oFF.QCapabilities.prototype.supportsQueryBatchingExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline2() && this.supportsBatchRsStreaming();
		}
		if (this.m_systemType.isTypeOf(oFF.SystemType.UNV))
		{
			return this.supportsUnvBaseline3() && this.supportsBatchRsStreaming();
		}
	}
	return false;
};
oFF.QCapabilities.prototype.setSupportsAsyncBatchRequests = function(supportsAsyncBatchRequests)
{
	this.m_supportsAsyncBatchRequests = supportsAsyncBatchRequests;
};
oFF.QCapabilities.prototype.supportsVariableVariants = function()
{
	return this.m_supportsVariableVariants;
};
oFF.QCapabilities.prototype.setSupportsVariableVariants = function(supportsVariableVariants)
{
	this.m_supportsVariableVariants = supportsVariableVariants;
};
oFF.QCapabilities.prototype.supportsCalculatedDimensions = function()
{
	return this.m_supportsCalculatedDimensions;
};
oFF.QCapabilities.prototype.setSupportsCalculatedDimensions = function(supportsCalculatedDimensions)
{
	this.m_supportsCalculatedDimensions = supportsCalculatedDimensions;
};
oFF.QCapabilities.prototype.supportsMeasureBasedVariance = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.BW))
		{
			return this.supportsVarianceOperator();
		}
		else if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return false;
};
oFF.QCapabilities.prototype.supportsVersionBasedVariance = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.BW))
		{
			return this.supportsVarianceOperator() && this.supportsIgnoreExternalDimensions();
		}
		else if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return false;
};
oFF.QCapabilities.prototype.supportsTimeBasedVariance = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.BW))
		{
			return this.supportsUniversalDisplayHierarchiesCustomDimensions() && this.supportsInaCurrentMember() && this.supportsIgnoreExternalDimensions();
		}
		else if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return false;
};
oFF.QCapabilities.prototype.supportsTimeBasedVarianceWithNavigationAndExternalFilter = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.BW))
		{
			return this.supportsInaCurrentMember();
		}
	}
	return false;
};
oFF.QCapabilities.prototype.supportsTimeBasedVarianceWithMultipleTime = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return false;
};
oFF.QCapabilities.prototype.supportsTimeBasedVarianceShowAllLevels = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return false;
};
oFF.QCapabilities.prototype.supportsTimeBasedVarianceWithFilterClosureUnderDisplayDrill = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return false;
};
oFF.QCapabilities.prototype.supportsTimeBasedVarianceWithNestedSelectionsOnTime = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return false;
};
oFF.QCapabilities.prototype.supportsTimeBasedVarianceInBlending = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline2();
		}
	}
	return false;
};
oFF.QCapabilities.prototype.supportsHierarchyLevelDrilling = function()
{
	return oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.HANA);
};
oFF.QCapabilities.prototype.supportsTotalOperator = function()
{
	return this.m_supportsTotalOperator;
};
oFF.QCapabilities.prototype.setSupportsTotalOperator = function(supportsTotalOperator)
{
	this.m_supportsTotalOperator = supportsTotalOperator;
};
oFF.QCapabilities.prototype.supportsFixHierarchyFlatKeys = function()
{
	return this.m_supportsFixHierarchyFlagKeys;
};
oFF.QCapabilities.prototype.setSupportsFixHierarchyFlatKeys = function(supportsFixHierarchyFlatKeys)
{
	this.m_supportsFixHierarchyFlagKeys = supportsFixHierarchyFlatKeys;
};
oFF.QCapabilities.prototype.supportsAttributeValueLookupExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsAttributeValueLookup();
};
oFF.QCapabilities.prototype.supportsCellValueOperandExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsCellValueOperand();
};
oFF.QCapabilities.prototype.supportsIgnoreExternalDimensionsExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsIgnoreExternalDimensions();
};
oFF.QCapabilities.prototype.supportsSetOperandCurrentMemberSingleNavigationExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsSetOperandCurrentMemberSingleNavigation();
};
oFF.QCapabilities.prototype.supportsCurrentMemberFilterExtensionExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsCurrentMemberFilterExtension();
};
oFF.QCapabilities.prototype.supportsExceptionAggregationDimsFormulasExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsExceptionAggregationDimsFormulas();
};
oFF.QCapabilities.prototype.supportsCubeBlendingExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsCubeBlending();
};
oFF.QCapabilities.prototype.supportsCubeBlendingPropertiesExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsCubeBlendingProperties();
};
oFF.QCapabilities.prototype.supportsCubeBlendingSortingExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsCubeBlendingSorting();
};
oFF.QCapabilities.prototype.supportsCubeBlendingCustomMemberExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsCubeBlendingCustomMember();
};
oFF.QCapabilities.prototype.supportsCubeBlendingReadmodeExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsCubeBlendingReadmode();
};
oFF.QCapabilities.prototype.supportsCubeBlendingOutOfContextExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsCubeBlendingOutOfContext();
};
oFF.QCapabilities.prototype.supportsCubeBlendingAggregationExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsCubeBlendingAggregation();
};
oFF.QCapabilities.prototype.supportsExceptionSettingsExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsExceptionSettings();
};
oFF.QCapabilities.prototype.supportsAggregationNopNullExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsAggregationNopNull();
};
oFF.QCapabilities.prototype.supportsAggregationNopNullZeroExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsAggregationNopNullZero();
};
oFF.QCapabilities.prototype.supportsMultipleExAggDimsInCalcPlanExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline1();
		}
	}
	return this.supportsMultipleExAggDimsInCalcPlan();
};
oFF.QCapabilities.prototype.supportsExtendedDimensionsChangeDefaultRenamingAndDescriptionExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline2();
		}
	}
	return this.supportsExtendedDimensionsChangeDefaultRenamingAndDescription();
};
oFF.QCapabilities.prototype.supportsExtendedDimensionsCopyAllHierarchiesExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline2();
		}
	}
	return this.supportsExtendedDimensionsCopyAllHierarchies();
};
oFF.QCapabilities.prototype.supportsFixMetadataHierarchyAttributesExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline2();
		}
	}
	return this.supportsFixMetadataHierarchyAttributes();
};
oFF.QCapabilities.prototype.supportsRemoteBlendingExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline2();
		}
	}
	return this.supportsRemoteBlending();
};
oFF.QCapabilities.prototype.supportsCalculatedDimensionsExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline2();
		}
		if (this.m_systemType.isTypeOf(oFF.SystemType.UNV))
		{
			return this.supportsUnvBaseline3();
		}
	}
	return this.supportsCalculatedDimensions();
};
oFF.QCapabilities.prototype.supportsPlanningOnCalculatedDimensionsExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline2();
		}
	}
	return this.supportsPlanningOnCalculatedDimensions();
};
oFF.QCapabilities.prototype.supportsCustomDimension2Ext = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline3();
		}
	}
	return this.supportsCustomDimension2();
};
oFF.QCapabilities.prototype.supportsResultSetUnitIndexExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline3();
		}
	}
	return this.supportsResultSetUnitIndex();
};
oFF.QCapabilities.prototype.supportsExceptionAggregationCountNullSelectionMemberExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline3();
		}
	}
	return this.supportsExceptionAggregationCountNullSelectionMember();
};
oFF.QCapabilities.prototype.supportsExceptionAggregationAvgNullSelectionMemberExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline3();
		}
	}
	return this.supportsExceptionAggregationAvgNullSelectionMember();
};
oFF.QCapabilities.prototype.supportsExceptionAggregationFirstLastSelectionMemberExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline3();
		}
	}
	return this.supportsExceptionAggregationFirstLastSelectionMember();
};
oFF.QCapabilities.prototype.supportsExceptionAggregationOnSelectionExt = function()
{
	return this.supportsMdsBaseline3();
};
oFF.QCapabilities.prototype.supportsRestrictedMeasureDynamicTimeExt = function()
{
	return this.supportsMdsBaseline1();
};
oFF.QCapabilities.prototype.supportsDifferenceFromCalculationExt = function()
{
	return this.supportsMdsBaseline1();
};
oFF.QCapabilities.prototype.supportsDimensionToMeasureCalculationExt = function()
{
	return this.supportsMdsBaseline3();
};
oFF.QCapabilities.prototype.supportsRemoteFilterExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline4();
		}
	}
	return this.supportsRemoteFilter();
};
oFF.QCapabilities.prototype.supportsStatisticalAggregationsExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline5();
		}
	}
	return this.supportsStatisticalAggregations();
};
oFF.QCapabilities.prototype.supportsResultSetCellExplainExt = function()
{
	if (oFF.notNull(this.m_systemType))
	{
		if (this.m_systemType.isTypeOf(oFF.SystemType.HANA))
		{
			return this.supportsMdsBaseline6();
		}
	}
	return this.supportsResultSetCellExplain();
};
oFF.QCapabilities.prototype.supportsCompoundGrowthRate = function()
{
	return oFF.notNull(this.m_systemType) && !this.m_systemType.isTypeOf(oFF.SystemType.BW);
};
oFF.QCapabilities.prototype.supportsMdsBaseline1 = function()
{
	var mdsMetadataVersion1 = "1.0.122.14.00000000";
	var isValidHanaVersion = oFF.ServerVersionComparator.compare(this.m_serverMetadataVersion, mdsMetadataVersion1) !== 1;
	return isValidHanaVersion && this.supportsAttributeValueLookup() && this.supportsCellValueOperand() && this.supportsIgnoreExternalDimensions() && this.supportsSetOperandCurrentMemberSingleNavigation() && this.supportsCurrentMemberFilterExtension() && this.supportsExceptionAggregationDimsFormulas() && this.supportsCubeBlending() && this.supportsCubeBlendingProperties() && this.supportsCubeBlendingSorting() && this.supportsCubeBlendingCustomMember() && this.supportsCubeBlendingReadmode() && this.supportsCubeBlendingOutOfContext() && this.supportsCubeBlendingAggregation() && this.supportsExceptionSettings() && this.supportsAggregationNopNull() && this.supportsAggregationNopNullZero() && this.supportsMultipleExAggDimsInCalcPlan();
};
oFF.QCapabilities.prototype.supportsMdsBaseline2 = function()
{
	return this.supportsMdsBaseline1() && this.supportsExtendedDimensionsChangeDefaultRenamingAndDescription() && this.supportsExtendedDimensionsCopyAllHierarchies() && this.supportsFixMetadataHierarchyAttributes() && this.supportsRemoteBlending() && this.supportsCalculatedDimensions() && this.supportsPlanningOnCalculatedDimensions();
};
oFF.QCapabilities.prototype.supportsMdsBaseline3 = function()
{
	return this.supportsMdsBaseline2() && this.supportsCustomDimension2() && this.supportsResultSetUnitIndex() && this.supportsExceptionAggregationCountNullSelectionMember() && this.supportsExceptionAggregationAvgNullSelectionMember() && this.supportsExceptionAggregationFirstLastSelectionMember();
};
oFF.QCapabilities.prototype.supportsMdsBaseline4 = function()
{
	return this.supportsMdsBaseline3() && this.supportsRemoteFilter();
};
oFF.QCapabilities.prototype.supportsMdsBaseline5 = function()
{
	return this.supportsMdsBaseline4() && this.supportsStatisticalAggregations();
};
oFF.QCapabilities.prototype.supportsMdsBaseline6 = function()
{
	return this.supportsMdsBaseline5() && this.supportsResultSetCellExplain();
};
oFF.QCapabilities.prototype.supportsUnvBaseline1 = function()
{
	var unvMetadataVersion1 = "2.1.0.0";
	var versionComparison = oFF.ServerVersionComparator.compare(this.m_serverMetadataVersion, unvMetadataVersion1);
	var isValidUnvVersion = versionComparison === 0 || versionComparison === -1;
	return isValidUnvVersion;
};
oFF.QCapabilities.prototype.supportsUnvBaseline2 = function()
{
	var unvMetadataVersion2 = "2.4.0.0";
	var versionComparison = oFF.ServerVersionComparator.compare(this.m_serverMetadataVersion, unvMetadataVersion2);
	var isValidUnvVersion = versionComparison === 0 || versionComparison === -1;
	return this.supportsUnvBaseline1() && isValidUnvVersion;
};
oFF.QCapabilities.prototype.supportsUnvBaseline3 = function()
{
	var unvMetadataVersion3 = "3.2.0.0";
	var versionComparison = oFF.ServerVersionComparator.compare(this.m_serverMetadataVersion, unvMetadataVersion3);
	var isValidUnvVersion = versionComparison === 0 || versionComparison === -1;
	return this.supportsUnvBaseline2() && isValidUnvVersion && this.supportsCalculatedDimensions();
};
oFF.QCapabilities.prototype.supportsUnvBaseline4 = function()
{
	var unvMetadataVersion4 = "3.3.0.0";
	var versionComparison = oFF.ServerVersionComparator.compare(this.m_serverMetadataVersion, unvMetadataVersion4);
	var isValidUnvVersion = versionComparison === 0 || versionComparison === -1;
	return this.supportsUnvBaseline3() && isValidUnvVersion;
};
oFF.QCapabilities.prototype.supportsUnvBaseline5 = function()
{
	var unvMetadataVersion5 = "3.3.0.0";
	var versionComparison = oFF.ServerVersionComparator.compare(this.m_serverMetadataVersion, unvMetadataVersion5);
	var isValidUnvVersion = versionComparison === 0 || versionComparison === -1;
	return this.supportsUnvBaseline4() && isValidUnvVersion;
};
oFF.QCapabilities.prototype.supportsZeroSuppression = function()
{
	return this.m_supportsZeroSuppression;
};
oFF.QCapabilities.prototype.setSupportsZeroSuppression = function(supportsZeroSuppression)
{
	this.m_supportsZeroSuppression = supportsZeroSuppression;
};
oFF.QCapabilities.prototype.supportsResultSetInterval = function()
{
	return this.m_supportsResultSetInterval;
};
oFF.QCapabilities.prototype.setSupportsResultSetInterval = function(supportsResultSetInterval)
{
	this.m_supportsResultSetInterval = supportsResultSetInterval;
};
oFF.QCapabilities.prototype.supportsSapDate = function()
{
	return this.m_supportsSapDate;
};
oFF.QCapabilities.prototype.supportsCustomDimensionMemberExecutionStep = function()
{
	return this.m_supportsCustomDimensionMemberExecutionStep;
};
oFF.QCapabilities.prototype.supportsNumberAsString = function()
{
	return this.m_supportsNumberAsString;
};
oFF.QCapabilities.prototype.supportsSupplements = function()
{
	return this.m_supportsSupplements;
};
oFF.QCapabilities.prototype.setSupportsNumberAsString = function(supportsNumberAsString)
{
	this.m_supportsNumberAsString = supportsNumberAsString;
};
oFF.QCapabilities.prototype.setSupportsSupplements = function(supportsSupplements)
{
	this.m_supportsSupplements = supportsSupplements;
};
oFF.QCapabilities.prototype.setSupportsSuppressSupplements = function(supportsSuppressSupplements)
{
	this.m_supportsSuppressSupplements = supportsSuppressSupplements;
};
oFF.QCapabilities.prototype.supportsSuppressSupplements = function()
{
	return this.m_supportsSuppressSupplements;
};
oFF.QCapabilities.prototype.setSupportsCustomDimensionMemberExecutionStep = function(supportsCustomDimensionMemberExecutionStep)
{
	this.m_supportsCustomDimensionMemberExecutionStep = supportsCustomDimensionMemberExecutionStep;
};
oFF.QCapabilities.prototype.setSupportsSapDate = function(supportsSapDate)
{
	this.m_supportsSapDate = supportsSapDate;
};
oFF.QCapabilities.prototype.supportsAttributeValueLookup = function()
{
	return this.m_supportsAttributeValueLookup;
};
oFF.QCapabilities.prototype.setSupportsAttributeValueLookup = function(supportsAttributeValueLookup)
{
	this.m_supportsAttributeValueLookup = supportsAttributeValueLookup;
};
oFF.QCapabilities.prototype.supportsAggregationNopNull = function()
{
	return this.m_supportsAggregationNopNull;
};
oFF.QCapabilities.prototype.setSupportsAggregationNopNull = function(supportsAggregationNopNull)
{
	this.m_supportsAggregationNopNull = supportsAggregationNopNull;
};
oFF.QCapabilities.prototype.supportsAggregationNopNullZero = function()
{
	return this.m_supportsAggregationNopNullZero;
};
oFF.QCapabilities.prototype.setSupportsAggregationNopNullZero = function(supportsAggregationNopNullZero)
{
	this.m_supportsAggregationNopNullZero = supportsAggregationNopNullZero;
};
oFF.QCapabilities.prototype.supportsPlanningOnCalculatedDimensions = function()
{
	return this.m_supportsPlanningOnCalculatedDimensions;
};
oFF.QCapabilities.prototype.setSupportsPlanningOnCalculatedDimensions = function(supportsPlanningOnCalculatedDimensions)
{
	this.m_supportsPlanningOnCalculatedDimensions = supportsPlanningOnCalculatedDimensions;
};
oFF.QCapabilities.prototype.supportsCustomDimension2 = function()
{
	return this.m_supportsCustomDimension2;
};
oFF.QCapabilities.prototype.setSupportsCustomDimension2 = function(supportsCustomDimension2)
{
	this.m_supportsCustomDimension2 = supportsCustomDimension2;
};
oFF.QCapabilities.prototype.supportsCubeBlendingAggregation = function()
{
	return this.m_supportsCubeBlendingAggregation;
};
oFF.QCapabilities.prototype.setSupportsCubeBlendingAggregation = function(supportsCubeBlendingAggregation)
{
	this.m_supportsCubeBlendingAggregation = supportsCubeBlendingAggregation;
};
oFF.QCapabilities.prototype.supportsWindowFunctions = function()
{
	return this.m_supportsWindowFunction;
};
oFF.QCapabilities.prototype.setSupportsWindowFunction = function(supportsWindowFunction)
{
	this.m_supportsWindowFunction = supportsWindowFunction;
};
oFF.QCapabilities.prototype.supportsCubeBlendingSorting = function()
{
	return this.m_supportsCubeBlendingSorting;
};
oFF.QCapabilities.prototype.supportsCubeBlendingReadmode = function()
{
	return this.m_supportsCubeBlendingReadmode;
};
oFF.QCapabilities.prototype.supportsCubeBlendingCustomMember = function()
{
	return this.m_supportsCubeBlendingCustomMember;
};
oFF.QCapabilities.prototype.setSupportsCubeBlendingSorting = function(supportsCubeBlendingSorting)
{
	this.m_supportsCubeBlendingSorting = supportsCubeBlendingSorting;
};
oFF.QCapabilities.prototype.setSupportsCubeBlendingReadmode = function(supportsCubeBlendingReadmode)
{
	this.m_supportsCubeBlendingReadmode = supportsCubeBlendingReadmode;
};
oFF.QCapabilities.prototype.setSupportsCubeBlendingCustomMember = function(supportsCubeBlendingCustomMember)
{
	this.m_supportsCubeBlendingCustomMember = supportsCubeBlendingCustomMember;
};
oFF.QCapabilities.prototype.supportsMultipleExAggDimsInCalcPlan = function()
{
	return this.m_supportsMultipleExAggDimsInCalcPlan;
};
oFF.QCapabilities.prototype.setSupportsMultipleExAggDimsInCalcPlan = function(supportsMultipleExAggDimsInCalcPlan)
{
	this.m_supportsMultipleExAggDimsInCalcPlan = supportsMultipleExAggDimsInCalcPlan;
};
oFF.QCapabilities.prototype.supportsSetOperandCurrentMemberSingleNavigation = function()
{
	return this.m_supportsSetOperandCurrentMemberSingleNavigation;
};
oFF.QCapabilities.prototype.setSupportsSetOperandCurrentMemberSingleNavigation = function(supportsSetOperandCurrentMemberSingleNavigation)
{
	this.m_supportsSetOperandCurrentMemberSingleNavigation = supportsSetOperandCurrentMemberSingleNavigation;
};
oFF.QCapabilities.prototype.supportsCurrentMemberFilterExtension = function()
{
	return this.m_supportsCurrentMemberFilterExtension;
};
oFF.QCapabilities.prototype.setSupportsCurrentMemberFilterExtension = function(supportsCurrentMemberFilterExtension)
{
	this.m_supportsCurrentMemberFilterExtension = supportsCurrentMemberFilterExtension;
};
oFF.QCapabilities.prototype.supportsClientInfo = function()
{
	return this.m_supportsClientInfo;
};
oFF.QCapabilities.prototype.setSupportsClientInfo = function(supportsClientInfo)
{
	this.m_supportsClientInfo = supportsClientInfo;
};
oFF.QCapabilities.prototype.supportsUniversalDisplayHierarchiesZeroBased = function()
{
	return this.m_supportsUniversalDisplayHierarchiesZeroBased;
};
oFF.QCapabilities.prototype.setSupportsUniversalDisplayHierarchiesZeroBased = function(supportsUniversalDisplayHierarchiesZeroBased)
{
	this.m_supportsUniversalDisplayHierarchiesZeroBased = supportsUniversalDisplayHierarchiesZeroBased;
};
oFF.QCapabilities.prototype.supportsRemoteFilter = function()
{
	return this.m_supportsRemoteFilter;
};
oFF.QCapabilities.prototype.setSupportsRemoteFilter = function(supportsRemoteFilter)
{
	this.m_supportsRemoteFilter = supportsRemoteFilter;
};
oFF.QCapabilities.prototype.supportsDynamicRestrictionOnFormula = function()
{
	return this.m_supportsDynamicRestrictionOnFormula;
};
oFF.QCapabilities.prototype.setSupportsDynamicRestrictionOnFormula = function(supportsDynamicRestrictionOnFormula)
{
	this.m_supportsDynamicRestrictionOnFormula = supportsDynamicRestrictionOnFormula;
};
oFF.QCapabilities.prototype.supportsVisualAggregation = function()
{
	return this.m_supportsVisualAggregation;
};
oFF.QCapabilities.prototype.setSupportsVisualAggregation = function(supportsVisualAggregation)
{
	this.m_supportsVisualAggregation = supportsVisualAggregation;
};
oFF.QCapabilities.prototype.supportsNamedCustomMember = function()
{
	return this.m_supportsNamedCustomMember;
};
oFF.QCapabilities.prototype.setSupportsNamedCustomMember = function(supportsNamedCustomMember)
{
	this.m_supportsNamedCustomMember = supportsNamedCustomMember;
};
oFF.QCapabilities.prototype.setSupportsVersionParameters = function(supportsVersionParameters)
{
	this.m_supportsVersionParameters = supportsVersionParameters;
};
oFF.QCapabilities.prototype.setSupportsVersionPrivileges = function(supportsVersionPrivileges)
{
	this.m_supportsVersionPrivileges = supportsVersionPrivileges;
};
oFF.QCapabilities.prototype.supportsVersionParameters = function()
{
	return this.m_supportsVersionParameters;
};
oFF.QCapabilities.prototype.supportsVersionPrivileges = function()
{
	return this.m_supportsVersionPrivileges;
};
oFF.QCapabilities.prototype.supportsSuppressKeyfigureCalculation = function()
{
	return this.m_supportsSuppressKeyfigureCalculation;
};
oFF.QCapabilities.prototype.setSupportsSuppressKeyfigureCalculation = function(supportsSuppressKeyfigureCalculation)
{
	this.m_supportsSuppressKeyfigureCalculation = supportsSuppressKeyfigureCalculation;
};
oFF.QCapabilities.prototype.supportsRequestTimezone = function()
{
	return this.m_supportsRequestTimezone;
};
oFF.QCapabilities.prototype.supportsMultiSource = function()
{
	return this.m_supportsMultiSource;
};
oFF.QCapabilities.prototype.supportsVariableMasking = function()
{
	return this.m_supportsVariableMasking;
};
oFF.QCapabilities.prototype.setSupportsRequestTimezone = function(supportsRequestTimezone)
{
	this.m_supportsRequestTimezone = supportsRequestTimezone;
};
oFF.QCapabilities.prototype.setSupportsMultiSource = function(supportsMultiSource)
{
	this.m_supportsMultiSource = supportsMultiSource;
};
oFF.QCapabilities.prototype.setSupportsVariableMasking = function(supportsVariableMasking)
{
	this.m_supportsVariableMasking = supportsVariableMasking;
};
oFF.QCapabilities.prototype.supportsServerState = function()
{
	return this.m_supportsServerState;
};
oFF.QCapabilities.prototype.setSupportsServerState = function(supportsServerState)
{
	this.m_supportsServerState = supportsServerState;
};
oFF.QCapabilities.prototype.supportsHierarchyCatalog = function()
{
	return this.m_supportsHierarchyCatalog;
};
oFF.QCapabilities.prototype.setSupportsHierarchyCatalog = function(supportsHierarchyCatalog)
{
	this.m_supportsHierarchyCatalog = supportsHierarchyCatalog;
};
oFF.QCapabilities.prototype.supportsRunAsUser = function()
{
	return this.m_supportsRunAsUser;
};
oFF.QCapabilities.prototype.setSupportsRunAsUser = function(supportsRunAsUser)
{
	this.m_supportsRunAsUser = supportsRunAsUser;
};
oFF.QCapabilities.prototype.supportsVirtualDescription = function()
{
	return this.m_supportsVirtualDescription;
};
oFF.QCapabilities.prototype.setSupportsVirtualDescription = function(supportsVirtualDescription)
{
	this.m_supportsVirtualDescription = supportsVirtualDescription;
};
oFF.QCapabilities.prototype.supportsMeasureMemberDefinition = function()
{
	return this.m_supportsMeasureMemberDefinition;
};
oFF.QCapabilities.prototype.setSupportsMeasureMemberDefinition = function(supportsMeasureMemberDefinition)
{
	this.m_supportsMeasureMemberDefinition = supportsMeasureMemberDefinition;
};
oFF.QCapabilities.prototype.supportsMeasureMemberDetails = function()
{
	return this.m_supportsMeasureMemberDetails;
};
oFF.QCapabilities.prototype.setSupportsMeasureMemberDetails = function(supportsMeasureMemberDetails)
{
	this.m_supportsMeasureMemberDetails = supportsMeasureMemberDetails;
};
oFF.QCapabilities.prototype.supportsMeasureMemberType = function()
{
	return this.m_supportsMeasureMemberType;
};
oFF.QCapabilities.prototype.setSupportsMeasureMemberType = function(supportsMeasureMemberType)
{
	this.m_supportsMeasureMemberType = supportsMeasureMemberType;
};
oFF.QCapabilities.prototype.supportsCustomMeasuresInMetadata = function()
{
	return this.m_supportsMeasureMemberDefinition && this.m_supportsMeasureMemberDetails && this.m_supportsMeasureMemberType;
};
oFF.QCapabilities.prototype.setSupportsValueHelpWithAttributes = function(supportsValueHelpWithAttributes)
{
	this.m_supportsValueHelpWithAttributes = supportsValueHelpWithAttributes;
};
oFF.QCapabilities.prototype.supportsValueHelpWithAttributes = function()
{
	return this.m_supportsValueHelpWithAttributes;
};
oFF.QCapabilities.prototype.supportsEncodedResultset = function()
{
	return this.m_supportsEncodedResultset;
};
oFF.QCapabilities.prototype.setSupportsEncodedResultset = function(supportsEncodedResultset)
{
	this.m_supportsEncodedResultset = supportsEncodedResultset;
};
oFF.QCapabilities.prototype.supportsNewValuesExtendedFormat = function()
{
	return this.m_supportsNewValuesExtendedFormat;
};
oFF.QCapabilities.prototype.supportsNewValuesImplicitUnlock = function()
{
	return this.m_supportsNewValuesImplicitUnlock;
};
oFF.QCapabilities.prototype.setSupportsNewValuesExtendedFormat = function(supportsNewValuesExtendedFormat)
{
	this.m_supportsNewValuesExtendedFormat = supportsNewValuesExtendedFormat;
};
oFF.QCapabilities.prototype.setSupportsNewValuesImplicitUnlock = function(supportsNewValuesImplicitUnlock)
{
	this.m_supportsNewValuesImplicitUnlock = supportsNewValuesImplicitUnlock;
};
oFF.QCapabilities.prototype.supportsReportReportInterface = function()
{
	return this.m_supportsReportReportInterface;
};
oFF.QCapabilities.prototype.setSupportsReportReportInterface = function(supportsReportReportInterface)
{
	this.m_supportsReportReportInterface = supportsReportReportInterface;
};
oFF.QCapabilities.prototype.supportsCancelRunningQueries = function()
{
	return this.m_supportsCancelRunningQueries;
};
oFF.QCapabilities.prototype.setSupportsCancelRunningQueries = function(supportsCancelRunningQueries)
{
	this.m_supportsCancelRunningQueries = supportsCancelRunningQueries;
};
oFF.QCapabilities.prototype.supportsExtendedDimensionsFieldMapping = function()
{
	return this.m_supportsExtendedDimensionsFieldMapping;
};
oFF.QCapabilities.prototype.supportsExtendedDimensionsJoinColumns = function()
{
	return this.m_supportsExtendedDimensionsJoinColumns;
};
oFF.QCapabilities.prototype.supportsExtendedDimensionsOuterJoin = function()
{
	return this.m_supportsExtendedDimensionsOuterJoin;
};
oFF.QCapabilities.prototype.supportsExtendedDimensionsSkip = function()
{
	return this.m_supportsExtendedDimensionsSkip;
};
oFF.QCapabilities.prototype.setSupportsExtendedDimensionsFieldMapping = function(supportsExtendedDimensionsFieldMapping)
{
	this.m_supportsExtendedDimensionsFieldMapping = supportsExtendedDimensionsFieldMapping;
};
oFF.QCapabilities.prototype.setSupportsExtendedDimensionsJoinColumns = function(supportsExtendedDimensionsJoinColumns)
{
	this.m_supportsExtendedDimensionsJoinColumns = supportsExtendedDimensionsJoinColumns;
};
oFF.QCapabilities.prototype.setSupportsExtendedDimensionsOuterJoin = function(supportsExtendedDimensionsOuterJoin)
{
	this.m_supportsExtendedDimensionsOuterJoin = supportsExtendedDimensionsOuterJoin;
};
oFF.QCapabilities.prototype.setSupportsExtendedDimensionsSkip = function(supportsExtendedDimensionsSkip)
{
	this.m_supportsExtendedDimensionsSkip = supportsExtendedDimensionsSkip;
};
oFF.QCapabilities.prototype.supportsResultSetHierarchyLevel = function()
{
	return this.m_supportsResultSetHierarchyLevel;
};
oFF.QCapabilities.prototype.setSupportsResultSetHierarchyLevel = function(supportsResultSetHierarchyLevel)
{
	this.m_supportsResultSetHierarchyLevel = supportsResultSetHierarchyLevel;
};
oFF.QCapabilities.prototype.supportsQueryDataCellModelDefaults = function()
{
	return this.m_supportsQueryDataCellModelDefaults;
};
oFF.QCapabilities.prototype.setSupportsQueryDataCellModelDefaults = function(supportsQueryDataCellModelDefaults)
{
	this.m_supportsQueryDataCellModelDefaults = supportsQueryDataCellModelDefaults;
};
oFF.QCapabilities.prototype.setSupportsFunctionalValueHelp = function(supportsFunctionalValueHelp)
{
	this.m_supportsFunctionalValueHelp = supportsFunctionalValueHelp;
};
oFF.QCapabilities.prototype.supportsFunctionalValueHelp = function()
{
	return this.m_supportsFunctionalValueHelp;
};
oFF.QCapabilities.prototype.supportsExplicitDrillOnFilteredNodes = function()
{
	return this.m_supportsVisibilityFilter;
};
oFF.QCapabilities.prototype.supportsLowerLevelNodeAlignment = function(alignment)
{
	if (alignment === oFF.Alignment.CHILDREN_ABOVE_PARENT)
	{
		return this.m_supportsExpandBottomUp;
	}
	return true;
};
oFF.QCapabilities.prototype.supportsUniversalModel = function()
{
	return this.m_supportsUniversalModel;
};
oFF.QCapabilities.prototype.setSupportsUniversalModel = function(supportsUniversalModel)
{
	this.m_supportsUniversalModel = supportsUniversalModel;
};
oFF.QCapabilities.prototype.supportsTechnicalAxis = function()
{
	return this.m_supportsTechnicalAxis;
};
oFF.QCapabilities.prototype.setSupportsTechnicalAxis = function(supportsTechnicalAxis)
{
	this.m_supportsTechnicalAxis = supportsTechnicalAxis;
};
oFF.QCapabilities.prototype.supportsResultsetEffectiveFilter = function()
{
	return this.m_supportsResultSetEffectiveFilter;
};
oFF.QCapabilities.prototype.setSupportsResultsetEffectiveFilter = function(supportsResultSetEffectiveFilter)
{
	this.m_supportsResultSetEffectiveFilter = supportsResultSetEffectiveFilter;
};
oFF.QCapabilities.prototype.supportsCorrectDimensionDescription = function()
{
	return this.m_supportsCorrectDimensionDescription;
};
oFF.QCapabilities.prototype.supportsCorrectDimensionDescriptionExt = function()
{
	return this.supportsCorrectDimensionDescription() || oFF.notNull(this.m_systemType) && !this.m_systemType.isTypeOf(oFF.SystemType.HANA);
};
oFF.QCapabilities.prototype.setSupportsCorrectDimensionDescription = function(supportsCorrectDimensionDescription)
{
	this.m_supportsCorrectDimensionDescription = supportsCorrectDimensionDescription;
};
oFF.QCapabilities.prototype.supportsRSCellFormatTypeSpecific = function()
{
	return this.m_supportsRSCellFormatTypeSpecific;
};
oFF.QCapabilities.prototype.setSupportsRSCellFormatTypeSpecific = function(supportsRSCellFormatTypeSpecific)
{
	this.m_supportsRSCellFormatTypeSpecific = supportsRSCellFormatTypeSpecific;
};
oFF.QCapabilities.prototype.supportsMetadataDimensionOthers = function()
{
	return this.m_supportsMetadataDimensionOthers;
};
oFF.QCapabilities.prototype.setSupportsMetadataDimensionOthers = function(supportsMetadataDimensionOthers)
{
	this.m_supportsMetadataDimensionOthers = supportsMetadataDimensionOthers;
};
oFF.QCapabilities.prototype.supportsProviderClearCache = function()
{
	return oFF.notNull(this.m_systemType) && (this.m_systemType.isTypeOf(oFF.SystemType.HANA) || this.m_systemType.isTypeOf(oFF.SystemType.UNV) || this.m_systemType.isTypeOf(oFF.SystemType.UQAS));
};
oFF.QCapabilities.prototype.supportsFilterMeasureBased = function()
{
	return this.m_supportsCalculatedDimensions && this.m_supportsFormulaMeasures;
};
oFF.QCapabilities.prototype.supportsFilteringAcrossModels = function()
{
	return this.m_supportsCalculatedDimensions;
};
oFF.QCapabilities.prototype.supportsPrequeryBasedFilteringAcrossModels = function()
{
	return this.m_supportsCalculatedDimensions;
};
oFF.QCapabilities.prototype.supportsPrequeryBasedFilteringAcrossModelsExt = function(other)
{
	if (oFF.notNull(this.m_systemType) && this.m_systemType.isTypeOf(oFF.SystemType.HANA) && other.getSystemType() !== null && other.getSystemType().isTypeOf(oFF.SystemType.HANA) && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_systemName) && oFF.XStringUtils.isNotNullAndNotEmpty(other.getSystemName()))
	{
		if (oFF.XString.isEqual(this.getSystemName(), other.getSystemName()))
		{
			return this.supportsMdsBaseline3();
		}
		else
		{
			return this.supportsMdsBaseline4() && other.supportsMdsBaseline4();
		}
	}
	return false;
};
oFF.QCapabilities.prototype.supportsBatchRsStreaming = function()
{
	return this.m_supportsBatchRsStreaming;
};
oFF.QCapabilities.prototype.setSupportsBatchRsStreaming = function(supportsBatchRsStreaming)
{
	this.m_supportsBatchRsStreaming = supportsBatchRsStreaming;
};
oFF.QCapabilities.prototype.supportsBatchBlendingRsStreaming = function()
{
	return this.m_supportsBatchBlendingRsStreaming;
};
oFF.QCapabilities.prototype.setSupportsBatchBlendingRsStreaming = function(supportsBatchBlendingRsStreaming)
{
	this.m_supportsBatchBlendingRsStreaming = supportsBatchBlendingRsStreaming;
};
oFF.QCapabilities.prototype.setSupportsRootOrphansAfterVisibilityFilter = function(supportsRootOrphansAfterVisibilityFilter)
{
	this.m_supportsRootOrphansAfterVisibilityFilter = supportsRootOrphansAfterVisibilityFilter;
};
oFF.QCapabilities.prototype.supportsRootOrphansAfterVisibilityFilter = function()
{
	return this.m_supportsRootOrphansAfterVisibilityFilter;
};
oFF.QCapabilities.prototype.supportsDataCellSorting = function()
{
	return this.m_supportedSortingTypes.contains(oFF.SortType.DATA_CELL_VALUE);
};
oFF.QCapabilities.prototype.supportsComplexSorting = function()
{
	return this.m_supportedSortingTypes.contains(oFF.SortType.COMPLEX);
};
oFF.QCapabilities.prototype.supportsMeasureSorting = function()
{
	return this.m_supportedSortingTypes.contains(oFF.SortType.MEASURE);
};
oFF.QCapabilities.prototype.supportsSortType = function(sortType)
{
	return this.m_supportedSortingTypes.contains(sortType);
};
oFF.QCapabilities.prototype.supportsBreakGrouping = function(sortType)
{
	return this.m_supportedBreakGrouping.contains(sortType);
};
oFF.QCapabilities.prototype.supportsPreserveGrouping = function(sortType)
{
	return true;
};
oFF.QCapabilities.prototype.supportsFieldSorting = function(field)
{
	return this.m_supportedSortingTypes.contains(oFF.SortType.FIELD);
};
oFF.QCapabilities.prototype.supportsDimensionSorting = function(dimension, sortType)
{
	if (oFF.notNull(dimension))
	{
		return !dimension.isUniversalDisplayHierarchyDimension() && dimension.supportsSorting(sortType);
	}
	if (oFF.isNull(sortType))
	{
		return this.m_supportedSortingTypes.contains(oFF.SortType.FILTER) || this.m_supportedSortingTypes.contains(oFF.SortType.HIERARCHY) || this.m_supportedSortingTypes.contains(oFF.SortType.MEMBER_KEY) || this.m_supportedSortingTypes.contains(oFF.SortType.MEMBER_TEXT);
	}
	if (sortType === oFF.SortType.FILTER || sortType === oFF.SortType.HIERARCHY || sortType === oFF.SortType.MEMBER_KEY || sortType === oFF.SortType.MEMBER_TEXT)
	{
		return this.m_supportedSortingTypes.contains(sortType);
	}
	return false;
};
oFF.QCapabilities.prototype.setSupportsAutoVariableSubmit = function(supportsAutoVariableSubmit)
{
	this.m_supportsAutomaticVariableSubmit = supportsAutoVariableSubmit;
};
oFF.QCapabilities.prototype.setSupportsNullZeroSuppression = function(supportsNullZeroSuppression)
{
	this.m_supportsNullZeroSuppression = supportsNullZeroSuppression;
};
oFF.QCapabilities.prototype.setSupportsInputReadinessWithNavigationalAttributes = function(supportsInputReadinessWithNavigationalAttributes)
{
	this.m_supportsInputReadinessWithNavigationalAttributes = supportsInputReadinessWithNavigationalAttributes;
};
oFF.QCapabilities.prototype.setSupportsIteratedFormula = function(supportsIteratedFormula)
{
	this.m_supportsIteratedFormula = supportsIteratedFormula;
};
oFF.QCapabilities.prototype.supportsAutoVariableSubmit = function()
{
	return this.m_supportsAutomaticVariableSubmit;
};
oFF.QCapabilities.prototype.setSupportsExceptionAggregationFirstLastSelectionMember = function(supportsExceptionAggregationFirstLastSelectionMember)
{
	this.m_supportsExceptionAggregationFirstLastSelectionMember = supportsExceptionAggregationFirstLastSelectionMember;
};
oFF.QCapabilities.prototype.supportsExceptionAggregationFirstLastSelectionMember = function()
{
	return this.m_supportsExceptionAggregationFirstLastSelectionMember;
};
oFF.QCapabilities.prototype.setSupportsResultSetCellExplain = function(supportsResultSetCellExplain)
{
	this.m_supportsResultSetCellExplain = supportsResultSetCellExplain;
};
oFF.QCapabilities.prototype.supportsResultSetCellExplain = function()
{
	return this.m_supportsResultSetCellExplain;
};
oFF.QCapabilities.prototype.setSupportsMaintainsVariableVariants = function(supportsMaintainsVariableVariants)
{
	this.m_supportsMaintainsVariableVariants = supportsMaintainsVariableVariants;
};
oFF.QCapabilities.prototype.supportsMaintainsVariableVariants = function()
{
	return this.m_supportsMaintainsVariableVariants;
};
oFF.QCapabilities.prototype.supportsInputReadinessWithNavigationalAttributes = function()
{
	return this.m_supportsInputReadinessWithNavigationalAttributes;
};
oFF.QCapabilities.prototype.supportsIteratedFormula = function()
{
	return this.m_supportsIteratedFormula;
};
oFF.QCapabilities.prototype.setSupportsCDSProjectionViews = function(supportsCDSProjectionViews)
{
	this.m_supportsCDSProjectionViews = supportsCDSProjectionViews;
};
oFF.QCapabilities.prototype.supportsCDSProjectionViews = function()
{
	return this.m_supportsCDSProjectionViews;
};
oFF.QCapabilities.prototype.setSupportsCellDocumentId = function(supportsCellDocumentId)
{
	this.m_supportsCellDocumentId = supportsCellDocumentId;
};
oFF.QCapabilities.prototype.supportsCellDocumentId = function()
{
	return this.m_supportsCellDocumentId;
};
oFF.QCapabilities.prototype.setSupportsDimensionKeyAttributes = function(supportsDimensionKeyAttributes)
{
	this.m_supportsDimensionKeyAttributes = supportsDimensionKeyAttributes;
};
oFF.QCapabilities.prototype.supportsDimensionKeyAttributes = function()
{
	return this.m_supportsDimensionKeyAttributes;
};
oFF.QCapabilities.prototype.setSupportsHierarchyPathPresentationType = function(supportsHierarchyPathPresentationType)
{
	this.m_supportsHierarchyPathPresentationType = supportsHierarchyPathPresentationType;
};
oFF.QCapabilities.prototype.supportsHierarchyPathPresentationType = function()
{
	return this.m_supportsHierarchyPathPresentationType;
};
oFF.QCapabilities.prototype.setSupportsUndefinedTupleCountTotals = function(supportsUndefinedTupleCountTotals)
{
	this.m_supportsUndefinedTupleCountTotals = supportsUndefinedTupleCountTotals;
};
oFF.QCapabilities.prototype.supportsUndefinedTupleCountTotals = function()
{
	return this.m_supportsUndefinedTupleCountTotals;
};
oFF.QCapabilities.prototype.supportsTextInHierarchyForCharacteristicsWithoutText = function()
{
	return this.m_supportsTextInHierarchyForCharacteristicsWithoutText;
};
oFF.QCapabilities.prototype.setSupportsTextInHierarchyForCharacteristicsWithoutText = function(supportsTextInHierarchyForCharacteristicsWithoutText)
{
	this.m_supportsTextInHierarchyForCharacteristicsWithoutText = supportsTextInHierarchyForCharacteristicsWithoutText;
};
oFF.QCapabilities.prototype.setSupportsPagingTupleCountBeforeSlicing = function(supportsPagingTupleCountBeforeSlicing)
{
	this.m_supportsPagingTupleCountBeforeSlicing = supportsPagingTupleCountBeforeSlicing;
};
oFF.QCapabilities.prototype.supportsPagingTupleCountBeforeSlicing = function()
{
	return this.m_supportsPagingTupleCountBeforeSlicing;
};
oFF.QCapabilities.prototype.addSupportedSortType = function(sortType)
{
	if (oFF.notNull(sortType))
	{
		this.m_supportedSortingTypes.add(sortType);
	}
};
oFF.QCapabilities.prototype.addSupportedBreakGrouping = function(sortType)
{
	if (oFF.notNull(sortType))
	{
		this.m_supportedBreakGrouping.add(sortType);
	}
};
oFF.QCapabilities.prototype.clearSupportedSortType = function()
{
	this.m_supportedSortingTypes.clear();
};

oFF.DfCmd = function() {};
oFF.DfCmd.prototype = new oFF.DfNameObject();
oFF.DfCmd.prototype._ff_c = "DfCmd";

oFF.DfCmd.prototype.m_space = null;
oFF.DfCmd.prototype.m_params = null;
oFF.DfCmd.prototype.m_cmds = null;
oFF.DfCmd.prototype.m_types = null;
oFF.DfCmd.prototype.setupCmd = function(name, space, parameter)
{
	this._setupInternal(name);
	this.m_space = space;
	if (oFF.XCollectionUtils.hasElements(parameter))
	{
		this.m_params = parameter;
	}
};
oFF.DfCmd.prototype.getTypes = function()
{
	return this.m_types;
};
oFF.DfCmd.prototype.m_ret = null;
oFF.DfCmd.prototype.executeOnSpace = function()
{
	var size = this.m_space.sizeElements();
	this.m_ret = null;
	for (var i = 0; i < size; i++)
	{
		this.m_cmds = this.m_space.setActive(i);
		this.execute();
	}
	this.m_cmds = null;
	return this.m_ret;
};
oFF.DfCmd.prototype.executeOnContext = function(context, parameters)
{
	this.m_ret = null;
	var size = parameters.size();
	if (size > 0)
	{
		this.m_params = oFF.XList.create();
		this.m_params.add(oFF.XReflectionParam.createString(parameters.get(0).getStringRepresentation()));
	}
	if (size > 1)
	{
		this.m_params.add(oFF.XReflectionParam.createString(parameters.get(1).getStringRepresentation()));
	}
	this.m_cmds = context;
	this.execute();
	this.m_cmds = null;
	return this.m_ret;
};

oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator = function() {};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype = new oFF.QFilterAcrossModelsTransientObjectGenerator();
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype._ff_c = "QFilterAcrossModelsLovBasedTransientObjectGenerator";

oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.LBH_MEMBER_NODE_PATH_PATTERN = "^\\[[\\s\\S]*\\]\\.\\[[\\s\\S]*\\]\\.\\[\\(all\\)\\]\\.\\[([\\s\\S]*)\\]$";
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.LBH_MEMBER_SPECIFIC_LEVEL_PATTERN = "^\\[[\\s\\S]*\\]\\.\\[[\\s\\S]*\\]\\.\\[([\\s\\S]*)\\]\\.\\[([\\s\\S]*)\\]$";
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.LBH_MEMBER_LOWEST_LEVEL_PATTERN = "^\\[[\\s\\S]*\\]\\.\\[[\\s\\S]*\\]\\.&\\[([\\s\\S]*)\\]$";
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.createFilterAcrossModelsLovBasedTransientObjectGenerator = function(parent, name, sourceContext, targetContext, messageManager, links, sourceFilters, measureNames, secondaryMeasureNames, lovManager)
{
	var fam = new oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator();
	fam.setupFilterAcrossModelsTransientObjectGenerator(parent, name, sourceContext, targetContext, messageManager, links, sourceFilters, measureNames, secondaryMeasureNames);
	fam.m_lov = lovManager;
	return fam;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.m_convertedMemberKeysCache = null;
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.m_lov = null;
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.m_targetFilterExpression = null;
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.releaseObject = function()
{
	this.m_convertedMemberKeysCache = oFF.XObjectExt.release(this.m_convertedMemberKeysCache);
	this.m_targetFilterExpression = null;
	this.m_lov = null;
	oFF.QFilterAcrossModelsTransientObjectGenerator.prototype.releaseObject.call( this );
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.getLovManager = function()
{
	return this.m_lov;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.setLovManager = function(lovManager)
{
	this.m_lov = lovManager;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.isLovManagerValid = function()
{
	return oFF.notNull(this.m_lov) && !this.m_lov.isReleased();
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.generateTransientFilters = function()
{
	var result = oFF.XList.create();
	if (!this.getTargetContext().getSession().hasFeature(oFF.FeatureToggleOlap.LOV_BASED_FILTER_ACROSS_MODELS))
	{
		return result;
	}
	try
	{
		result = this.generateTransientFiltersInternal();
	}
	catch (t)
	{
		this.getMessageManager().addError(oFF.ErrorCodes.FILTER_ACROSS_MODEL_LOV_BASED_FAILED, oFF.ErrorMessages.FILTER_ACROSS_MODEL_LOV_BASED_FAILED);
	}
	return result;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.generateTransientFiltersInternal = function()
{
	var result = oFF.XList.create();
	this.m_convertedMemberKeysCache = oFF.XHashMapOfStringByString.create();
	var directFilterExpressions = this.getEffectiveDirectFilters();
	var filterExpression = this.getTargetContext().getQueryModel().getFilter().createFilter();
	this.m_targetFilterExpression = filterExpression;
	var directFilterRoot = oFF.QFactory.createFilterAnd(filterExpression);
	var indirectFilterRoot = oFF.QFactory.createFilterOr(filterExpression);
	var indirectInclusionFilter = null;
	var indirectExclusionFilter = null;
	for (var j = 0; j < directFilterExpressions.size(); j++)
	{
		var sourceModelDirectFilterExpression = directFilterExpressions.get(j);
		var targetModelFilterExpression = this.convertFilterExpressionToTarget(sourceModelDirectFilterExpression);
		directFilterRoot.add(targetModelFilterExpression.getFilterRootElement());
	}
	this.getMessageManager().copyAllMessages(this.getLovManager());
	if (!this.isLovManagerValid())
	{
		this.getMessageManager().addError(oFF.ErrorCodes.FILTER_ACROSS_MODEL_MISSING_LOV, oFF.ErrorMessages.FILTER_ACROSS_MODEL_LOV_MISSING);
		return result;
	}
	if (!oFF.QFilterAcrossModelsFilterUtil.areAllFiltersDirect(this.getSourceContext(), this.getLinks(), this.getSourceFilters().toReadOnly().getValuesAsReadOnlyList()))
	{
		var standardLovQueryResult = this.getLovManager().getIndirectFilterStandardLovQueryResult();
		if (standardLovQueryResult.hasErrors())
		{
			return result;
		}
		var excludeLovQueryResult = this.getLovManager().getIndirectFilterExcludeScenarioLovQueryResult();
		if (oFF.notNull(excludeLovQueryResult) && excludeLovQueryResult.hasErrors())
		{
			return result;
		}
		indirectInclusionFilter = this.createFilterFromResultSet(standardLovQueryResult.getData().getClassicResultSet());
		if (oFF.isNull(excludeLovQueryResult))
		{
			indirectFilterRoot = indirectInclusionFilter;
		}
		else
		{
			indirectExclusionFilter = this.createFilterFromResultSet(excludeLovQueryResult.getData().getClassicResultSet());
			indirectExclusionFilter = oFF.QFilterAcrossModelsFilterUtil.negateFilter(indirectExclusionFilter);
			indirectFilterRoot.add(indirectInclusionFilter);
			indirectFilterRoot.add(indirectExclusionFilter);
		}
	}
	if (this.isContextTypeOfBw(this.getTargetContext()))
	{
		this.removeNodesThatContainInvalidHierarchicalMember(directFilterRoot);
		this.removeNodesThatContainInvalidHierarchicalMember(indirectFilterRoot);
	}
	if (oFF.notNull(indirectInclusionFilter) && oFF.isNull(indirectExclusionFilter) && indirectFilterRoot.getOlapComponentType() === oFF.FilterComponentType.OR)
	{
		indirectFilterRoot = oFF.QFilterAcrossModelsFilterUtil.optimizeTupleFilterIfApplicable(indirectFilterRoot);
	}
	var finalFilter = oFF.QFilterAcrossModelsFilterUtil.reduceAndCreateFinalFilterAcrossModelsRootFilterElement(directFilterRoot, indirectFilterRoot, this.isContextTypeOfBw(this.getTargetContext()));
	if (oFF.QFilterAcrossModelsFilterUtil.isFilterEmpty(finalFilter) || oFF.notNull(indirectInclusionFilter) && oFF.QFilterAcrossModelsFilterUtil.isFilterEmpty(indirectFilterRoot))
	{
		this.getMessageManager().addWarning(oFF.ErrorCodes.FILTER_ACROSS_MODEL_EMPTY_TARGET_FILTER, oFF.ErrorMessages.FILTER_ACROSS_MODEL_EMPTY_TARGET_FILTER);
	}
	else
	{
		if (finalFilter.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
		{
			filterExpression.getCartesianProductWithDefault().add(finalFilter);
		}
		else
		{
			filterExpression.setComplexRoot(finalFilter);
		}
		result.add(filterExpression);
	}
	this.m_convertedMemberKeysCache = oFF.XObjectExt.release(this.m_convertedMemberKeysCache);
	return result;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.getEffectiveDirectFilters = function()
{
	var sourceFilters = this.getSourceFilters().toReadOnly();
	var sourceFilterKeys = sourceFilters.getKeysAsIteratorOfString();
	var directFilters = oFF.XList.create();
	while (sourceFilterKeys.hasNext())
	{
		var sourceFilterKey = sourceFilterKeys.next();
		var sourceFilter = sourceFilters.getByKey(sourceFilterKey);
		if (oFF.QFilterUtil.isFilterNullOrEmpty(sourceFilter))
		{
			continue;
		}
		var sourceContext = this.getSourceContext();
		if (!oFF.QFilterAcrossModelsFilterUtil.isDirectFilterElement(sourceContext, this.getLinks(), sourceFilter.getFilterRootElement()))
		{
			continue;
		}
		if (!this.isLovManagerValid())
		{
			directFilters.add(sourceFilter);
			continue;
		}
		var updatedSourceFilter = oFF.QFactory.createFilterExpression(sourceFilter.getContext(), null);
		updatedSourceFilter.copyFrom(sourceFilter, null);
		var cartesianLists = oFF.QFilterUtil.collectAllCartesianLists(updatedSourceFilter);
		for (var i = 0; i < cartesianLists.size(); i++)
		{
			var cartesianList = cartesianLists.get(i);
			if (!cartesianList.isEmpty())
			{
				this.updateFilterMembersListWithLovList(cartesianList);
			}
		}
		directFilters.add(updatedSourceFilter);
	}
	return directFilters;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.updateFilterMembersListWithLovList = function(cartesianList)
{
	var filterUpdatedMembers = this.getLovManager().getFilterUpdatedMembersList(cartesianList.getUniqueId());
	if (oFF.isNull(filterUpdatedMembers) || filterUpdatedMembers.isEmpty())
	{
		return;
	}
	var cartesianElementSource = cartesianList.getCartesianElement(0);
	cartesianList.clear();
	for (var i = 0; i < filterUpdatedMembers.size(); i++)
	{
		var member = filterUpdatedMembers.get(i);
		var cartesianElement = cartesianList.addNewCartesianElement();
		cartesianElement.configureSingleParameterExpression(oFF.XStringValue.create(member), cartesianElementSource.getComparisonOperator());
		cartesianElement.setSetSign(cartesianElementSource.getSetSign());
		cartesianElement.setHierarchyName(cartesianElementSource.getHierarchyName());
	}
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.convertFilterExpressionToTarget = function(sourceFilterExpression)
{
	var targetFilterExpression = this.getTargetContext().getQueryModel().getFilter().createFilter();
	if (sourceFilterExpression.isComplexFilter())
	{
		targetFilterExpression.copyFrom(sourceFilterExpression, null);
	}
	else
	{
		targetFilterExpression.setComplexRoot(oFF.QFilterUtil.createComplexFilterFromCartesianProduct(sourceFilterExpression.getCartesianProduct()));
	}
	targetFilterExpression.stopEventing();
	this.convertFilterExpressionCartesianListsToTarget(targetFilterExpression.getFilterRootElement());
	targetFilterExpression.resumeEventing();
	return targetFilterExpression;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.convertFilterExpressionCartesianListsToTarget = function(filterElement)
{
	if (filterElement.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
	{
		var parent = filterElement.getParent();
		var convertedFilterElement = this.convertCartesianListToTarget(filterElement);
		if (parent.getOlapComponentType().isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA))
		{
			var algebraOpParent = parent;
			algebraOpParent.removeElement(filterElement);
			if (oFF.notNull(convertedFilterElement))
			{
				algebraOpParent.add(convertedFilterElement);
			}
		}
		else if (parent.getOlapComponentType() === oFF.OlapComponentType.FILTER_EXPRESSION)
		{
			var filterExpressionParent = parent;
			filterExpressionParent.setComplexRoot(convertedFilterElement);
		}
		return;
	}
	else if (filterElement.getOlapComponentType().isTypeOf(oFF.FilterComponentType.OPERATION) && filterElement.getComparisonOperator().isTypeOf(oFF.SpatialComparisonOperator._SPATIAL))
	{
		var sourceFilterOpToConvert = filterElement;
		var sourceFilterDimension = this.getDimensionOrCalcDim(this.getSourceContext(), sourceFilterOpToConvert.getDimensionName());
		var sourceLinkPart = oFF.QFilterAcrossModelsLinkUtil.getLinkPartFromDimensionOrFieldKey(this.getLinks(), sourceFilterDimension.getMetadata().getCacheKey());
		var targetLinkPart = oFF.QFilterAcrossModelsLinkUtil.getLinkCounterPartFromDimensionOrFieldKey(this.getLinks(), sourceFilterDimension.getMetadata().getCacheKey());
		var effectiveTargetField = this.getEffectiveTargetFieldFromTargetLinkPart(targetLinkPart, sourceFilterOpToConvert);
		this.convertFilterValueBagIfNotNull(sourceFilterOpToConvert.getLow(), sourceLinkPart, targetLinkPart, effectiveTargetField);
		sourceFilterOpToConvert.setField(effectiveTargetField);
		return;
	}
	var childrenIterator = filterElement.getChildrenIterator();
	var children = this.createListFromIterator(childrenIterator);
	for (var i = 0, size = children.size(); i < size; i++)
	{
		this.convertFilterExpressionCartesianListsToTarget(children.get(i));
	}
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.createListFromIterator = function(iterator)
{
	var target = oFF.XList.create();
	while (iterator.hasNext())
	{
		target.add(iterator.next());
	}
	return target;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.convertCartesianListToTarget = function(sourceCartesianListToConvert)
{
	this.removeEmptyAndVirtualAllNodeElements(sourceCartesianListToConvert);
	if (sourceCartesianListToConvert.size() === 0)
	{
		return null;
	}
	var sourceContext = this.getSourceContext();
	var sourceFilterDimension = this.getDimensionOrCalcDim(sourceContext, sourceCartesianListToConvert.getDimensionName());
	var sourceFilterFieldLinkPart = oFF.QFilterAcrossModelsLinkUtil.getLinkPartFromDimensionOrFieldKey(this.getLinks(), sourceFilterDimension.getMetadata().getCacheKey());
	var sourceField = this.getFieldOrCalcDimField(sourceContext, sourceFilterFieldLinkPart.getFieldName());
	var sourceDimension = sourceField.getDimension();
	var targetLinkPart = oFF.QFilterAcrossModelsLinkUtil.getLinkCounterPartFromDimensionOrFieldKey(this.getLinks(), sourceFilterDimension.getMetadata().getCacheKey());
	var effectiveTargetField = this.getEffectiveTargetFieldFromTargetLinkPart(targetLinkPart, sourceCartesianListToConvert.getCartesianElement(0));
	var targetDimension = this.getDimensionOrCalcDim(this.getTargetContext(), targetLinkPart.getDimensionName());
	var resultFilterElement;
	if (oFF.QFilterAcrossModelsFilterUtil.isDateOrTimeLikeDimensionAndHierarchyName(sourceFilterDimension, sourceCartesianListToConvert.getHierarchyName()) && oFF.QTimeDimensionUtil.isDateOrTimeLikeDimension(sourceDimension) && oFF.QTimeDimensionUtil.isDateOrTimeLikeDimension(targetDimension))
	{
		var levelTypesInCartesianList = oFF.QFilterUtil.collectLevelTypesFromTimeCartesianList(sourceCartesianListToConvert, sourceContext);
		var sourceTimeCartesianList = sourceCartesianListToConvert;
		if (oFF.QFilterUtil.isSingleValueFilterCartesianList(sourceCartesianListToConvert))
		{
			var convertedSingleValueSourceCartesianList = oFF.QFactory.createFilterConvertedTimeCartesianList(sourceCartesianListToConvert.getContext());
			convertedSingleValueSourceCartesianList.copyFromCartesianList(sourceTimeCartesianList);
			convertedSingleValueSourceCartesianList.setIsSingleValueSourceCartesianList(true);
			convertedSingleValueSourceCartesianList.setHierarchyLevelType(levelTypesInCartesianList.getValuesAsReadOnlyList().get(0));
			sourceTimeCartesianList = convertedSingleValueSourceCartesianList;
		}
		var sourceHierarchyName = sourceTimeCartesianList.getHierarchyName();
		if (oFF.XStringUtils.isNullOrEmpty(sourceHierarchyName))
		{
			var flatHierarchylevel = oFF.QTimeDimensionUtil.findAnyHierarchyLevelMatchingField(sourceFilterDimension, sourceTimeCartesianList.getFieldMetadata());
			if (flatHierarchylevel.getHierarchy() === null)
			{
				var leveledHierarchy = oFF.QTimeDimensionUtil.findFirstLeveledHierarchyWithLevelType(sourceFilterDimension, flatHierarchylevel.getLevelType());
				if (oFF.notNull(leveledHierarchy))
				{
					sourceHierarchyName = leveledHierarchy.getName();
				}
			}
			else
			{
				sourceHierarchyName = flatHierarchylevel.getHierarchy().getName();
			}
		}
		if (oFF.QTimeDimensionUtil.isFiscalTimeHierarchyName(sourceHierarchyName) && !oFF.QTimeDimensionUtil.areFiscalEnabledAndCompatible(sourceFilterDimension, targetDimension))
		{
			this.convertFiscalTimeCartesianListToCalendar(sourceTimeCartesianList, sourceContext);
		}
		var compatibleHierarchyFiscalSpaceType = this.isFiscalSourceAndCompatibleWithTarget(sourceFilterDimension, sourceHierarchyName, targetDimension) ? oFF.FiscalSpaceType.FISCAL : oFF.FiscalSpaceType.CALENDAR;
		var mostCompatibleTargetTimeHierarchy = oFF.QTimeDimensionUtil.findMostCompatibleHierarchy(targetDimension, levelTypesInCartesianList, compatibleHierarchyFiscalSpaceType);
		if (oFF.isNull(mostCompatibleTargetTimeHierarchy))
		{
			this.getMessageManager().addWarning(oFF.ErrorCodes.FILTER_ACROSS_MODEL_TARGET_TIME_HIERARCHY, oFF.ErrorMessages.FILTER_ACROSS_MODEL_TARGET_TIME_HIERARCHY);
			return null;
		}
		var targetFlatLevelType = null;
		if (!targetLinkPart.isHierarchical())
		{
			var targetFlatLevel = oFF.QTimeDimensionUtil.findAnyHierarchyLevelMatchingField(targetDimension, effectiveTargetField.getMetadata());
			targetFlatLevelType = targetFlatLevel.getLevelType();
		}
		else if (this.isContextTypeOfBw(this.getTargetContext()) && targetLinkPart.isHierarchical())
		{
			var isExcludeSourceFilter = oFF.QFilterAcrossModelsFilterUtil.isFilterAllIncludeOrAllExclude(sourceTimeCartesianList, oFF.SetSign.EXCLUDING);
			if (isExcludeSourceFilter)
			{
				var sourceLevel = oFF.QTimeDimensionUtil.findAnyHierarchyLevelMatchingField(sourceFilterDimension, sourceTimeCartesianList.getFieldMetadata());
				var sourceLevelType = sourceLevel.getLevelType();
				var targetHierarchy = targetDimension.getLeveledHierarchy(mostCompatibleTargetTimeHierarchy.getName());
				if (targetHierarchy.getLevelByType(sourceLevelType) !== null)
				{
					targetFlatLevelType = sourceLevelType;
				}
			}
		}
		if (sourceTimeCartesianList.size() === 1 && sourceTimeCartesianList.getCartesianElement(0).getComparisonOperator().isRange())
		{
			resultFilterElement = this.convertSingleElementTimeRangeCartesianListToFlatTarget(sourceTimeCartesianList, sourceContext, targetDimension, mostCompatibleTargetTimeHierarchy.getName());
		}
		else
		{
			resultFilterElement = this.convertTimeMemberCartesianListToTarget(sourceTimeCartesianList, sourceContext, targetDimension, mostCompatibleTargetTimeHierarchy.getName(), targetFlatLevelType);
		}
	}
	else if (oFF.QFilterAcrossModelsDimensionUtil.isNonTimeLevelBasedHierarchy(sourceFilterDimension, sourceCartesianListToConvert.getHierarchyName()))
	{
		resultFilterElement = this.convertLevelBasedHierarchyCartesianListToTarget(sourceCartesianListToConvert, sourceFilterDimension, targetDimension, targetLinkPart.getHierarchyName());
	}
	else
	{
		var unconvertedValues = oFF.XListOfString.create();
		for (var i = sourceCartesianListToConvert.size() - 1; i >= 0; i--)
		{
			var sourceNonTimeCartesianElement = sourceCartesianListToConvert.getCartesianElement(i);
			var convertResult = this.convertFilterValueBagIfNotNull(sourceNonTimeCartesianElement.getLow(), sourceFilterFieldLinkPart, targetLinkPart, effectiveTargetField);
			if (oFF.isNull(convertResult))
			{
				sourceCartesianListToConvert.removeElement(sourceNonTimeCartesianElement);
			}
			else
			{
				unconvertedValues.addAll(convertResult);
				unconvertedValues.addAll(this.convertFilterValueBagIfNotNull(sourceNonTimeCartesianElement.getHigh(), sourceFilterFieldLinkPart, targetLinkPart, effectiveTargetField));
				sourceNonTimeCartesianElement.setField(effectiveTargetField);
				sourceNonTimeCartesianElement.setHierarchyName(targetLinkPart.getHierarchyName());
			}
		}
		for (var j = 0; j < unconvertedValues.size(); j++)
		{
			var newElem = sourceCartesianListToConvert.addNewCartesianElement();
			newElem.copyFrom(sourceCartesianListToConvert.getCartesianElement(0), null);
			oFF.QFilterAcrossModelsFilterUtil.setCartesianElementValues(newElem, unconvertedValues.get(j), null, effectiveTargetField);
		}
		sourceCartesianListToConvert.setField(effectiveTargetField);
		sourceCartesianListToConvert.setHierarchyName(targetLinkPart.getHierarchyName());
		if (targetLinkPart.isHierarchical())
		{
			sourceCartesianListToConvert.setConvertToFlatFilter(true);
		}
		resultFilterElement = sourceCartesianListToConvert;
	}
	return resultFilterElement;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.removeEmptyAndVirtualAllNodeElements = function(cartesianList)
{
	for (var i = cartesianList.size() - 1; i >= 0; i--)
	{
		var cartesianElement = cartesianList.getCartesianElement(i);
		if (cartesianElement.getComparisonOperator() !== oFF.ComparisonOperator.IS_NULL && (cartesianElement.getLow() === null || !cartesianElement.getLow().hasValue() || this.isAllNodeMemberKey(cartesianElement.getLow().getString())))
		{
			cartesianList.removeAt(i);
		}
	}
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.isAllNodeMemberKey = function(memberKey)
{
	return oFF.notNull(memberKey) && oFF.XString.containsString(memberKey, "[All].[(all)]");
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.getDimensionOrCalcDim = function(context, dimensionName)
{
	return oFF.QFilterAcrossModelsDimensionUtil.getDimensionOrCalcDim(context, dimensionName, oFF.QFilterAcrossModelsLinkUtil.getAnySharedLinkStorageName(this.getLinks()));
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.getFieldOrCalcDimField = function(context, fieldName)
{
	return oFF.QFilterAcrossModelsDimensionUtil.getFieldOrCalcDimField(context, fieldName, oFF.QFilterAcrossModelsLinkUtil.getAnySharedLinkStorageName(this.getLinks()));
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.convertFiscalTimeCartesianListToCalendar = function(sourceCartesianListToConvert, sourceContext)
{
	if (sourceCartesianListToConvert.size() === 1 && sourceCartesianListToConvert.getCartesianElement(0).getComparisonOperator().isRange())
	{
		this.convertFiscalTimeRangeCartesianListToCalendar(sourceCartesianListToConvert, sourceContext);
	}
	else
	{
		this.convertFiscalTimeMemberCartesianListToCalendar(sourceCartesianListToConvert, sourceContext);
	}
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.convertFiscalTimeRangeCartesianListToCalendar = function(sourceCartesianListToConvert, sourceContext)
{
	var sourceTimeDimension = this.getDimensionOrCalcDim(sourceContext, sourceCartesianListToConvert.getDimensionName());
	var sourceCartesianListHierarchyName = sourceCartesianListToConvert.getHierarchyName();
	var sourceCartesianElement = sourceCartesianListToConvert.getCartesianElement(0);
	var sourceCartesianListFieldMetadata = sourceCartesianListToConvert.getFieldMetadata();
	var compatibleCalendarHierarchyName;
	if (oFF.isNull(sourceCartesianListHierarchyName))
	{
		var flatFiscalHierarchylevel = oFF.QTimeDimensionUtil.findAnyHierarchyLevelMatchingField(sourceTimeDimension, sourceCartesianListFieldMetadata);
		compatibleCalendarHierarchyName = oFF.QTimeDimensionUtil.mapFiscalHierarchyNameToCompatibleCalendarHierarchyName(flatFiscalHierarchylevel.getHierarchy().getName());
	}
	else
	{
		compatibleCalendarHierarchyName = oFF.QTimeDimensionUtil.mapFiscalHierarchyNameToCompatibleCalendarHierarchyName(sourceCartesianListHierarchyName);
	}
	var converter = oFF.QTimeMemberKeyConverter.create(sourceContext.getQueryModel(), sourceTimeDimension, sourceContext.getQueryModel(), sourceTimeDimension);
	if (sourceCartesianElement.getLow() !== null && sourceCartesianElement.getLow().hasValue())
	{
		var resultLow = converter.convertFiscalRangeEndPointToCalendar(sourceCartesianElement.getLow().getString(), sourceCartesianListHierarchyName, sourceCartesianListFieldMetadata, compatibleCalendarHierarchyName, false);
		this.setFilterPropertiesBasedOnTimeConversionResult(resultLow, sourceCartesianListToConvert, sourceCartesianElement, sourceTimeDimension, compatibleCalendarHierarchyName);
	}
	if (sourceCartesianElement.getHigh() !== null && sourceCartesianElement.getHigh().hasValue())
	{
		var resultHigh = converter.convertFiscalRangeEndPointToCalendar(sourceCartesianElement.getHigh().getString(), sourceCartesianListHierarchyName, sourceCartesianListFieldMetadata, compatibleCalendarHierarchyName, true);
		sourceCartesianElement.setHighString(resultHigh.getFirstKey());
	}
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.setFilterPropertiesBasedOnTimeConversionResult = function(conversionResult, cartesianElementParent, cartesianElement, targetTimeDimension, targetHierarchyName)
{
	var element = cartesianElement;
	var isNewElement = false;
	if (oFF.isNull(element))
	{
		element = cartesianElementParent.addNewCartesianElement();
		isNewElement = true;
	}
	var targetField;
	if (conversionResult.isFlat())
	{
		targetField = this.getLevelDimensionFlatKeyFieldForLevelType(targetTimeDimension.getDimensionAccessor(), targetTimeDimension.getLeveledHierarchy(targetHierarchyName), conversionResult.getLevelType());
		element.setField(targetField);
		cartesianElementParent.setField(targetField);
		element.setHierarchyName(null);
		cartesianElementParent.setHierarchyName(null);
	}
	else
	{
		targetField = targetTimeDimension.getHierarchyKeyField();
		element.setField(targetField);
		element.setHierarchyName(conversionResult.getHierarchyName());
		cartesianElementParent.setField(targetField);
		cartesianElementParent.setHierarchyName(conversionResult.getHierarchyName());
	}
	if (conversionResult.isRange())
	{
		oFF.QFilterAcrossModelsFilterUtil.setCartesianElementValues(element, conversionResult.getFirstKey(), conversionResult.getSecondKey(), targetField);
		if (isNewElement)
		{
			element.setComparisonOperator(oFF.ComparisonOperator.BETWEEN);
		}
	}
	else
	{
		oFF.QFilterAcrossModelsFilterUtil.setCartesianElementValues(element, conversionResult.getFirstKey(), null, targetField);
		if (isNewElement)
		{
			element.setComparisonOperator(oFF.ComparisonOperator.EQUAL);
		}
	}
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.getLevelDimensionFlatKeyFieldForLevelType = function(dimensionAccessor, hierarchy, levelType)
{
	var level = hierarchy.getLevelByType(levelType);
	var levelDimension = dimensionAccessor.getDimensionByName(level.getLevelDimensionName());
	return levelDimension.getFlatKeyField();
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.convertFiscalTimeMemberCartesianListToCalendar = function(sourceCartesianListToConvert, sourceContext)
{
	var sourceTimeDimension = this.getDimensionOrCalcDim(sourceContext, sourceCartesianListToConvert.getDimensionName());
	var sourceCartesianListHierarchyName = sourceCartesianListToConvert.getHierarchyName();
	var sourceCartesianListFieldMetadata = sourceCartesianListToConvert.getFieldMetadata();
	var compatibleCalendarHierarchyName;
	var flatFiscalHierarchylevel = null;
	if (oFF.isNull(sourceCartesianListHierarchyName))
	{
		flatFiscalHierarchylevel = oFF.QTimeDimensionUtil.findAnyHierarchyLevelMatchingField(sourceTimeDimension, sourceCartesianListFieldMetadata);
		if (oFF.isNull(flatFiscalHierarchylevel))
		{
			this.getMessageManager().addWarning(oFF.ErrorCodes.FILTER_ACROSS_MODEL_TARGET_TIME_HIERARCHY, oFF.ErrorMessages.FILTER_ACROSS_MODEL_TARGET_TIME_HIERARCHY);
			return;
		}
		compatibleCalendarHierarchyName = oFF.QTimeDimensionUtil.mapFiscalHierarchyNameToCompatibleCalendarHierarchyName(flatFiscalHierarchylevel.getHierarchy().getName());
	}
	else
	{
		compatibleCalendarHierarchyName = oFF.QTimeDimensionUtil.mapFiscalHierarchyNameToCompatibleCalendarHierarchyName(sourceCartesianListHierarchyName);
	}
	var newFilterCartesianElements = oFF.XList.create();
	var converter = oFF.QTimeMemberKeyConverter.create(sourceContext.getQueryModel(), sourceTimeDimension, sourceContext.getQueryModel(), sourceTimeDimension);
	for (var i = 0; i < sourceCartesianListToConvert.size(); i++)
	{
		var sourceCartesianElement = sourceCartesianListToConvert.getCartesianElement(i);
		var memberKey = sourceCartesianElement.getLow().getString();
		var result = converter.convertFiscalMemberKeyToCalendar(memberKey, sourceCartesianListHierarchyName, sourceCartesianListFieldMetadata, compatibleCalendarHierarchyName);
		var convertedCalendarSpaceMemberKeys = result.getList();
		for (var j = 0; j < convertedCalendarSpaceMemberKeys.size(); j++)
		{
			var convertedCalendarSpaceMemberKey = convertedCalendarSpaceMemberKeys.get(j);
			var newElem = oFF.QFactory.createFilterCartesianElement(sourceCartesianListToConvert.getFilterExpression());
			newElem.configureSingleParameterExpression(oFF.XStringValue.create(convertedCalendarSpaceMemberKey), sourceCartesianElement.getComparisonOperator());
			newElem.setSetSign(sourceCartesianElement.getSetSign());
			if (result.isFlat())
			{
				var targetField = this.getLevelDimensionFlatKeyFieldForLevelType(sourceTimeDimension.getDimensionAccessor(), sourceTimeDimension.getLeveledHierarchy(compatibleCalendarHierarchyName), result.getLevelType());
				newElem.setField(targetField);
				sourceCartesianListToConvert.setField(targetField);
			}
			else
			{
				newElem.setField(sourceTimeDimension.getHierarchyKeyField());
				sourceCartesianListToConvert.setField(sourceTimeDimension.getHierarchyKeyField());
			}
			newElem.setHierarchyName(result.getHierarchyName());
			sourceCartesianListToConvert.setHierarchyName(result.getHierarchyName());
			newFilterCartesianElements.add(newElem);
		}
	}
	sourceCartesianListToConvert.clear();
	sourceCartesianListToConvert.addAll(newFilterCartesianElements);
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.isFiscalSourceAndCompatibleWithTarget = function(sourceTimeDimension, sourceTimeDimensionHierarchyName, targetTimeDimension)
{
	return oFF.QTimeDimensionUtil.isFiscalTimeHierarchyName(sourceTimeDimensionHierarchyName) && oFF.QTimeDimensionUtil.areFiscalEnabledAndCompatible(sourceTimeDimension, targetTimeDimension);
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.convertSingleElementTimeRangeCartesianListToFlatTarget = function(rangeCartesianList, rangeCartesianListContext, targetTimeDimension, mostCompatibleTargetTimeHierarchyName)
{
	var rangeElement = rangeCartesianList.getCartesianElement(0);
	var rangeHierarchyName = rangeCartesianList.getHierarchyName();
	var rangeCartesianListFieldMetadata = rangeCartesianList.getFieldMetadata();
	var lowMemberKeyFieldMetadata = rangeCartesianListFieldMetadata;
	var highMemberKeyFieldMetadata = rangeCartesianListFieldMetadata;
	var rangeCartesianListTimeDimension = this.getDimensionOrCalcDim(rangeCartesianListContext, rangeCartesianList.getDimensionName());
	var rangeCartesianListQueryModel = rangeCartesianListContext.getQueryModel();
	var lowValue = rangeElement.getLow().getString();
	var highValue = null;
	if (rangeElement.getHigh() !== null && rangeElement.getHigh().getString() !== null)
	{
		highValue = rangeElement.getHigh().getString();
	}
	if (oFF.QFilterAcrossModelsFilterUtil.isOpenEndedTimeRangeFilterElement(rangeElement))
	{
		var level = oFF.QTimeDimensionUtil.findAnyHierarchyLevelMatchingField(rangeCartesianListTimeDimension, rangeCartesianListTimeDimension.getFlatKeyField().getMetadata());
		var intervalMembers = this.getLovManager().getIntervalTargetDimensionMembersList(level.getLevelDimensionName());
		if (oFF.isNull(intervalMembers))
		{
			intervalMembers = this.getLovManager().getIntervalTargetDimensionMembersList(rangeCartesianListTimeDimension.getName());
		}
		if (oFF.notNull(intervalMembers) && intervalMembers.size() === 2)
		{
			if (oFF.QFilterAcrossModelsFilterUtil.isOpenEndedTimeRangeFilterLowValue(lowValue))
			{
				lowValue = intervalMembers.get(0);
				lowMemberKeyFieldMetadata = rangeCartesianListTimeDimension.getFlatKeyField().getMetadata();
			}
			if (rangeElement.getComparisonOperator() === oFF.ComparisonOperator.GREATER_EQUAL)
			{
				rangeElement.setComparisonOperator(oFF.ComparisonOperator.BETWEEN);
				highValue = intervalMembers.get(1);
				highMemberKeyFieldMetadata = rangeCartesianListTimeDimension.getFlatKeyField().getMetadata();
			}
		}
	}
	var converter = oFF.QTimeMemberKeyConverter.create(rangeCartesianListQueryModel, rangeCartesianListTimeDimension, this.getTargetContext().getQueryModel(), targetTimeDimension);
	var startResult = converter.convertAndFlattenRangeEndPoint(lowValue, rangeHierarchyName, lowMemberKeyFieldMetadata, rangeCartesianListFieldMetadata, mostCompatibleTargetTimeHierarchyName, rangeElement.getComparisonOperator(), false);
	this.setFilterPropertiesBasedOnTimeConversionResult(startResult, rangeCartesianList, rangeElement, targetTimeDimension, mostCompatibleTargetTimeHierarchyName);
	if (oFF.XStringUtils.isNotNullAndNotEmpty(highValue))
	{
		var endResult = converter.convertAndFlattenRangeEndPoint(highValue, rangeHierarchyName, highMemberKeyFieldMetadata, rangeCartesianListFieldMetadata, mostCompatibleTargetTimeHierarchyName, rangeElement.getComparisonOperator(), true);
		var targetField = this.getLevelDimensionFlatKeyFieldForLevelType(targetTimeDimension.getDimensionAccessor(), targetTimeDimension.getLeveledHierarchy(mostCompatibleTargetTimeHierarchyName), endResult.getLevelType());
		oFF.QFilterAcrossModelsFilterUtil.setCartesianElementValues(rangeElement, null, endResult.getFirstKey(), targetField);
	}
	return rangeCartesianList;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.convertTimeMemberCartesianListToTarget = function(memberCartesianList, memberCartesianListContext, targetTimeDimension, mostCompatibleTargetTimeHierarchyName, targetFlatLevelType)
{
	var memberCartesianListTimeDimension = this.getDimensionOrCalcDim(memberCartesianListContext, memberCartesianList.getDimensionName());
	var memberCartesianListFieldMetadata = memberCartesianList.getFieldMetadata();
	var memberKeyConverter = oFF.QTimeMemberKeyConverter.create(memberCartesianListContext.getQueryModel(), memberCartesianListTimeDimension, this.getTargetContext().getQueryModel(), targetTimeDimension);
	var flatTimeRangeFilters = oFF.XList.create();
	var isExcludeSourceFilter = oFF.QFilterAcrossModelsFilterUtil.isFilterAllIncludeOrAllExclude(memberCartesianList, oFF.SetSign.EXCLUDING);
	var sourceFilterHierarchyName = memberCartesianList.getHierarchyName();
	for (var j = memberCartesianList.size() - 1; j >= 0; j--)
	{
		var memberCartesianListElement = memberCartesianList.getCartesianElement(j);
		var conversionResult;
		if (oFF.notNull(targetFlatLevelType))
		{
			conversionResult = memberKeyConverter.convertToFlatMemberKey(memberCartesianListElement.getLow().getString(), sourceFilterHierarchyName, memberCartesianListFieldMetadata, targetFlatLevelType, mostCompatibleTargetTimeHierarchyName);
		}
		else
		{
			conversionResult = memberKeyConverter.convertToHierarchyMemberKey(memberCartesianListElement.getLow().getString(), sourceFilterHierarchyName, memberCartesianListFieldMetadata, mostCompatibleTargetTimeHierarchyName);
		}
		if (oFF.notNull(conversionResult))
		{
			if (conversionResult.isRange())
			{
				memberCartesianList.removeElement(memberCartesianListElement);
				var flatTimeRange;
				if (oFF.QFilterUtil.isSingleValueSourceCartesianList(memberCartesianList))
				{
					flatTimeRange = oFF.QFactory.createFilterConvertedTimeCartesianList(this.m_targetFilterExpression);
					flatTimeRange.copyFrom(memberCartesianList, null);
					flatTimeRange.clear();
				}
				else
				{
					flatTimeRange = oFF.QFactory.createFilterCartesianList(this.m_targetFilterExpression);
				}
				this.setFilterPropertiesBasedOnTimeConversionResult(conversionResult, flatTimeRange, null, targetTimeDimension, mostCompatibleTargetTimeHierarchyName);
				if (isExcludeSourceFilter)
				{
					flatTimeRangeFilters.add(oFF.QFilterAcrossModelsFilterUtil.negateFilter(flatTimeRange));
				}
				else
				{
					flatTimeRangeFilters.add(flatTimeRange);
				}
			}
			else
			{
				this.setFilterPropertiesBasedOnTimeConversionResult(conversionResult, memberCartesianList, memberCartesianListElement, targetTimeDimension, mostCompatibleTargetTimeHierarchyName);
			}
			if (!conversionResult.isFlat())
			{
				memberCartesianList.setConvertToFlatFilter(true);
			}
		}
		else
		{
			memberCartesianList.removeElement(memberCartesianListElement);
		}
	}
	if (flatTimeRangeFilters.size() + memberCartesianList.size() > 1)
	{
		var filterAlgebra = null;
		if (isExcludeSourceFilter)
		{
			filterAlgebra = oFF.QFactory.createFilterAnd(this.m_targetFilterExpression);
		}
		else
		{
			filterAlgebra = oFF.QFactory.createFilterOr(this.m_targetFilterExpression);
		}
		filterAlgebra.addAll(flatTimeRangeFilters);
		filterAlgebra.add(memberCartesianList);
		return filterAlgebra;
	}
	else if (flatTimeRangeFilters.size() > 0)
	{
		return flatTimeRangeFilters.get(0);
	}
	else
	{
		return memberCartesianList;
	}
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.convertLevelBasedHierarchyCartesianListToTarget = function(sourceCartesianListToConvert, sourceDimension, targetDimension, targetHierarchyName)
{
	var filterOr = oFF.QFactory.createFilterOr(this.m_targetFilterExpression);
	for (var i = 0; i < sourceCartesianListToConvert.size(); i++)
	{
		var lbhCartesianElement = sourceCartesianListToConvert.getCartesianElement(i);
		var result = this.convertLevelBasedHierarchyMemberKeyToTarget(lbhCartesianElement.getLow().getString(), sourceDimension, sourceCartesianListToConvert.getHierarchyName(), targetDimension, targetHierarchyName);
		filterOr.add(result);
	}
	var isExcludeSourceFilter = oFF.QFilterAcrossModelsFilterUtil.isFilterAllIncludeOrAllExclude(sourceCartesianListToConvert, oFF.SetSign.EXCLUDING);
	if (isExcludeSourceFilter)
	{
		return oFF.QFilterAcrossModelsFilterUtil.negateFilter(filterOr);
	}
	else
	{
		return filterOr;
	}
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.convertLevelBasedHierarchyMemberKeyToTarget = function(lbhMemberKey, sourceDimension, sourceDimensionHierarchyName, targetDimension, targetHierarchyName)
{
	var filterAnd = oFF.QFactory.createFilterAnd(this.m_targetFilterExpression);
	var targetLevelDimensionKeyFieldNames = this.getAllHierachyLevelDimensionKeyFieldNames(targetDimension, targetHierarchyName);
	if (oFF.XString.match(lbhMemberKey, oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.LBH_MEMBER_NODE_PATH_PATTERN))
	{
		var lbhMemberKeyNodePathTokens = oFF.XStringTokenizer.splitString(lbhMemberKey, "].[");
		if (lbhMemberKeyNodePathTokens.size() < 4)
		{
			throw oFF.XException.createRuntimeException("LBH member key with node path pattern has less than 4 tokens");
		}
		var levelValueOffset = 3;
		for (var j = levelValueOffset; j < lbhMemberKeyNodePathTokens.size(); j++)
		{
			var nodePathLevelField = this.getFieldOrCalcDimField(this.getTargetContext(), targetLevelDimensionKeyFieldNames.get(j - levelValueOffset));
			var nodePathLevelCartesianList = oFF.QFactory.createFilterCartesianListWithField(this.m_targetFilterExpression, nodePathLevelField);
			var nodePathlevelDimensionCartesianElement = nodePathLevelCartesianList.addNewCartesianElement();
			var lbhMemberKeyNodePathLevelValue = lbhMemberKeyNodePathTokens.get(j);
			if (j === lbhMemberKeyNodePathTokens.size() - 1)
			{
				lbhMemberKeyNodePathLevelValue = oFF.XString.substring(lbhMemberKeyNodePathLevelValue, 0, oFF.XString.size(lbhMemberKeyNodePathLevelValue) - 1);
			}
			nodePathlevelDimensionCartesianElement.configureSingleParameterExpression(oFF.XStringValue.create(lbhMemberKeyNodePathLevelValue), oFF.ComparisonOperator.EQUAL);
			filterAnd.add(nodePathLevelCartesianList);
		}
	}
	else
	{
		var sourceLevelDimensionNames = sourceDimension.getLeveledHierarchy(sourceDimensionHierarchyName).getAllHierarchyLevelNames(oFF.XCollectionUtils.singletonList(oFF.HierarchyLevelType.ALL));
		var lbhMemberKeyLevelName;
		var lbhMemberKeyLevelValue;
		if (oFF.XString.match(lbhMemberKey, oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.LBH_MEMBER_SPECIFIC_LEVEL_PATTERN))
		{
			var lbhMemberKeyLevelTokens = oFF.XStringTokenizer.splitString(lbhMemberKey, "].[");
			if (lbhMemberKeyLevelTokens.size() < 4)
			{
				throw oFF.XException.createRuntimeException("LBH member key with specific level pattern has less than 4 tokens");
			}
			lbhMemberKeyLevelName = lbhMemberKeyLevelTokens.get(lbhMemberKeyLevelTokens.size() - 2);
			lbhMemberKeyLevelValue = lbhMemberKeyLevelTokens.get(lbhMemberKeyLevelTokens.size() - 1);
			lbhMemberKeyLevelValue = oFF.XString.substring(lbhMemberKeyLevelValue, 0, oFF.XString.size(lbhMemberKeyLevelValue) - 1);
		}
		else if (oFF.XString.match(lbhMemberKey, oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.LBH_MEMBER_LOWEST_LEVEL_PATTERN))
		{
			var lbhMemberKeyLowestLevelTokens = oFF.XStringTokenizer.splitString(lbhMemberKey, "].&[");
			if (lbhMemberKeyLowestLevelTokens.size() !== 2)
			{
				throw oFF.XException.createRuntimeException("LBH member key with lowest level pattern does not have 2 tokens");
			}
			lbhMemberKeyLevelName = sourceLevelDimensionNames.get(sourceLevelDimensionNames.size() - 1);
			lbhMemberKeyLevelValue = lbhMemberKeyLowestLevelTokens.get(1);
			lbhMemberKeyLevelValue = oFF.XString.substring(lbhMemberKeyLevelValue, 0, oFF.XString.size(lbhMemberKeyLevelValue) - 1);
		}
		else
		{
			throw oFF.XException.createRuntimeException("LBH member key does not match any known patterns");
		}
		var index = sourceLevelDimensionNames.getIndex(lbhMemberKeyLevelName);
		if (index >= 0)
		{
			var levelField = this.getFieldOrCalcDimField(this.getTargetContext(), targetLevelDimensionKeyFieldNames.get(index));
			var levelDimensionCartesianList = oFF.QFactory.createFilterCartesianListWithField(this.m_targetFilterExpression, levelField);
			var levelDimensionCartesianElement = levelDimensionCartesianList.addNewCartesianElement();
			levelDimensionCartesianElement.configureSingleParameterExpression(oFF.XStringValue.create(lbhMemberKeyLevelValue), oFF.ComparisonOperator.EQUAL);
			filterAnd.add(levelDimensionCartesianList);
		}
		else
		{
			throw oFF.XException.createRuntimeException("LBH member key level name does not match any level dimension name");
		}
	}
	return filterAnd;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.getAllHierachyLevelDimensionKeyFieldNames = function(dimension, hierarchyName)
{
	var keyFieldNames = oFF.XListOfString.create();
	var hierarchy = dimension.getLeveledHierarchy(hierarchyName);
	var hierarchyLevels = hierarchy.getAllLevel();
	for (var i = 0; i < hierarchyLevels.size(); i++)
	{
		var level = hierarchyLevels.get(i);
		if (level.getLevelType() === oFF.HierarchyLevelType.ALL)
		{
			continue;
		}
		var levelDimension = dimension.getDimensionAccessor().getDimensionByName(level.getLevelDimensionName());
		oFF.XObjectExt.assertNotNullExt(levelDimension, oFF.XStringUtils.concatenate3("LBH level dimension name ", level.getLevelDimensionName(), " cannot be found."));
		keyFieldNames.add(levelDimension.getFlatKeyField().getName());
	}
	return keyFieldNames;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.convertFilterValueBagIfNotNull = function(valueBag, sourceModelLinkPart, targetModelLinkPart, effectiveTargetField)
{
	if (oFF.isNull(valueBag) || valueBag.getValueType() !== null && valueBag.getValueType().isSpatial())
	{
		return oFF.XListOfString.create();
	}
	if (valueBag.getString() !== null && !this.isAllNodeMemberKey(valueBag.getString()))
	{
		var convertedValues = this.convertNonTimeMemberKeyToTarget(valueBag.getString(), sourceModelLinkPart, targetModelLinkPart);
		if (oFF.notNull(convertedValues) && !convertedValues.isEmpty())
		{
			oFF.QFilterAcrossModelsFilterUtil.setValueBagValue(valueBag, effectiveTargetField.getValueType(), convertedValues.get(0));
			convertedValues.removeAt(0);
		}
		return convertedValues;
	}
	return oFF.XListOfString.create();
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.convertNonTimeMemberKeyToTarget = function(memberKey, sourceModelLinkPart, targetModelLinkPart)
{
	var result = oFF.XListOfString.create();
	var cacheKey = this.getMemberKeyCacheKey(sourceModelLinkPart, memberKey);
	if (this.m_convertedMemberKeysCache.containsKey(cacheKey))
	{
		result.add(this.m_convertedMemberKeysCache.getByKey(cacheKey));
		return result;
	}
	if (this.isContextTypeOfBw(this.getTargetContext()))
	{
		var targetField = this.getFieldOrCalcDimField(this.getTargetContext(), targetModelLinkPart.getFieldName());
		if (!targetField.isKeyField())
		{
			var mappedKeys = this.m_lov.getFlatTargetDimensionMatchingMemberKeysFromText(targetModelLinkPart.getDimensionName(), memberKey);
			if (oFF.isNull(mappedKeys))
			{
				return null;
			}
			else
			{
				return oFF.XListOfString.createFromReadOnlyList(mappedKeys);
			}
		}
	}
	if (this.isContextTypeOfBw(this.getSourceContext()) && this.isContextTypeOfBw(this.getTargetContext()))
	{
		if (oFF.XStringUtils.isNotNullAndNotEmpty(memberKey) && sourceModelLinkPart.isHierarchical() && !targetModelLinkPart.isHierarchical())
		{
			result.add(this.extractBwValueFromFlatOrHierarchyKey(memberKey));
		}
		else if (oFF.XStringUtils.isNotNullAndNotEmpty(memberKey) && !sourceModelLinkPart.isHierarchical() && targetModelLinkPart.isHierarchical())
		{
			result.add(oFF.XStringUtils.concatenate2("!", memberKey));
		}
		else
		{
			result.add(memberKey);
		}
	}
	else if (this.isContextTypeOfBw(this.getSourceContext()) && !targetModelLinkPart.isHierarchical() && this.isBwFlatOrLeafNodeHierarchyKey(memberKey))
	{
		result.add(this.extractBwValueFromFlatOrHierarchyKey(memberKey));
	}
	else if (this.isContextTypeOfBw(this.getSourceContext()) && targetModelLinkPart.isHierarchical())
	{
		var bwKeyValue = this.extractBwValueFromFlatOrHierarchyKey(memberKey);
		var convertedValue = this.buildHanaHierarchyValue(this.getTargetContext(), targetModelLinkPart.getDimensionName(), targetModelLinkPart.getHierarchyName(), bwKeyValue);
		result.add(convertedValue);
	}
	else if (this.isContextTypeOfBw(this.getTargetContext()) && !sourceModelLinkPart.isHierarchical() && targetModelLinkPart.isHierarchical())
	{
		result.add(oFF.XStringUtils.concatenate2("!", memberKey));
	}
	else if (this.isContextTypeOfBw(this.getTargetContext()) && sourceModelLinkPart.isHierarchical())
	{
		var keyValue = this.extractHanaValueFromHierarchyKey(this.getSourceContext(), sourceModelLinkPart.getDimensionName(), sourceModelLinkPart.getHierarchyName(), memberKey);
		result.add(keyValue);
		if (targetModelLinkPart.isHierarchical())
		{
			result.add(oFF.XStringUtils.concatenate2("!", keyValue));
			var targetDimension = this.getDimensionOrCalcDim(this.getTargetContext(), targetModelLinkPart.getDimensionName());
			result.add(oFF.XStringUtils.concatenate3(this.getGroupingDimensionWithDefault(targetDimension).getName(), "!", keyValue));
		}
	}
	else
	{
		var memberKeyValue = memberKey;
		if (sourceModelLinkPart.isHierarchical())
		{
			memberKeyValue = this.extractHanaValueFromHierarchyKey(this.getSourceContext(), sourceModelLinkPart.getDimensionName(), sourceModelLinkPart.getHierarchyName(), memberKey);
		}
		if (targetModelLinkPart.isHierarchical())
		{
			result.add(this.buildHanaHierarchyValue(this.getTargetContext(), targetModelLinkPart.getDimensionName(), targetModelLinkPart.getHierarchyName(), memberKeyValue));
		}
		else
		{
			result.add(memberKeyValue);
		}
	}
	this.m_convertedMemberKeysCache.put(cacheKey, result.get(0));
	return result;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.getMemberKeyCacheKey = function(memberKeyFieldContext, memberKey)
{
	return oFF.XStringUtils.concatenate3(memberKeyFieldContext.getDimensionName(), "|", memberKey);
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.extractBwValueFromFlatOrHierarchyKey = function(flatOrHierarchyKey)
{
	var tokenizedKey = oFF.XStringTokenizer.splitString(flatOrHierarchyKey, "!");
	return tokenizedKey.get(tokenizedKey.size() - 1);
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.isBwFlatOrLeafNodeHierarchyKey = function(key)
{
	if (oFF.XString.size(oFF.XString.trim(key)) > 0 && !oFF.XString.containsString(key, "!"))
	{
		return true;
	}
	var tokenizedKey = oFF.XStringTokenizer.splitString(key, "!");
	return tokenizedKey.size() === 2 && oFF.XString.size(tokenizedKey.get(0)) === 0;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.extractHanaValueFromHierarchyKey = function(context, dimensionName, hierarchyName, hierarchyKey)
{
	var sourceModelLinkedDimension = this.getDimensionOrCalcDim(context, dimensionName);
	var sourceGroupingDimension = this.getGroupingDimensionWithDefault(sourceModelLinkedDimension);
	var hierarchyKeyMetadata = oFF.XStringUtils.concatenate5("[", sourceGroupingDimension.getName(), "].[", hierarchyName, "].&[");
	var memberKeyValue = oFF.XString.replace(hierarchyKey, hierarchyKeyMetadata, "");
	if (!oFF.XString.isEqual(memberKeyValue, hierarchyKey))
	{
		memberKeyValue = oFF.XString.substring(memberKeyValue, 0, oFF.XString.size(memberKeyValue) - 1);
	}
	return memberKeyValue;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.buildHanaHierarchyValue = function(context, dimensionName, hierarchyName, memberKey)
{
	var primaryModelLinkedDimension = this.getDimensionOrCalcDim(context, dimensionName);
	var targetGroupingDimension = this.getGroupingDimensionWithDefault(primaryModelLinkedDimension);
	var convertedMemberKey = oFF.XStringUtils.concatenate5("[", targetGroupingDimension.getName(), "].[", hierarchyName, "].&[");
	return oFF.XStringUtils.concatenate3(convertedMemberKey, memberKey, "]");
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.getGroupingDimensionWithDefault = function(dimension)
{
	var groupingDimensions = dimension.getGroupingDimensions();
	return oFF.notNull(groupingDimensions) && groupingDimensions.size() > 0 ? groupingDimensions.get(0) : dimension;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.createFilterFromResultSet = function(resultSet)
{
	var filterOr = oFF.QFactory.createFilterOr(this.m_targetFilterExpression);
	var rowsAxis = resultSet.getRowsAxis();
	for (var i = 0; i < rowsAxis.getTuplesCount(); i++)
	{
		var tuple = rowsAxis.getTupleAt(i);
		if (tuple.hasElements())
		{
			var tupleFilter = this.createFilterFromTuple(tuple);
			if (oFF.notNull(tupleFilter))
			{
				filterOr.add(tupleFilter);
			}
		}
	}
	return oFF.QFilterAcrossModelsFilterUtil.mergeFilterOrCartesianListsIfApplicable(filterOr);
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.createFilterFromTuple = function(tuple)
{
	var tupleElements = tuple.getElements();
	var tupleAndFilter = oFF.QFactory.createFilterAnd(this.m_targetFilterExpression);
	for (var i = 0; i < tupleElements.size(); i++)
	{
		var tupleElement = tupleElements.get(i);
		var tupleElementDimensionMember = tupleElement.getDimensionMember();
		var sourceContext = this.getSourceContext();
		var sourceDimension = this.getDimensionOrCalcDim(sourceContext, tupleElement.getDimension().getName());
		var targetModelLinkPart = oFF.QFilterAcrossModelsLinkUtil.getLinkCounterPartFromDimensionOrFieldKey(this.getLinks(), sourceDimension.getMetadata().getCacheKey());
		var sourceModelLinkPart = oFF.QFilterAcrossModelsLinkUtil.getLinkPartFromDimensionOrFieldKey(this.getLinks(), sourceDimension.getMetadata().getCacheKey());
		if (oFF.isNull(targetModelLinkPart) || oFF.isNull(sourceModelLinkPart))
		{
			continue;
		}
		var sourceField = this.getFieldOrCalcDimField(sourceContext, sourceModelLinkPart.getFieldName());
		var tupleElementName = null;
		if (sourceField.isKeyField())
		{
			tupleElementName = tupleElementDimensionMember.getName();
		}
		else
		{
			tupleElementName = tupleElementDimensionMember.getText();
		}
		if (this.isAllNodeMemberKey(tupleElementName) || tupleElementDimensionMember.getMemberType() === oFF.MemberType.RESULT)
		{
			return null;
		}
		if (sourceModelLinkPart.isHierarchical() && (this.hasSourceFiltersOnDimensionWithDifferentHierarchy(sourceDimension, sourceDimension.getHierarchyName()) && !oFF.QTimeDimensionUtil.isDateOrTimeLikeDimension(sourceDimension) || oFF.QFilterAcrossModelsDimensionUtil.isNonTimeLevelBasedHierarchy(sourceDimension, sourceDimension.getHierarchyName())) && tupleElement.getDrillState() !== oFF.DrillState.LEAF)
		{
			return null;
		}
		if (this.isContextTypeOfBw(this.getSourceContext()) && sourceModelLinkPart.isHierarchical() && !this.isBwFlatOrLeafNodeHierarchyKey(tupleElementName))
		{
			return null;
		}
		var originalTargetLinkField = this.getFieldOrCalcDimField(this.getTargetContext(), targetModelLinkPart.getFieldName());
		var effectiveTargetLinkField = this.getEffectiveTargetFieldFromTargetLinkPart(targetModelLinkPart, null);
		var targetDimension = originalTargetLinkField.getDimension();
		var cartesianListForTupleElement = oFF.QFactory.createFilterCartesianListWithField(this.m_targetFilterExpression, effectiveTargetLinkField);
		if (targetModelLinkPart.isHierarchical())
		{
			cartesianListForTupleElement.setHierarchyName(targetModelLinkPart.getHierarchyName());
		}
		if (oFF.QTimeDimensionUtil.isDateOrTimeLikeDimension(sourceDimension) && sourceDimension.getHierarchyName() !== null && oFF.QTimeDimensionUtil.isDateOrTimeLikeDimension(targetDimension) && targetModelLinkPart.isHierarchical())
		{
			var activatedHierarchy = sourceDimension.getLeveledHierarchy(sourceDimension.getHierarchyName());
			var referenceHierarchyForCompatibility = null;
			var memberKeysToConvert = null;
			var memberKeysToConvertHierarchyName = null;
			var memberKeyConverter = oFF.QTimeMemberKeyConverter.create(sourceContext.getQueryModel(), sourceDimension, this.getTargetContext().getQueryModel(), targetDimension);
			if (oFF.QTimeDimensionUtil.isFiscalTimeHierarchyName(activatedHierarchy.getName()) && !oFF.QTimeDimensionUtil.areFiscalEnabledAndCompatible(sourceDimension, targetDimension))
			{
				var compatibleCalendarHierarchyName = oFF.QTimeDimensionUtil.mapFiscalHierarchyNameToCompatibleCalendarHierarchyName(activatedHierarchy.getName());
				referenceHierarchyForCompatibility = sourceDimension.getLeveledHierarchy(compatibleCalendarHierarchyName);
				var resultCalendar = memberKeyConverter.convertFiscalMemberKeyToCalendar(tupleElementName, activatedHierarchy.getName(), sourceDimension.getKeyField().getMetadata(), compatibleCalendarHierarchyName);
				memberKeysToConvertHierarchyName = resultCalendar.getHierarchyName();
				memberKeysToConvert = resultCalendar.getList();
			}
			else
			{
				referenceHierarchyForCompatibility = activatedHierarchy;
				memberKeysToConvertHierarchyName = sourceDimension.getHierarchyName();
				memberKeysToConvert = oFF.XListOfString.create();
				memberKeysToConvert.add(tupleElementName);
			}
			var compatibleHierarchyFiscalSpaceType = this.isFiscalSourceAndCompatibleWithTarget(sourceDimension, activatedHierarchy.getName(), targetDimension) ? oFF.FiscalSpaceType.FISCAL : oFF.FiscalSpaceType.CALENDAR;
			var mostCompatibleTargetTimeHierarchy = oFF.QTimeDimensionUtil.findMostCompatibleHierarchy(targetDimension, referenceHierarchyForCompatibility.getAllLevelTypes(), compatibleHierarchyFiscalSpaceType);
			if (oFF.isNull(mostCompatibleTargetTimeHierarchy))
			{
				this.getMessageManager().addWarning(oFF.ErrorCodes.FILTER_ACROSS_MODEL_TARGET_TIME_HIERARCHY, oFF.ErrorMessages.FILTER_ACROSS_MODEL_TARGET_TIME_HIERARCHY);
				return null;
			}
			for (var j = 0; j < memberKeysToConvert.size(); j++)
			{
				var memberKeyToConvert = memberKeysToConvert.get(j);
				var result = memberKeyConverter.convertToHierarchyMemberKey(memberKeyToConvert, memberKeysToConvertHierarchyName, sourceDimension.getKeyField().getMetadata(), mostCompatibleTargetTimeHierarchy.getName());
				if (oFF.notNull(result))
				{
					this.setFilterPropertiesBasedOnTimeConversionResult(result, cartesianListForTupleElement, null, targetDimension, mostCompatibleTargetTimeHierarchy.getName());
				}
			}
			tupleAndFilter.add(cartesianListForTupleElement);
		}
		else if (oFF.QFilterAcrossModelsDimensionUtil.isNonTimeLevelBasedHierarchy(sourceDimension, sourceDimension.getHierarchyName()))
		{
			var lbhFilter = this.convertLevelBasedHierarchyMemberKeyToTarget(tupleElementName, sourceDimension, sourceDimension.getHierarchyName(), targetDimension, targetModelLinkPart.getHierarchyName());
			tupleAndFilter.add(lbhFilter);
		}
		else
		{
			var targetMemberKeys = this.convertNonTimeMemberKeyToTarget(tupleElementName, sourceModelLinkPart, targetModelLinkPart);
			if (oFF.isNull(targetMemberKeys))
			{
				return null;
			}
			for (var k = 0; k < targetMemberKeys.size(); k++)
			{
				var nonTimeElem = cartesianListForTupleElement.addNewCartesianElement();
				oFF.QFilterAcrossModelsFilterUtil.setCartesianElementValues(nonTimeElem, targetMemberKeys.get(k), null, effectiveTargetLinkField);
				nonTimeElem.setComparisonOperator(oFF.ComparisonOperator.EQUAL);
				nonTimeElem.setHierarchyName(targetModelLinkPart.getHierarchyName());
			}
			tupleAndFilter.add(cartesianListForTupleElement);
		}
		if (targetModelLinkPart.isHierarchical())
		{
			cartesianListForTupleElement.setConvertToFlatFilter(true);
		}
	}
	if (tupleAndFilter.size() === 1)
	{
		return tupleAndFilter.get(0);
	}
	else
	{
		return tupleAndFilter;
	}
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.hasSourceFiltersOnDimensionWithDifferentHierarchy = function(dimensionToSearch, hierarchyNameToCompare)
{
	var dimensionNameToSearch = oFF.XHashSetOfString.create();
	dimensionNameToSearch.add(dimensionToSearch.getName());
	var filtersOnSearchedDimension = oFF.XListOfNameObject.create();
	var sourceFiltersIterator = this.getSourceFilters().getIterator();
	while (sourceFiltersIterator.hasNext())
	{
		var filterExpression = sourceFiltersIterator.next();
		if (filterExpression.getFilterRootElement() !== null)
		{
			oFF.QFilterUtil.collectAllCartesianListsUsingDimensionNames(filterExpression.getFilterRootElement(), dimensionNameToSearch, filtersOnSearchedDimension);
		}
	}
	for (var i = 0; i < filtersOnSearchedDimension.size(); i++)
	{
		var filterOnSearchedDimension = filtersOnSearchedDimension.get(i);
		var filterHierarchyName = filterOnSearchedDimension.getHierarchyName();
		if (!oFF.XString.isEqual(filterHierarchyName, hierarchyNameToCompare))
		{
			return true;
		}
	}
	return false;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.removeNodesThatContainInvalidHierarchicalMember = function(root)
{
	if (oFF.isNull(root))
	{
		return;
	}
	if (root.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
	{
		var cartesianList = root;
		for (var i = cartesianList.size() - 1; i >= 0; i--)
		{
			var elem = cartesianList.getCartesianElement(i);
			if (elem.getHierarchyName() === null || elem.getComparisonOperator().isRange())
			{
				continue;
			}
			if (!this.m_lov.isDimensionMemberListNotAvailableOrHierarchicalMemberExists(cartesianList.getDimensionName(), elem.getLow().getString()))
			{
				if (this.isTupleFilterLeaf(cartesianList))
				{
					var filterOr = cartesianList.getParent().getParent();
					filterOr.removeElement(cartesianList.getParent());
				}
				else
				{
					cartesianList.removeElement(elem);
				}
			}
		}
		return;
	}
	var children = this.createListFromIterator(root.getChildrenIterator());
	for (var j = children.size() - 1; j >= 0; j--)
	{
		this.removeNodesThatContainInvalidHierarchicalMember(children.get(j));
	}
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.isTupleFilterLeaf = function(element)
{
	var parent = element.getParent();
	return oFF.notNull(parent) && parent.getOlapComponentType() === oFF.FilterComponentType.AND && parent.getParent() !== null && parent.getParent().getOlapComponentType() === oFF.FilterComponentType.OR;
};
oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.prototype.getEffectiveTargetFieldFromTargetLinkPart = function(targetLinkPart, filterOp)
{
	var targetDimension = this.getDimensionOrCalcDim(this.getTargetContext(), targetLinkPart.getDimensionName());
	if (oFF.notNull(filterOp))
	{
		if (filterOp.getComparisonOperator().isTypeOf(oFF.SpatialComparisonOperator._SPATIAL))
		{
			var geoField = targetDimension.getGeoPointField();
			if (oFF.isNull(geoField))
			{
				var geoFields = targetDimension.getConvenienceCommands().getGISAttributesForDimension(targetDimension);
				geoField = geoFields.get(0);
			}
			if (oFF.notNull(geoField))
			{
				return geoField;
			}
		}
	}
	var targetField = this.getFieldOrCalcDimField(this.getTargetContext(), targetLinkPart.getFieldName());
	if (this.isContextTypeOfBw(this.getTargetContext()) && !targetField.isKeyField())
	{
		if (targetLinkPart.isHierarchical())
		{
			targetField = targetDimension.getHierarchyKeyField();
		}
		else
		{
			targetField = targetDimension.getFlatKeyField();
		}
	}
	return targetField;
};

oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator = function() {};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype = new oFF.QFilterAcrossModelsTransientObjectGenerator();
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype._ff_c = "QFilterAcrossModelsPrequeryBasedTransientObjectGenerator";

oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.EXCLUDE_SUFFIX = "_EXCLUDE";
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.createFilterAcrossModelsPrequeryBasedTransientObjectGenerator = function(parent, name, sourceContext, targetContext, messageManager, links, sourceFilters, measureNames, secondaryMeasureNames)
{
	var fam = new oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator();
	fam.setupFilterAcrossModelsTransientObjectGenerator(parent, name, sourceContext, targetContext, messageManager, links, sourceFilters, measureNames, secondaryMeasureNames);
	return fam;
};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype.generateTransientDimensions = function()
{
	var secondaryContext = this.getSourceContext();
	if (oFF.isNull(secondaryContext))
	{
		this.getMessageManager().addError(oFF.ErrorCodes.INVALID_OPERATOR, oFF.ErrorMessages.FILTER_ACROSS_MODEL_LINKED_CONTEXT_UNSUPPORTED);
		return oFF.XList.create();
	}
	var mainQueryModel = this.getTargetContext().getQueryModel();
	var secondaryQueryModel = secondaryContext.getQueryModel();
	var formulaCalcDim = this.generateFormulaCalcDim(secondaryQueryModel);
	var formulaCalcDimIndirectExclude = this.generateFormulaCalcDimExclude(secondaryQueryModel, formulaCalcDim);
	var forIndirectExclude = oFF.notNull(formulaCalcDimIndirectExclude);
	this.generateFields(this.getTargetContext(), formulaCalcDim, forIndirectExclude);
	this.generateFields(this.getTargetContext(), formulaCalcDimIndirectExclude, forIndirectExclude);
	this.generateExcludeFilter(mainQueryModel, formulaCalcDim, formulaCalcDimIndirectExclude);
	var result = oFF.XList.create();
	oFF.XCollectionUtils.addIfNotNull(result, formulaCalcDim);
	oFF.XCollectionUtils.addIfNotNull(result, formulaCalcDimIndirectExclude);
	return result;
};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype.generateFormulaCalcDim = function(secondaryQueryModel)
{
	var formulaCalcDim = oFF.QFactory.createFilterAcrossModelsCalculatedDimension(secondaryQueryModel, this.getName());
	formulaCalcDim.setPropertiesKeyRef(this.createKeyRefForFirstSharedLink(this.getFirstSecondaryFieldLink(this.getTargetContext())));
	formulaCalcDim.setMeasureNames(this.getMeasureNames().getValuesAsReadOnlyListOfString());
	formulaCalcDim.setSecondaryMeasureNames(this.getSecondaryMeasureNames().getValuesAsReadOnlyListOfString());
	this.setDimensionContext(secondaryQueryModel, formulaCalcDim, false);
	this.setFilterContext(formulaCalcDim);
	return formulaCalcDim;
};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype.setDimensionContext = function(secondaryQueryModel, calcDim, isExcludeCalcDim)
{
	var secondaryLink = this.getFirstSecondaryFieldLink(this.getTargetContext());
	var linkedDimensionNames = oFF.QFilterAcrossModelsLinkUtil.getLinkedDimensionsForContext(this.getLinks(), secondaryLink);
	for (var i = 0; i < linkedDimensionNames.size(); i++)
	{
		var linkedDimensionName = linkedDimensionNames.get(i);
		var linkedDimension = secondaryQueryModel.getDimensionByName(linkedDimensionName);
		var aggregationFieldName = null;
		if (oFF.isNull(linkedDimension))
		{
			var clientQueryObjectManager = this.getTargetContext().getOlapEnv().getClientQueryObjectManager();
			var storageName = oFF.QFilterAcrossModelsLinkUtil.getSharedLinkStorageName(this.getLinks(), secondaryLink);
			if (oFF.XStringUtils.isNotNullAndNotEmpty(storageName))
			{
				var props = clientQueryObjectManager.getFormulaCalcDimProperties(linkedDimensionName, storageName);
				if (oFF.notNull(props))
				{
					aggregationFieldName = props.getFormulaCalcFields().getFirstFieldByType(oFF.PresentationType.KEY).getName();
				}
			}
		}
		else
		{
			var filter = linkedDimension.getFilter();
			if (isExcludeCalcDim && oFF.XCollectionUtils.hasElements(filter))
			{
				var filterElement = filter.getOp(0);
				if (filterElement.getSetSign() !== oFF.SetSign.EXCLUDING)
				{
					aggregationFieldName = linkedDimension.getKeyField().getName();
				}
			}
			else
			{
				aggregationFieldName = linkedDimension.getKeyField().getName();
			}
		}
		if (oFF.XStringUtils.isNotNullAndNotEmpty(aggregationFieldName))
		{
			calcDim.addAggregationFieldName(aggregationFieldName);
		}
	}
};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype.setFilterContext = function(calcDim)
{
	var filterAnd = oFF.QFactory.createFilterAnd(this.getParent());
	filterAnd.setHasChildOwnership(false);
	var iterator = this.getSourceFilters().getIterator();
	while (iterator.hasNext())
	{
		filterAnd.addInternal(iterator.next().getFilterRootElement());
	}
	if (filterAnd.hasElements())
	{
		calcDim.getFilterContext().setComplexRoot(filterAnd);
	}
};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype.generateFormulaCalcDimExclude = function(secondaryQueryModel, formulaCalculatedDimension)
{
	var invertedFilter = this.getInvertertedIndirectExclude(secondaryQueryModel);
	if (oFF.isNull(invertedFilter))
	{
		invertedFilter = this.getInvertedExternalExclude(secondaryQueryModel);
	}
	if (oFF.notNull(invertedFilter))
	{
		formulaCalculatedDimension.setJoinType(oFF.JoinType.LEFT_OUTER);
		var formulaCalcDimIndirectExclude = oFF.QFactory.createFilterAcrossModelsCalculatedDimension(secondaryQueryModel, this.getExcludeCalcDimName());
		formulaCalcDimIndirectExclude.setJoinType(oFF.JoinType.LEFT_OUTER);
		this.setDimensionContext(secondaryQueryModel, formulaCalcDimIndirectExclude, true);
		formulaCalcDimIndirectExclude.setMeasureNames(this.getMeasureNames().getValuesAsReadOnlyListOfString());
		formulaCalcDimIndirectExclude.setSecondaryMeasureNames(this.getSecondaryMeasureNames().getValuesAsReadOnlyListOfString());
		formulaCalcDimIndirectExclude.setPropertiesKeyRef(this.createKeyRefForFirstSharedLink(this.getFirstSecondaryFieldLink(this.getTargetContext())));
		formulaCalcDimIndirectExclude.getFilterContext().setComplexRoot(invertedFilter.getFilterRootElement());
		return formulaCalcDimIndirectExclude;
	}
	return null;
};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype.getInvertertedIndirectExclude = function(secondaryQueryModel)
{
	var dynamicFilter = secondaryQueryModel.getFilter().getDynamicFilter();
	if (dynamicFilter.getFilterRootElement() === null)
	{
		return null;
	}
	var invertedFilter = secondaryQueryModel.getFilter().createFilter();
	invertedFilter.stopEventing();
	invertedFilter.copyFrom(dynamicFilter, null);
	var wasContainingExclude = this.setToInclude(invertedFilter.getFilterRootElement(), false);
	invertedFilter.resumeEventing();
	return wasContainingExclude ? invertedFilter : null;
};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype.setToInclude = function(filterElement, includeFound)
{
	if (oFF.isNull(filterElement))
	{
		return includeFound;
	}
	var filterType = filterElement.getOlapComponentType();
	if (filterType.isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
	{
		var filterList = filterElement;
		var iterator = filterList.getIterator();
		var excludeList = includeFound;
		while (iterator.hasNext())
		{
			var next = iterator.next();
			excludeList = excludeList || next.getSetSign() === oFF.SetSign.EXCLUDING;
			next.setSetSign(oFF.SetSign.INCLUDING);
		}
		return excludeList;
	}
	if (filterType.isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA))
	{
		var tmp = includeFound;
		var filterAlgebra = filterElement;
		var size = filterAlgebra.size();
		for (var i = 0; i < size; i++)
		{
			tmp = tmp || this.setToInclude(filterAlgebra.get(i), tmp);
		}
		return tmp;
	}
	if (filterType.isTypeOf(oFF.FilterComponentType.OPERATION))
	{
		var filterOperation = filterElement;
		var oldSetSign = filterOperation.getSetSign();
		filterOperation.setSetSign(oFF.SetSign.INCLUDING);
		return oldSetSign === oFF.SetSign.EXCLUDING;
	}
	return includeFound;
};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype.getInvertedExternalExclude = function(secondaryQueryModel)
{
	var secondaryFilter = secondaryQueryModel.getFilter();
	var invertedFilter = secondaryFilter.createFilter();
	var filterAnd = oFF.QFactory.createFilterAnd(invertedFilter);
	filterAnd.setHasChildOwnership(false);
	invertedFilter.setComplexRoot(filterAnd);
	var extFilterIt = this.getSourceFilters().getIterator();
	while (extFilterIt.hasNext())
	{
		var invertedExternalFilter = secondaryFilter.createFilter();
		invertedExternalFilter.stopEventing();
		invertedExternalFilter.copyFrom(extFilterIt.next(), null);
		var wasContainingExclude = this.setToInclude(invertedExternalFilter.getFilterRootElement(), false);
		invertedExternalFilter.resumeEventing();
		if (wasContainingExclude)
		{
			filterAnd.addInternal(invertedExternalFilter.getFilterRootElement());
		}
	}
	if (filterAnd.hasElements())
	{
		return invertedFilter;
	}
	return null;
};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype.getExcludeCalcDimName = function()
{
	return oFF.XStringUtils.concatenate2(this.getName(), oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.EXCLUDE_SUFFIX);
};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype.generateFields = function(context, calculatedDimension, forIndirectExclude)
{
	if (oFF.notNull(calculatedDimension))
	{
		var iterator = this.getLinks().getIterator();
		while (iterator.hasNext())
		{
			this.generateField(iterator.next(), context, calculatedDimension, forIndirectExclude);
		}
	}
};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype.generateField = function(link, context, calculatedDimension, forIndirectExclude)
{
	var sourceField;
	var targetField;
	if (link.getFirstPart().isSameDataSourceOrDatasetIdAsContext(context))
	{
		sourceField = link.getFirstPart();
		targetField = link.getSecondPart();
	}
	else
	{
		targetField = link.getFirstPart();
		sourceField = link.getSecondPart();
	}
	calculatedDimension.addJoinFieldByString(this.getJoinFieldNameForSource(sourceField, context), targetField.getFieldName());
	var joinTarget;
	if (!forIndirectExclude)
	{
		joinTarget = targetField.getFieldName();
	}
	else if (calculatedDimension.getQueryModel().getPrimaryCalculationDimension().getDimensionType() === oFF.DimensionType.ACCOUNT)
	{
		joinTarget = "SignedData";
	}
	else
	{
		var measureContext = this.getMeasureNames();
		joinTarget = measureContext.isEmpty() ? "constant_fam_id" : measureContext.getValuesAsReadOnlyListOfString().get(0);
	}
	calculatedDimension.addFieldMappingByString(oFF.XStringUtils.concatenate3(calculatedDimension.getName(), "_", sourceField.getFieldName()), joinTarget);
};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype.getJoinFieldNameForSource = function(sourceField, context)
{
	var queryModel = context.getQueryModel();
	var field = oFF.notNull(queryModel) ? queryModel.getFieldByName(sourceField.getFieldName()) : null;
	if (oFF.notNull(field) && (field.isFlatKeyField() || field.isHierarchyKeyField()))
	{
		return sourceField.getDimensionName();
	}
	return sourceField.getFieldName();
};
oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.prototype.generateExcludeFilter = function(primaryQueryModel, formulaCalcDim, formulaCalcDimIndirectExclude)
{
	if (oFF.notNull(formulaCalcDimIndirectExclude))
	{
		var foCalcDim = oFF.QFactory.createFilterOperationWithOperator(primaryQueryModel, formulaCalcDim.getKeyField(), oFF.ComparisonOperator.IS_NULL);
		foCalcDim.setSetSign(oFF.SetSign.EXCLUDING);
		var foCalcDimExclude = oFF.QFactory.createFilterOperationWithOperator(primaryQueryModel, formulaCalcDimIndirectExclude.getKeyField(), oFF.ComparisonOperator.IS_NULL);
		var primaryExclude = oFF.QFactory.createFilterOr(primaryQueryModel);
		primaryExclude.addInternal(foCalcDim);
		primaryExclude.addInternal(foCalcDimExclude);
		if (primaryQueryModel.getFilter().getLinkedFilter(formulaCalcDimIndirectExclude.getName()) === null)
		{
			primaryQueryModel.getFilter().linkFilterElement(formulaCalcDimIndirectExclude.getName(), primaryExclude);
		}
	}
};

oFF.CustomHierarchyMemberElement = function() {};
oFF.CustomHierarchyMemberElement.prototype = new oFF.CustomHierarchyElement();
oFF.CustomHierarchyMemberElement.prototype._ff_c = "CustomHierarchyMemberElement";

oFF.CustomHierarchyMemberElement.create = function(memberName)
{
	var node = new oFF.CustomHierarchyMemberElement();
	node.setName(memberName);
	return node;
};
oFF.CustomHierarchyMemberElement.prototype.isNode = function()
{
	return false;
};
oFF.CustomHierarchyMemberElement.prototype.isMemberElement = function()
{
	return true;
};
oFF.CustomHierarchyMemberElement.prototype.cloneExt = function(flags)
{
	return oFF.CustomHierarchyMemberElement.create(this.getName());
};

oFF.CustomHierarchyTextElement = function() {};
oFF.CustomHierarchyTextElement.prototype = new oFF.CustomHierarchyElement();
oFF.CustomHierarchyTextElement.prototype._ff_c = "CustomHierarchyTextElement";

oFF.CustomHierarchyTextElement.create = function(text)
{
	var node = new oFF.CustomHierarchyTextElement();
	node.setName(text);
	node.m_children = oFF.XList.create();
	return node;
};
oFF.CustomHierarchyTextElement.prototype.m_children = null;
oFF.CustomHierarchyTextElement.prototype.releaseObject = function()
{
	oFF.CustomHierarchyElement.prototype.releaseObject.call( this );
	this.m_children = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_children);
};
oFF.CustomHierarchyTextElement.prototype.addTextNode = function(text)
{
	var textNode = oFF.CustomHierarchyTextElement.create(text);
	this.m_children.add(textNode);
	return textNode;
};
oFF.CustomHierarchyTextElement.prototype.addMemberNode = function(memberName)
{
	var leaf = oFF.CustomHierarchyMemberElement.create(memberName);
	this.m_children.add(leaf);
	return leaf;
};
oFF.CustomHierarchyTextElement.prototype.getChildNodes = function()
{
	return this.m_children;
};
oFF.CustomHierarchyTextElement.prototype.removeChildNode = function(childNode)
{
	this.m_children.removeElement(childNode);
};
oFF.CustomHierarchyTextElement.prototype.clearChildNodes = function()
{
	this.m_children.clear();
};
oFF.CustomHierarchyTextElement.prototype.isNode = function()
{
	return this.m_children.hasElements();
};
oFF.CustomHierarchyTextElement.prototype.isMemberElement = function()
{
	return false;
};
oFF.CustomHierarchyTextElement.prototype.cloneExt = function(flags)
{
	var textNode = oFF.CustomHierarchyTextElement.create(this.getName());
	oFF.XCollectionUtils.addAllClones(textNode.m_children, this.m_children);
	return textNode;
};
oFF.CustomHierarchyTextElement.prototype.isEqualTo = function(other)
{
	return oFF.CustomHierarchyElement.prototype.isEqualTo.call( this , other) && this.m_children.isEqualTo(other.getChildNodes());
};

oFF.QKeyRef = function() {};
oFF.QKeyRef.prototype = new oFF.DfNameObject();
oFF.QKeyRef.prototype._ff_c = "QKeyRef";

oFF.QKeyRef.create = function(storageName, groupName, objectName)
{
	var newObj = new oFF.QKeyRef();
	newObj.setupExt(storageName, groupName, objectName);
	return newObj;
};
oFF.QKeyRef.prototype.m_storageName = null;
oFF.QKeyRef.prototype.m_groupName = null;
oFF.QKeyRef.prototype.setupExt = function(storageName, groupName, objectName)
{
	this._setupInternal(objectName);
	this.setStorageGroupName(groupName);
	this.m_storageName = storageName;
};
oFF.QKeyRef.prototype.setupExt2 = function(other)
{
	this._setupInternal(other.getName());
	this.setStorageGroupName(other.getStorageGroupName());
	this.m_storageName = other.getStorageName();
};
oFF.QKeyRef.prototype.getStorageName = function()
{
	return this.m_storageName;
};
oFF.QKeyRef.prototype.getStorageGroupName = function()
{
	return this.m_groupName;
};
oFF.QKeyRef.prototype.setStorageGroupName = function(groupName)
{
	this.m_groupName = groupName;
};
oFF.QKeyRef.prototype.setName = function(name)
{
	this.m_name = name;
};
oFF.QKeyRef.prototype.getStorageObjectName = function()
{
	return this.m_name;
};

oFF.QKeyRefStorage = function() {};
oFF.QKeyRefStorage.prototype = new oFF.DfNameObject();
oFF.QKeyRefStorage.prototype._ff_c = "QKeyRefStorage";

oFF.QKeyRefStorage.create = function(name)
{
	var newObj = new oFF.QKeyRefStorage();
	newObj.setupExt(name);
	return newObj;
};
oFF.QKeyRefStorage.prototype.m_subStorages = null;
oFF.QKeyRefStorage.prototype.m_myStorage = null;
oFF.QKeyRefStorage.prototype.setupExt = function(name)
{
	this._setupInternal(name);
	this.m_myStorage = oFF.XHashMapByString.create();
	this.m_subStorages = oFF.XHashMapByString.create();
};
oFF.QKeyRefStorage.prototype.putExt = function(object, groupName, objectName)
{
	var baseObj = object;
	baseObj.setStorageGroupName(groupName);
	baseObj.setName(objectName);
	this.put(baseObj);
};
oFF.QKeyRefStorage.prototype.put = function(object)
{
	var key = this.generateKeyNameFromKeyRef(object);
	this.m_myStorage.put(key, object);
};
oFF.QKeyRefStorage.prototype.getLocal = function(groupName, objectName)
{
	var key = this.generateKeyName(groupName, objectName);
	return this.m_myStorage.getByKey(key);
};
oFF.QKeyRefStorage.prototype.get = function(storageName, groupName, objectName)
{
	var returnObject = null;
	if (oFF.XString.isEqual(storageName, this.getName()))
	{
		returnObject = this.getLocal(groupName, objectName);
	}
	else if (oFF.notNull(storageName))
	{
		var selectedStorage = this.m_subStorages.getByKey(storageName);
		if (oFF.notNull(selectedStorage))
		{
			returnObject = selectedStorage.get(storageName, groupName, objectName);
		}
		else
		{
			var storageIterator = this.m_subStorages.getIterator();
			while (storageIterator.hasNext())
			{
				var storage = storageIterator.next();
				returnObject = storage.get(storageName, groupName, objectName);
				if (oFF.notNull(returnObject))
				{
					return returnObject;
				}
			}
		}
	}
	return returnObject;
};
oFF.QKeyRefStorage.prototype.getAllSubStores = function()
{
	return this.m_subStorages.getValuesAsReadOnlyList();
};
oFF.QKeyRefStorage.prototype.getSubStore = function(storageName)
{
	return this.m_subStorages.getByKey(storageName);
};
oFF.QKeyRefStorage.prototype.setSubKefRefStore = function(storage)
{
	this.m_subStorages.put(storage.getName(), storage);
	var allSubStores = storage.getAllSubStores();
	for (var i = 0; i < allSubStores.size(); i++)
	{
		this.setSubKefRefStore(allSubStores.get(i));
	}
};
oFF.QKeyRefStorage.prototype.removeSubKeyRefStore = function(storageName, releaseObjectsInStorage)
{
	var subStore = this.getSubStore(storageName);
	if (oFF.notNull(subStore))
	{
		if (releaseObjectsInStorage)
		{
			this.removeObjectsByStorage(storageName, true);
		}
		this.m_subStorages.remove(storageName);
		oFF.XObjectExt.release(subStore);
	}
};
oFF.QKeyRefStorage.prototype.removeObject = function(storageName, groupName, objectName, releaseObject)
{
	if (oFF.XString.isEqual(storageName, this.getName()))
	{
		var keyRefObject = this.get(storageName, groupName, objectName);
		if (oFF.notNull(keyRefObject))
		{
			this.m_myStorage.remove(this.generateKeyName(groupName, objectName));
			if (releaseObject)
			{
				oFF.XObjectExt.release(keyRefObject);
			}
		}
	}
	else
	{
		var selectedStorage = this.m_subStorages.getByKey(storageName);
		if (oFF.notNull(selectedStorage))
		{
			selectedStorage.removeObject(storageName, groupName, objectName, releaseObject);
		}
	}
};
oFF.QKeyRefStorage.prototype.removeObjectsByGroup = function(storageName, groupName, releaseObjects)
{
	if (oFF.XString.isEqual(storageName, this.getName()))
	{
		var keysIter = this.m_myStorage.getKeysAsIteratorOfString();
		while (keysIter.hasNext())
		{
			var key = keysIter.next();
			var groupNamePrefix = this.getGroupNamePrefix(groupName);
			if (oFF.XString.startsWith(key, groupNamePrefix))
			{
				this.removeObject(storageName, groupName, oFF.XString.substring(key, oFF.XString.size(groupNamePrefix), oFF.XString.size(key)), releaseObjects);
			}
		}
	}
	else
	{
		var selectedStorage = this.m_subStorages.getByKey(storageName);
		if (oFF.notNull(selectedStorage))
		{
			selectedStorage.removeObjectsByGroup(storageName, groupName, releaseObjects);
		}
	}
};
oFF.QKeyRefStorage.prototype.getObjectsByGroup = function(storageName, groupName)
{
	if (oFF.XString.isEqual(storageName, this.getName()))
	{
		var keyRefsIter = this.m_myStorage.getValuesAsReadOnlyList().getIterator();
		var matchingObjects = oFF.XList.create();
		while (keyRefsIter.hasNext())
		{
			var keyRef = keyRefsIter.next();
			if (oFF.XString.isEqual(keyRef.getStorageGroupName(), groupName))
			{
				matchingObjects.add(keyRef);
			}
		}
		return matchingObjects;
	}
	var subStore = this.getSubStore(storageName);
	if (oFF.notNull(subStore))
	{
		return subStore.getObjectsByGroup(storageName, groupName);
	}
	return oFF.XList.create();
};
oFF.QKeyRefStorage.prototype.removeObjectsByStorage = function(storageName, releaseObjects)
{
	if (oFF.XString.isEqual(storageName, this.getName()))
	{
		if (releaseObjects)
		{
			oFF.XCollectionUtils.releaseEntriesFromCollection(this.m_myStorage);
		}
		this.m_myStorage.clear();
	}
	else
	{
		var selectedStorage = this.m_subStorages.getByKey(storageName);
		if (oFF.notNull(selectedStorage))
		{
			selectedStorage.removeObjectsByStorage(storageName, releaseObjects);
		}
	}
};
oFF.QKeyRefStorage.prototype.generateKeyNameFromKeyRef = function(object)
{
	return oFF.XStringUtils.concatenate3(object.getStorageGroupName(), "~", object.getName());
};
oFF.QKeyRefStorage.prototype.generateKeyName = function(groupName, objectName)
{
	return oFF.XStringUtils.concatenate2(this.getGroupNamePrefix(groupName), objectName);
};
oFF.QKeyRefStorage.prototype.getGroupNamePrefix = function(groupName)
{
	return oFF.XStringUtils.concatenate2(groupName, "~");
};

oFF.QCacheKey = function() {};
oFF.QCacheKey.prototype = new oFF.DfNameObject();
oFF.QCacheKey.prototype._ff_c = "QCacheKey";

oFF.QCacheKey.createCopyExt = function(origin, key1, key2, dimensionGroupNames)
{
	return oFF.QCacheKey.createExt(null, origin.getSystemName(), origin.getDataSourceHashKey(), origin.getProviderType(), key1, key2, origin.getValidationHash(), dimensionGroupNames);
};
oFF.QCacheKey.createCopyWithKey2 = function(origin, key2)
{
	return oFF.QCacheKey.createExt(null, origin.getSystemName(), origin.getDataSourceHashKey(), origin.getProviderType(), origin.getKey1(), key2, origin.getValidationHash(), origin.getDimensionGroupNames());
};
oFF.QCacheKey.createByContextForDimension = function(context, dimensionName, dimensionGroupNames)
{
	var cacheKey = null;
	var dataSource = context.getDataSource();
	if (oFF.notNull(dataSource))
	{
		cacheKey = oFF.QCacheKey._createByContextAndDataSource(context, dimensionName, null, dimensionGroupNames, dataSource);
	}
	return cacheKey;
};
oFF.QCacheKey.createByContextForField = function(context, fieldName, dimensionName)
{
	var cacheKey = null;
	var dataSource = context.getDataSource();
	if (oFF.notNull(dataSource))
	{
		cacheKey = oFF.QCacheKey._createByContextAndDataSource(context, fieldName, dimensionName, null, dataSource);
	}
	return cacheKey;
};
oFF.QCacheKey.createByContext = function(context)
{
	var retObj = null;
	var dataSource = context.getDataSource();
	if (oFF.notNull(dataSource) && dataSource.getType() !== null)
	{
		retObj = oFF.QCacheKey._createByContextAndDataSource(context, null, null, null, dataSource);
	}
	return retObj;
};
oFF.QCacheKey._createByContextAndDataSource = function(context, key1, key2, dimensionGroupNames, dataSource)
{
	var dataSourceHashKey = dataSource.getCacheKeyName2();
	var queryManager = context.getQueryManager();
	var providerType = null;
	var systemName = context.getSystemName();
	if (oFF.notNull(queryManager))
	{
		providerType = queryManager.getInitSettings().getProviderType();
	}
	return oFF.QCacheKey.createExt(context, systemName, dataSourceHashKey, providerType, key1, key2, dataSource.getValidationHash(), dimensionGroupNames);
};
oFF.QCacheKey.createExt = function(context, systemName, dataSourceHashKey, providerType, key1, key2, validationHash, dimensionGroupNames)
{
	var newObj = new oFF.QCacheKey();
	newObj.setupExt(context, systemName, dataSourceHashKey, providerType, key1, key2, validationHash, dimensionGroupNames);
	return newObj;
};
oFF.QCacheKey.prototype.m_systemName = null;
oFF.QCacheKey.prototype.m_dataSourceHashKey = null;
oFF.QCacheKey.prototype.m_systemSpecificKey = null;
oFF.QCacheKey.prototype.m_cubeSpecificKey = null;
oFF.QCacheKey.prototype.m_validationHash = null;
oFF.QCacheKey.prototype.m_key1 = null;
oFF.QCacheKey.prototype.m_key2 = null;
oFF.QCacheKey.prototype.m_providerType = null;
oFF.QCacheKey.prototype.m_dimensionGroupNames = null;
oFF.QCacheKey.prototype.setupExt = function(context, systemName, dataSourceHashKey, providerType, key1, key2, validationHash, dimensionGroupNames)
{
	this.m_validationHash = validationHash;
	this.m_providerType = providerType;
	this.m_key1 = key1;
	this.m_key2 = key2;
	this.m_dataSourceHashKey = dataSourceHashKey;
	this.m_systemName = systemName;
	this.m_dimensionGroupNames = dimensionGroupNames;
	if (oFF.notNull(context) && oFF.isNull(systemName))
	{
		this.m_systemName = context.getSystemName();
	}
	var keyBuffer = oFF.XStringBuffer.create();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_key1))
	{
		keyBuffer.append(this.m_key1);
	}
	if (oFF.notNull(this.m_providerType))
	{
		this.addSeparatorAndAppend(keyBuffer, this.m_providerType.getName());
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_key2))
	{
		this.addSeparatorAndAppend(keyBuffer, this.m_key2);
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_validationHash))
	{
		this.addSeparatorAndAppend(keyBuffer, this.m_validationHash);
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_dimensionGroupNames))
	{
		this.addSeparatorAndAppend(keyBuffer, this.m_dimensionGroupNames);
	}
	this.m_cubeSpecificKey = keyBuffer.toString();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_dataSourceHashKey))
	{
		this.m_systemSpecificKey = oFF.XStringUtils.concatenate3(this.m_dataSourceHashKey, "~", this.m_cubeSpecificKey);
	}
	else
	{
		this.m_systemSpecificKey = this.m_cubeSpecificKey;
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_systemName))
	{
		this._setupInternal(oFF.XStringUtils.concatenate3(this.m_systemName, "~", this.m_systemSpecificKey));
	}
	else
	{
		this._setupInternal(this.m_systemSpecificKey);
	}
};
oFF.QCacheKey.prototype.cloneExt = function(flags)
{
	return oFF.QCacheKey.createExt(null, this.getSystemName(), this.getDataSourceHashKey(), this.getProviderType(), this.getKey1(), this.getKey2(), this.getValidationHash(), this.getDimensionGroupNames());
};
oFF.QCacheKey.prototype.addSeparatorAndAppend = function(keyBuffer, value)
{
	if (keyBuffer.length() > 0)
	{
		keyBuffer.append("~");
	}
	keyBuffer.append(value);
};
oFF.QCacheKey.prototype.releaseObject = function()
{
	this.m_systemName = null;
	this.m_dataSourceHashKey = null;
	this.m_systemSpecificKey = null;
	this.m_cubeSpecificKey = null;
	this.m_validationHash = null;
	this.m_key1 = null;
	this.m_key2 = null;
	this.m_providerType = null;
	oFF.DfNameObject.prototype.releaseObject.call( this );
};
oFF.QCacheKey.prototype.getSystemName = function()
{
	return this.m_systemName;
};
oFF.QCacheKey.prototype.getDataSourceHashKey = function()
{
	return this.m_dataSourceHashKey;
};
oFF.QCacheKey.prototype.getSystemSpecificKey = function()
{
	return this.m_systemSpecificKey;
};
oFF.QCacheKey.prototype.getCubeSpecificKey = function()
{
	return this.m_cubeSpecificKey;
};
oFF.QCacheKey.prototype.getProviderType = function()
{
	return this.m_providerType;
};
oFF.QCacheKey.prototype.getKey1 = function()
{
	return this.m_key1;
};
oFF.QCacheKey.prototype.getKey2 = function()
{
	return this.m_key2;
};
oFF.QCacheKey.prototype.getValidationHash = function()
{
	return this.m_validationHash;
};
oFF.QCacheKey.prototype.getDimensionGroupNames = function()
{
	return this.m_dimensionGroupNames;
};
oFF.QCacheKey.prototype.isSameDataSourceAsContext = function(context)
{
	var retValue = false;
	var datasource = context.getDataSource();
	if (oFF.notNull(datasource))
	{
		var systemName = datasource.getSystemName();
		if (oFF.XStringUtils.isNullOrEmpty(systemName) && context.getQueryManager() !== null)
		{
			systemName = context.getQueryManager().getSystemName();
		}
		retValue = oFF.XString.isEqual(this.getSystemName(), systemName) && oFF.XString.isEqual(this.getDataSourceHashKey(), datasource.getCacheKeyName2());
	}
	return retValue;
};

oFF.QDatasetEpmObject = function() {};
oFF.QDatasetEpmObject.prototype = new oFF.DfNameObject();
oFF.QDatasetEpmObject.prototype._ff_c = "QDatasetEpmObject";

oFF.QDatasetEpmObject.CUBE = "CUBE";
oFF.QDatasetEpmObject.INTEGRATED = "integrated";
oFF.QDatasetEpmObject.DATASET_ID_INTEGRATED_MODE_SCHEMA_NAME = "_SYS_BIC";
oFF.QDatasetEpmObject.DATASET_ID_MODEL_TYPE_PLANNING = "planning";
oFF.QDatasetEpmObject.DATASET_ID_MODEL_TYPE_VIEW = "view";
oFF.QDatasetEpmObject.create = function(mode, epmQuerySourceName, schemaName, packageName, name, shortDescription)
{
	var datasetEpmObject = new oFF.QDatasetEpmObject();
	datasetEpmObject.setupExt(mode, epmQuerySourceName, schemaName, packageName, name, shortDescription);
	return datasetEpmObject;
};
oFF.QDatasetEpmObject.prototype.m_mode = null;
oFF.QDatasetEpmObject.prototype.m_epmQuerySourceName = null;
oFF.QDatasetEpmObject.prototype.m_schemaName = null;
oFF.QDatasetEpmObject.prototype.m_packageName = null;
oFF.QDatasetEpmObject.prototype.m_shortDescription = null;
oFF.QDatasetEpmObject.prototype.m_datasetId = null;
oFF.QDatasetEpmObject.prototype.m_cubeId = null;
oFF.QDatasetEpmObject.prototype.setupExt = function(mode, epmQuerySourceName, schemaName, packageName, name, shortDescription)
{
	this._setupInternal(name);
	this.m_mode = mode;
	this.m_epmQuerySourceName = epmQuerySourceName;
	this.m_schemaName = schemaName;
	this.m_packageName = packageName;
	this.m_shortDescription = shortDescription;
	this.createDatasetAndCubeId();
};
oFF.QDatasetEpmObject.prototype.cloneExt = function(flags)
{
	return oFF.QDatasetEpmObject.create(this.m_mode, this.m_epmQuerySourceName, this.m_schemaName, this.m_packageName, this.m_name, this.m_shortDescription);
};
oFF.QDatasetEpmObject.prototype.releaseObject = function()
{
	this.m_mode = null;
	this.m_epmQuerySourceName = null;
	this.m_schemaName = null;
	this.m_packageName = null;
	this.m_shortDescription = null;
	oFF.DfNameObject.prototype.releaseObject.call( this );
};
oFF.QDatasetEpmObject.prototype.createDatasetAndCubeId = function()
{
	var isIntegratedMode = oFF.XString.isEqual(this.m_mode, oFF.QDatasetEpmObject.INTEGRATED);
	var querySource = this.m_epmQuerySourceName;
	var schemaName = this.m_schemaName;
	var packageName = this.m_packageName;
	var objectName = this.m_name;
	var modelType;
	if (isIntegratedMode)
	{
		schemaName = oFF.QDatasetEpmObject.DATASET_ID_INTEGRATED_MODE_SCHEMA_NAME;
		querySource = objectName;
		modelType = oFF.QDatasetEpmObject.DATASET_ID_MODEL_TYPE_VIEW;
	}
	else
	{
		modelType = oFF.QDatasetEpmObject.DATASET_ID_MODEL_TYPE_PLANNING;
		packageName = "";
	}
	schemaName = oFF.XStringUtils.concatenate3("[", schemaName, "]");
	packageName = oFF.XStringUtils.concatenate3("[", packageName, "]");
	querySource = oFF.XStringUtils.concatenate3("[", querySource, "]");
	this.m_datasetId = oFF.XStringUtils.concatenate5(modelType, ":", schemaName, packageName, querySource);
	var cubeType = null;
	var cubeDatasourceName = null;
	var cubePackageName = null;
	var dataSource = oFF.QFactory.newDataSourceWithFqn(this.m_datasetId);
	var dataSourceType = dataSource.getType();
	if (oFF.MetaObjectType.DBVIEW === dataSourceType || oFF.MetaObjectType.QUERY === dataSourceType)
	{
		cubeType = oFF.QDatasetEpmObject.CUBE;
		cubeDatasourceName = dataSource.getName();
		cubePackageName = dataSource.getPackageName();
	}
	else if (oFF.MetaObjectType.PLANNING === dataSourceType)
	{
		cubeType = oFF.QDatasetEpmObject.CUBE;
		cubeDatasourceName = this.m_name;
		cubePackageName = this.m_packageName;
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(cubeType) && oFF.XStringUtils.isNotNullAndNotEmpty(cubePackageName) && oFF.XStringUtils.isNotNullAndNotEmpty(cubeDatasourceName))
	{
		this.m_cubeId = oFF.XStringUtils.concatenate5(cubeType, ":", cubePackageName, ":", cubeDatasourceName);
	}
};
oFF.QDatasetEpmObject.prototype.getMode = function()
{
	return this.m_mode;
};
oFF.QDatasetEpmObject.prototype.getEpmQuerySourceName = function()
{
	return this.m_epmQuerySourceName;
};
oFF.QDatasetEpmObject.prototype.getSchemaName = function()
{
	return this.m_schemaName;
};
oFF.QDatasetEpmObject.prototype.getPackageName = function()
{
	return this.m_packageName;
};
oFF.QDatasetEpmObject.prototype.getShortDescription = function()
{
	return this.m_shortDescription;
};
oFF.QDatasetEpmObject.prototype.getDatasetId = function()
{
	return this.m_datasetId;
};
oFF.QDatasetEpmObject.prototype.getShortDescriptionOrName = function()
{
	return oFF.XStringUtils.isNotNullAndNotEmpty(this.m_shortDescription) ? this.m_shortDescription : this.m_name;
};
oFF.QDatasetEpmObject.prototype.getCubeId = function()
{
	return this.m_cubeId;
};

oFF.QMetadata = function() {};
oFF.QMetadata.prototype = new oFF.DfNameObject();
oFF.QMetadata.prototype._ff_c = "QMetadata";

oFF.QMetadata.prototype.m_cacheKey = null;
oFF.QMetadata.prototype.setupMetadata = function(cacheKey)
{
	this._setupInternal(cacheKey.getKey1());
	this.m_cacheKey = cacheKey;
};
oFF.QMetadata.prototype.getCacheKey = function()
{
	return this.m_cacheKey;
};
oFF.QMetadata.prototype.releaseObject = function()
{
	oFF.DfNameObject.prototype.releaseObject.call( this );
};

oFF.QVisibilityTriplet = function() {};
oFF.QVisibilityTriplet.prototype = new oFF.DfNameObject();
oFF.QVisibilityTriplet.prototype._ff_c = "QVisibilityTriplet";

oFF.QVisibilityTriplet.create = function(alignment, element, visibility)
{
	var newObj = new oFF.QVisibilityTriplet();
	newObj.m_alignment = alignment;
	newObj.m_element = element;
	newObj.m_visibility = visibility;
	newObj._setupInternal(oFF.QVisibilityTriplet.getVisibilityKey(alignment, element));
	return newObj;
};
oFF.QVisibilityTriplet.getVisibilityKey = function(alignment, element)
{
	if (oFF.isNull(alignment) || oFF.isNull(element))
	{
		return null;
	}
	return oFF.XStringUtils.concatenate3(alignment.getName(), "-", element.getName());
};
oFF.QVisibilityTriplet.prototype.m_alignment = null;
oFF.QVisibilityTriplet.prototype.m_element = null;
oFF.QVisibilityTriplet.prototype.m_visibility = null;
oFF.QVisibilityTriplet.prototype.cloneExt = function(flags)
{
	return oFF.QVisibilityTriplet.create(this.m_alignment, this.m_element, this.m_visibility);
};
oFF.QVisibilityTriplet.prototype.releaseObject = function()
{
	this.m_alignment = null;
	this.m_element = null;
	this.m_visibility = null;
	oFF.DfNameObject.prototype.releaseObject.call( this );
};
oFF.QVisibilityTriplet.prototype.getAlignment = function()
{
	return this.m_alignment;
};
oFF.QVisibilityTriplet.prototype.getElement = function()
{
	return this.m_element;
};
oFF.QVisibilityTriplet.prototype.setVisibility = function(visibility)
{
	this.m_visibility = visibility;
};
oFF.QVisibilityTriplet.prototype.getVisibility = function()
{
	return this.m_visibility;
};
oFF.QVisibilityTriplet.prototype.toString = function()
{
	return oFF.XStringUtils.concatenate3(this.getName(), "-", this.m_visibility.getName());
};

oFF.QPersistedPlaceholderTagSelection = function() {};
oFF.QPersistedPlaceholderTagSelection.prototype = new oFF.QPersistedPlaceholderTag();
oFF.QPersistedPlaceholderTagSelection.prototype._ff_c = "QPersistedPlaceholderTagSelection";

oFF.QPersistedPlaceholderTagSelection.create = function(name, selectionPlaceholder, canonicalDateContext)
{
	var persistedPlaceholderTag = new oFF.QPersistedPlaceholderTagSelection();
	persistedPlaceholderTag.setupPersistedPlaceholderTagCalculation(name, selectionPlaceholder, canonicalDateContext);
	return persistedPlaceholderTag;
};
oFF.QPersistedPlaceholderTagSelection.createFromPlaceholderString = function(persistedPlaceholderStringTag)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(persistedPlaceholderStringTag))
	{
		var startDelimiter = 0;
		var endDelimiter = oFF.XString.indexOf(persistedPlaceholderStringTag, "|");
		var content = oFF.XString.substring(persistedPlaceholderStringTag, startDelimiter, endDelimiter);
		if (oFF.XString.isEqual(content, oFF.QPersistedPlaceholderTag.PERSISTED_QUERY_PLACEHOLDER))
		{
			startDelimiter = endDelimiter + 1;
			endDelimiter = oFF.XString.indexOfFrom(persistedPlaceholderStringTag, "|", startDelimiter);
			var name = oFF.XString.substring(persistedPlaceholderStringTag, startDelimiter, endDelimiter);
			var selectionPlaceholder = null;
			if (endDelimiter > -1)
			{
				startDelimiter = endDelimiter + 1;
				endDelimiter = oFF.XString.indexOfFrom(persistedPlaceholderStringTag, "|", startDelimiter);
				selectionPlaceholder = oFF.XString.substring(persistedPlaceholderStringTag, startDelimiter, endDelimiter);
			}
			var canonicalDateContext = null;
			if (endDelimiter > -1)
			{
				startDelimiter = endDelimiter + 1;
				endDelimiter = oFF.XString.indexOfFrom(persistedPlaceholderStringTag, "|", startDelimiter);
				canonicalDateContext = oFF.XString.substring(persistedPlaceholderStringTag, startDelimiter, endDelimiter);
			}
			return oFF.QFactory.createPersistedPlaceholderTagCalculation(name, selectionPlaceholder, canonicalDateContext);
		}
	}
	return null;
};
oFF.QPersistedPlaceholderTagSelection.prototype.m_selectionPlaceholder = null;
oFF.QPersistedPlaceholderTagSelection.prototype.getPlaceholderString = function()
{
	var tag = oFF.QPersistedPlaceholderTag.PERSISTED_QUERY_PLACEHOLDER;
	tag = oFF.XStringUtils.concatenate3(tag, "|", this.getName());
	if (oFF.XStringUtils.isNullOrEmpty(this.getSelectionPlaceholder()) && oFF.XStringUtils.isNullOrEmpty(this.getCanonicalDateContext()))
	{
		return tag;
	}
	tag = oFF.XStringUtils.concatenate3(tag, "|", this.getSelectionPlaceholder());
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.getCanonicalDateContext()))
	{
		tag = oFF.XStringUtils.concatenate3(tag, "|", this.getCanonicalDateContext());
	}
	return tag;
};
oFF.QPersistedPlaceholderTagSelection.prototype.setupPersistedPlaceholderTagCalculation = function(name, selectionPlaceholder, canonicalDateContext)
{
	oFF.QPersistedPlaceholderTag.prototype.setupPersistedPlaceholderTag.call( this , name, canonicalDateContext);
	this.m_selectionPlaceholder = selectionPlaceholder;
};
oFF.QPersistedPlaceholderTagSelection.prototype.getSelectionPlaceholder = function()
{
	return this.m_selectionPlaceholder;
};
oFF.QPersistedPlaceholderTagSelection.prototype.setSelectionPlaceholder = function(selectionPlaceholder)
{
	this.m_selectionPlaceholder = selectionPlaceholder;
};

oFF.QSortDimension = function() {};
oFF.QSortDimension.prototype = new oFF.DfNameObject();
oFF.QSortDimension.prototype._ff_c = "QSortDimension";

oFF.QSortDimension._createSortDimension = function(name, direction, nulls)
{
	var sortDimension = new oFF.QSortDimension();
	sortDimension.m_name = name;
	sortDimension.m_direction = direction;
	sortDimension.m_nulls = nulls;
	return sortDimension;
};
oFF.QSortDimension.prototype.m_direction = null;
oFF.QSortDimension.prototype.m_nulls = null;
oFF.QSortDimension.prototype.getDirection = function()
{
	return this.m_direction;
};
oFF.QSortDimension.prototype.setDirection = function(direction)
{
	this.m_direction = direction;
};
oFF.QSortDimension.prototype.getNulls = function()
{
	return this.m_nulls;
};
oFF.QSortDimension.prototype.setNulls = function(nulls)
{
	this.m_nulls = nulls;
};
oFF.QSortDimension.prototype.cloneExt = function(flags)
{
	var targetDimension = oFF.QSortDimension._createSortDimension(this.getName(), this.getDirection(), this.getNulls());
	return targetDimension;
};
oFF.QSortDimension.prototype.releaseObject = function()
{
	this.m_direction = null;
	this.m_nulls = null;
	oFF.DfNameObject.prototype.releaseObject.call( this );
};

oFF.BlendingSource = function() {};
oFF.BlendingSource.prototype = new oFF.XObjectExt();
oFF.BlendingSource.prototype._ff_c = "BlendingSource";

oFF.BlendingSource.createBasic = function()
{
	return new oFF.BlendingSource();
};
oFF.BlendingSource.create = function(queryModel, queryAliasName)
{
	oFF.XObjectExt.assertNotNullExt(queryModel, "Querymodel null");
	oFF.XStringUtils.checkStringNotEmpty(queryAliasName, "Query Alias name null");
	oFF.BlendingValidation.isQueryModelValidForBlending(queryModel, null);
	queryModel.setDefinitionName(queryAliasName);
	var source = new oFF.BlendingSource();
	source.m_queryModel = queryModel;
	source.m_queryManager = queryModel.getQueryManager();
	source.m_aliasName = queryAliasName;
	return source;
};
oFF.BlendingSource.createPersistenceIdentifierByRequest2 = function(session, request, systemDescription, blendingSourceId)
{
	if (oFF.BlendingConstants.REMOTE_BLENDING_USE_REQUEST_ONLY_FOR_ID_CALCULATION)
	{
		return oFF.XSha1.createSHA1(oFF.XStringUtils.concatenate2(request, blendingSourceId));
	}
	var user = systemDescription.getUser();
	var host = systemDescription.getHost();
	var sid = session.getAppSessionId();
	return oFF.XSha1.createSHA1(oFF.XStringUtils.concatenate5(user, request, host, sid, blendingSourceId));
};
oFF.BlendingSource.createPersistenceIdentifierForPreQuery = function(queryManager, useQueryInstanceUniqueIdentifier)
{
	return oFF.BlendingSource._createPersistenceIdentifier(queryManager, !useQueryInstanceUniqueIdentifier || oFF.BlendingConstants.REMOTE_BLENDING_USE_REQUEST_ONLY_FOR_ID_CALCULATION ? null : queryManager.getName());
};
oFF.BlendingSource._createPersistenceIdentifier = function(queryManager, uniqueSourceId)
{
	var queryModel = queryManager.getQueryModel();
	var baseDataSource = queryModel.getDataSource();
	var instanceId = baseDataSource.getInstanceId();
	baseDataSource.setInstanceId(null);
	var hasProcessingStep = queryModel.hasProcessingStep();
	queryModel.setHasProcessingStep(false);
	var systemDescription = queryManager.getSystemDescription();
	var request = queryModel.serializeToString(oFF.QModelFormat.INA_DATA);
	var sourceId = oFF.notNull(uniqueSourceId) ? uniqueSourceId : "";
	var persistenceIdentifier = oFF.BlendingSource.createPersistenceIdentifierByRequest2(queryManager.getSession(), request, systemDescription, sourceId);
	baseDataSource.setInstanceId(instanceId);
	queryModel.setHasProcessingStep(hasProcessingStep);
	return persistenceIdentifier;
};
oFF.BlendingSource.prototype.m_sourceId = null;
oFF.BlendingSource.prototype.m_queryModel = null;
oFF.BlendingSource.prototype.m_queryManager = null;
oFF.BlendingSource.prototype.m_isQueryManagerOwner = false;
oFF.BlendingSource.prototype.m_aliasName = null;
oFF.BlendingSource.prototype.m_isRemote = false;
oFF.BlendingSource.prototype.m_delayCubeRequest = false;
oFF.BlendingSource.prototype.cloneBlendingSource = function()
{
	return this.cloneExt(null);
};
oFF.BlendingSource.prototype.cloneExt = function(flags)
{
	var object = oFF.BlendingSource.createBasic();
	object.copyFrom(this, flags);
	return object;
};
oFF.BlendingSource.prototype.copyFromInternal = function(other, flags)
{
	oFF.XObjectExt.prototype.copyFromInternal.call( this , other, flags);
	var otherObj = other;
	this.setIsRemoteSource(otherObj.isRemoteSource());
	this.m_aliasName = otherObj.getQueryAliasName();
	var otherQueryModel = otherObj.getQueryModel();
	var otherQueryManager = otherQueryModel.getQueryManager();
	if (oFF.XString.containsString(flags, "~Query~"))
	{
		this.m_queryManager = otherQueryManager;
		this.m_isQueryManagerOwner = false;
	}
	else
	{
		this.m_queryManager = otherQueryManager.cloneQueryManagerExt(oFF.QueryCloneMode.CURRENT_STATE_INA);
		this.m_isQueryManagerOwner = true;
	}
	this.m_queryModel = this.m_queryManager.getQueryModel();
	this.setDelayCubeRequest(otherObj.isDelayCubeRequest());
};
oFF.BlendingSource.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var xOther = other;
	if (!oFF.XString.isEqual(this.getQueryAliasName(), xOther.getQueryAliasName()))
	{
		return false;
	}
	if (this.isRemoteSource() !== xOther.isRemoteSource())
	{
		return false;
	}
	return this.getQueryModel().isEqualTo(xOther.getQueryModel());
};
oFF.BlendingSource.prototype.releaseObject = function()
{
	this.m_sourceId = null;
	this.m_aliasName = null;
	if (this.m_isQueryManagerOwner)
	{
		this.m_queryManager = oFF.XObjectExt.release(this.m_queryManager);
	}
	else
	{
		this.m_queryManager = null;
	}
	this.m_queryModel = null;
	oFF.XObjectExt.prototype.releaseObject.call( this );
};
oFF.BlendingSource.prototype.getQueryModel = function()
{
	return this.m_queryModel;
};
oFF.BlendingSource.prototype.getQueryAliasName = function()
{
	return this.m_aliasName;
};
oFF.BlendingSource.prototype.isRemoteSource = function()
{
	return this.m_isRemote;
};
oFF.BlendingSource.prototype.setIsRemoteSource = function(isRemoteSource)
{
	this.m_isRemote = isRemoteSource;
};
oFF.BlendingSource.prototype.getApplication = function()
{
	return this.m_queryModel.getApplication();
};
oFF.BlendingSource.prototype.getSession = function()
{
	return this.m_queryModel.getSession();
};
oFF.BlendingSource.prototype.getQueryManager = function()
{
	return this.m_queryManager;
};
oFF.BlendingSource.prototype.updatePersistenceIdentifier = function(blendingHost)
{
	var queryManager = this.getQueryModel().getQueryManager();
	this.updateResultSetPersistenceTarget(blendingHost, queryManager);
	var blendingSourceId = this.getAdditionalSourceIdentifier(blendingHost, queryManager);
	queryManager.setResultSetPersistenceIdentifier(oFF.BlendingSource._createPersistenceIdentifier(queryManager, blendingSourceId));
};
oFF.BlendingSource.prototype.isRemoteQueryPersistenceIdentifierUpToDate = function(blendingHost)
{
	var queryManager = this.getQueryModel().getQueryManager();
	var blendingSourceId = this.getAdditionalSourceIdentifier(blendingHost, queryManager);
	var currentIdentifier = queryManager.getResultSetPersistenceIdentifier();
	var newIdentifier = oFF.BlendingSource._createPersistenceIdentifier(queryManager, blendingSourceId);
	return oFF.XString.isEqual(currentIdentifier, newIdentifier);
};
oFF.BlendingSource.prototype.getAdditionalSourceIdentifier = function(blendingHost, remoteQueryManager)
{
	if (!this.isRemoteSource() || !blendingHost.getSystemDescription().isSystemMappingValid(remoteQueryManager.getSystemDescription()))
	{
		return null;
	}
	if (oFF.XStringUtils.isNullOrEmpty(this.m_sourceId))
	{
		if (oFF.BlendingConstants.REMOTE_BLENDING_USE_REQUEST_ONLY_FOR_ID_CALCULATION)
		{
			this.m_sourceId = this.m_aliasName;
		}
		else
		{
			this.m_sourceId = oFF.XGuid.getGuid();
		}
	}
	return this.m_sourceId;
};
oFF.BlendingSource.prototype.updateResultSetPersistenceTarget = function(blendingHost, remoteQueryManager)
{
	if (this.isRemoteSource() && oFF.notNull(blendingHost))
	{
		if (blendingHost.isSystemMappingValid(remoteQueryManager))
		{
			var systemMapping = remoteQueryManager.getSystemDescription().getSystemMapping(blendingHost.getSystemName());
			remoteQueryManager.setResultSetPersistanceTargetTable(systemMapping.getSerializeTable());
			remoteQueryManager.setResultSetPersistanceTargetSchema(systemMapping.getSerializeSchema());
		}
		else
		{
			remoteQueryManager.setResultSetPersistanceTargetTable(null);
			remoteQueryManager.setResultSetPersistanceTargetSchema(null);
		}
	}
};
oFF.BlendingSource.prototype.invalidateCache = function()
{
	var queryManager = this.getQueryModel().getQueryManager();
	var persistenceIdentifier = oFF.BlendingSource._createPersistenceIdentifier(queryManager, this.m_sourceId);
	var olapEnv = queryManager.getOlapEnv();
	olapEnv.invalidateRemoteBlendingCacheEntry(persistenceIdentifier);
};
oFF.BlendingSource.prototype.setDelayCubeRequest = function(delayCubeRequest)
{
	this.m_delayCubeRequest = delayCubeRequest && oFF.notNull(this.m_queryModel) && this.m_queryModel.getModelCapabilities().supportsRemoteBlendingWithSplittedSerializationRequests();
};
oFF.BlendingSource.prototype.isDelayCubeRequest = function()
{
	return this.m_delayCubeRequest;
};
oFF.BlendingSource.prototype.getRequiredRemoteExecutionPersistenceType = function(blendingHost)
{
	if (this.isRemoteSource())
	{
		var queryManager = this.getQueryModel().getQueryManager();
		var resultSetContainer = queryManager.getActiveResultSetContainer();
		if (!this.isRemoteQueryPersistenceIdentifierUpToDate(blendingHost))
		{
			return oFF.BlendingPersistenceType.ALL_DATA;
		}
		if (this.isDelayCubeRequest())
		{
			if (blendingHost.getSystemDescription().isSystemMappingValid(queryManager.getSystemDescription()))
			{
				return resultSetContainer.getResultSetPersistenceType() === oFF.BlendingPersistenceType.VIEW ? oFF.BlendingPersistenceType.CUBE : null;
			}
			if (oFF.XStringUtils.isNullOrEmpty(resultSetContainer.getSerializedCube()))
			{
				return oFF.BlendingPersistenceType.CUBE;
			}
		}
	}
	return null;
};

oFF.QCmdSignature = function() {};
oFF.QCmdSignature.prototype = new oFF.XConstant();
oFF.QCmdSignature.prototype._ff_c = "QCmdSignature";

oFF.QCmdSignature.ADD_ALL_DIMENSIONS = "addAllDimensions";
oFF.QCmdSignature.ADD_ALL_FIELDS_OF_DIMENSION_TO_MODEL_AREA = "addAllFieldsOfDimensionToModelArea";
oFF.QCmdSignature.ADD_ALL_FIELDS_TO_MODEL_AREA = "addAllFieldsToModelArea";
oFF.QCmdSignature.ADD_ATTRIBUTE_FIELD = "addAttributeField";
oFF.QCmdSignature.ADD_ATTRIBUTE_TO_RESULT_SET = "addAttributeToResultSet";
oFF.QCmdSignature.ADD_CONTAINS_GEOMETRY_FILTER = "addContainsGeometryFilter";
oFF.QCmdSignature.ADD_COVERS_GEOMETRY_FILTER = "addCoversGeometryFilter";
oFF.QCmdSignature.ADD_CROSSES_LINESTRING_FILTER = "addCrossesLinestringFilter";
oFF.QCmdSignature.ADD_DISJOINT_GEOMETRY_FILTER = "addDisjointGeometryFilter";
oFF.QCmdSignature.ADD_DOUBLE_FILTER_BY_FIELD = "addDoubleFilterByField";
oFF.QCmdSignature.ADD_DOUBLE_FILTER_BY_FIELD_NAME = "addDoubleFilterByFieldName";
oFF.QCmdSignature.ADD_FIELD = "addField";
oFF.QCmdSignature.ADD_FILTER = "addFilter";
oFF.QCmdSignature.ADD_FILTER_BY_FIELD = "addFilterByField";
oFF.QCmdSignature.ADD_FILTER_BY_FIELD_AND_VALUE = "addFilterByFieldAndValue";
oFF.QCmdSignature.ADD_INT_FILTER_BY_FIELD = "addIntFilterByField";
oFF.QCmdSignature.ADD_INT_FILTER_BY_FIELD_NAME = "addIntFilterByFieldName";
oFF.QCmdSignature.ADD_INTERSECTS_GEOMETRY_FILTER = "addIntersectsGeometryFilter";
oFF.QCmdSignature.ADD_INTERSECTS_RECT_FILTER = "addIntersectsRectFilter";
oFF.QCmdSignature.ADD_INTERVAL_FILTER_BY_VALUES = "addIntervalFilterByValues";
oFF.QCmdSignature.ADD_LONG_FILTER_BY_FIELD = "addLongFilterByField";
oFF.QCmdSignature.ADD_LONG_FILTER_BY_FIELD_NAME = "addLongFilterByFieldName";
oFF.QCmdSignature.ADD_MEASURE = "addMeasure";
oFF.QCmdSignature.ADD_NEW_RESTRICTED_MEASURE = "addNewRestrictedMeasure";
oFF.QCmdSignature.ADD_NEW_RESTRICTED_MEASURE_ON_NODE = "addNewRestrictedMeasureOnNode";
oFF.QCmdSignature.ADD_OVERLAPS_GEOMETRY_FILTER = "addOverlapsGeometryFilter";
oFF.QCmdSignature.ADD_SINGLE_MEMBER_FILTER = "addSingleMemberFilter";
oFF.QCmdSignature.ADD_SINGLE_NODE_FILTER = "addSingleNodeFilter";
oFF.QCmdSignature.ADD_STRING_FILTER_BY_FIELD = "addStringFilterByField";
oFF.QCmdSignature.ADD_STRING_FILTER_BY_FIELD_NAME_AND_OPERATOR = "addStringFilterByFieldNameAndOperator";
oFF.QCmdSignature.ADD_STRING_FILTER_BY_NAME = "addStringFilterByName";
oFF.QCmdSignature.ADD_STRING_FILTER_BY_PRESENTATION = "addStringFilterByPresentation";
oFF.QCmdSignature.ADD_TOUCHES_GEOMETRY_FILTER = "addTouchesGeometryFilter";
oFF.QCmdSignature.ADD_WITHIN_DISTANCE_FILTER = "addWithinDistanceFilter";
oFF.QCmdSignature.ADD_WITHIN_GEOMETRY_FILTER = "addWithinGeometryFilter";
oFF.QCmdSignature.ALIGN_TOTALS = "alignTotals";
oFF.QCmdSignature.CLEAR_ALL_FIELDS_FROM_MODEL_AREA = "clearAllFieldsFromModelArea";
oFF.QCmdSignature.CLEAR_ALL_FILTERS_EXT = "clearAllFiltersExt";
oFF.QCmdSignature.CLEAR_ATTRIBUTE_FIELDS = "clearAttributeFields";
oFF.QCmdSignature.CLEAR_ATTRIBUTES = "clearAttributes";
oFF.QCmdSignature.CLEAR_AXIS = "clearAxis";
oFF.QCmdSignature.CLEAR_FIELDS = "clearFields";
oFF.QCmdSignature.CLEAR_FILTER_BY_ID_EXT = "clearFilterByIdExt";
oFF.QCmdSignature.CLEAR_FILTERS_BY_DIMENSION_EXT = "clearFiltersByDimensionExt";
oFF.QCmdSignature.CLEAR_SINGLE_MEMBER_FILTER_BY_NAME = "clearSingleMemberFilterByName";
oFF.QCmdSignature.CLEAR_SORT = "clearSort";
oFF.QCmdSignature.CONTAINS_FIELD = "containsField";
oFF.QCmdSignature.CONTAINS_RESULT_SET_FIELD_BY_TYPE = "containsResultSetFieldByType";
oFF.QCmdSignature.CONTAINS_SELECTOR_FIELD_BY_TYPE = "containsSelectorFieldByType";
oFF.QCmdSignature.EXECUTE_CODE = "executeCode";
oFF.QCmdSignature.GET_ABSTRACT_RENDERING = "getAbstractRendering";
oFF.QCmdSignature.GET_COMPONENT_TYPE = "getComponentType";
oFF.QCmdSignature.GET_DATA_SOURCE = "getDataSource";
oFF.QCmdSignature.GET_DIMENSION = "getDimension";
oFF.QCmdSignature.GET_DIMENSION_ACCESSOR = "getDimensionAccessor";
oFF.QCmdSignature.GET_DIMENSIONS_CONTAINING_VALUE_TYPE = "getDimensionsContainingValueType";
oFF.QCmdSignature.GET_DRILL_MANAGER = "getDrillManager";
oFF.QCmdSignature.GET_EXECUTE_REQUEST_ON_OLD_RESULT_SET = "getExecuteRequestOnOldResultSet";
oFF.QCmdSignature.GET_SUPPORTED_EXCEPTION_AGGREGATION_TYPES = "getSupportedExceptionAggregationTypes";
oFF.QCmdSignature.GET_SUPPORTED_DIMENSIONS_FOR_EXCEPTION_AGGREGATION = "getSupportedDimensionsForExceptionAggregation";
oFF.QCmdSignature.GET_MAX_NUMBER_OF_DIMENSIONS_FOR_EXCEPTION_AGGREGATION = "getMaxNumberOfDimensionsForExceptionAggregation";
oFF.QCmdSignature.GET_FIELD = "getField";
oFF.QCmdSignature.GET_FIELD_ACCESSOR_SINGLE = "getFieldAccessorSingle";
oFF.QCmdSignature.GET_FILTER_BY_ID = "getFilterById";
oFF.QCmdSignature.GET_FIRST_DIMENSION_WITH_TYPE = "getFirstDimensionWithType";
oFF.QCmdSignature.GET_FIRST_G_I_S_DIMENSION = "getFirstGISDimension";
oFF.QCmdSignature.GET_G_I_S_ATTRIBUTES_FOR_DIMENSION = "getGISAttributesForDimension";
oFF.QCmdSignature.GET_MAX_COLUMNS = "getMaxColumns";
oFF.QCmdSignature.GET_MAX_RESULT_RECORDS = "getMaxResultRecords";
oFF.QCmdSignature.GET_MAX_ROWS = "getMaxRows";
oFF.QCmdSignature.GET_MEASURE = "getMeasure";
oFF.QCmdSignature.GET_MODEL_CAPABILITIES = "getModelCapabilities";
oFF.QCmdSignature.GET_OFFSET_COLUMNS = "getOffsetColumns";
oFF.QCmdSignature.GET_OFFSET_ROWS = "getOffsetRows";
oFF.QCmdSignature.GET_QUERY_MANAGER = "getQueryManager";
oFF.QCmdSignature.GET_QUERY_MODEL = "getQueryModel";
oFF.QCmdSignature.GET_QUERY_SERVICE_CONFIG = "getQueryServiceConfig";
oFF.QCmdSignature.GET_RECEIVER_BINDINGS = "getReceiverBindings";
oFF.QCmdSignature.GET_REFERENCE_GRID = "getReferenceGrid";
oFF.QCmdSignature.GET_RESULT_SET_PERSISTENCE_IDENTIFIER = "getResultSetPersistenceIdentifier";
oFF.QCmdSignature.GET_RESULT_SET_PERSISTENCE_SCHEMA = "getResultSetPersistenceSchema";
oFF.QCmdSignature.GET_RESULT_SET_PERSISTENCE_TABLE = "getResultSetPersistenceTable";
oFF.QCmdSignature.GET_SENDER_BINDINGS = "getSenderBindings";
oFF.QCmdSignature.GET_VARIABLE = "getVariable";
oFF.QCmdSignature.GET_VARIABLE_CONTAINER = "getVariableContainer";
oFF.QCmdSignature.GET_VARIABLES_NAME_AND_TEXT = "getVariablesNameAndText";
oFF.QCmdSignature.GET_VISIBILITY_FILTER_BY_ID = "getVisibilityFilterById";
oFF.QCmdSignature.HAS_MORE_COLUMN_RECORDS_AVAILABLE = "hasMoreColumnRecordsAvailable";
oFF.QCmdSignature.HAS_MORE_ROW_RECORDS_AVAILABLE = "hasMoreRowRecordsAvailable";
oFF.QCmdSignature.IS_RESULT_SET_TRANSPORT_ENABLED = "isResultSetTransportEnabled";
oFF.QCmdSignature.MOVE_DIMENSION_EXT = "moveDimensionExt";
oFF.QCmdSignature.ACTIVATE_CONDITIONAL_ZERO_SUPPRESSION = "activateConditionalZeroSuppression";
oFF.QCmdSignature.NEW_RECEIVER_BINDING = "newReceiverBinding";
oFF.QCmdSignature.NEW_SENDER_BINDING = "newSenderBinding";
oFF.QCmdSignature.PROCESS_QUERY_EXECUTION = "processQueryExecution";
oFF.QCmdSignature.PROCESS_QUERY_MANAGER_CREATION = "processQueryManagerCreation";
oFF.QCmdSignature.REFRESH = "refresh";
oFF.QCmdSignature.REGISTER_CHANGED_LISTENER = "registerChangedListener";
oFF.QCmdSignature.REMOVE_ATTRIBUTE_FIELD = "removeAttributeField";
oFF.QCmdSignature.REMOVE_ATTRIBUTE_FROM_RESULT_SET = "removeAttributeFromResultSet";
oFF.QCmdSignature.REMOVE_FIELD = "removeField";
oFF.QCmdSignature.RESET = "reset";
oFF.QCmdSignature.RESET_PRESERVE_CUSTOM_MEMBERS = "resetPreserveCustomMembers";
oFF.QCmdSignature.RESET_PRESERVE_CUSTOM_MEMBERS_AND_CALC_DIMS = "resetPreserveCustomMembersAndCalcDims";
oFF.QCmdSignature.RESET_MAX_RESULT_RECORDS = "resetMaxResultRecords";
oFF.QCmdSignature.RESET_TO_DEFAULT = "resetToDefault";
oFF.QCmdSignature.SET_DIMENSION_AND_MEASURE = "setDimensionAndMeasure";
oFF.QCmdSignature.SET_DIMENSION_HIERARCHY = "setDimensionHierarchy";
oFF.QCmdSignature.SET_DIMENSION_CUSTOM_HIERARCHY = "setDimensionCustomHierarchy";
oFF.QCmdSignature.SET_DIMENSIONS_AND_MEASURES = "setDimensionsAndMeasures";
oFF.QCmdSignature.SET_EXECUTE_REQUEST_ON_OLD_RESULT_SET = "setExecuteRequestOnOldResultSet";
oFF.QCmdSignature.SET_FIELD = "setField";
oFF.QCmdSignature.SET_MAX_COLUMNS = "setMaxColumns";
oFF.QCmdSignature.SET_MAX_RESULT_RECORDS = "setMaxResultRecords";
oFF.QCmdSignature.SET_MAX_ROWS = "setMaxRows";
oFF.QCmdSignature.SET_OFFSET_COLUMNS = "setOffsetColumns";
oFF.QCmdSignature.SET_OFFSET_ROWS = "setOffsetRows";
oFF.QCmdSignature.SET_RESULT_SET_PERSISTANCE_IDENTIFIER = "setResultSetPersistanceIdentifier";
oFF.QCmdSignature.SET_RESULT_SET_PERSISTANCE_TARGET_SCHEMA = "setResultSetPersistanceTargetSchema";
oFF.QCmdSignature.SET_RESULT_SET_PERSISTANCE_TARGET_TABLE = "setResultSetPersistanceTargetTable";
oFF.QCmdSignature.SET_RESULT_SET_TRANSPORT_ENABLED = "setResultSetTransportEnabled";
oFF.QCmdSignature.SET_SEARCH_TERM = "setSearchTerm";
oFF.QCmdSignature.SET_TOTALS_VISIBLE = "setTotalsVisible";
oFF.QCmdSignature.SET_UNIVERSAL_DISPLAY_HIERARCHY = "setUniversalDisplayHierarchy";
oFF.QCmdSignature.SET_VARIABLE = "setVariable";
oFF.QCmdSignature.SORT = "sort";
oFF.QCmdSignature.SUBMIT_VARIABLES = "submitVariables";
oFF.QCmdSignature.SWITCH_AXES = "switchAxes";
oFF.QCmdSignature.UNREGISTER_CHANGED_LISTENER = "unregisterChangedListener";
oFF.QCmdSignature.s_signature = null;
oFF.QCmdSignature.staticSetup = function()
{
	oFF.QCmdSignature.s_signature = oFF.XHashMapOfStringByString.create();
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_ALL_FIELDS_OF_DIMENSION_TO_MODEL_AREA, "String,#QContextType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_ALL_FIELDS_TO_MODEL_AREA, "#QContextType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_ATTRIBUTE_FIELD, "#DimensionType,String,String,#PresentationType,String,#QContextType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_ATTRIBUTE_TO_RESULT_SET, "String,String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_CONTAINS_GEOMETRY_FILTER, "#IQDimension,String,IXGeometry");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_COVERS_GEOMETRY_FILTER, "#IQDimension,String,IXGeometry");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_CROSSES_LINESTRING_FILTER, "#IQDimension,String,IXGeometry");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_DISJOINT_GEOMETRY_FILTER, "#IQDimension,String,IXGeometry");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_DOUBLE_FILTER_BY_FIELD, "#IQField,double,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_DOUBLE_FILTER_BY_FIELD_NAME, "String,String,double,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_FIELD, "#DimensionType,String,#PresentationType,String,#QContextType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_FILTER, "#FilterLayer,#DimensionType,String,#PresentationType,String,String,String,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_FILTER_BY_FIELD, "#IQField,IXValue,IXValue,IXValue,#ComparisonOperator,boolean");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_FILTER_BY_FIELD_AND_VALUE, "#IQField,IXValue,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_INT_FILTER_BY_FIELD, "#IQField,int,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_INT_FILTER_BY_FIELD_NAME, "String,String,int,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_INTERSECTS_GEOMETRY_FILTER, "#IQDimension,String,IXGeometry");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_INTERSECTS_RECT_FILTER, "#IQDimension,String,IXPoint,IXPoint");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_INTERVAL_FILTER_BY_VALUES, "String,IXValue,IXValue");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_LONG_FILTER_BY_FIELD, "#IQField,long,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_LONG_FILTER_BY_FIELD_NAME, "String,String,long,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_MEASURE, "String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_NEW_RESTRICTED_MEASURE, "#DimensionType,String,String,String,String,String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_NEW_RESTRICTED_MEASURE_ON_NODE, "#DimensionType,String,String,String,String,String,String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_OVERLAPS_GEOMETRY_FILTER, "#IQDimension,String,IXGeometry");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_SINGLE_MEMBER_FILTER, "#FilterLayer,#DimensionType,String,String,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_SINGLE_NODE_FILTER, "#IQNode,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_STRING_FILTER_BY_FIELD, "#IQField,String,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_STRING_FILTER_BY_FIELD_NAME_AND_OPERATOR, "String,String,String,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_STRING_FILTER_BY_NAME, "String,String,String,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_STRING_FILTER_BY_PRESENTATION, "String,#PresentationType,String,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_TOUCHES_GEOMETRY_FILTER, "#IQDimension,String,IXGeometry");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_WITHIN_DISTANCE_FILTER, "#IQDimension,String,IXPoint,double,String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ADD_WITHIN_GEOMETRY_FILTER, "#IQDimension,String,IXGeometry");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.ALIGN_TOTALS, "#QModelLevel,String,#ResultAlignment");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.CLEAR_ALL_FIELDS_FROM_MODEL_AREA, "#QContextType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.CLEAR_ALL_FILTERS_EXT, "#FilterLayer,#FilterScopeVariables");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.CLEAR_ATTRIBUTE_FIELDS, "#DimensionType,String,String,#QContextType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.CLEAR_ATTRIBUTES, "#DimensionType,String,#QContextType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.CLEAR_AXIS, "#AxisType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.CLEAR_FIELDS, "#DimensionType,String,#QContextType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.CLEAR_FILTER_BY_ID_EXT, "#FilterLayer,String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.CLEAR_FILTERS_BY_DIMENSION_EXT, "#FilterLayer,#DimensionType,String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.CLEAR_SINGLE_MEMBER_FILTER_BY_NAME, "String,String,#ComparisonOperator");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.CLEAR_SORT, "#SortType,String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.CONTAINS_FIELD, "String,String,#QContextType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.CONTAINS_RESULT_SET_FIELD_BY_TYPE, "String,#PresentationType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.CONTAINS_SELECTOR_FIELD_BY_TYPE, "String,#PresentationType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.EXECUTE_CODE, "IPrStructure");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_ABSTRACT_RENDERING, "#SemanticBindingType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_DIMENSION, "String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_DIMENSIONS_CONTAINING_VALUE_TYPE, "#XValueType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_SUPPORTED_EXCEPTION_AGGREGATION_TYPES, "#MemberType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_SUPPORTED_DIMENSIONS_FOR_EXCEPTION_AGGREGATION, "#MemberType,#AggregationType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_MAX_NUMBER_OF_DIMENSIONS_FOR_EXCEPTION_AGGREGATION, "#MemberType,#AggregationType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_FIELD, "String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_FILTER_BY_ID, "String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_FIRST_DIMENSION_WITH_TYPE, "#DimensionType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_G_I_S_ATTRIBUTES_FOR_DIMENSION, "#IQDimension");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_MEASURE, "String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_REFERENCE_GRID, "boolean");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_VARIABLE, "String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.GET_VISIBILITY_FILTER_BY_ID, "String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.MOVE_DIMENSION_EXT, "#DimensionType,String,#AxisType,int");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.NEW_RECEIVER_BINDING, "#SemanticBindingType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.NEW_SENDER_BINDING, "#SemanticBindingType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.PROCESS_QUERY_EXECUTION, "#SyncType,IQueryExecutedListener,IXObject");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.PROCESS_QUERY_MANAGER_CREATION, "#SyncType,IQueryManagerCreatedListener,IXObject");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.REGISTER_CHANGED_LISTENER, "IQChangedListener,IXObject");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.REMOVE_ATTRIBUTE_FIELD, "#DimensionType,String,String,#PresentationType,String,#QContextType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.REMOVE_ATTRIBUTE_FROM_RESULT_SET, "String,String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.REMOVE_FIELD, "#DimensionType,String,#PresentationType,String,#QContextType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_DIMENSION_AND_MEASURE, "String,String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_DIMENSION_HIERARCHY, "String,String,boolean,int");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_DIMENSIONS_AND_MEASURES, "IXListOfString,IXListOfString");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_EXECUTE_REQUEST_ON_OLD_RESULT_SET, "boolean");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_FIELD, "#DimensionType,String,#PresentationType,String,#QContextType");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_MAX_COLUMNS, "int");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_MAX_RESULT_RECORDS, "long");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_MAX_ROWS, "int");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_OFFSET_COLUMNS, "int");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_OFFSET_ROWS, "int");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_RESULT_SET_PERSISTANCE_IDENTIFIER, "String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_RESULT_SET_PERSISTANCE_TARGET_SCHEMA, "String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_RESULT_SET_PERSISTANCE_TARGET_TABLE, "String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_RESULT_SET_TRANSPORT_ENABLED, "boolean");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_SEARCH_TERM, "String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_TOTALS_VISIBLE, "#QModelLevel,String,#ResultVisibility");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_UNIVERSAL_DISPLAY_HIERARCHY, "IXListOfString,int,boolean");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SET_VARIABLE, "String,String");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.SORT, "#SortType,#DimensionType,String,#PresentationType,String,String,#XSortDirection");
	oFF.QCmdSignature.s_signature.put(oFF.QCmdSignature.UNREGISTER_CHANGED_LISTENER, "IQChangedListener");
};
oFF.QCmdSignature.lookupSignature = function(name)
{
	return oFF.QCmdSignature.s_signature.getByKey(name);
};

oFF.QGenericCmd = function() {};
oFF.QGenericCmd.prototype = new oFF.DfCmd();
oFF.QGenericCmd.prototype._ff_c = "QGenericCmd";

oFF.QGenericCmd.createGenericCmd = function(methodName, primitiveReturnType, signature, signatureList)
{
	var cmd = new oFF.QGenericCmd();
	cmd.setupValues(methodName, primitiveReturnType, signature, signatureList);
	return cmd;
};
oFF.QGenericCmd.prototype.m_methodName = null;
oFF.QGenericCmd.prototype.m_signature = null;
oFF.QGenericCmd.prototype.m_signatureList = null;
oFF.QGenericCmd.prototype.m_primitiveReturnType = null;
oFF.QGenericCmd.prototype.newRuntimeInstance = function()
{
	return oFF.QGenericCmd.createGenericCmd(this.m_methodName, this.m_primitiveReturnType, this.m_signature, this.getSignature());
};
oFF.QGenericCmd.prototype.setupValues = function(methodName, primitiveReturnType, signature, signatureList)
{
	this.m_methodName = methodName;
	this.m_primitiveReturnType = primitiveReturnType;
	this.m_signature = signature;
	this.m_signatureList = signatureList;
};
oFF.QGenericCmd.prototype.execute = function()
{
	var returnValue;
	if (oFF.notNull(this.m_params) && this.m_params.hasElements())
	{
		returnValue = oFF.XReflection.invokeMethodWithArgs(this.m_cmds, this.m_methodName, this.m_params);
	}
	else
	{
		returnValue = oFF.XReflection.invokeMethod(this.m_cmds, this.m_methodName);
	}
	this.m_ret = returnValue;
};
oFF.QGenericCmd.prototype.getSignature = function()
{
	if (oFF.isNull(this.m_signatureList) && oFF.notNull(this.m_signature))
	{
		this.m_signatureList = oFF.PrFactory.createList();
		this.m_signatureList.addAllStrings(oFF.XStringTokenizer.splitString(this.m_signature, ","));
	}
	return this.m_signatureList;
};

oFF.QDimensionMetadata = function() {};
oFF.QDimensionMetadata.prototype = new oFF.QMetadata();
oFF.QDimensionMetadata.prototype._ff_c = "QDimensionMetadata";

oFF.QDimensionMetadata.create = function(cacheKey)
{
	var dimensionMetadata = new oFF.QDimensionMetadata();
	dimensionMetadata.setupMetadata(cacheKey);
	dimensionMetadata.m_supportedAxesTypes = oFF.XSetOfNameObject.create();
	dimensionMetadata.m_supportedFieldLayoutType = oFF.XHashSetOfString.create();
	dimensionMetadata.m_supportedFieldLayoutType.add(oFF.FieldLayoutType.FIELD_BASED.getName());
	dimensionMetadata.m_selectionCapabilities = oFF.QFilterCapabilityList.createFilterCapabilitiesForDimension();
	dimensionMetadata.m_isCompound = oFF.TriStateBool._DEFAULT;
	dimensionMetadata.m_keyAttributesNames = oFF.XListOfString.create();
	return dimensionMetadata;
};
oFF.QDimensionMetadata.prototype.m_id = 0;
oFF.QDimensionMetadata.prototype.m_externalName = null;
oFF.QDimensionMetadata.prototype.m_attributeViewName = null;
oFF.QDimensionMetadata.prototype.m_supportedAxesTypes = null;
oFF.QDimensionMetadata.prototype.m_defaultAxisType = null;
oFF.QDimensionMetadata.prototype.m_defaultFieldLayoutType = null;
oFF.QDimensionMetadata.prototype.m_supportedFieldLayoutType = null;
oFF.QDimensionMetadata.prototype.m_supportsCalculatedBeforeAggregation = false;
oFF.QDimensionMetadata.prototype.m_supportsLowerCase = false;
oFF.QDimensionMetadata.prototype.m_isOwnerDimension = false;
oFF.QDimensionMetadata.prototype.m_isPrivate = false;
oFF.QDimensionMetadata.prototype.m_type = null;
oFF.QDimensionMetadata.prototype.m_selectionCapabilities = null;
oFF.QDimensionMetadata.prototype.m_supportsCumulative = false;
oFF.QDimensionMetadata.prototype.m_isGroupingDimension = false;
oFF.QDimensionMetadata.prototype.m_groupingDimensions = null;
oFF.QDimensionMetadata.prototype.m_canBeAggregated = false;
oFF.QDimensionMetadata.prototype.m_isCompound = null;
oFF.QDimensionMetadata.prototype.m_isEnforcedDynamicValue = false;
oFF.QDimensionMetadata.prototype.m_valueType = null;
oFF.QDimensionMetadata.prototype.m_incompleteDimensionMetadata = false;
oFF.QDimensionMetadata.prototype.m_isHierarchyMandatory = false;
oFF.QDimensionMetadata.prototype.m_keyField = null;
oFF.QDimensionMetadata.prototype.m_hasCheckTable = false;
oFF.QDimensionMetadata.prototype.m_accountTypeAttributeName = null;
oFF.QDimensionMetadata.prototype.m_dimensionVisibility = null;
oFF.QDimensionMetadata.prototype.m_defaultMemberValue = null;
oFF.QDimensionMetadata.prototype.m_fiscalEnabled = false;
oFF.QDimensionMetadata.prototype.m_fiscalDisplayPeriod = null;
oFF.QDimensionMetadata.prototype.m_fiscalShift = 0;
oFF.QDimensionMetadata.prototype.m_hasDayTimeYYYYMMDDFormat = false;
oFF.QDimensionMetadata.prototype.m_supportedSortTypes = null;
oFF.QDimensionMetadata.prototype.m_keyAttributesNames = null;
oFF.QDimensionMetadata.prototype.m_additionalPeriods = 0;
oFF.QDimensionMetadata.prototype.m_useMonthLabel = false;
oFF.QDimensionMetadata.prototype.m_periodPrefix = null;
oFF.QDimensionMetadata.prototype.m_isUserManaged = false;
oFF.QDimensionMetadata.prototype.m_timeConfigEnablePattern = false;
oFF.QDimensionMetadata.prototype.setVisibility = function(dimensionVisibility)
{
	this.m_dimensionVisibility = dimensionVisibility;
};
oFF.QDimensionMetadata.prototype.getVisibility = function()
{
	return this.m_dimensionVisibility;
};
oFF.QDimensionMetadata.prototype.isIncompleteDimensionMetadata = function()
{
	return this.m_incompleteDimensionMetadata;
};
oFF.QDimensionMetadata.prototype.setIncompleteDimensionMetadata = function(incompleteDimensionMetadata)
{
	this.m_incompleteDimensionMetadata = incompleteDimensionMetadata;
};
oFF.QDimensionMetadata.prototype.releaseObject = function()
{
	this.m_defaultMemberValue = null;
	this.m_dimensionVisibility = null;
	this.m_externalName = null;
	this.m_defaultAxisType = null;
	this.m_defaultFieldLayoutType = null;
	this.m_type = null;
	this.m_attributeViewName = null;
	this.m_isCompound = null;
	this.m_supportedAxesTypes = oFF.XObjectExt.release(this.m_supportedAxesTypes);
	this.m_supportedFieldLayoutType = oFF.XObjectExt.release(this.m_supportedFieldLayoutType);
	this.m_selectionCapabilities = oFF.XObjectExt.release(this.m_selectionCapabilities);
	this.m_groupingDimensions = oFF.XObjectExt.release(this.m_groupingDimensions);
	this.m_keyField = oFF.XObjectExt.release(this.m_keyField);
	this.m_valueType = null;
	this.m_accountTypeAttributeName = null;
	this.m_supportedSortTypes = oFF.XObjectExt.release(this.m_supportedSortTypes);
	this.m_keyAttributesNames = oFF.XObjectExt.release(this.m_keyAttributesNames);
	oFF.QMetadata.prototype.releaseObject.call( this );
};
oFF.QDimensionMetadata.prototype.addSupportedAxis = function(axisType)
{
	this.m_supportedAxesTypes.add(axisType);
};
oFF.QDimensionMetadata.prototype.canBeAggregated = function()
{
	return this.m_canBeAggregated;
};
oFF.QDimensionMetadata.prototype.setExternalName = function(externalName)
{
	this.m_externalName = externalName;
};
oFF.QDimensionMetadata.prototype.setCanBeAggregated = function(canBeAggregated)
{
	this.m_canBeAggregated = canBeAggregated;
};
oFF.QDimensionMetadata.prototype.getAttributeViewName = function()
{
	return this.m_attributeViewName;
};
oFF.QDimensionMetadata.prototype.getDefaultAxisType = function()
{
	return this.m_defaultAxisType;
};
oFF.QDimensionMetadata.prototype.getDimensionType = function()
{
	return this.m_type;
};
oFF.QDimensionMetadata.prototype.getExternalName = function()
{
	return this.m_externalName;
};
oFF.QDimensionMetadata.prototype.setSupportsLowerCase = function(supportsLowerCase)
{
	this.m_supportsLowerCase = supportsLowerCase;
};
oFF.QDimensionMetadata.prototype.getGroupedDimensions = function(dimensionAccessor, caller)
{
	var groupedDimensions = oFF.XList.create();
	if (this.isGroupingDimension())
	{
		var dimensions = dimensionAccessor.getDimensions();
		for (var i = 0; i < dimensions.size(); i++)
		{
			var dimension = dimensions.get(i);
			if (dimension === caller)
			{
				continue;
			}
			var groupingDimensions = dimension.getGroupingDimensions();
			if (oFF.notNull(groupingDimensions))
			{
				for (var j = 0; j < groupingDimensions.size(); j++)
				{
					var groupingDimension = groupingDimensions.get(j);
					if (groupingDimension !== caller)
					{
						continue;
					}
					if (!groupedDimensions.contains(dimension))
					{
						groupedDimensions.add(dimension);
					}
				}
			}
		}
	}
	return groupedDimensions;
};
oFF.QDimensionMetadata.prototype.addGroupingDimension = function(groupingDimension)
{
	if (oFF.isNull(this.m_groupingDimensions))
	{
		this.m_groupingDimensions = oFF.XHashSetOfString.create();
	}
	if (!this.m_groupingDimensions.contains(groupingDimension))
	{
		this.m_groupingDimensions.add(groupingDimension);
	}
};
oFF.QDimensionMetadata.prototype.getGroupingDimensions = function(dimensionAccessor)
{
	var groupingDimensions = oFF.XList.create();
	if (oFF.notNull(dimensionAccessor) && oFF.notNull(this.m_groupingDimensions))
	{
		var dimensionNames = this.m_groupingDimensions.getIterator();
		while (dimensionNames.hasNext())
		{
			var dimension = dimensionAccessor.getDimensionByName(dimensionNames.next());
			if (oFF.notNull(dimension))
			{
				groupingDimensions.add(dimension);
			}
		}
	}
	return groupingDimensions;
};
oFF.QDimensionMetadata.prototype.getGroupingDimensionNames = function(dimensionAccessor)
{
	var groupingDimensionNames = oFF.XListOfString.create();
	if (oFF.notNull(dimensionAccessor) && oFF.notNull(this.m_groupingDimensions))
	{
		var dimensionNames = this.m_groupingDimensions.getIterator();
		while (dimensionNames.hasNext())
		{
			var dimensionName = dimensionNames.next();
			if (dimensionAccessor.getDimensionNames().contains(dimensionName))
			{
				groupingDimensionNames.add(dimensionName);
			}
		}
	}
	return groupingDimensionNames;
};
oFF.QDimensionMetadata.prototype.getFilterCapabilities = function()
{
	return this.m_selectionCapabilities;
};
oFF.QDimensionMetadata.prototype.getSupportedAxesTypes = function()
{
	return this.m_supportedAxesTypes;
};
oFF.QDimensionMetadata.prototype.supportsAxis = function(axisType)
{
	return this.m_supportedAxesTypes.contains(axisType);
};
oFF.QDimensionMetadata.prototype.isCompound = function()
{
	return this.m_isCompound.getBoolean();
};
oFF.QDimensionMetadata.prototype.isGroupingDimension = function()
{
	return this.m_isGroupingDimension;
};
oFF.QDimensionMetadata.prototype.isMeasureStructure = function()
{
	return this.m_type === oFF.DimensionType.MEASURE_STRUCTURE;
};
oFF.QDimensionMetadata.prototype.isOwnerDimension = function()
{
	return this.m_isOwnerDimension;
};
oFF.QDimensionMetadata.prototype.isSelectable = function(axisType)
{
	if (oFF.XCollectionUtils.hasElements(this.m_supportedAxesTypes))
	{
		var supportedAxesTypes = this.m_supportedAxesTypes.createSetCopy();
		supportedAxesTypes.removeElement(oFF.AxisType.REPOSITORY);
		supportedAxesTypes.removeElement(oFF.AxisType.VIRTUAL);
		return supportedAxesTypes.hasElements();
	}
	return axisType !== oFF.AxisType.REPOSITORY && axisType !== oFF.AxisType.VIRTUAL;
};
oFF.QDimensionMetadata.prototype.isStructure = function()
{
	return oFF.isNull(this.m_type) ? false : this.m_type.isTypeOf(oFF.DimensionType.ABSTRACT_STRUCTURE);
};
oFF.QDimensionMetadata.prototype.supportsBasicStructureMembers = function()
{
	return this.isStructure() || this.m_type === oFF.DimensionType.ACCOUNT;
};
oFF.QDimensionMetadata.prototype.supportsCalculatedBeforeAggregation = function()
{
	return this.m_supportsCalculatedBeforeAggregation;
};
oFF.QDimensionMetadata.prototype.setSupportsCalculatedBeforeAggregation = function(supportsCalculatedBeforeAggregation)
{
	this.m_supportsCalculatedBeforeAggregation = supportsCalculatedBeforeAggregation;
};
oFF.QDimensionMetadata.prototype.supportsCumulative = function()
{
	return this.m_supportsCumulative;
};
oFF.QDimensionMetadata.prototype.setSupportsCumulative = function(supportsCumulative)
{
	this.m_supportsCumulative = supportsCumulative;
};
oFF.QDimensionMetadata.prototype.supportsCustomMembers = function()
{
	return this.isStructure() || oFF.DimensionType.ACCOUNT === this.m_type;
};
oFF.QDimensionMetadata.prototype.supportsFieldLayoutType = function(type)
{
	return this.m_supportedFieldLayoutType.contains(type.getName());
};
oFF.QDimensionMetadata.prototype.supportsLowerCase = function()
{
	return this.m_supportsLowerCase;
};
oFF.QDimensionMetadata.prototype.setDefaultAxisType = function(axisType)
{
	this.m_defaultAxisType = axisType;
};
oFF.QDimensionMetadata.prototype.isCompoundBase = function()
{
	return this.m_isCompound;
};
oFF.QDimensionMetadata.prototype.setIsCompoundBase = function(isCompound)
{
	this.m_isCompound = isCompound;
};
oFF.QDimensionMetadata.prototype.setDimensionType = function(type)
{
	this.m_type = type;
};
oFF.QDimensionMetadata.prototype.getFilterCapabilitiesBase = function()
{
	return this.m_selectionCapabilities;
};
oFF.QDimensionMetadata.prototype.setIsOwnerDimension = function(isOwnerDimension)
{
	this.m_isOwnerDimension = isOwnerDimension;
};
oFF.QDimensionMetadata.prototype.setDefaultFieldLayoutType = function(type)
{
	this.m_defaultFieldLayoutType = type;
};
oFF.QDimensionMetadata.prototype.getDefaultFieldLayoutType = function()
{
	return this.m_defaultFieldLayoutType;
};
oFF.QDimensionMetadata.prototype.addSupportedFieldLayoutType = function(type)
{
	this.m_supportedFieldLayoutType.add(type.getName());
};
oFF.QDimensionMetadata.prototype.setIsGroupingDimension = function(isGroupingDimension)
{
	this.m_isGroupingDimension = isGroupingDimension;
};
oFF.QDimensionMetadata.prototype.isEnforcedDynamicValue = function()
{
	return this.m_isEnforcedDynamicValue;
};
oFF.QDimensionMetadata.prototype.setEnforceDynamicValue = function(enforceDynamicValue)
{
	this.m_isEnforcedDynamicValue = enforceDynamicValue;
};
oFF.QDimensionMetadata.prototype.setAttributeViewName = function(attributeViewName)
{
	this.m_attributeViewName = attributeViewName;
};
oFF.QDimensionMetadata.prototype.setValueType = function(valueType)
{
	this.m_valueType = valueType;
};
oFF.QDimensionMetadata.prototype.getValueType = function()
{
	return this.m_valueType;
};
oFF.QDimensionMetadata.prototype.isPrivate = function()
{
	return this.m_isPrivate;
};
oFF.QDimensionMetadata.prototype.setIsPrivate = function(isPrivate)
{
	this.m_isPrivate = isPrivate;
};
oFF.QDimensionMetadata.prototype.isHierarchyMandatory = function()
{
	return this.m_isHierarchyMandatory;
};
oFF.QDimensionMetadata.prototype.setIsHierarchyMandatory = function(isHierarchyMandatory)
{
	this.m_isHierarchyMandatory = isHierarchyMandatory;
};
oFF.QDimensionMetadata.prototype.setId = function(identifier)
{
	this.m_id = identifier;
};
oFF.QDimensionMetadata.prototype.getId = function()
{
	return this.m_id;
};
oFF.QDimensionMetadata.prototype.getKeyFieldMetadata = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_keyField);
};
oFF.QDimensionMetadata.prototype.setKeyFieldMetadata = function(keyFieldMd)
{
	this.m_keyField = oFF.XWeakReferenceUtil.getWeakRef(keyFieldMd);
};
oFF.QDimensionMetadata.prototype.setHasCheckTable = function(hasCheckTable)
{
	this.m_hasCheckTable = hasCheckTable;
};
oFF.QDimensionMetadata.prototype.getHasCheckTable = function()
{
	if (this.getDimensionType().isTypeOf(oFF.DimensionType.ABSTRACT_STRUCTURE))
	{
		throw oFF.XException.createIllegalStateException("No HasCheckTable for Structures.");
	}
	return this.m_hasCheckTable;
};
oFF.QDimensionMetadata.prototype.getAccountTypeAttributeName = function()
{
	return this.m_accountTypeAttributeName;
};
oFF.QDimensionMetadata.prototype.setAccountTypeAttributeName = function(accountTypeAttributeName)
{
	this.m_accountTypeAttributeName = accountTypeAttributeName;
};
oFF.QDimensionMetadata.prototype.getDefaultMemberValue = function()
{
	return this.m_defaultMemberValue;
};
oFF.QDimensionMetadata.prototype.setDefaultMemberValue = function(defaultMemberValue)
{
	this.m_defaultMemberValue = defaultMemberValue;
};
oFF.QDimensionMetadata.prototype.getFiscalEnabled = function()
{
	return this.m_fiscalEnabled;
};
oFF.QDimensionMetadata.prototype.setFiscalEnabled = function(fiscalEnabled)
{
	this.m_fiscalEnabled = fiscalEnabled;
};
oFF.QDimensionMetadata.prototype.getFiscalDisplayPeriod = function()
{
	return this.m_fiscalDisplayPeriod;
};
oFF.QDimensionMetadata.prototype.setFiscalDisplayPeriod = function(fiscalDisplayPeriod)
{
	this.m_fiscalDisplayPeriod = fiscalDisplayPeriod;
};
oFF.QDimensionMetadata.prototype.getFiscalShift = function()
{
	return this.m_fiscalShift;
};
oFF.QDimensionMetadata.prototype.setFiscalShift = function(fiscalShift)
{
	this.m_fiscalShift = fiscalShift;
};
oFF.QDimensionMetadata.prototype.hasDayTimeYYYYMMDDFormat = function()
{
	return this.m_hasDayTimeYYYYMMDDFormat;
};
oFF.QDimensionMetadata.prototype.setHasDayTimeYYYYMMDDFormat = function(hasDayTimeYYYYMMDDFormat)
{
	this.m_hasDayTimeYYYYMMDDFormat = hasDayTimeYYYYMMDDFormat;
};
oFF.QDimensionMetadata.prototype.setSupportedSortTypes = function(sortTypes)
{
	this.m_supportedSortTypes = sortTypes;
};
oFF.QDimensionMetadata.prototype.getSupportedSortTypes = function()
{
	return this.m_supportedSortTypes;
};
oFF.QDimensionMetadata.prototype.getAdditionalPeriods = function()
{
	return this.m_additionalPeriods;
};
oFF.QDimensionMetadata.prototype.getPeriodPrefix = function()
{
	return this.m_periodPrefix;
};
oFF.QDimensionMetadata.prototype.getUseMonthLabel = function()
{
	return this.m_useMonthLabel;
};
oFF.QDimensionMetadata.prototype.isUserManaged = function()
{
	return this.m_isUserManaged;
};
oFF.QDimensionMetadata.prototype.isTimeConfigEnablePattern = function()
{
	return this.m_timeConfigEnablePattern;
};
oFF.QDimensionMetadata.prototype.setAdditionalPeriods = function(additionalPeriods)
{
	this.m_additionalPeriods = additionalPeriods;
};
oFF.QDimensionMetadata.prototype.setPeriodPrefix = function(periodPrefix)
{
	this.m_periodPrefix = periodPrefix;
};
oFF.QDimensionMetadata.prototype.setUseMonthLabel = function(useMonthLabel)
{
	this.m_useMonthLabel = useMonthLabel;
};
oFF.QDimensionMetadata.prototype.getKeyAttributesNames = function()
{
	return this.m_keyAttributesNames;
};
oFF.QDimensionMetadata.prototype.setKeyAttributesNames = function(keyAttributesNames)
{
	this.m_keyAttributesNames.clear();
	this.m_keyAttributesNames.addAll(keyAttributesNames);
};
oFF.QDimensionMetadata.prototype.setIsUserManaged = function(isUserManaged)
{
	this.m_isUserManaged = isUserManaged;
};
oFF.QDimensionMetadata.prototype.setTimeConfigEnablePattern = function(timeConfigEnablePattern)
{
	this.m_timeConfigEnablePattern = timeConfigEnablePattern;
};

oFF.QFieldMetadata = function() {};
oFF.QFieldMetadata.prototype = new oFF.QMetadata();
oFF.QFieldMetadata.prototype._ff_c = "QFieldMetadata";

oFF.QFieldMetadata.create = function(cacheKey)
{
	var fieldMetadata = new oFF.QFieldMetadata();
	fieldMetadata.setupMetadata(cacheKey);
	fieldMetadata.m_usageType = oFF.FieldUsageType.ALL;
	return fieldMetadata;
};
oFF.QFieldMetadata.prototype.m_dimensionMetadata = null;
oFF.QFieldMetadata.prototype.m_aliasName = null;
oFF.QFieldMetadata.prototype.m_mappedColumnName = null;
oFF.QFieldMetadata.prototype.m_isLowerCaseEnabled = false;
oFF.QFieldMetadata.prototype.m_dependencyFields = null;
oFF.QFieldMetadata.prototype.m_attributeType = null;
oFF.QFieldMetadata.prototype.m_sqlType = null;
oFF.QFieldMetadata.prototype.m_semanticType = null;
oFF.QFieldMetadata.prototype.m_valueType = null;
oFF.QFieldMetadata.prototype.m_initialValue = null;
oFF.QFieldMetadata.prototype.m_isCubeBlendingPropertiesField = false;
oFF.QFieldMetadata.prototype.m_isDisplayAttributeField = false;
oFF.QFieldMetadata.prototype.m_isFilterable = false;
oFF.QFieldMetadata.prototype.m_isFlatKeyField = false;
oFF.QFieldMetadata.prototype.m_isDefaultTextField = false;
oFF.QFieldMetadata.prototype.m_isHierarchyKeyField = false;
oFF.QFieldMetadata.prototype.m_isHierarchyPathField = false;
oFF.QFieldMetadata.prototype.m_isHierarchyNavigationField = false;
oFF.QFieldMetadata.prototype.m_isVirtualDescription = false;
oFF.QFieldMetadata.prototype.m_usageType = null;
oFF.QFieldMetadata.prototype.m_presentationType = null;
oFF.QFieldMetadata.prototype.m_navigationalAttributeDescription = null;
oFF.QFieldMetadata.prototype.m_lowerBound = null;
oFF.QFieldMetadata.prototype.m_upperBound = null;
oFF.QFieldMetadata.prototype.m_precision = 0;
oFF.QFieldMetadata.prototype.m_length = 0;
oFF.QFieldMetadata.prototype.m_decimals = 0;
oFF.QFieldMetadata.prototype.m_fixedLength = 0;
oFF.QFieldMetadata.prototype.m_infoObjectType = null;
oFF.QFieldMetadata.prototype.m_visibilityType = null;
oFF.QFieldMetadata.prototype.m_conversionRoutine = null;
oFF.QFieldMetadata.prototype.m_mimeType = null;
oFF.QFieldMetadata.prototype.releaseObject = function()
{
	this.m_dimensionMetadata = oFF.XObjectExt.release(this.m_dimensionMetadata);
	this.m_aliasName = null;
	this.m_mappedColumnName = null;
	this.m_attributeType = null;
	this.m_sqlType = null;
	this.m_valueType = null;
	this.m_initialValue = null;
	this.m_usageType = null;
	this.m_presentationType = null;
	this.m_navigationalAttributeDescription = null;
	this.m_lowerBound = null;
	this.m_upperBound = null;
	this.m_infoObjectType = null;
	this.m_visibilityType = null;
	this.m_conversionRoutine = null;
	this.m_dependencyFields = oFF.XObjectExt.release(this.m_dependencyFields);
	this.m_mimeType = null;
	oFF.QMetadata.prototype.releaseObject.call( this );
};
oFF.QFieldMetadata.prototype.addDependencyField = function(dependentFieldName)
{
	if (oFF.isNull(this.m_dependencyFields))
	{
		this.m_dependencyFields = oFF.XListOfString.create();
	}
	this.m_dependencyFields.add(dependentFieldName);
};
oFF.QFieldMetadata.prototype.getAliasName = function()
{
	return this.m_aliasName;
};
oFF.QFieldMetadata.prototype.getAttributeType = function()
{
	return this.m_attributeType;
};
oFF.QFieldMetadata.prototype.getDecimals = function()
{
	return this.m_decimals;
};
oFF.QFieldMetadata.prototype.getDependencyFields = function()
{
	if (oFF.isNull(this.m_dependencyFields))
	{
		return oFF.XListOfString.create();
	}
	return this.m_dependencyFields;
};
oFF.QFieldMetadata.prototype.getInitialValue = function()
{
	return this.m_initialValue;
};
oFF.QFieldMetadata.prototype.getIsLowerCaseEnabled = function()
{
	return this.isLowerCaseEnabled();
};
oFF.QFieldMetadata.prototype.isLowerCaseEnabled = function()
{
	return this.m_isLowerCaseEnabled;
};
oFF.QFieldMetadata.prototype.getLength = function()
{
	return this.m_length;
};
oFF.QFieldMetadata.prototype.getLowerBound = function()
{
	return this.m_lowerBound;
};
oFF.QFieldMetadata.prototype.getMappedColumnName = function()
{
	return this.m_mappedColumnName;
};
oFF.QFieldMetadata.prototype.getNavigationalAttributeDescription = function()
{
	return this.m_navigationalAttributeDescription;
};
oFF.QFieldMetadata.prototype.getPrecision = function()
{
	return this.m_precision;
};
oFF.QFieldMetadata.prototype.getPresentationType = function()
{
	return this.m_presentationType;
};
oFF.QFieldMetadata.prototype.getSqlType = function()
{
	return this.m_sqlType;
};
oFF.QFieldMetadata.prototype.getSemanticType = function()
{
	return this.m_semanticType;
};
oFF.QFieldMetadata.prototype.getUpperBound = function()
{
	return this.m_upperBound;
};
oFF.QFieldMetadata.prototype.getUsageType = function()
{
	return this.m_usageType;
};
oFF.QFieldMetadata.prototype.getValueType = function()
{
	return this.m_valueType;
};
oFF.QFieldMetadata.prototype.isCubeBlendingPropertiesField = function()
{
	return this.m_isCubeBlendingPropertiesField;
};
oFF.QFieldMetadata.prototype.isDefaultTextField = function()
{
	return this.m_isDefaultTextField;
};
oFF.QFieldMetadata.prototype.isDisplayAttributeField = function()
{
	return this.m_isDisplayAttributeField;
};
oFF.QFieldMetadata.prototype.isFilterable = function()
{
	return this.m_isFilterable;
};
oFF.QFieldMetadata.prototype.isFlatKeyField = function()
{
	return this.m_isFlatKeyField;
};
oFF.QFieldMetadata.prototype.isHierarchyKeyField = function()
{
	return this.m_isHierarchyKeyField;
};
oFF.QFieldMetadata.prototype.isHierarchyPathField = function()
{
	return this.m_isHierarchyPathField;
};
oFF.QFieldMetadata.prototype.isKeyField = function()
{
	return this.m_isHierarchyKeyField || this.m_isFlatKeyField || this.m_isHierarchyNavigationField || this.m_presentationType === oFF.PresentationType.KEY_NOT_COMPOUND;
};
oFF.QFieldMetadata.prototype.isVirtualDescription = function()
{
	return this.m_isVirtualDescription;
};
oFF.QFieldMetadata.prototype.setAliasName = function(aliasName)
{
	this.m_aliasName = aliasName;
};
oFF.QFieldMetadata.prototype.setAttributeType = function(attributeType)
{
	this.m_attributeType = attributeType;
};
oFF.QFieldMetadata.prototype.setDecimals = function(decimals)
{
	this.m_decimals = decimals;
};
oFF.QFieldMetadata.prototype.setInitialValue = function(initialValue)
{
	this.m_initialValue = initialValue;
};
oFF.QFieldMetadata.prototype.setIsCubeBlendingPropertiesField = function(isBlendingPropertiesField)
{
	this.m_isCubeBlendingPropertiesField = isBlendingPropertiesField;
};
oFF.QFieldMetadata.prototype.setIsDisplayAttributeField = function(isDisplayAttributeField)
{
	this.m_isDisplayAttributeField = isDisplayAttributeField;
};
oFF.QFieldMetadata.prototype.setIsFilterable = function(isFilterable)
{
	this.m_isFilterable = isFilterable;
};
oFF.QFieldMetadata.prototype.setIsFlatKeyField = function(isFlatKeyField)
{
	this.m_isFlatKeyField = isFlatKeyField;
};
oFF.QFieldMetadata.prototype.setIsFlatTextField = function(isDefaultTextField)
{
	this.m_isDefaultTextField = isDefaultTextField;
};
oFF.QFieldMetadata.prototype.setIsHierarchyKeyField = function(isHierarchyKeyField)
{
	this.m_isHierarchyKeyField = isHierarchyKeyField;
};
oFF.QFieldMetadata.prototype.setIsHierarchyPathField = function(isHierarchyPathField)
{
	this.m_isHierarchyPathField = isHierarchyPathField;
};
oFF.QFieldMetadata.prototype.setIsLowerCaseEnabled = function(lowerCaseEnabled)
{
	this.m_isLowerCaseEnabled = lowerCaseEnabled;
};
oFF.QFieldMetadata.prototype.setIsVirtualDescription = function(isVirtualDescription)
{
	this.m_isVirtualDescription = isVirtualDescription;
};
oFF.QFieldMetadata.prototype.setLength = function(length)
{
	this.m_length = length;
};
oFF.QFieldMetadata.prototype.setLowerBound = function(lowerBound)
{
	this.m_lowerBound = lowerBound;
};
oFF.QFieldMetadata.prototype.setMappedColumnName = function(columnName)
{
	this.m_mappedColumnName = columnName;
};
oFF.QFieldMetadata.prototype.setNavigationalAttributeDescription = function(navigationalAttributeDescription)
{
	this.m_navigationalAttributeDescription = navigationalAttributeDescription;
};
oFF.QFieldMetadata.prototype.setPrecision = function(precision)
{
	this.m_precision = precision;
};
oFF.QFieldMetadata.prototype.setPresentationType = function(presentationType)
{
	this.m_presentationType = presentationType;
};
oFF.QFieldMetadata.prototype.setSqlType = function(sqlType)
{
	this.m_sqlType = sqlType;
};
oFF.QFieldMetadata.prototype.setSemanticType = function(semanticType)
{
	this.m_semanticType = semanticType;
};
oFF.QFieldMetadata.prototype.setUpperBound = function(upperBound)
{
	this.m_upperBound = upperBound;
};
oFF.QFieldMetadata.prototype.setUsageType = function(usageType)
{
	if (oFF.isNull(this.m_usageType))
	{
		this.m_usageType = usageType;
	}
};
oFF.QFieldMetadata.prototype.setValueType = function(valueType)
{
	this.m_valueType = valueType;
};
oFF.QFieldMetadata.prototype.setConversionRoutine = function(conversionRoutine)
{
	this.m_conversionRoutine = conversionRoutine;
};
oFF.QFieldMetadata.prototype.setVisibilityType = function(visibilityType)
{
	this.m_visibilityType = visibilityType;
};
oFF.QFieldMetadata.prototype.setInfoObjectType = function(infoObjectType)
{
	this.m_infoObjectType = infoObjectType;
};
oFF.QFieldMetadata.prototype.getInfoObjectType = function()
{
	return this.m_infoObjectType;
};
oFF.QFieldMetadata.prototype.getVisibilityType = function()
{
	return this.m_visibilityType;
};
oFF.QFieldMetadata.prototype.getConversionRoutine = function()
{
	return this.m_conversionRoutine;
};
oFF.QFieldMetadata.prototype.isHierarchyNavigationField = function()
{
	return this.m_isHierarchyNavigationField;
};
oFF.QFieldMetadata.prototype.setIsHierarchyNavigationField = function(isHierarchyNavigationField)
{
	this.m_isHierarchyNavigationField = isHierarchyNavigationField;
};
oFF.QFieldMetadata.prototype.setMimeType = function(mimeType)
{
	this.m_mimeType = mimeType;
};
oFF.QFieldMetadata.prototype.getMimeType = function()
{
	return this.m_mimeType;
};
oFF.QFieldMetadata.prototype.setFixedLength = function(fixedLength)
{
	if (this.m_fixedLength !== fixedLength)
	{
		this.m_fixedLength = fixedLength;
	}
};
oFF.QFieldMetadata.prototype.getFixedLength = function()
{
	return this.m_fixedLength;
};
oFF.QFieldMetadata.prototype.getDimensionMetadata = function()
{
	return this.getDimensionMetadataBase();
};
oFF.QFieldMetadata.prototype.getDimensionMetadataBase = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_dimensionMetadata);
};
oFF.QFieldMetadata.prototype.setDimensionMetadata = function(dimensionMetadata)
{
	if (this.m_presentationType === oFF.PresentationType.KEY)
	{
		dimensionMetadata.setKeyFieldMetadata(this);
	}
	this.m_dimensionMetadata = oFF.XWeakReferenceUtil.getWeakRef(dimensionMetadata);
};

oFF.QDimensionLinkKey = function() {};
oFF.QDimensionLinkKey.prototype = new oFF.QCacheKey();
oFF.QDimensionLinkKey.prototype._ff_c = "QDimensionLinkKey";

oFF.QDimensionLinkKey.createLinkKey = function(systemName, cubeName, dimensionName, fieldName)
{
	return oFF.QFactory.createCacheKeyWithDataSource(null, systemName, cubeName, null, fieldName, dimensionName, null, null);
};
oFF.QDimensionLinkKey.createLinkKeyExt = function(context, systemName, cubeName, dimensionName, fieldName)
{
	return oFF.QFactory.createCacheKeyWithDataSource(context, systemName, cubeName, null, fieldName, dimensionName, null, null);
};

oFF.QGeoColumn = function() {};
oFF.QGeoColumn.prototype = new oFF.DfNameTextObject();
oFF.QGeoColumn.prototype._ff_c = "QGeoColumn";

oFF.QGeoColumn.create = function(name, label)
{
	var newObject = new oFF.QGeoColumn();
	newObject.setupWithNameText(name, label);
	return newObject;
};
oFF.QGeoColumn.prototype.getLabel = function()
{
	return this.getText();
};

oFF.QKeyRefProxy = function() {};
oFF.QKeyRefProxy.prototype = new oFF.QKeyRef();
oFF.QKeyRefProxy.prototype._ff_c = "QKeyRefProxy";

oFF.QKeyRefProxy.createProxy = function(storage, content)
{
	var newObj = new oFF.QKeyRefProxy();
	newObj.setupExt2(content);
	newObj.m_storage = storage;
	newObj.m_content = content;
	return newObj;
};
oFF.QKeyRefProxy.createProxyWithRef = function(storage, keyRef)
{
	var newObj = new oFF.QKeyRefProxy();
	newObj.setupExt2(keyRef);
	newObj.m_storage = storage;
	return newObj;
};
oFF.QKeyRefProxy.prototype.m_storage = null;
oFF.QKeyRefProxy.prototype.m_content = null;
oFF.QKeyRefProxy.prototype.get = function()
{
	if (oFF.isNull(this.m_content) || this.m_content.isReleased() === true)
	{
		this.m_content = this.m_storage.get(this.getStorageName(), this.getStorageGroupName(), this.getStorageObjectName());
	}
	return this.m_content;
};

oFF.LovCapabilities = function() {};
oFF.LovCapabilities.prototype = new oFF.MessageManager();
oFF.LovCapabilities.prototype._ff_c = "LovCapabilities";

oFF.LovCapabilities.prototype.m_supportsWildCardSearch = false;
oFF.LovCapabilities.prototype.m_supportsSeveralDrillOperationsInVh = false;
oFF.LovCapabilities.prototype.supportsWildCardSearch = function()
{
	return this.isValid() && this.m_supportsWildCardSearch;
};
oFF.LovCapabilities.prototype.setSupportsWildCardSearch = function(supportsWildCardSearch)
{
	this.m_supportsWildCardSearch = supportsWildCardSearch;
};
oFF.LovCapabilities.prototype.supportsSeveralDrillOperationsInValueHelp = function()
{
	return this.m_supportsSeveralDrillOperationsInVh;
};
oFF.LovCapabilities.prototype.setSupportsSeveralDrillOperationsInValueHelp = function(supportsSeveralDrillOperationsInValueHelp)
{
	this.m_supportsSeveralDrillOperationsInVh = supportsSeveralDrillOperationsInValueHelp;
};

oFF.QExtendedDimension = function() {};
oFF.QExtendedDimension.prototype = new oFF.DfNameTextObject();
oFF.QExtendedDimension.prototype._ff_c = "QExtendedDimension";

oFF.QExtendedDimension.create = function(name, joinFieldName, joinFieldNameExternal)
{
	var extendedDimension = new oFF.QExtendedDimension();
	extendedDimension.setupExt(name, joinFieldName, joinFieldNameExternal);
	return extendedDimension;
};
oFF.QExtendedDimension.prototype.m_dataSource = null;
oFF.QExtendedDimension.prototype.m_joinType = null;
oFF.QExtendedDimension.prototype.m_joinFieldName = null;
oFF.QExtendedDimension.prototype.m_joinFieldNameExternal = null;
oFF.QExtendedDimension.prototype.m_joinParameters = null;
oFF.QExtendedDimension.prototype.m_dimensionType = null;
oFF.QExtendedDimension.prototype.m_renamingMode = null;
oFF.QExtendedDimension.prototype.m_joinCardinality = null;
oFF.QExtendedDimension.prototype.m_dimensionVisibility = null;
oFF.QExtendedDimension.prototype.m_locationType = null;
oFF.QExtendedDimension.prototype.setupExt = function(name, joinFieldName, joinFieldNameExternal)
{
	this._setupInternal(name);
	this.m_joinFieldName = joinFieldName;
	this.m_joinFieldNameExternal = joinFieldNameExternal;
	this.m_joinParameters = oFF.XListOfString.create();
};
oFF.QExtendedDimension.prototype.setJoinType = function(joinType)
{
	this.m_joinType = joinType;
	if (this.m_joinType.isTypeOf(oFF.JoinType._SPATIAL))
	{
		this.m_dimensionType = oFF.DimensionType.GIS_DIMENSION;
	}
	else if (oFF.isNull(this.m_dimensionType))
	{
		this.m_dimensionType = oFF.DimensionType.TIME;
	}
};
oFF.QExtendedDimension.prototype.setDimensionType = function(dimensionType)
{
	oFF.XObjectExt.assertNotNullExt(dimensionType, "The dimension type of an extended dimension must not be null!");
	if (dimensionType !== oFF.DimensionType.TIME && dimensionType !== oFF.DimensionType.DATE && dimensionType !== oFF.DimensionType.VERSION && dimensionType !== oFF.DimensionType.GIS_DIMENSION)
	{
		throw oFF.XException.createRuntimeException(oFF.XStringUtils.concatenate3("Dimension type '", dimensionType.getName(), "' is not supported for extended dimensions!"));
	}
	this.m_dimensionType = dimensionType;
};
oFF.QExtendedDimension.prototype.getJoinType = function()
{
	return this.m_joinType;
};
oFF.QExtendedDimension.prototype.setDataSource = function(datasource)
{
	this.m_dataSource = datasource;
};
oFF.QExtendedDimension.prototype.getDataSource = function()
{
	return this.m_dataSource;
};
oFF.QExtendedDimension.prototype.getJoinField = function()
{
	return this.m_joinFieldName;
};
oFF.QExtendedDimension.prototype.setJoinFieldNameExternal = function(fieldName)
{
	this.m_joinFieldNameExternal = fieldName;
};
oFF.QExtendedDimension.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherExtDim = other;
	if (!oFF.XString.isEqual(this.getName(), otherExtDim.getName()))
	{
		return false;
	}
	if (this.getJoinType() !== otherExtDim.getJoinType())
	{
		return false;
	}
	if (this.getDimensionType() !== otherExtDim.getDimensionType())
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getJoinFieldNameExternal(), otherExtDim.getJoinFieldNameExternal()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getJoinField(), otherExtDim.getJoinField()))
	{
		return false;
	}
	if (!this.getDataSource().isEqualTo(otherExtDim.getDataSource()))
	{
		return false;
	}
	if (!this.getJoinCardinality().isEqualTo(otherExtDim.getJoinCardinality()))
	{
		return false;
	}
	if (!this.getVisibility().isEqualTo(otherExtDim.getVisibility()))
	{
		return false;
	}
	return true;
};
oFF.QExtendedDimension.prototype.toString = function()
{
	var sb = oFF.XStringBuffer.create();
	sb.append(this.getName());
	sb.append(" (");
	if (this.getJoinField() !== null)
	{
		sb.append(this.m_joinFieldName);
	}
	sb.append(" ");
	if (oFF.notNull(this.m_joinType))
	{
		sb.append(this.m_joinType.getName());
	}
	if (this.getJoinFieldNameExternal() !== null)
	{
		sb.append(this.getJoinFieldNameExternal());
	}
	if (this.getVisibility() !== null)
	{
		sb.append(this.getVisibility().getName());
	}
	sb.append(")");
	return sb.toString();
};
oFF.QExtendedDimension.prototype.getJoinFieldNameExternal = function()
{
	return this.m_joinFieldNameExternal;
};
oFF.QExtendedDimension.prototype.getDimensionType = function()
{
	return this.m_dimensionType;
};
oFF.QExtendedDimension.prototype.getJoinParameters = function()
{
	return this.m_joinParameters;
};
oFF.QExtendedDimension.prototype.setJoinField = function(fieldName)
{
	this.m_joinFieldName = fieldName;
};
oFF.QExtendedDimension.prototype.releaseObject = function()
{
	this.m_dataSource = null;
	this.m_joinType = null;
	this.m_joinParameters = oFF.XObjectExt.release(this.m_joinParameters);
	this.m_dimensionType = null;
	this.m_renamingMode = null;
	this.m_joinCardinality = null;
	this.m_dimensionVisibility = null;
	this.m_locationType = null;
	oFF.DfNameTextObject.prototype.releaseObject.call( this );
};
oFF.QExtendedDimension.prototype.setRenamingMode = function(mode)
{
	this.m_renamingMode = mode;
};
oFF.QExtendedDimension.prototype.getRenamingMode = function()
{
	return this.m_renamingMode;
};
oFF.QExtendedDimension.prototype.setJoinCardinality = function(joinCardinality)
{
	this.m_joinCardinality = joinCardinality;
};
oFF.QExtendedDimension.prototype.getJoinCardinality = function()
{
	return this.m_joinCardinality;
};
oFF.QExtendedDimension.prototype.setVisibility = function(dimensionVisibility)
{
	this.m_dimensionVisibility = dimensionVisibility;
};
oFF.QExtendedDimension.prototype.getVisibility = function()
{
	return this.m_dimensionVisibility;
};
oFF.QExtendedDimension.prototype.getLocationType = function()
{
	return this.m_locationType;
};
oFF.QExtendedDimension.prototype.setLocationType = function(locationType)
{
	this.m_locationType = locationType;
};

oFF.QMetadataModel = function() {};
oFF.QMetadataModel.prototype = new oFF.DfApplicationContext();
oFF.QMetadataModel.prototype._ff_c = "QMetadataModel";

oFF.QMetadataModel.create = function(queryModel)
{
	var metaDataCache = new oFF.QMetadataModel();
	metaDataCache.setupExt(queryModel);
	return metaDataCache;
};
oFF.QMetadataModel.prototype.m_queryModel = null;
oFF.QMetadataModel.prototype.m_hierarchies = null;
oFF.QMetadataModel.prototype.setupExt = function(queryModel)
{
	if (oFF.notNull(queryModel))
	{
		this.setupApplicationContext(queryModel.getApplication());
	}
	else
	{
		this.setupApplicationContext(null);
	}
	this.m_hierarchies = oFF.XList.create();
	this.m_queryModel = oFF.XWeakReferenceUtil.getWeakRef(queryModel);
};
oFF.QMetadataModel.prototype.cloneExt = function(flags)
{
	return this.cloneOlapComponent(null, null);
};
oFF.QMetadataModel.prototype.cloneOlapComponent = function(context, parent)
{
	var metadataModelClone = oFF.QMetadataModel.create(context);
	var iterator = this.m_hierarchies.getIterator();
	while (iterator.hasNext())
	{
		var element = iterator.next();
		var cloneObj = element.cloneOlapComponent(context, null);
		metadataModelClone.getLeveledHierarchiesBase().add(cloneObj);
	}
	oFF.XObjectExt.release(iterator);
	return metadataModelClone;
};
oFF.QMetadataModel.prototype.releaseObject = function()
{
	this.m_hierarchies = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_hierarchies);
	this.m_queryModel = null;
	oFF.DfApplicationContext.prototype.releaseObject.call( this );
};
oFF.QMetadataModel.prototype.getComponentType = function()
{
	return this.getOlapComponentType();
};
oFF.QMetadataModel.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.OLAP_METADATA_MODEL;
};
oFF.QMetadataModel.prototype.getQueryModel = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_queryModel);
};
oFF.QMetadataModel.prototype.getLeveledHierarchiesBase = function()
{
	return this.m_hierarchies;
};
oFF.QMetadataModel.prototype.getLeveledHierarchies = function()
{
	if (oFF.isNull(this.m_hierarchies))
	{
		return null;
	}
	var hierarchies = oFF.XList.create();
	oFF.XCollectionUtils.addAll(hierarchies, this.m_hierarchies);
	return hierarchies;
};
oFF.QMetadataModel.prototype.getLeveledHierarchiesByDimension = function(dimension)
{
	var modelCapabilities = dimension.getModelCapabilities();
	var supportsHierarchyLevels = modelCapabilities.supportsHierarchyLevelMetadata() || modelCapabilities.supportsDimensionHierarchyLevels();
	if (oFF.isNull(this.m_hierarchies) || !supportsHierarchyLevels)
	{
		return null;
	}
	var dimensionHierarchies = oFF.XList.create();
	var hierIt = this.m_hierarchies.getIterator();
	while (hierIt.hasNext())
	{
		var next = hierIt.next();
		if (dimension.isEqualTo(next.getDimension()) || oFF.XString.isEqual(dimension.getName(), next.getDimensionName()))
		{
			dimensionHierarchies.add(next);
		}
	}
	oFF.XObjectExt.release(hierIt);
	return dimensionHierarchies;
};
oFF.QMetadataModel.prototype.getMetadataResponse = function()
{
	return this.getQueryModel().getServerBaseSerialization();
};
oFF.QMetadataModel.prototype.registerChangedListener = oFF.noSupport;
oFF.QMetadataModel.prototype.unregisterChangedListener = oFF.noSupport;
oFF.QMetadataModel.prototype.queueEventing = function() {};
oFF.QMetadataModel.prototype.stopEventing = function() {};
oFF.QMetadataModel.prototype.isEventingStopped = function()
{
	return false;
};
oFF.QMetadataModel.prototype.resumeEventing = function() {};
oFF.QMetadataModel.prototype.getStorageGroupName = function()
{
	return null;
};
oFF.QMetadataModel.prototype.getStorageName = function()
{
	return null;
};
oFF.QMetadataModel.prototype.getStorageObjectName = function()
{
	return null;
};
oFF.QMetadataModel.prototype.getName = function()
{
	return null;
};
oFF.QMetadataModel.prototype.getTagging = function()
{
	return null;
};
oFF.QMetadataModel.prototype.getChangedProperties = function()
{
	return null;
};
oFF.QMetadataModel.prototype.setChangedProperties = oFF.noSupport;

oFF.QPersistedPlaceholderTagFilter = function() {};
oFF.QPersistedPlaceholderTagFilter.prototype = new oFF.QPersistedPlaceholderTag();
oFF.QPersistedPlaceholderTagFilter.prototype._ff_c = "QPersistedPlaceholderTagFilter";

oFF.QPersistedPlaceholderTagFilter.QM_FILTER_MODEL = "qmFilterModel";
oFF.QPersistedPlaceholderTagFilter.CCD_ID = "ccdId";
oFF.QPersistedPlaceholderTagFilter.create = function(name, filterId, qmFilterModel, canonicalDateContext)
{
	var filterPersistedPlaceholderTag = new oFF.QPersistedPlaceholderTagFilter();
	filterPersistedPlaceholderTag.setupPersistedPlaceholderTagFilter(name, filterId, qmFilterModel, canonicalDateContext);
	return filterPersistedPlaceholderTag;
};
oFF.QPersistedPlaceholderTagFilter.createFromPlaceholderString = function(persistedPlaceholderFilterStringTag)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(persistedPlaceholderFilterStringTag))
	{
		var startDelimiter = 0;
		var endDelimiter = oFF.XString.indexOf(persistedPlaceholderFilterStringTag, "|");
		var content = oFF.XString.substring(persistedPlaceholderFilterStringTag, startDelimiter, endDelimiter);
		if (oFF.XString.isEqual(content, oFF.QPersistedPlaceholderTag.PERSISTED_QUERY_PLACEHOLDER))
		{
			startDelimiter = endDelimiter + 1;
			endDelimiter = oFF.XString.indexOfFrom(persistedPlaceholderFilterStringTag, "|", startDelimiter);
			var name = oFF.XString.substring(persistedPlaceholderFilterStringTag, startDelimiter, endDelimiter);
			var filterId = null;
			if (endDelimiter > -1)
			{
				startDelimiter = endDelimiter + 1;
				endDelimiter = oFF.XString.indexOfFrom(persistedPlaceholderFilterStringTag, "|", startDelimiter);
				filterId = oFF.XString.substring(persistedPlaceholderFilterStringTag, startDelimiter, endDelimiter);
			}
			var qmFilterModel = null;
			if (endDelimiter > -1)
			{
				startDelimiter = endDelimiter + 1;
				endDelimiter = oFF.XString.indexOfFrom(persistedPlaceholderFilterStringTag, "|", startDelimiter);
				qmFilterModel = oFF.XString.substring(persistedPlaceholderFilterStringTag, startDelimiter, endDelimiter);
			}
			var canonicalDateContext = null;
			if (endDelimiter > -1)
			{
				startDelimiter = endDelimiter + 1;
				endDelimiter = oFF.XString.indexOfFrom(persistedPlaceholderFilterStringTag, "|", startDelimiter);
				canonicalDateContext = oFF.XString.substring(persistedPlaceholderFilterStringTag, startDelimiter, endDelimiter);
			}
			return oFF.QFactory.createPersistedPlaceholderTagFilter(name, filterId, qmFilterModel, canonicalDateContext);
		}
	}
	return null;
};
oFF.QPersistedPlaceholderTagFilter.prototype.m_filterId = null;
oFF.QPersistedPlaceholderTagFilter.prototype.m_qmFilterModel = null;
oFF.QPersistedPlaceholderTagFilter.prototype.getPlaceholderString = function()
{
	var tag = oFF.QPersistedPlaceholderTag.PERSISTED_QUERY_PLACEHOLDER;
	tag = oFF.XStringUtils.concatenate3(tag, "|", this.getName());
	tag = oFF.XStringUtils.concatenate3(tag, "|", this.getFilterId());
	tag = oFF.XStringUtils.concatenate3(tag, "|", this.getQmFilterModel());
	tag = oFF.XStringUtils.concatenate3(tag, "|", this.getCanonicalDateContext());
	return tag;
};
oFF.QPersistedPlaceholderTagFilter.prototype.setupPersistedPlaceholderTagFilter = function(name, filterId, qmFilterModel, canonicalDateContext)
{
	oFF.QPersistedPlaceholderTag.prototype.setupPersistedPlaceholderTag.call( this , name, canonicalDateContext);
	this.m_filterId = filterId;
	this.m_qmFilterModel = qmFilterModel;
};
oFF.QPersistedPlaceholderTagFilter.prototype.getFilterId = function()
{
	return this.m_filterId;
};
oFF.QPersistedPlaceholderTagFilter.prototype.setFilterId = function(filterId)
{
	this.m_filterId = filterId;
};
oFF.QPersistedPlaceholderTagFilter.prototype.getQmFilterModel = function()
{
	return this.m_qmFilterModel;
};
oFF.QPersistedPlaceholderTagFilter.prototype.setQmFilterModel = function(qmFilterModel)
{
	this.m_qmFilterModel = qmFilterModel;
};
oFF.QPersistedPlaceholderTagFilter.prototype.getCustomCurrentDateId = function()
{
	try
	{
		var qmFilterModel = oFF.JsonParserFactory.createFromString(this.m_qmFilterModel);
		var qmFilterModelStructure = qmFilterModel.asStructure().getStructureByKey(oFF.QPersistedPlaceholderTagFilter.QM_FILTER_MODEL);
		return qmFilterModelStructure.getStringByKey(oFF.QPersistedPlaceholderTagFilter.CCD_ID);
	}
	catch (e)
	{
		return null;
	}
};

oFF.QFValueHelpParameter = function() {};
oFF.QFValueHelpParameter.prototype = new oFF.XNameValuePair();
oFF.QFValueHelpParameter.prototype._ff_c = "QFValueHelpParameter";

oFF.QFValueHelpParameter.createParameter = function(name, description, selectFunction)
{
	var parameter = new oFF.QFValueHelpParameter();
	parameter.setupWithNameValue(name, description);
	parameter.m_selectFunction = selectFunction;
	return parameter;
};
oFF.QFValueHelpParameter.prototype.m_selectFunction = null;
oFF.QFValueHelpParameter.prototype.releaseObject = function()
{
	oFF.XNameValuePair.prototype.releaseObject.call( this );
	this.m_selectFunction = null;
};
oFF.QFValueHelpParameter.prototype.getDescription = function()
{
	return this.getValue();
};
oFF.QFValueHelpParameter.prototype.getFunction = function()
{
	return this.m_selectFunction;
};
oFF.QFValueHelpParameter.prototype.getValues = function(syncType, listener, customIdentifier)
{
	return this.m_selectFunction.getDimension().getFunctionalValueHelpParameterValues(this, syncType, listener, customIdentifier);
};

oFF.QFValueHelpParameterValue = function() {};
oFF.QFValueHelpParameterValue.prototype = new oFF.XNameValuePair();
oFF.QFValueHelpParameterValue.prototype._ff_c = "QFValueHelpParameterValue";

oFF.QFValueHelpParameterValue.createParameterValue = function(name, description, parameter)
{
	var parameterValue = new oFF.QFValueHelpParameterValue();
	parameterValue.setupWithNameValue(name, description);
	parameterValue.m_parameter = parameter;
	return parameterValue;
};
oFF.QFValueHelpParameterValue.prototype.m_parameter = null;
oFF.QFValueHelpParameterValue.prototype.releaseObject = function()
{
	oFF.XNameValuePair.prototype.releaseObject.call( this );
	this.m_parameter = null;
};
oFF.QFValueHelpParameterValue.prototype.getDescription = function()
{
	return this.getValue();
};
oFF.QFValueHelpParameterValue.prototype.getParameter = function()
{
	return this.m_parameter;
};

oFF.QFValueHelpSelectFunction = function() {};
oFF.QFValueHelpSelectFunction.prototype = new oFF.XNameValuePair();
oFF.QFValueHelpSelectFunction.prototype._ff_c = "QFValueHelpSelectFunction";

oFF.QFValueHelpSelectFunction.createSelect = function(name, description, dimension)
{
	var selectFunction = new oFF.QFValueHelpSelectFunction();
	selectFunction.setupWithNameValue(name, description);
	selectFunction.m_dimension = dimension;
	return selectFunction;
};
oFF.QFValueHelpSelectFunction.prototype.m_dimension = null;
oFF.QFValueHelpSelectFunction.prototype.releaseObject = function()
{
	oFF.XNameValuePair.prototype.releaseObject.call( this );
	this.m_dimension = null;
};
oFF.QFValueHelpSelectFunction.prototype.getDescription = function()
{
	return this.getValue();
};
oFF.QFValueHelpSelectFunction.prototype.getDimension = function()
{
	return this.m_dimension;
};
oFF.QFValueHelpSelectFunction.prototype.getParameters = function(syncType, listener, customIdentifier)
{
	return this.m_dimension.getFunctionalValueHelpParameters(this, syncType, listener, customIdentifier);
};
oFF.QFValueHelpSelectFunction.prototype.processFunctionalValueHelp = function(parameterValues, syncType, listener, customIdentifier)
{
	return this.m_dimension.processFunctionalValueHelp(this, parameterValues, syncType, listener, customIdentifier);
};

oFF.QVariableVariant = function() {};
oFF.QVariableVariant.prototype = new oFF.DfNameTextObject();
oFF.QVariableVariant.prototype._ff_c = "QVariableVariant";

oFF.QVariableVariant.createVariantWithScope = function(dataSource, name, text, scope)
{
	var obj = new oFF.QVariableVariant();
	obj.setupDirty(dataSource, name, text, scope);
	return obj;
};
oFF.QVariableVariant.createVariantWithScopeInternal = function(dataSource, name, text, scope)
{
	var obj = new oFF.QVariableVariant();
	obj.setupInternal(dataSource, name, text, scope);
	return obj;
};
oFF.QVariableVariant.prototype.m_dataSource = null;
oFF.QVariableVariant.prototype.m_scope = null;
oFF.QVariableVariant.prototype.m_dirtyName = null;
oFF.QVariableVariant.prototype.m_dirtyText = null;
oFF.QVariableVariant.prototype.m_dirtyScope = null;
oFF.QVariableVariant.prototype.setupDirty = function(dataSource, name, text, scope)
{
	this.m_dataSource = dataSource;
	this.m_dirtyName = name;
	this.m_dirtyText = text;
	this.m_dirtyScope = scope;
};
oFF.QVariableVariant.prototype.setupInternal = function(dataSource, name, text, scope)
{
	this.setupWithNameText(name, text);
	this.m_dataSource = dataSource;
	this.m_scope = scope;
	this.m_dirtyName = name;
	this.m_dirtyText = text;
	this.m_dirtyScope = scope;
};
oFF.QVariableVariant.prototype.cloneExt = function(flags)
{
	return oFF.QVariableVariant.createVariantWithScopeInternal(this.getDataSource(), this.getName(), this.getText(), this.m_scope);
};
oFF.QVariableVariant.prototype.releaseObject = function()
{
	this.m_name = null;
	this.m_text = null;
	this.m_scope = null;
	this.m_dataSource = null;
	this.m_dirtyName = null;
	this.m_dirtyText = null;
	this.m_dirtyScope = null;
	oFF.DfNameTextObject.prototype.releaseObject.call( this );
};
oFF.QVariableVariant.prototype.getDataSource = function()
{
	return this.m_dataSource;
};
oFF.QVariableVariant.prototype.setDataSource = function(dataSource)
{
	this.m_dataSource = dataSource;
};
oFF.QVariableVariant.prototype.setName = function(name)
{
	this.m_dirtyName = name;
};
oFF.QVariableVariant.prototype.setText = function(text)
{
	this.m_dirtyText = text;
};
oFF.QVariableVariant.prototype.isDirty = function()
{
	return this.isNameOrScopeDirty() || !oFF.XString.isEqual(this.m_text, this.m_dirtyText);
};
oFF.QVariableVariant.prototype.isNameOrScopeDirty = function()
{
	if (this.m_scope !== this.m_dirtyScope)
	{
		return true;
	}
	return !oFF.XString.isEqual(this.m_name, this.m_dirtyName) && this.m_scope !== oFF.Scope.USER;
};
oFF.QVariableVariant.prototype.getScope = function()
{
	return this.m_scope;
};
oFF.QVariableVariant.prototype.setScope = function(scope)
{
	this.m_dirtyScope = scope;
};
oFF.QVariableVariant.prototype.getDirtyName = function()
{
	return this.m_dirtyName;
};
oFF.QVariableVariant.prototype.getDirtyText = function()
{
	return this.m_dirtyText;
};
oFF.QVariableVariant.prototype.getDirtyScope = function()
{
	return this.m_dirtyScope;
};
oFF.QVariableVariant.prototype.applyState = function()
{
	this.m_name = this.m_dirtyName;
	this.m_text = this.m_dirtyText;
	this.m_scope = this.m_dirtyScope;
};

oFF.QVariableValue = function() {};
oFF.QVariableValue.prototype = new oFF.XAbstractValue();
oFF.QVariableValue.prototype._ff_c = "QVariableValue";

oFF.QVariableValue.create = function(variable)
{
	var object = new oFF.QVariableValue();
	object.setVariable(variable);
	return object;
};
oFF.QVariableValue.prototype.m_variable = null;
oFF.QVariableValue.prototype.releaseObject = function()
{
	this.m_variable = oFF.XObjectExt.release(this.m_variable);
	oFF.XAbstractValue.prototype.releaseObject.call( this );
};
oFF.QVariableValue.prototype.getValueType = function()
{
	return oFF.XValueType.VARIABLE;
};
oFF.QVariableValue.prototype.getVariable = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_variable);
};
oFF.QVariableValue.prototype.setVariable = function(variable)
{
	this.m_variable = oFF.XWeakReferenceUtil.getWeakRef(variable);
};
oFF.QVariableValue.prototype.resetValue = function(value)
{
	oFF.XAbstractValue.prototype.resetValue.call( this , value);
	var variableValue = value;
	this.setVariable(variableValue.getVariable());
};
oFF.QVariableValue.prototype.cloneExt = function(flags)
{
	return oFF.QVariableValue.create(this.getVariable());
};
oFF.QVariableValue.prototype.isEqualTo = function(other)
{
	if (!oFF.XAbstractValue.prototype.isEqualTo.call( this , other))
	{
		return false;
	}
	var xOther = other;
	return this.getVariable() === xOther.getVariable();
};
oFF.QVariableValue.prototype.toString = function()
{
	return this.m_variable.toString();
};

oFF.QCache = function() {};
oFF.QCache.prototype = new oFF.DfAbstractMapByString();
oFF.QCache.prototype._ff_c = "QCache";

oFF.QCache.create = function(session)
{
	var cache = new oFF.QCache();
	cache.m_cache = oFF.XHashMapByString.create();
	cache.m_counter = oFF.XHashMapByString.create();
	cache.m_actions = oFF.XHashMapByString.create();
	cache.m_session = session;
	return cache;
};
oFF.QCache.prototype.m_session = null;
oFF.QCache.prototype.m_cache = null;
oFF.QCache.prototype.m_counter = null;
oFF.QCache.prototype.m_actions = null;
oFF.QCache.prototype.releaseObject = function()
{
	this.m_cache = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_cache);
	this.m_counter = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_counter);
	this.m_actions = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_actions);
	this.m_session = null;
	oFF.DfAbstractMapByString.prototype.releaseObject.call( this );
};
oFF.QCache.prototype.put = function(key, element)
{
	this.m_counter.put(key, oFF.XIntegerValue.create(1));
	this.m_cache.put(key, element);
};
oFF.QCache.prototype.updateEntry = function(key, entry)
{
	var keyCounter = this.m_counter.getByKey(key);
	if (oFF.isNull(keyCounter))
	{
		this.put(key, entry);
	}
	else
	{
		this.m_cache.put(key, entry);
		keyCounter.setInteger(keyCounter.getInteger() + 1);
	}
};
oFF.QCache.prototype.clear = function()
{
	this.m_cache.clear();
	this.m_counter.clear();
	this.m_actions.clear();
};
oFF.QCache.prototype.remove = function(key)
{
	this.m_actions.remove(key);
	this.m_counter.remove(key);
	return this.m_cache.remove(key);
};
oFF.QCache.prototype.freeEntry = function(key)
{
	var keyCounter = this.m_counter.getByKey(key);
	if (oFF.notNull(keyCounter))
	{
		if (keyCounter.getInteger() === 1)
		{
			oFF.XObjectExt.release(this.m_cache.getByKey(key));
			oFF.XObjectExt.release(keyCounter);
			this.remove(key);
		}
		else
		{
			keyCounter.setInteger(keyCounter.getInteger() - 1);
		}
	}
};
oFF.QCache.prototype.getByKey = function(key)
{
	return this.m_cache.getByKey(key);
};
oFF.QCache.prototype.useEntry = function(key)
{
	var result = null;
	var keyCounter = this.m_counter.getByKey(key);
	if (oFF.notNull(keyCounter))
	{
		keyCounter.setInteger(keyCounter.getInteger() + 1);
		result = this.m_cache.getByKey(key);
	}
	return result;
};
oFF.QCache.prototype.containsKey = function(key)
{
	return this.m_cache.containsKey(key);
};
oFF.QCache.prototype.hasElements = function()
{
	return this.m_cache.hasElements();
};
oFF.QCache.prototype.getKeysAsReadOnlyListOfString = function()
{
	return this.m_cache.getKeysAsReadOnlyListOfString();
};
oFF.QCache.prototype.getValuesAsReadOnlyList = function()
{
	return this.m_cache.getValuesAsReadOnlyList();
};
oFF.QCache.prototype.size = function()
{
	return this.m_cache.size();
};
oFF.QCache.prototype.contains = function(element)
{
	return this.m_cache.contains(element);
};
oFF.QCache.prototype.createMapByStringCopy = function()
{
	return this.m_cache.createMapByStringCopy();
};
oFF.QCache.prototype.getAction = function(key)
{
	var action = this.m_actions.getByKey(key);
	action = this.m_actions.getByKey(key);
	if (oFF.isNull(action))
	{
		action = oFF.QCacheAction.create(this);
		this.m_actions.put(key, action);
	}
	return action;
};
oFF.QCache.prototype.getSession = function()
{
	return this.m_session;
};
oFF.QCache.prototype.toString = function()
{
	return this.m_cache.toString();
};

oFF.QCacheAction = function() {};
oFF.QCacheAction.prototype = new oFF.SyncAction();
oFF.QCacheAction.prototype._ff_c = "QCacheAction";

oFF.QCacheAction.create = function(context)
{
	var newObj = new oFF.QCacheAction();
	newObj.setupAction(null, null, null, context);
	return newObj;
};
oFF.QCacheAction.prototype.m_primarySequenceHandle = null;
oFF.QCacheAction.prototype.startProcessing = function(primarySequenceHandle)
{
	this.m_primarySequenceHandle = primarySequenceHandle;
	this.processSyncAction(oFF.SyncType.NON_BLOCKING, null, null);
};
oFF.QCacheAction.prototype.processSynchronization = function(syncType)
{
	return true;
};
oFF.QCacheAction.prototype.attachCubeMetadataListener = function(listener, customIdentifier)
{
	this.attachListener(listener, oFF.ListenerType.SPECIFIC, customIdentifier);
};
oFF.QCacheAction.prototype.getPrimarySequenceHandle = function()
{
	return this.m_primarySequenceHandle;
};
oFF.QCacheAction.prototype.callListener = function(extResult, listener, data, customIdentifier)
{
	listener.onCacheFilled(extResult, data, customIdentifier);
};
oFF.QCacheAction.prototype.endProcessing = function(messages, data)
{
	this.addAllMessages(messages);
	this.setData(data);
	this.m_primarySequenceHandle = null;
	this.endSync();
};

oFF.QFilterAcrossModelsLov = function() {};
oFF.QFilterAcrossModelsLov.prototype = new oFF.SyncAction();
oFF.QFilterAcrossModelsLov.prototype._ff_c = "QFilterAcrossModelsLov";

oFF.QFilterAcrossModelsLov.MAX_LOV_ROWS = 10000;
oFF.QFilterAcrossModelsLov.STANDARD_LOV_IDENTIFIER = "standardLov";
oFF.QFilterAcrossModelsLov.EXCLUDE_SCENARIO_LOV_IDENTIFIER = "excludeScenarioLov";
oFF.QFilterAcrossModelsLov.TARGET_HIERARCHY_VALUE_HELP_IDENTIFIER = "hierarchyValueHelp";
oFF.QFilterAcrossModelsLov.TARGET_NON_KEY_FLAT_VALUE_HELP_IDENTIFIER = "flatValueHelp";
oFF.QFilterAcrossModelsLov.SOURCE_INTERVAL_VALUE_HELP_IDENTIFIER = "intervalValueHelp";
oFF.QFilterAcrossModelsLov.EXTRACT_KEY = "extractKey";
oFF.QFilterAcrossModelsLov.EXTRACT_TEXT = "extractText";
oFF.QFilterAcrossModelsLov.EXTRACT_KEY_TEXT = "extractKeyAndText";
oFF.QFilterAcrossModelsLov.MDS_FULL_EXPANSION = -1;
oFF.QFilterAcrossModelsLov.BW_FULL_EXPANSION = -2;
oFF.QFilterAcrossModelsLov.BW_INVALID_DRILL_LEVEL_REST_NODE_DOES_NOT_EXIST_ERROR_CODE = 626;
oFF.QFilterAcrossModelsLov.create = function(dimensionLinks, sourceQueryManager, sourceFilters, targetQueryManager, sourceMeasureNames, sourceSecondaryMeasureNames, maxLovRows)
{
	var lov = new oFF.QFilterAcrossModelsLov();
	lov.setupFilterAcrossModelsLov(dimensionLinks, sourceQueryManager, sourceFilters, targetQueryManager, sourceMeasureNames, sourceSecondaryMeasureNames, maxLovRows);
	return lov;
};
oFF.QFilterAcrossModelsLov.removeEmptyFilters = function(filters)
{
	var nonEmptyFilters = oFF.XLinkedHashMapByString.create();
	var iterator = filters.getKeysAsIteratorOfString();
	while (iterator.hasNext())
	{
		var key = iterator.next();
		var filter = filters.getByKey(key);
		if (!oFF.QFilterUtil.isFilterNullOrEmpty(filter))
		{
			nonEmptyFilters.put(key, filter);
		}
	}
	return nonEmptyFilters;
};
oFF.QFilterAcrossModelsLov.augmentAndMapToFilterElements = function(filters)
{
	var result = oFF.XList.create();
	var filtersList = filters.getValuesAsReadOnlyList();
	for (var i = 0; i < filtersList.size(); i++)
	{
		var originalLovFilter = filtersList.get(i);
		var modifiedLovFilter = oFF.QFactory.createFilterExpression(originalLovFilter.getContext(), null);
		modifiedLovFilter.copyFrom(originalLovFilter, null);
		if (!modifiedLovFilter.isComplexFilter())
		{
			oFF.QFilterUtil.deepApplyConvertToFlatFilterToHierarchicalFilters(modifiedLovFilter.getFilterRootElement(), false);
		}
		result.add(modifiedLovFilter.getFilterRootElement());
	}
	return result;
};
oFF.QFilterAcrossModelsLov.prototype.m_sourceQueryManager = null;
oFF.QFilterAcrossModelsLov.prototype.m_targetQueryManager = null;
oFF.QFilterAcrossModelsLov.prototype.m_excludeScenarioQueryManager = null;
oFF.QFilterAcrossModelsLov.prototype.m_sourceFilters = null;
oFF.QFilterAcrossModelsLov.prototype.m_lovFilters = null;
oFF.QFilterAcrossModelsLov.prototype.m_dimensionLinks = null;
oFF.QFilterAcrossModelsLov.prototype.m_measureNames = null;
oFF.QFilterAcrossModelsLov.prototype.m_secondaryMeasureNames = null;
oFF.QFilterAcrossModelsLov.prototype.m_indirectFilterStandardLovResult = null;
oFF.QFilterAcrossModelsLov.prototype.m_indirectFilterExcludeScenarioLovResult = null;
oFF.QFilterAcrossModelsLov.prototype.m_pendingValueHelpQueries = 0;
oFF.QFilterAcrossModelsLov.prototype.m_maxLovRows = 0;
oFF.QFilterAcrossModelsLov.prototype.m_sourceFiltersUpdatedMembers = null;
oFF.QFilterAcrossModelsLov.prototype.m_targetDimensionHierarchyMembers = null;
oFF.QFilterAcrossModelsLov.prototype.m_targetDimensionTextToKeyMapOfMembers = null;
oFF.QFilterAcrossModelsLov.prototype.m_sourceIntervalDimensionMembers = null;
oFF.QFilterAcrossModelsLov.prototype.setupFilterAcrossModelsLov = function(dimensionLinks, sourceQueryManager, sourceFilters, targetQueryManager, sourceMeasureNames, sourceSecondaryMeasureNames, maxLovRows)
{
	this.setupAction(null, null, null, null);
	this.m_dimensionLinks = dimensionLinks;
	this.m_sourceQueryManager = sourceQueryManager;
	this.m_maxLovRows = oFF.QFilterAcrossModelsLov.MAX_LOV_ROWS;
	if (oFF.notNull(maxLovRows))
	{
		this.m_maxLovRows = maxLovRows.getInteger();
	}
	this.m_sourceQueryManager.setMaxRows(this.m_maxLovRows);
	this.m_targetQueryManager = targetQueryManager;
	var nonEmptySourceFilters = oFF.QFilterAcrossModelsLov.removeEmptyFilters(sourceFilters);
	this.m_sourceFilters = nonEmptySourceFilters;
	this.m_lovFilters = oFF.QFilterAcrossModelsLov.augmentAndMapToFilterElements(nonEmptySourceFilters);
	this.m_measureNames = sourceMeasureNames;
	this.m_secondaryMeasureNames = sourceSecondaryMeasureNames;
	this.m_sourceFiltersUpdatedMembers = oFF.XLinkedHashMapByString.create();
	this.m_targetDimensionHierarchyMembers = oFF.XHashMapByString.create();
	this.m_targetDimensionTextToKeyMapOfMembers = oFF.XHashMapByString.create();
	this.m_sourceIntervalDimensionMembers = oFF.XHashMapByString.create();
	this.disableUniversalDisplayHierarchies();
};
oFF.QFilterAcrossModelsLov.prototype.copyFromInternal = function(other, flags)
{
	oFF.SyncAction.prototype.copyFrom.call( this , other, flags);
	var originFilterAcrossModelsLov = other;
	this.m_sourceQueryManager = originFilterAcrossModelsLov.m_sourceQueryManager;
	this.m_targetQueryManager = originFilterAcrossModelsLov.m_targetQueryManager;
	this.m_sourceFilters = originFilterAcrossModelsLov.m_sourceFilters;
	this.m_lovFilters = originFilterAcrossModelsLov.m_lovFilters;
	this.m_dimensionLinks = originFilterAcrossModelsLov.m_dimensionLinks;
	this.m_measureNames = originFilterAcrossModelsLov.m_measureNames;
	this.m_secondaryMeasureNames = originFilterAcrossModelsLov.m_secondaryMeasureNames;
};
oFF.QFilterAcrossModelsLov.prototype.releaseObject = function()
{
	oFF.SyncAction.prototype.releaseObject.call( this );
	this.m_sourceQueryManager = null;
	this.m_targetQueryManager = null;
	this.m_sourceFilters = null;
	this.m_lovFilters = null;
	this.m_dimensionLinks = null;
	this.m_measureNames = null;
	this.m_secondaryMeasureNames = null;
	this.m_excludeScenarioQueryManager = oFF.XObjectExt.release(this.m_excludeScenarioQueryManager);
	this.m_indirectFilterStandardLovResult = oFF.XObjectExt.release(this.m_indirectFilterStandardLovResult);
	this.m_indirectFilterExcludeScenarioLovResult = oFF.XObjectExt.release(this.m_indirectFilterExcludeScenarioLovResult);
	this.m_sourceFiltersUpdatedMembers = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_sourceFiltersUpdatedMembers);
	this.m_targetDimensionHierarchyMembers = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_targetDimensionHierarchyMembers);
	this.m_targetDimensionTextToKeyMapOfMembers = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_targetDimensionTextToKeyMapOfMembers);
	this.m_sourceIntervalDimensionMembers = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_sourceIntervalDimensionMembers);
};
oFF.QFilterAcrossModelsLov.prototype.callListener = function(extResult, listener, data, customIdentifier)
{
	listener.onQueryExecuted(extResult, data, customIdentifier);
};
oFF.QFilterAcrossModelsLov.prototype.getIndirectFilterStandardLovQueryResult = function()
{
	return this.m_indirectFilterStandardLovResult;
};
oFF.QFilterAcrossModelsLov.prototype.getIndirectFilterExcludeScenarioLovQueryResult = function()
{
	return this.m_indirectFilterExcludeScenarioLovResult;
};
oFF.QFilterAcrossModelsLov.prototype.getFilterUpdatedMembersList = function(filterKey)
{
	return this.m_sourceFiltersUpdatedMembers.getByKey(filterKey);
};
oFF.QFilterAcrossModelsLov.prototype.getHierarchicalTargetDimensionMembersList = function(dimensionName)
{
	var result = this.m_targetDimensionHierarchyMembers.getByKey(dimensionName);
	if (oFF.isNull(result))
	{
		return null;
	}
	return result.getValuesAsReadOnlyListOfString();
};
oFF.QFilterAcrossModelsLov.prototype.isDimensionMemberListNotAvailableOrHierarchicalMemberExists = function(targetLinkedDimensionName, hierarchicalMemberKey)
{
	var members = this.m_targetDimensionHierarchyMembers.getByKey(targetLinkedDimensionName);
	return oFF.isNull(members) || members.contains(hierarchicalMemberKey);
};
oFF.QFilterAcrossModelsLov.prototype.getFlatTargetDimensionMatchingMemberKeysFromText = function(targetLinkedDimensionName, memberText)
{
	var textToKeys = this.m_targetDimensionTextToKeyMapOfMembers.getByKey(targetLinkedDimensionName);
	if (oFF.notNull(textToKeys) && textToKeys.containsKey(memberText))
	{
		return textToKeys.getByKey(memberText).getValuesAsReadOnlyListOfString();
	}
	return null;
};
oFF.QFilterAcrossModelsLov.prototype.getIntervalTargetDimensionMembersList = function(dimensionName)
{
	var result = this.m_sourceIntervalDimensionMembers.getByKey(dimensionName);
	if (oFF.isNull(result))
	{
		return null;
	}
	return result.getValuesAsReadOnlyListOfString();
};
oFF.QFilterAcrossModelsLov.prototype.processExecution = function(syncType, listener, customIdentifier)
{
	this.processSyncAction(syncType, listener, customIdentifier);
	return this;
};
oFF.QFilterAcrossModelsLov.prototype.processSynchronization = function(syncType)
{
	var requiresIndirectFilterStandardLovQuery = this.requiresIndirectFilterStandardLovQuery();
	if (requiresIndirectFilterStandardLovQuery && this.m_sourceQueryManager.variablesRequireImplicitSubmit())
	{
		this.m_sourceQueryManager.submitVariables(syncType, this, null);
		return true;
	}
	this.m_sourceQueryManager.getOlapEnv().getFilterManager().pruneExternalizedDynamicFilter(this.m_sourceQueryManager);
	this.addSharedCalcDimsInLinksToSourceQueryModel();
	this.processApplicableValueHelpQueries(syncType);
	if (requiresIndirectFilterStandardLovQuery)
	{
		this.processIndirectFilterStandardLovQuery(syncType, this, oFF.XStringValue.create(oFF.QFilterAcrossModelsLov.STANDARD_LOV_IDENTIFIER));
	}
	if (this.requiresIndirectExcludeScenarioLovQuery())
	{
		this.processIndirectFilterExcludeScenarioLovQuery(syncType, this, oFF.XStringValue.create(oFF.QFilterAcrossModelsLov.EXCLUDE_SCENARIO_LOV_IDENTIFIER));
	}
	return !this.areAllQueriesComplete();
};
oFF.QFilterAcrossModelsLov.prototype.addSharedCalcDimsInLinksToSourceQueryModel = function()
{
	var sourceQueryModel = this.m_sourceQueryManager.getQueryModel();
	var linkParts = oFF.QFilterAcrossModelsLinkUtil.getAllLinkPartsForContext(this.m_dimensionLinks, sourceQueryModel);
	for (var i = 0; i < linkParts.size(); i++)
	{
		var linkPart = linkParts.get(i);
		var linkedDimension = sourceQueryModel.getDimensionByName(linkPart.getDimensionName());
		if (oFF.isNull(linkedDimension))
		{
			linkedDimension = this.createCalcDimFromSharedContext(sourceQueryModel, linkPart);
			sourceQueryModel.addDimension(linkedDimension);
		}
	}
};
oFF.QFilterAcrossModelsLov.prototype.processApplicableValueHelpQueries = function(syncType)
{
	this.m_pendingValueHelpQueries = 0;
	this.processApplicableSourceValueHelpQueries(syncType);
	this.processApplicableTargetValueHelpQueries(syncType);
};
oFF.QFilterAcrossModelsLov.prototype.processApplicableSourceValueHelpQueries = function(syncType)
{
	var iterator = this.m_sourceFilters.getKeysAsIteratorOfString();
	while (iterator.hasNext())
	{
		var sourceFilterKey = iterator.next();
		var sourceFilter = this.m_sourceFilters.getByKey(sourceFilterKey);
		if (!oFF.QFilterAcrossModelsFilterUtil.isDirectFilterElement(this.m_sourceQueryManager, this.m_dimensionLinks, sourceFilter.getFilterRootElement()))
		{
			continue;
		}
		var cartesianLists = oFF.QFilterUtil.collectAllCartesianLists(sourceFilter.getFilterRootElement());
		for (var i = 0; i < cartesianLists.size(); i++)
		{
			var cartesianList = cartesianLists.get(i);
			if (oFF.XStringUtils.isNullOrEmpty(cartesianList.getDimensionName()))
			{
				continue;
			}
			var isOpenEndedTimeCartesianList = oFF.QFilterAcrossModelsFilterUtil.isOpenEndedTimeCartesianList(this.m_sourceQueryManager, this.m_dimensionLinks, cartesianList);
			var filterDimension = this.m_sourceQueryManager.getDimensionAccessor().getDimensionByName(cartesianList.getDimensionName());
			if (oFF.isNull(filterDimension))
			{
				continue;
			}
			if (isOpenEndedTimeCartesianList)
			{
				var level = oFF.QTimeDimensionUtil.findAnyHierarchyLevelMatchingField(filterDimension, filterDimension.getFlatKeyField().getMetadata());
				var levelDimension = this.m_sourceQueryManager.getDimensionAccessor().getDimensionByName(level.getLevelDimensionName());
				if (oFF.notNull(levelDimension))
				{
					filterDimension = levelDimension;
				}
			}
			var isIncludeHierarchyNodeChildrenSettingOn = oFF.QFilterAcrossModelsFilterUtil.isFilterDimensionLinkedWithIncludeHierarchyNodeChildrenSettingOn(this.m_sourceQueryManager, this.m_dimensionLinks, cartesianList);
			var isFilterOnKeyButLinkedOnFlatDescription = oFF.QFilterAcrossModelsFilterUtil.isFilterDimensionLinkedOnFlatDescription(this.m_sourceQueryManager, this.m_dimensionLinks, cartesianList);
			if (isIncludeHierarchyNodeChildrenSettingOn && cartesianLists.size() === 1 || isFilterOnKeyButLinkedOnFlatDescription || isOpenEndedTimeCartesianList)
			{
				var customIdentifier = null;
				var extractField = oFF.QFilterAcrossModelsLov.EXTRACT_KEY;
				this.resetDimensionSelector(filterDimension);
				if (isOpenEndedTimeCartesianList)
				{
					filterDimension.getSelectorFields().add(filterDimension.getFlatKeyField());
					filterDimension.setSelectorHierarchyActive(false);
					filterDimension.setSelectorGettingInterval(true);
					filterDimension.addSelectorFilterForKey("0001-01-01", oFF.ComparisonOperator.GREATER_THAN);
					customIdentifier = oFF.XPairOfString.create(oFF.QFilterAcrossModelsLov.SOURCE_INTERVAL_VALUE_HELP_IDENTIFIER, oFF.QFilterAcrossModelsLov.EXTRACT_KEY);
				}
				else
				{
					if (isIncludeHierarchyNodeChildrenSettingOn)
					{
						if (this.m_sourceQueryManager.getConvenienceCommands().isTypeOfBw())
						{
							oFF.noSupport();
						}
						if (oFF.XStringUtils.isNullOrEmpty(cartesianList.getHierarchyName()) || oFF.QFilterAcrossModelsDimensionUtil.getHierarchyLevelCount(filterDimension, cartesianList.getHierarchyName()) <= 1)
						{
							continue;
						}
						filterDimension.getSelectorFields().add(filterDimension.getHierarchyKeyField());
						filterDimension.setHierarchyName(cartesianList.getHierarchyName());
						filterDimension.setSelectorHierarchyActive(true);
						filterDimension.setSelectorInitialDrillLevel(oFF.QFilterAcrossModelsLov.MDS_FULL_EXPANSION);
					}
					else if (isFilterOnKeyButLinkedOnFlatDescription)
					{
						filterDimension.getSelectorFields().add(filterDimension.getFlatTextField());
						filterDimension.setSelectorHierarchyActive(false);
						extractField = oFF.QFilterAcrossModelsLov.EXTRACT_TEXT;
					}
					for (var j = 0; j < cartesianList.size(); j++)
					{
						var cartesianElement = cartesianList.getCartesianElement(j);
						filterDimension.addSelectorFilterForKey(oFF.XValueUtil.getString(cartesianElement.getLow().getValue()), oFF.ComparisonOperator.EQUAL);
					}
					customIdentifier = oFF.XPairOfString.create(cartesianList.getUniqueId(), extractField);
				}
				this.m_pendingValueHelpQueries++;
				if (filterDimension.getAxis() === null)
				{
					this.m_sourceQueryManager.getConvenienceCommands().moveDimensionToAxis(filterDimension.getName(), oFF.AxisType.ROWS);
				}
				filterDimension.processValueHelp(syncType, this, customIdentifier);
			}
		}
	}
};
oFF.QFilterAcrossModelsLov.prototype.resetDimensionSelector = function(dimension)
{
	dimension.clearSelectorFilter();
	dimension.getSelectorFields().clear();
	dimension.setSelectorPaging(0, this.m_maxLovRows);
};
oFF.QFilterAcrossModelsLov.prototype.processApplicableTargetValueHelpQueries = function(syncType)
{
	if (!this.m_targetQueryManager.getConvenienceCommands().isTypeOfBw())
	{
		return;
	}
	var clonedTargetQm = this.m_targetQueryManager.cloneQueryManagerExt(oFF.QueryCloneMode.CURRENT_STATE).getQueryModel();
	clonedTargetQm.getConvenienceCommands().resetPreserveCustomMembers();
	var targetLinkParts = oFF.QFilterAcrossModelsLinkUtil.getAllLinkPartsForContext(this.m_dimensionLinks, clonedTargetQm);
	for (var i = 0; i < targetLinkParts.size(); i++)
	{
		var linkPart = targetLinkParts.get(i);
		var link = linkPart.getParent();
		var linkedDimension = clonedTargetQm.getDimensionByName(linkPart.getDimensionName());
		if (oFF.isNull(linkedDimension))
		{
			continue;
		}
		var linkedField = clonedTargetQm.getFieldByNameOrAlias(linkPart.getFieldName());
		if (oFF.isNull(linkedField))
		{
			continue;
		}
		var isHierarchyValueHelpRequired = linkPart.isHierarchical() && !link.arePartsLinkedOnSameHierarchy();
		var isFlatValueHelpRequired = !linkedField.isKeyField();
		if (!isHierarchyValueHelpRequired && !isFlatValueHelpRequired)
		{
			continue;
		}
		var customIdentifier = null;
		this.resetDimensionSelector(linkedDimension);
		linkedDimension.setSelectorHierarchyActive(linkPart.isHierarchical());
		linkedDimension.getSelectorFields().add(linkedField);
		if (linkPart.isHierarchical())
		{
			linkedDimension.setHierarchyName(linkPart.getHierarchyName());
			linkedDimension.setSelectorInitialDrillLevel(oFF.QFilterAcrossModelsLov.BW_FULL_EXPANSION);
			customIdentifier = oFF.XPairOfString.create(oFF.QFilterAcrossModelsLov.TARGET_HIERARCHY_VALUE_HELP_IDENTIFIER, oFF.QFilterAcrossModelsLov.EXTRACT_KEY);
		}
		else
		{
			customIdentifier = oFF.XPairOfString.create(oFF.QFilterAcrossModelsLov.TARGET_NON_KEY_FLAT_VALUE_HELP_IDENTIFIER, oFF.QFilterAcrossModelsLov.EXTRACT_KEY_TEXT);
		}
		this.m_pendingValueHelpQueries++;
		linkedDimension.processValueHelp(syncType, this, customIdentifier);
	}
};
oFF.QFilterAcrossModelsLov.prototype.requiresIndirectFilterStandardLovQuery = function()
{
	return !oFF.QFilterAcrossModelsFilterUtil.areAllFiltersDirect(this.m_sourceQueryManager, this.m_dimensionLinks, this.m_sourceFilters.getValuesAsReadOnlyList());
};
oFF.QFilterAcrossModelsLov.prototype.processIndirectFilterStandardLovQuery = function(syncType, listener, customIdentifier)
{
	var queryModel = this.m_sourceQueryManager.getQueryModel();
	var linkParts = oFF.QFilterAcrossModelsLinkUtil.getAllLinkPartsForContext(this.m_dimensionLinks, queryModel);
	for (var i = 0; i < linkParts.size(); i++)
	{
		this.configureSourceLinkedDimension(linkParts.get(i));
	}
	if (queryModel.getConvenienceCommands().isTypeOfBw() && queryModel.getStructureCount() > 1)
	{
		queryModel.getConvenienceCommands().moveDimensionByTypeToAxis(oFF.DimensionType.SECONDARY_STRUCTURE, oFF.AxisType.COLUMNS);
	}
	for (var j = 0; j < this.m_lovFilters.size(); j++)
	{
		var effectiveSourceFilter = this.m_lovFilters.get(j);
		if (this.m_sourceQueryManager.getConvenienceCommands().isTypeOfBw())
		{
			effectiveSourceFilter = oFF.QFilterUtil.createFilterElementFromOrigin(effectiveSourceFilter, null);
			oFF.QFilterUtil.deepApplyConvertToFlatFilterToHierarchicalFilters(effectiveSourceFilter, true);
		}
		queryModel.getFilter().linkFilterElement(oFF.XStringUtils.concatenateWithInt("filterAcrossModelsSourceFilter-", j), effectiveSourceFilter);
	}
	this.configureSourceMeasures();
	return this.m_sourceQueryManager.processQueryExecution(syncType, listener, customIdentifier);
};
oFF.QFilterAcrossModelsLov.prototype.configureSourceLinkedDimension = function(linkPart)
{
	var queryModel = this.m_sourceQueryManager.getQueryModel();
	var rowsAxis = queryModel.getRowsAxis();
	var linkedDimension = queryModel.getDimensionByName(linkPart.getDimensionName());
	rowsAxis.add(linkedDimension);
	if (queryModel.getAccountDimension() === null)
	{
		linkedDimension.setReadModeGraceful(oFF.QContextType.RESULT_SET, oFF.QMemberReadMode.BOOKED_AND_SPACE_AND_STATE);
	}
	linkedDimension.getResultSetFields().clear();
	if (linkedDimension.isHierarchyActive() !== linkPart.isHierarchical())
	{
		linkedDimension.setHierarchyActive(linkPart.isHierarchical());
	}
	if (linkPart.isHierarchical())
	{
		var linkPartHierarchyName = linkPart.getHierarchyName();
		linkedDimension.setHierarchyName(linkPartHierarchyName);
		linkedDimension.setHierarchyActive(true);
		if (queryModel.getConvenienceCommands().isTypeOfBw())
		{
			linkedDimension.setInitialDrillLevel(oFF.QFilterAcrossModelsLov.BW_FULL_EXPANSION);
		}
		else
		{
			linkedDimension.setInitialDrillLevel(oFF.QFilterAcrossModelsLov.MDS_FULL_EXPANSION);
		}
		if (!queryModel.getSession().hasFeature(oFF.FeatureToggleOlap.DONT_ALWAYS_REQUEST_TEXTFIELD))
		{
			linkedDimension.getFieldContainer().setHierarchyTextField(linkedDimension.getHierarchyKeyField());
		}
	}
	else if (!linkedDimension.getDimensionType().isTypeOf(oFF.DimensionType.CALCULATED_DIMENSION))
	{
		var linkedField = queryModel.getFieldByNameOrAlias(linkPart.getFieldName());
		if (linkedField.isKeyField())
		{
			if (!queryModel.getSession().hasFeature(oFF.FeatureToggleOlap.DONT_ALWAYS_REQUEST_TEXTFIELD))
			{
				linkedDimension.getFieldContainer().setFlatTextField(linkedField);
			}
		}
		else
		{
			linkedDimension.getFieldContainer().setFlatKeyField(linkedField);
		}
	}
};
oFF.QFilterAcrossModelsLov.prototype.configureSourceMeasures = function()
{
	var queryModel = this.m_sourceQueryManager.getQueryModel();
	this.configureSourceMeasuresByDimension(queryModel.getPrimaryCalculationDimension(), this.m_measureNames);
	this.configureSourceMeasuresByDimension(queryModel.getSecondaryCalculationDimension(), this.m_secondaryMeasureNames);
};
oFF.QFilterAcrossModelsLov.prototype.configureSourceMeasuresByDimension = function(accountOrMeasureDimension, measureNames)
{
	if (oFF.isNull(accountOrMeasureDimension))
	{
		return;
	}
	var queryModel = this.m_sourceQueryManager.getQueryModel();
	var cmd = queryModel.getConvenienceCommands();
	var iterator = measureNames.getIterator();
	var storageName = oFF.QFilterAcrossModelsLinkUtil.getAnySharedLinkStorageName(this.m_dimensionLinks);
	var accountOrMeasureInitialized = false;
	while (iterator.hasNext())
	{
		var measureName = iterator.next();
		var measureMember = accountOrMeasureDimension.getStructureMemberByAliasOrMember(measureName);
		if (oFF.isNull(measureMember))
		{
			measureMember = queryModel.getOlapEnv().getClientQueryObjectManager().getStructuredMember(measureName, storageName, true);
			if (oFF.notNull(measureMember))
			{
				accountOrMeasureDimension.addMeasure(measureMember);
			}
		}
		if (oFF.notNull(measureMember))
		{
			if (!accountOrMeasureInitialized)
			{
				cmd.moveDimensionByTypeToAxis(oFF.DimensionType.MEASURE_STRUCTURE, oFF.AxisType.COLUMNS);
				if (accountOrMeasureDimension.getDimensionType() === oFF.DimensionType.ACCOUNT)
				{
					cmd.setDimensionHierarchy(accountOrMeasureDimension.getName(), accountOrMeasureDimension.getDefaultHierarchyName(), true, 0);
					cmd.moveDimensionToAxis(accountOrMeasureDimension.getName(), oFF.AxisType.ROWS);
				}
				accountOrMeasureInitialized = true;
			}
			var filterOp = cmd.addSingleMemberFilterByDimension(accountOrMeasureDimension, measureMember.getName(), oFF.ComparisonOperator.EQUAL);
			if (oFF.XStringUtils.isNotNullAndNotEmpty(accountOrMeasureDimension.getDefaultHierarchyName()))
			{
				filterOp.setHierarchyName(accountOrMeasureDimension.getDefaultHierarchyName());
			}
		}
	}
};
oFF.QFilterAcrossModelsLov.prototype.createCalcDimFromSharedContext = function(context, linkPart)
{
	var storageName = oFF.QFilterAcrossModelsLinkUtil.getSharedLinkStorageName(this.m_dimensionLinks, linkPart);
	var calcDimProperties = context.getOlapEnv().getClientQueryObjectManager().getFormulaCalcDimProperties(linkPart.getDimensionName(), storageName);
	var calcDim = oFF.QFactory.createFormulaCalculatedDimension(context, linkPart.getDimensionName());
	calcDim.setPropertiesKeyRef(calcDimProperties);
	return calcDim;
};
oFF.QFilterAcrossModelsLov.prototype.requiresIndirectExcludeScenarioLovQuery = function()
{
	return !oFF.QFilterAcrossModelsFilterUtil.areAllFiltersDirect(this.m_sourceQueryManager, this.m_dimensionLinks, this.m_sourceFilters.getValuesAsReadOnlyList()) && this.areAllIndirectLovFiltersExclude();
};
oFF.QFilterAcrossModelsLov.prototype.areAllIndirectLovFiltersExclude = function()
{
	for (var i = 0; i < this.m_lovFilters.size(); i++)
	{
		var lovFilter = this.m_lovFilters.get(i);
		if (!oFF.QFilterAcrossModelsFilterUtil.isDirectFilterElement(this.m_sourceQueryManager, this.m_dimensionLinks, lovFilter) && !oFF.QFilterAcrossModelsFilterUtil.isFilterAllIncludeOrAllExclude(lovFilter, oFF.SetSign.EXCLUDING))
		{
			return false;
		}
	}
	return true;
};
oFF.QFilterAcrossModelsLov.prototype.processIndirectFilterExcludeScenarioLovQuery = function(syncType, listener, customIdentifier)
{
	if (oFF.notNull(this.m_excludeScenarioQueryManager))
	{
		this.m_excludeScenarioQueryManager = oFF.XObjectExt.release(this.m_excludeScenarioQueryManager);
	}
	this.m_excludeScenarioQueryManager = this.m_sourceQueryManager.cloneQueryManagerExt(oFF.QueryCloneMode.CURRENT_STATE);
	var secondaryQueryModelExcludeScenario = this.m_excludeScenarioQueryManager.getQueryModel();
	secondaryQueryModelExcludeScenario.getConvenienceCommands().clearAllFiltersExt(oFF.FilterLayer.DYNAMIC, null);
	secondaryQueryModelExcludeScenario.getConvenienceCommands().clearAllFiltersExt(oFF.FilterLayer.EXTERNAL, null);
	var indirectLovFilterExpressions = this.getIndirectSourceFilters(secondaryQueryModelExcludeScenario.getFilter());
	var indirectFilterRoot = oFF.QFactory.createFilterAnd(secondaryQueryModelExcludeScenario);
	indirectFilterRoot.addAll(oFF.XCollectionUtils.map(indirectLovFilterExpressions,  function(filterExpression){
		return filterExpression.getFilterRootElement();
	}.bind(this)));
	var negatedIndirectFilterRoot = oFF.QFilterAcrossModelsFilterUtil.negateExcludeFilter(indirectFilterRoot);
	if (this.m_lovFilters.size() > 1)
	{
		oFF.QFilterUtil.deepApplyConvertToFlatFilterToHierarchicalFilters(negatedIndirectFilterRoot, true);
	}
	secondaryQueryModelExcludeScenario.getFilter().linkFilterElement("excludeScenario", negatedIndirectFilterRoot);
	return this.m_excludeScenarioQueryManager.processQueryExecution(syncType, listener, customIdentifier);
};
oFF.QFilterAcrossModelsLov.prototype.getIndirectSourceFilters = function(filterContainer)
{
	var indirectLovFilterExpressions = oFF.XList.create();
	for (var i = 0; i < this.m_lovFilters.size(); i++)
	{
		var filterElement = this.m_lovFilters.get(i);
		var filterExpression = filterContainer.createFilter();
		if (filterElement.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_PRODUCT))
		{
			filterExpression.setCartesianProduct(filterElement);
		}
		else
		{
			filterExpression.setComplexRoot(filterElement);
		}
		if (!oFF.QFilterAcrossModelsFilterUtil.isDirectFilterElement(this.m_sourceQueryManager, this.m_dimensionLinks, filterElement))
		{
			indirectLovFilterExpressions.add(filterExpression);
		}
	}
	return indirectLovFilterExpressions;
};
oFF.QFilterAcrossModelsLov.prototype.onQueryExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	var customStringIdentifier = customIdentifier;
	if (oFF.XString.isEqual(customStringIdentifier.getString(), oFF.QFilterAcrossModelsLov.STANDARD_LOV_IDENTIFIER))
	{
		this.m_indirectFilterStandardLovResult = extResult;
	}
	else
	{
		this.m_indirectFilterExcludeScenarioLovResult = extResult;
	}
	this.onQueryOrValueHelpExecuted(extResult, resultSetContainer);
};
oFF.QFilterAcrossModelsLov.prototype.onValuehelpExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	this.m_pendingValueHelpQueries--;
	if (extResult.hasErrors())
	{
		this.onQueryOrValueHelpExecuted(extResult, resultSetContainer);
		return;
	}
	var idAndExtractField = customIdentifier;
	var isTargetHierarchyValueHelp = oFF.XString.isEqual(idAndExtractField.getFirstString(), oFF.QFilterAcrossModelsLov.TARGET_HIERARCHY_VALUE_HELP_IDENTIFIER);
	var isTargetFlatValueHelp = oFF.XString.isEqual(idAndExtractField.getFirstString(), oFF.QFilterAcrossModelsLov.TARGET_NON_KEY_FLAT_VALUE_HELP_IDENTIFIER);
	var isSourceIntervalValueHelp = oFF.XString.isEqual(idAndExtractField.getFirstString(), oFF.QFilterAcrossModelsLov.SOURCE_INTERVAL_VALUE_HELP_IDENTIFIER);
	var resultValueHelpNodes = extResult.getData();
	var resultKeysOrText = null;
	var resultTextToKeys = null;
	if (isTargetHierarchyValueHelp || isSourceIntervalValueHelp)
	{
		resultKeysOrText = oFF.XHashSetOfString.create();
	}
	else if (isTargetFlatValueHelp)
	{
		resultTextToKeys = oFF.XHashMapByString.create();
	}
	else
	{
		resultKeysOrText = oFF.XListOfString.create();
	}
	var valueHelpDimensionName = null;
	for (var i = 0; i < resultValueHelpNodes.size(); i++)
	{
		var valueHelpNode = resultValueHelpNodes.get(i);
		if (oFF.isNull(valueHelpDimensionName))
		{
			valueHelpDimensionName = valueHelpNode.getDimension().getName();
		}
		var nodeKey = valueHelpNode.getName();
		var nodeText = valueHelpNode.getDimensionMember().getText();
		if (oFF.XString.isEqual(idAndExtractField.getSecondString(), oFF.QFilterAcrossModelsLov.EXTRACT_KEY) && oFF.notNull(resultKeysOrText))
		{
			resultKeysOrText.add(nodeKey);
		}
		else if (oFF.XString.isEqual(idAndExtractField.getSecondString(), oFF.QFilterAcrossModelsLov.EXTRACT_TEXT) && oFF.notNull(resultKeysOrText))
		{
			resultKeysOrText.add(nodeText);
		}
		else if (oFF.notNull(resultTextToKeys))
		{
			if (!resultTextToKeys.containsKey(nodeText))
			{
				resultTextToKeys.put(nodeText, oFF.XHashSetOfString.create());
			}
			resultTextToKeys.getByKey(nodeText).add(nodeKey);
		}
	}
	if (isTargetHierarchyValueHelp)
	{
		this.m_targetDimensionHierarchyMembers.put(valueHelpDimensionName, resultKeysOrText);
	}
	else if (isTargetFlatValueHelp)
	{
		this.m_targetDimensionTextToKeyMapOfMembers.put(valueHelpDimensionName, resultTextToKeys);
	}
	else if (isSourceIntervalValueHelp)
	{
		this.m_sourceIntervalDimensionMembers.put(valueHelpDimensionName, resultKeysOrText);
	}
	else
	{
		this.m_sourceFiltersUpdatedMembers.put(idAndExtractField.getFirstString(), resultKeysOrText);
	}
	this.onQueryOrValueHelpExecuted(extResult, resultSetContainer);
};
oFF.QFilterAcrossModelsLov.prototype.onQueryOrValueHelpExecuted = function(messages, resultSetContainer)
{
	var messagesIterator = messages.getMessages().getIterator();
	while (messagesIterator.hasNext())
	{
		var message = messagesIterator.next();
		if (message.getSeverity() === oFF.Severity.ERROR && message.getCode() === oFF.QFilterAcrossModelsLov.BW_INVALID_DRILL_LEVEL_REST_NODE_DOES_NOT_EXIST_ERROR_CODE)
		{
			this.addInvalidDrillLevelNoRestNodeError();
		}
		else
		{
			this.addMessage(message);
		}
	}
	this.addIncompleteResultWarning(resultSetContainer);
	if (this.areAllQueriesComplete() || this.hasErrors())
	{
		this.endSync();
	}
};
oFF.QFilterAcrossModelsLov.prototype.areAllQueriesComplete = function()
{
	return this.m_pendingValueHelpQueries === 0 && (!this.requiresIndirectFilterStandardLovQuery() || oFF.notNull(this.m_sourceQueryManager) && oFF.notNull(this.m_indirectFilterStandardLovResult)) && (!this.requiresIndirectExcludeScenarioLovQuery() || oFF.notNull(this.m_excludeScenarioQueryManager) && oFF.notNull(this.m_indirectFilterExcludeScenarioLovResult));
};
oFF.QFilterAcrossModelsLov.prototype.onVariableProcessorExecuted = function(extResult, result, customIdentifier)
{
	this.addAllMessages(extResult);
	if (extResult.hasErrors())
	{
		this.endSync();
		return;
	}
	this.processSynchronization(this.getActiveSyncType());
};
oFF.QFilterAcrossModelsLov.prototype.addIncompleteResultWarning = function(resultSetContainer)
{
	if (oFF.isNull(resultSetContainer) || !resultSetContainer.hasMoreRowRecordsAvailable())
	{
		return;
	}
	var filterDimensionNames = oFF.XHashSetOfString.create();
	var iterator = this.m_sourceFilters.getKeysAsIteratorOfString();
	while (iterator.hasNext())
	{
		var sourceFilterKey = iterator.next();
		var sourceFilter = this.m_sourceFilters.getByKey(sourceFilterKey);
		var filters = oFF.QFilterUtil.collectAllCartesianListsAndSpatialOperations(sourceFilter.getFilterRootElement());
		for (var i = 0; i < filters.size(); i++)
		{
			var filter = filters.get(i);
			var dimensionName = filter.getDimensionName();
			if (oFF.XStringUtils.isNullOrEmpty(dimensionName))
			{
				continue;
			}
			var dimension = this.m_sourceQueryManager.getDimensionAccessor().getDimensionByName(dimensionName);
			if (oFF.notNull(dimension) && oFF.XStringUtils.isNotNullAndNotEmpty(dimension.getText()))
			{
				dimensionName = dimension.getText();
			}
			filterDimensionNames.add(dimensionName);
		}
	}
	var sourceDatasetName = null;
	var datasetEpmObject = this.m_sourceQueryManager.getQueryModel().getDatasetEpmObject();
	if (oFF.notNull(datasetEpmObject))
	{
		sourceDatasetName = datasetEpmObject.getShortDescriptionOrName();
	}
	var messageDimensionNames = "";
	var nameIterator = filterDimensionNames.getIterator();
	while (nameIterator.hasNext())
	{
		var name = nameIterator.next();
		if (oFF.XStringUtils.isNotNullAndNotEmpty(messageDimensionNames))
		{
			messageDimensionNames = oFF.XStringUtils.concatenate2(messageDimensionNames, ", ");
		}
		if (oFF.XStringUtils.isNotNullAndNotEmpty(sourceDatasetName))
		{
			messageDimensionNames = oFF.XStringUtils.concatenate4(messageDimensionNames, sourceDatasetName, ".", name);
		}
		else
		{
			messageDimensionNames = oFF.XStringUtils.concatenate2(messageDimensionNames, name);
		}
	}
	var errorMsgArgs = oFF.XListOfString.create();
	errorMsgArgs.add(messageDimensionNames);
	if (oFF.XString.isEqual(resultSetContainer.getQueryModel().getName(), this.m_targetQueryManager.getQueryModel().getName()))
	{
		this.addInfo(oFF.ErrorCodes.FILTER_ACROSS_MODEL_INCOMPLETE_TARGET_RESULT_WARNING, oFF.ErrorMessages.getText(oFF.ErrorMessages.FILTER_ACROSS_MODEL_INCOMPLETE_TARGET_RESULT_WARNING, errorMsgArgs, null));
	}
	else
	{
		this.addInfo(oFF.ErrorCodes.FILTER_ACROSS_MODEL_INCOMPLETE_RESULT_WARNING, oFF.ErrorMessages.getText(oFF.ErrorMessages.FILTER_ACROSS_MODEL_INCOMPLETE_RESULT_WARNING, errorMsgArgs, null));
	}
};
oFF.QFilterAcrossModelsLov.prototype.addInvalidDrillLevelNoRestNodeError = function()
{
	var hierarchyNames = "";
	var sourceQueryModel = this.m_sourceQueryManager.getQueryModel();
	var linkParts = oFF.QFilterAcrossModelsLinkUtil.getAllLinkPartsForContext(this.m_dimensionLinks, sourceQueryModel);
	var sourceDatasetName = null;
	var datasetEpmObject = sourceQueryModel.getDatasetEpmObject();
	if (oFF.notNull(datasetEpmObject))
	{
		sourceDatasetName = datasetEpmObject.getShortDescriptionOrName();
	}
	for (var i = 0; i < linkParts.size(); i++)
	{
		var linkPart = linkParts.get(i);
		if (linkPart.isHierarchical())
		{
			if (oFF.XStringUtils.isNotNullAndNotEmpty(hierarchyNames))
			{
				hierarchyNames = oFF.XStringUtils.concatenate2(hierarchyNames, ", ");
			}
			if (oFF.XStringUtils.isNotNullAndNotEmpty(sourceDatasetName))
			{
				hierarchyNames = oFF.XStringUtils.concatenate3(hierarchyNames, sourceDatasetName, ".");
			}
			var dimensionName = linkPart.getDimensionName();
			var linkDimension = sourceQueryModel.getDimensionByName(linkPart.getDimensionName());
			if (oFF.notNull(linkDimension) && oFF.XStringUtils.isNotNullAndNotEmpty(linkDimension.getText()))
			{
				dimensionName = linkDimension.getText();
			}
			hierarchyNames = oFF.XStringUtils.concatenate4(hierarchyNames, dimensionName, ".", linkPart.getHierarchyName());
		}
	}
	var errorMsgArgs = oFF.XListOfString.create();
	errorMsgArgs.add(hierarchyNames);
	this.addWarning(oFF.ErrorCodes.FILTER_ACROSS_MODEL_LOV_INVALID_DRILL_LEVEL_REST_NODE_DOES_NOT_EXIST, oFF.ErrorMessages.getText(oFF.ErrorMessages.FILTER_ACROSS_MODEL_LOV_INVALID_DRILL_LEVEL_REST_NODE_DOES_NOT_EXIST, errorMsgArgs, null));
};
oFF.QFilterAcrossModelsLov.prototype.disableUniversalDisplayHierarchies = function()
{
	var universalDisplayHierarchies = this.m_sourceQueryManager.getQueryModel().getUniversalDisplayHierarchies();
	if (oFF.notNull(universalDisplayHierarchies))
	{
		var udhIterator = universalDisplayHierarchies.getHierarchies().getIterator();
		while (udhIterator.hasNext())
		{
			udhIterator.next().setActive(false);
		}
	}
};

oFF.QFilterAcrossModelsLovAction = function() {};
oFF.QFilterAcrossModelsLovAction.prototype = new oFF.SyncAction();
oFF.QFilterAcrossModelsLovAction.prototype._ff_c = "QFilterAcrossModelsLovAction";

oFF.QFilterAcrossModelsLovAction.createAction = function(lovManager)
{
	var action = new oFF.QFilterAcrossModelsLovAction();
	action.setupAction(null, null, null, lovManager);
	return action;
};
oFF.QFilterAcrossModelsLovAction.prototype.processSynchronization = function(syncType)
{
	this.getActionContext().processExecution(syncType, this, null);
	return true;
};
oFF.QFilterAcrossModelsLovAction.prototype.onQueryExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	this.addAllMessages(extResult);
	this.setData(resultSetContainer);
	this.endSync();
};
oFF.QFilterAcrossModelsLovAction.prototype.callListener = function(extResult, listener, data, customIdentifier)
{
	listener.onQueryExecuted(extResult, data, customIdentifier);
};

oFF.QKeyRefStoreContext = function() {};
oFF.QKeyRefStoreContext.prototype = new oFF.DfQContext();
oFF.QKeyRefStoreContext.prototype._ff_c = "QKeyRefStoreContext";

oFF.QKeyRefStoreContext.create = function(context, storageName, capabilities)
{
	var newObj = new oFF.QKeyRefStoreContext();
	newObj.setupExt(context, storageName, capabilities);
	return newObj;
};
oFF.QKeyRefStoreContext.prototype.m_storage = null;
oFF.QKeyRefStoreContext.prototype.m_capabilities = null;
oFF.QKeyRefStoreContext.prototype.setupExt = function(context, storageName, capabilities)
{
	oFF.DfQContext.prototype.setupContext.call( this , context);
	this.m_storage = oFF.QFactory.createKeyRefStorage(this, storageName);
	if (oFF.isNull(capabilities))
	{
		this.m_capabilities = oFF.QCapabilities.create();
	}
	else
	{
		this.m_capabilities = capabilities;
	}
};
oFF.QKeyRefStoreContext.prototype.getComponentType = function()
{
	return oFF.OlapComponentType.KEY_REF_STORE_CONTEXT;
};
oFF.QKeyRefStoreContext.prototype.getKeyRefStorage = function()
{
	return this.m_storage;
};
oFF.QKeyRefStoreContext.prototype.getModelCapabilities = function()
{
	return this.m_capabilities;
};

oFF.LovProcessConfig = function() {};
oFF.LovProcessConfig.prototype = new oFF.LovCapabilities();
oFF.LovProcessConfig.prototype._ff_c = "LovProcessConfig";

oFF.LovProcessConfig.create = function(queryModel, dimension, includeMeasures, ignoreMultipleDrillsInVh)
{
	var config = new oFF.LovProcessConfig();
	config.setupProcessConfig(queryModel, dimension, includeMeasures, ignoreMultipleDrillsInVh);
	return config;
};
oFF.LovProcessConfig.prototype.m_dimension = null;
oFF.LovProcessConfig.prototype.m_includeMeasures = false;
oFF.LovProcessConfig.prototype.m_requiresValueHelp = false;
oFF.LovProcessConfig.prototype.m_requiresResultSet = false;
oFF.LovProcessConfig.prototype.m_useActiveResultSetContainer = false;
oFF.LovProcessConfig.prototype.m_automaticVhReadModeConfigEnabled = false;
oFF.LovProcessConfig.prototype.m_automaticVhDrillLevelConfigEnabled = false;
oFF.LovProcessConfig.prototype.m_isRestoreSettingsAfterImplicitSubmit = false;
oFF.LovProcessConfig.prototype.setupProcessConfig = function(queryModel, dimension, includeMeasures, ignoreMultipleDrillsInVh)
{
	this.setupSessionContext(queryModel.getSession());
	this.m_dimension = dimension;
	if (oFF.isNull(this.m_dimension) && !this.detectDimension(queryModel))
	{
		this.addError(oFF.ErrorCodes.INVALID_DIMENSION, "No valid dimension found");
	}
	this.m_includeMeasures = includeMeasures && (queryModel.getRowsAxis().getMeasureDimension() !== null || queryModel.getColumnsAxis().getMeasureDimension() !== null);
	if (queryModel.isBlendingModel())
	{
		this.m_requiresResultSet = true;
	}
	else if (this.isValid())
	{
		this.m_requiresResultSet = this.m_includeMeasures || this.isSortedByMeasure(queryModel);
		this.m_requiresValueHelp = !this.m_requiresResultSet;
		if (queryModel.getSystemType().isTypeOf(oFF.SystemType.BW))
		{
			if (!ignoreMultipleDrillsInVh && this.hasSeveralDrillOperations())
			{
				this.m_requiresResultSet = true;
				this.m_requiresValueHelp = false;
			}
			else
			{
				var filter = queryModel.getFilter();
				var hasMatchFilter = this.getMatchFilter(filter.getEffectiveFilter(), null) !== null;
				this.m_requiresResultSet = this.m_requiresResultSet || this.hasLinkedFilters(filter) && !hasMatchFilter;
				this.m_requiresValueHelp = !this.m_requiresResultSet || hasMatchFilter;
			}
			this.setSupportsWildCardSearch(this.m_requiresValueHelp && this.supportsMatchFilter());
			this.setSupportsSeveralDrillOperationsInValueHelp(false);
		}
		else
		{
			this.setSupportsWildCardSearch(this.supportsMatchFilter());
			this.setSupportsSeveralDrillOperationsInValueHelp(!ignoreMultipleDrillsInVh);
		}
	}
};
oFF.LovProcessConfig.prototype.releaseObject = function()
{
	oFF.LovCapabilities.prototype.releaseObject.call( this );
	this.m_dimension = null;
};
oFF.LovProcessConfig.prototype.detectDimension = function(queryModel)
{
	var dimensionsRows = queryModel.getRowsAxis().getDimensions();
	var dimensionsCols = queryModel.getColumnsAxis().getDimensions();
	var dimensions = oFF.XCollectionUtils.filter(dimensionsRows,  function(dimRow){
		return !dimRow.isStructure();
	}.bind(this));
	dimensions.addAll(oFF.XCollectionUtils.filter(dimensionsCols,  function(dimCol){
		return !dimCol.isStructure();
	}.bind(this)));
	if (dimensions.hasElements())
	{
		this.m_dimension = dimensions.get(0);
		return dimensions.size() === 1;
	}
	else
	{
		dimensions.addAll(oFF.XCollectionUtils.filter(dimensionsRows,  function(structRow){
			return structRow.isStructure();
		}.bind(this)));
		dimensions.addAll(oFF.XCollectionUtils.filter(dimensionsCols,  function(structCol){
			return structCol.isStructure();
		}.bind(this)));
		if (dimensions.hasElements())
		{
			this.m_dimension = dimensions.get(0);
			return true;
		}
		return false;
	}
};
oFF.LovProcessConfig.prototype.hasLinkedFilters = function(filter)
{
	var linkedFilters = filter.getLinkedFilters();
	if (linkedFilters.hasElements())
	{
		var isLovOnStructure = this.m_dimension.isStructure();
		var internalLinkedFilterIds = filter.getInternalLinkedFilterIds();
		var layerNames = linkedFilters.getKeysAsReadOnlyListOfString();
		for (var i = 0; i < layerNames.size(); i++)
		{
			var filterName = layerNames.get(i);
			var linkedFilter = linkedFilters.getByKey(filterName);
			if (isLovOnStructure && linkedFilter.getCartesianList(this.m_dimension) === null)
			{
				continue;
			}
			if (!internalLinkedFilterIds.contains(filterName))
			{
				return true;
			}
		}
	}
	return false;
};
oFF.LovProcessConfig.prototype.getMatchFilter = function(filterElement, dimension)
{
	var children = filterElement.getChildrenIterator();
	while (children.hasNext())
	{
		var element = children.next();
		if (element.getOlapComponentType().isTypeOf(oFF.FilterComponentType.OPERATION))
		{
			var filterOperation = element;
			var comparisonOperator = filterOperation.getComparisonOperator();
			if ((oFF.isNull(dimension) || oFF.XString.isEqual(dimension.getName(), filterOperation.getDimensionName())) && (comparisonOperator === oFF.ComparisonOperator.MATCH || comparisonOperator === oFF.ComparisonOperator.NOT_MATCH || comparisonOperator === oFF.ComparisonOperator.LIKE))
			{
				return filterOperation;
			}
		}
		var matchFilter = this.getMatchFilter(element, dimension);
		if (oFF.notNull(matchFilter))
		{
			return matchFilter;
		}
	}
	return null;
};
oFF.LovProcessConfig.prototype.isSortedByMeasure = function(queryModel)
{
	if (queryModel.getModelCapabilities().supportsConditions())
	{
		var conditions = queryModel.getConditionManager().getActiveConditions();
		if (oFF.XCollectionUtils.contains(conditions,  function(condition){
			return !condition.isBackendCondition() && condition.getThresholds().hasElements() && (condition.getDimensionEvaluationType() !== oFF.ConditionDimensionEvaluationType.GIVEN_LIST || condition.getEvaluationDimensions().contains(this.m_dimension));
		}.bind(this)))
		{
			return true;
		}
	}
	var sortingOperations = queryModel.getSortingManager().getSortingOperations();
	for (var i = 0; i < sortingOperations.size(); i++)
	{
		var sortOperation = sortingOperations.get(i);
		if (sortOperation.getComponentType() === oFF.OlapComponentType.COMPLEX_SORTING)
		{
			var complexSorting = sortOperation;
			var elementPath = complexSorting.getElementPath();
			for (var k = 0; k < elementPath.size(); k++)
			{
				var selectField = elementPath.get(k).getSelectField();
				if (oFF.notNull(selectField) && selectField.getDimension().isMeasureStructure())
				{
					return true;
				}
			}
		}
	}
	return false;
};
oFF.LovProcessConfig.prototype.hasSeveralDrillOperations = function()
{
	var drillManager = this.m_dimension.getDrillManager();
	var drillOperations = drillManager.getDrillOperationsByDimension(this.m_dimension);
	drillOperations.addAll(drillManager.getAllZoomDrillOperationsForDimension(this.m_dimension));
	return drillOperations.size() > 1;
};
oFF.LovProcessConfig.prototype.supportsMatchFilter = function()
{
	return this.supportsMatchFilterOnField(this.m_dimension.getKeyField()) || this.supportsMatchFilterOnField(this.m_dimension.getDisplayKeyField()) || this.supportsMatchFilterOnField(this.m_dimension.getTextField());
};
oFF.LovProcessConfig.prototype.supportsMatchFilterOnField = function(field)
{
	if (oFF.notNull(field) && field.isFilterable())
	{
		var filterCapabilities = this.m_dimension.getFilterCapabilities().getFilterCapabilitiesByField(field);
		if (oFF.notNull(filterCapabilities))
		{
			var supportedOperators = filterCapabilities.getSupportedComparisonOperators(oFF.SetSign.INCLUDING);
			return supportedOperators.contains(oFF.ComparisonOperator.MATCH) || supportedOperators.contains(oFF.ComparisonOperator.NOT_MATCH) || supportedOperators.contains(oFF.ComparisonOperator.LIKE);
		}
	}
	return false;
};
oFF.LovProcessConfig.prototype.requiresValueHelpRequest = function()
{
	return this.isValid() && this.m_requiresValueHelp;
};
oFF.LovProcessConfig.prototype.requiresResultSetRequest = function()
{
	return this.isValid() && this.m_requiresResultSet;
};
oFF.LovProcessConfig.prototype.getDimension = function()
{
	return this.m_dimension;
};
oFF.LovProcessConfig.prototype.isIncludeMeasures = function()
{
	return this.m_includeMeasures;
};
oFF.LovProcessConfig.prototype.setUseActiveResultSetContainer = function(useActiveResultSetContainer)
{
	this.m_useActiveResultSetContainer = useActiveResultSetContainer;
};
oFF.LovProcessConfig.prototype.isUseActiveResultSetContainer = function()
{
	return this.m_useActiveResultSetContainer;
};
oFF.LovProcessConfig.prototype.isAutomaticValueHelpReadModeConfigurationEnabled = function()
{
	return this.m_automaticVhReadModeConfigEnabled;
};
oFF.LovProcessConfig.prototype.setAutomaticValueHelpReadModeConfigurationEnabled = function(automaticValueHelpReadModeConfigurationEnabled)
{
	this.m_automaticVhReadModeConfigEnabled = automaticValueHelpReadModeConfigurationEnabled;
};
oFF.LovProcessConfig.prototype.isAutomaticValueHelpDrillLevelConfigurationEnabled = function()
{
	return this.m_automaticVhDrillLevelConfigEnabled;
};
oFF.LovProcessConfig.prototype.setAutomaticValueHelpDrillLevelConfigurationEnabled = function(automaticValueHelpDrillLevelConfigurationEnabled)
{
	this.m_automaticVhDrillLevelConfigEnabled = automaticValueHelpDrillLevelConfigurationEnabled;
};
oFF.LovProcessConfig.prototype.setRestoreSettingsAfterImplicitSubmit = function(restoreSettingsAfterImplicitSubmit)
{
	this.m_isRestoreSettingsAfterImplicitSubmit = restoreSettingsAfterImplicitSubmit;
};
oFF.LovProcessConfig.prototype.isRestoreSettingsAfterImplicitSubmit = function()
{
	return this.m_isRestoreSettingsAfterImplicitSubmit;
};
oFF.LovProcessConfig.prototype.toString = function()
{
	var sb = oFF.XStringBuffer.create();
	sb.append("LOV ProcessConfig[");
	sb.append("dimension: ").append(oFF.notNull(this.m_dimension) ? this.m_dimension.getName() : "null");
	sb.append(", requiresValueHelp: ").appendBoolean(this.m_requiresValueHelp);
	sb.append(", requiresResultSet: ").appendBoolean(this.m_requiresResultSet);
	sb.append(", includeMeasures: ").appendBoolean(this.m_includeMeasures);
	sb.append(", automaticVhReadModeConfigEnabled: ").appendBoolean(this.m_automaticVhReadModeConfigEnabled);
	sb.append(", automaticVhDrillLevelConfigEnabled: ").appendBoolean(this.m_automaticVhDrillLevelConfigEnabled);
	sb.append(", isRestoreSettingsAfterImplicitSubmit: ").appendBoolean(this.m_isRestoreSettingsAfterImplicitSubmit);
	sb.append(", isValid: ").appendBoolean(this.isValid());
	sb.append("]");
	return sb.toString();
};

oFF.DfQueryResourceLoadAction = function() {};
oFF.DfQueryResourceLoadAction.prototype = new oFF.SyncAction();
oFF.DfQueryResourceLoadAction.prototype._ff_c = "DfQueryResourceLoadAction";

oFF.DfQueryResourceLoadAction.prototype.onFunctionExecuted = function(extResult, response, customIdentifier)
{
	this.addAllMessages(extResult);
	if (extResult.isValid())
	{
		var modelFormat = customIdentifier;
		var jsonContent = response.getRootElement();
		if (oFF.isNull(jsonContent))
		{
			this.addError(oFF.ErrorCodes.SYSTEM_IO_HTTP, "Content not json");
		}
		else
		{
			var config = this.getActionContext();
			config.setDefinitionByStructure(modelFormat, jsonContent);
			config.setDataSource(null);
		}
	}
	this.endSync();
};
oFF.DfQueryResourceLoadAction.prototype.hasFileExtension = function(location)
{
	if (oFF.XString.lastIndexOf(location, ".") === -1)
	{
		this.addError(oFF.ErrorCodes.SYSTEM_IO_READ_ACCESS, oFF.XStringUtils.concatenate2("Path not valid, cannot find file extension to resolve model format: ", location));
		return false;
	}
	return true;
};
oFF.DfQueryResourceLoadAction.prototype.getDataSource = function()
{
	return this.getActionContext().getDataSource();
};

oFF.QInitAction = function() {};
oFF.QInitAction.prototype = new oFF.SyncAction();
oFF.QInitAction.prototype._ff_c = "QInitAction";

oFF.QInitAction.createAndRun = function(syncType, listener, customIdentifier, carrier)
{
	var object = new oFF.QInitAction();
	object.setupActionAndRun(syncType, listener, customIdentifier, carrier);
	return object;
};
oFF.QInitAction.prototype.m_targetServiceCfg = null;
oFF.QInitAction.prototype.m_docFusionAction = null;
oFF.QInitAction.prototype.m_queryManagerAction = null;
oFF.QInitAction.prototype.m_fusionResult = null;
oFF.QInitAction.prototype.processSynchronization = function(syncType)
{
	var queryServiceConfig = this.getQueryServiceConfig();
	this.m_targetServiceCfg = queryServiceConfig.cloneExt("~Query~");
	this.m_targetServiceCfg.setUseClone(false);
	if (this.m_targetServiceCfg.isFusionActive() === true)
	{
		var definitionContent = this.m_targetServiceCfg.getDefinitionContent();
		if (oFF.notNull(definitionContent))
		{
			var contentType = definitionContent.getContentType();
			if (contentType.isTypeOf(oFF.QModelFormat.INA_CLONE) === true)
			{
				this.m_targetServiceCfg.setIsFusionActive(false);
			}
		}
	}
	if (this.m_targetServiceCfg.isFusionActive())
	{
		var docFusion = oFF.QDocFusionFactory.create(this.getApplication());
		if (syncType === oFF.SyncType.BLOCKING)
		{
			this.m_docFusionAction = docFusion.processFusion(syncType, null, null, queryServiceConfig);
			this.onDocFusionDone(this.m_docFusionAction, this.m_docFusionAction.getData(), null);
		}
		else
		{
			this.m_docFusionAction = docFusion.processFusion(syncType, this, null, queryServiceConfig);
		}
	}
	else
	{
		this.prepareAndStartQueryManagerAction();
	}
	return true;
};
oFF.QInitAction.prototype.onDocFusionDone = function(extResult, fusionResult, customIdentifier)
{
	this.addAllMessages(extResult);
	this.m_fusionResult = fusionResult;
	if (this.hasErrors())
	{
		this.endSync();
	}
	else
	{
		var connectionContainer = this.m_fusionResult.getConnectionContainer();
		this.m_targetServiceCfg.setConnectionContainer(connectionContainer);
		var metadataContent = this.m_fusionResult.getMetadataContent();
		this.m_targetServiceCfg.setMetadataContent(metadataContent);
		var repositoryContent = this.m_fusionResult.getRepositoryContent();
		this.m_targetServiceCfg.setRepositoryContent(repositoryContent);
		if (oFF.notNull(repositoryContent))
		{
			this.m_targetServiceCfg.setDefinitionByContent(null);
		}
		this.m_targetServiceCfg.setDimensionsOnAxes(null);
		this.m_targetServiceCfg.setRequiredDimensions(null);
		this.m_targetServiceCfg.setMinimizedMetadata(false);
		this.m_targetServiceCfg.setDataSource(this.m_fusionResult.getDataSource());
		this.prepareAndStartQueryManagerAction();
	}
};
oFF.QInitAction.prototype.prepareAndStartQueryManagerAction = function()
{
	var syncType = this.getActiveSyncType();
	if (syncType === oFF.SyncType.BLOCKING)
	{
		this.m_queryManagerAction = this.m_targetServiceCfg.processQueryManagerCreation(syncType, null, null);
		this.onQueryManagerCreated(this.m_queryManagerAction, this.m_queryManagerAction.getData(), null);
	}
	else
	{
		this.m_queryManagerAction = this.m_targetServiceCfg.processQueryManagerCreation(syncType, this, null);
	}
};
oFF.QInitAction.prototype.onQueryManagerCreated = function(extResult, queryManager, customIdentifier)
{
	this.addAllMessages(extResult);
	this.setData(queryManager);
	this.endSync();
	this.getQueryServiceConfig().onInitActionDone(extResult, queryManager);
	if (oFF.notNull(queryManager) && !queryManager.isReleased() && queryManager.getInitSettings().isExternalizedDynamicFilter() && !queryManager.hasInputEnabledVariables())
	{
		var olapFilterManager = queryManager.getOlapEnv().getFilterManager();
		olapFilterManager.externalizeDynamicFilter(queryManager);
	}
};
oFF.QInitAction.prototype.callListener = function(extResult, listener, data, customIdentifier)
{
	listener.onQueryManagerCreated(this, data, customIdentifier);
};
oFF.QInitAction.prototype.getQueryServiceConfig = function()
{
	return this.getActionContext();
};
oFF.QInitAction.prototype.getApplication = function()
{
	return this.getActionContext().getApplication();
};

oFF.QueryResourceLoadAction = function() {};
oFF.QueryResourceLoadAction.prototype = new oFF.SyncAction();
oFF.QueryResourceLoadAction.prototype._ff_c = "QueryResourceLoadAction";

oFF.QueryResourceLoadAction.createAndRun = function(syncType, queryServiceConfig, customIdentifier)
{
	var object = new oFF.QueryResourceLoadAction();
	object.setupActionAndRun(syncType, null, customIdentifier, queryServiceConfig);
	return object;
};
oFF.QueryResourceLoadAction.getFileExtension = function(path)
{
	var dot = oFF.XString.lastIndexOf(path, ".");
	return oFF.XString.toLowerCase(oFF.XString.substring(path, dot + 1, -1));
};
oFF.QueryResourceLoadAction.prototype.processSynchronization = function(syncType)
{
	var queryServiceContext = this.getActionContext();
	var dataSource = queryServiceContext.getDataSource();
	var type = dataSource.getType();
	if (type === oFF.MetaObjectType.URL)
	{
		var application = this.getActionContext().getApplication();
		var repositoryManager = application.getRepositoryManager();
		var repositoryLocation = repositoryManager.getLocation();
		var location = dataSource.getObjectName();
		var uri;
		if (oFF.isNull(repositoryLocation))
		{
			uri = oFF.XUri.createFromUrl(location);
		}
		else
		{
			uri = oFF.XUri.createFromUrlWithParent(location, repositoryLocation, false);
		}
		var path = uri.getPath();
		if (oFF.XString.lastIndexOf(path, ".") === -1)
		{
			this.addError(oFF.ErrorCodes.SYSTEM_IO_READ_ACCESS, oFF.XStringUtils.concatenate2("Path not valid, cannot find file extension to resolve model format: ", location));
		}
		else
		{
			var extension = oFF.QueryResourceLoadAction.getFileExtension(path);
			if (oFF.XString.isEqual("gz", extension))
			{
				path = oFF.XStringUtils.stripRight(path, 3);
				if (oFF.XString.lastIndexOf(path, ".") === -1)
				{
					this.addError(oFF.ErrorCodes.SYSTEM_IO_READ_ACCESS, oFF.XStringUtils.concatenate2("Path not valid, cannot find file extension to resolve model format: ", location));
				}
				else
				{
					extension = oFF.QueryResourceLoadAction.getFileExtension(path);
				}
			}
			var modelFormat = oFF.ContentType.lookupByFileEnding(extension);
			if (oFF.isNull(modelFormat))
			{
				this.addError(oFF.ErrorCodes.SYSTEM_IO_READ_ACCESS, oFF.XStringUtils.concatenate2("No valid extension to resolve model format: ", location));
			}
			else
			{
				var request = oFF.HttpRequest.createByUri(uri);
				var testHttpClient = request.newHttpClient(this.getSession());
				testHttpClient.processHttpRequest(syncType, this, modelFormat);
				return false;
			}
		}
	}
	return true;
};
oFF.QueryResourceLoadAction.prototype.onHttpResponse = function(extResult, response, customIdentifier)
{
	this.addAllMessages(extResult);
	if (extResult.isValid())
	{
		var modelFormat = customIdentifier;
		var statusCode = response.getStatusCode();
		if (statusCode !== oFF.HttpStatusCode.SC_OK)
		{
			this.addError(oFF.ErrorCodes.SYSTEM_IO_HTTP, "Bad status code");
		}
		else
		{
			if (response.getContentType() !== oFF.ContentType.APPLICATION_JSON)
			{
				this.addError(oFF.ErrorCodes.SYSTEM_IO_HTTP, "Content not json");
			}
			else
			{
				var jsonContent = response.getJsonContent();
				if (oFF.isNull(jsonContent) || !jsonContent.isStructure())
				{
					this.addError(oFF.ErrorCodes.SYSTEM_IO_HTTP, "Content not json");
				}
				else
				{
					var config = this.getActionContext();
					config.setDefinitionByStructure(modelFormat, jsonContent);
					config.setDataSource(null);
				}
			}
		}
	}
	this.endSync();
};

oFF.QCmdAbstract = function() {};
oFF.QCmdAbstract.prototype = new oFF.XObjectExt();
oFF.QCmdAbstract.prototype._ff_c = "QCmdAbstract";

oFF.QCmdAbstract.castParentToCartesianList = function(filterOp)
{
	if (oFF.notNull(filterOp))
	{
		var parent = filterOp.getParent();
		if (oFF.notNull(parent) && parent.getComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
		{
			return parent;
		}
	}
	return null;
};
oFF.QCmdAbstract.prototype.m_simpleVariables = null;
oFF.QCmdAbstract.prototype.getSimpleVariables = function()
{
	return this.m_simpleVariables;
};
oFF.QCmdAbstract.prototype.setSimpleVariables = function(variables)
{
	this.m_simpleVariables = variables;
};
oFF.QCmdAbstract.prototype.checkAndReplace = function(name)
{
	if (oFF.isNull(this.m_simpleVariables))
	{
		return name;
	}
	else
	{
		return this.m_simpleVariables.getStringByKeyExt(name, name);
	}
};
oFF.QCmdAbstract.prototype.clearSingleMemberFilterByDimension = function(dimension, memberName, comparisonOperator)
{
	if (oFF.notNull(dimension))
	{
		return this.clearSingleMemberFilterByName(dimension.getName(), memberName, comparisonOperator);
	}
	return this;
};
oFF.QCmdAbstract.prototype.clearSingleMemberFilter = function(member, comparisonOperator)
{
	if (oFF.notNull(member))
	{
		var dimName = member.getDimension().getName();
		return this.clearSingleMemberFilterByName(dimName, member.getName(), comparisonOperator);
	}
	return this;
};
oFF.QCmdAbstract.prototype.addSingleMemberVisibilityFilterByDimension = function(dimension, memberName, comparisonOperator)
{
	if (oFF.notNull(dimension))
	{
		return this.addSingleMemberVisibilityFilterByDimensionName(dimension.getName(), memberName, comparisonOperator);
	}
	return null;
};
oFF.QCmdAbstract.prototype.addSingleMemberFilterByDimension = function(dimension, memberName, comparisonOperator)
{
	if (oFF.notNull(dimension))
	{
		return this.addSingleMemberFilterByDimensionName(dimension.getName(), memberName, comparisonOperator);
	}
	return null;
};
oFF.QCmdAbstract.prototype.clearFilters = function()
{
	return this.clearAllFiltersExt(oFF.FilterLayer.DYNAMIC, oFF.FilterScopeVariables.IGNORE);
};
oFF.QCmdAbstract.prototype.clearVisibilityFilters = function()
{
	return this.clearAllFiltersExt(oFF.FilterLayer.VISIBILITY, oFF.FilterScopeVariables.IGNORE);
};
oFF.QCmdAbstract.prototype.clearFiltersNotAffectedByVariables = function()
{
	return this.clearAllFiltersExt(oFF.FilterLayer.DYNAMIC, oFF.FilterScopeVariables.NOT_AFFECTED_BY_VARIABLES);
};
oFF.QCmdAbstract.prototype.clearFiltersNotCreatedByVariables = function()
{
	return this.clearAllFiltersExt(oFF.FilterLayer.DYNAMIC, oFF.FilterScopeVariables.NOT_CREATED_BY_VARIABLES);
};
oFF.QCmdAbstract.prototype.clearMeasureFilters = function()
{
	return this.clearFiltersByDimensionExt(oFF.FilterLayer.DYNAMIC, oFF.DimensionType.MEASURE_STRUCTURE, null);
};
oFF.QCmdAbstract.prototype.clearFiltersByDimensionName = function(dimName)
{
	return this.clearFiltersByDimensionExt(oFF.FilterLayer.DYNAMIC, null, dimName);
};
oFF.QCmdAbstract.prototype.clearVisibilityFiltersByDimensionName = function(dimName)
{
	return this.clearFiltersByDimensionExt(oFF.FilterLayer.VISIBILITY, null, dimName);
};
oFF.QCmdAbstract.prototype.clearFiltersByDimension = function(dimension)
{
	if (oFF.notNull(dimension))
	{
		return this.clearFiltersByDimensionExt(oFF.FilterLayer.DYNAMIC, null, dimension.getName());
	}
	return this;
};
oFF.QCmdAbstract.prototype.clearVisibilityFiltersByDimension = function(dimension)
{
	if (oFF.notNull(dimension))
	{
		return this.clearFiltersByDimensionExt(oFF.FilterLayer.VISIBILITY, null, dimension.getName());
	}
	return this;
};
oFF.QCmdAbstract.prototype.clearFilterById = function(uniqueId)
{
	return this.clearFilterByIdExt(oFF.FilterLayer.DYNAMIC, uniqueId);
};
oFF.QCmdAbstract.prototype.clearVisibilityFilterById = function(uniqueId)
{
	return this.clearFilterByIdExt(oFF.FilterLayer.VISIBILITY, uniqueId);
};
oFF.QCmdAbstract.prototype.addSimpleSingleMemberFilter = function(dimName, memberName)
{
	return this.addSingleMemberFilterByDimensionName(dimName, memberName, oFF.ComparisonOperator.EQUAL);
};
oFF.QCmdAbstract.prototype.addSearchForKeyUsingDynamicFilter = function(dimension, searchValue)
{
	return oFF.isNull(dimension) ? null : dimension.addSearchForKeyUsingDynamicFilter(searchValue);
};
oFF.QCmdAbstract.prototype.addSearchForTextUsingDynamicFilter = function(dimension, searchValue)
{
	return oFF.isNull(dimension) ? null : dimension.addSearchForTextUsingDynamicFilter(searchValue);
};
oFF.QCmdAbstract.prototype.addSingleMeasureFilter = function(measureName)
{
	return this.addSingleMemberFilter(oFF.FilterLayer.DYNAMIC, oFF.DimensionType.MEASURE_STRUCTURE, null, measureName, oFF.ComparisonOperator.EQUAL);
};
oFF.QCmdAbstract.prototype.addSingleMeasureVisibilityFilter = function(measureName)
{
	return this.addSingleMemberFilter(oFF.FilterLayer.VISIBILITY, oFF.DimensionType.MEASURE_STRUCTURE, null, measureName, oFF.ComparisonOperator.EQUAL);
};
oFF.QCmdAbstract.prototype.addSingleStructureMemberFilterByType = function(structureType, structureMemberName, comparisonOperator)
{
	return this.addSingleMemberFilter(oFF.FilterLayer.DYNAMIC, structureType, null, structureMemberName, comparisonOperator);
};
oFF.QCmdAbstract.prototype.addSingleStructureMemberVisibilityFilterByType = function(structureType, structureMemberName, comparisonOperator)
{
	return this.addSingleMemberFilter(oFF.FilterLayer.VISIBILITY, structureType, null, structureMemberName, comparisonOperator);
};
oFF.QCmdAbstract.prototype.addSingleMemberFilterByDimensionMember = function(dimensionMember, comparisonOperator)
{
	return this.addSingleMemberFilter(oFF.FilterLayer.DYNAMIC, null, dimensionMember.getDimension().getName(), dimensionMember.getName(), comparisonOperator);
};
oFF.QCmdAbstract.prototype.addSingleMemberVisibilityFilterByDimensionMember = function(dimensionMember, comparisonOperator)
{
	return this.addSingleMemberFilter(oFF.FilterLayer.VISIBILITY, null, dimensionMember.getDimension().getName(), dimensionMember.getName(), comparisonOperator);
};
oFF.QCmdAbstract.prototype.addSingleMemberFilterByDimensionName = function(dimName, memberName, comparisonOperator)
{
	return this.addSingleMemberFilter(oFF.FilterLayer.DYNAMIC, null, dimName, memberName, comparisonOperator);
};
oFF.QCmdAbstract.prototype.addSingleMemberVisibilityFilterByDimensionName = function(dimName, memberName, comparisonOperator)
{
	return this.addSingleMemberFilter(oFF.FilterLayer.VISIBILITY, null, dimName, memberName, comparisonOperator);
};
oFF.QCmdAbstract.prototype.addIntervallFilterByIntegerValues = function(dimName, lowValue, highValue)
{
	return this.addIntervallFilterByStringValues(dimName, oFF.XInteger.convertToString(lowValue), oFF.XInteger.convertToString(highValue));
};
oFF.QCmdAbstract.prototype.addIntervallFilterByLongValues = function(dimName, lowValue, highValue)
{
	return this.addIntervallFilterByStringValues(dimName, oFF.XLong.convertToString(lowValue), oFF.XLong.convertToString(highValue));
};
oFF.QCmdAbstract.prototype.addIntervallFilterByStringValues = function(dimName, lowValue, highValue)
{
	var filterOp = this.addFilter(oFF.FilterLayer.DYNAMIC, null, dimName, null, null, lowValue, highValue, oFF.ComparisonOperator.BETWEEN);
	return oFF.QCmdAbstract.castParentToCartesianList(filterOp);
};
oFF.QCmdAbstract.prototype.addIntervallVisibilityFilterByStringValues = function(dimName, lowValue, highValue)
{
	var filterOp = this.addFilter(oFF.FilterLayer.VISIBILITY, null, dimName, null, null, lowValue, highValue, oFF.ComparisonOperator.BETWEEN);
	return oFF.QCmdAbstract.castParentToCartesianList(filterOp);
};
oFF.QCmdAbstract.prototype.clearAxisStr = function(targetAxis)
{
	return this.clearAxis(oFF.AxisType.lookup(targetAxis));
};
oFF.QCmdAbstract.prototype.moveDimensionToRows = function(dimName)
{
	return this.moveDimensionToAxis(dimName, oFF.AxisType.ROWS);
};
oFF.QCmdAbstract.prototype.moveDimensionToColumns = function(dimName)
{
	return this.moveDimensionToAxis(dimName, oFF.AxisType.COLUMNS);
};
oFF.QCmdAbstract.prototype.moveDimensionToFree = function(dimName)
{
	return this.moveDimensionToAxis(dimName, oFF.AxisType.FREE);
};
oFF.QCmdAbstract.prototype.moveMeasureDimensionToAxis = function(targetAxis)
{
	return this.moveDimensionByTypeToAxis(oFF.DimensionType.MEASURE_STRUCTURE, targetAxis);
};
oFF.QCmdAbstract.prototype.moveDimensionByTypeToAxis = function(dimType, targetAxis)
{
	return this.moveDimensionExt(dimType, null, targetAxis, -1);
};
oFF.QCmdAbstract.prototype.moveDimensionOnAxisTo = function(dimName, targetAxis, index)
{
	return this.moveDimensionExt(null, dimName, targetAxis, index);
};
oFF.QCmdAbstract.prototype.moveDimensionToAxisStr = function(dimName, targetAxis)
{
	return this.moveDimensionToAxis(dimName, oFF.AxisType.lookup(targetAxis));
};
oFF.QCmdAbstract.prototype.moveDimensionToAxis = function(dimName, targetAxis)
{
	return this.moveDimensionExt(null, dimName, targetAxis, -1);
};
oFF.QCmdAbstract.prototype.addDimension = function(dimName)
{
	return this.moveDimensionExt(null, dimName, oFF.AxisType.ROWS, -1);
};
oFF.QCmdAbstract.prototype.addAllDimensionFieldsToResultSet = function()
{
	return this.addAllFieldsToModelArea(oFF.QContextType.RESULT_SET);
};
oFF.QCmdAbstract.prototype.addAllDimensionFieldsToSelector = function()
{
	return this.addAllFieldsToModelArea(oFF.QContextType.SELECTOR);
};
oFF.QCmdAbstract.prototype.clearAllDimensionFieldsFromResultSet = function()
{
	return this.clearAllFieldsFromModelArea(oFF.QContextType.RESULT_SET);
};
oFF.QCmdAbstract.prototype.clearAllDimensionFieldsFromSelector = function()
{
	return this.clearAllFieldsFromModelArea(oFF.QContextType.SELECTOR);
};
oFF.QCmdAbstract.prototype.addAllFieldsToResultSet = function(dimName)
{
	return this.addAllFieldsOfDimensionToModelArea(dimName, oFF.QContextType.RESULT_SET);
};
oFF.QCmdAbstract.prototype.addAllFieldsToSelector = function(dimName)
{
	return this.addAllFieldsOfDimensionToModelArea(dimName, oFF.QContextType.SELECTOR);
};
oFF.QCmdAbstract.prototype.addFieldToResultSet = function(dimName, fieldName)
{
	return this.addField(null, dimName, null, fieldName, oFF.QContextType.RESULT_SET);
};
oFF.QCmdAbstract.prototype.addFieldToSelector = function(dimName, fieldName)
{
	return this.addField(null, dimName, null, fieldName, oFF.QContextType.SELECTOR);
};
oFF.QCmdAbstract.prototype.clearAllResultSetFields = function(dimName)
{
	return this.clearFields(null, dimName, oFF.QContextType.RESULT_SET);
};
oFF.QCmdAbstract.prototype.clearAllSelectorFields = function(dimName)
{
	return this.clearFields(null, dimName, oFF.QContextType.SELECTOR);
};
oFF.QCmdAbstract.prototype.clearAllFields = function(dimName, contextType)
{
	return this.clearFields(null, dimName, contextType);
};
oFF.QCmdAbstract.prototype.clearAllAttributeFields = function(dimName, attributeName, contextType)
{
	return this.clearAttributeFields(null, dimName, attributeName, contextType);
};
oFF.QCmdAbstract.prototype.clearAllAttributes = function(dimName, contextType)
{
	return this.clearAttributes(null, dimName, contextType);
};
oFF.QCmdAbstract.prototype.clearFieldFromResultSet = function(dimName, fieldName)
{
	return this.removeField(null, dimName, null, fieldName, oFF.QContextType.RESULT_SET);
};
oFF.QCmdAbstract.prototype.clearFieldFromSelector = function(dimName, fieldName)
{
	return this.removeField(null, dimName, null, fieldName, oFF.QContextType.SELECTOR);
};
oFF.QCmdAbstract.prototype.containsResultSetField = function(dimName, fieldName)
{
	return this.containsField(dimName, fieldName, oFF.QContextType.RESULT_SET);
};
oFF.QCmdAbstract.prototype.containsSelectorField = function(dimName, fieldName)
{
	return this.containsField(dimName, fieldName, oFF.QContextType.SELECTOR);
};
oFF.QCmdAbstract.prototype.addPresentation = function(dimType, dimName, presentationType, contextType)
{
	return this.addField(dimType, dimName, presentationType, null, contextType);
};
oFF.QCmdAbstract.prototype.addMeasureFieldByTypeToResultSet = function(presentationType)
{
	return this.addPresentation(oFF.DimensionType.MEASURE_STRUCTURE, null, presentationType, oFF.QContextType.RESULT_SET);
};
oFF.QCmdAbstract.prototype.addMeasureFieldByTypeToSelector = function(presentationType)
{
	return this.addPresentation(oFF.DimensionType.MEASURE_STRUCTURE, null, presentationType, oFF.QContextType.SELECTOR);
};
oFF.QCmdAbstract.prototype.addFieldByTypeToResultSetStr = function(dimName, presentationType)
{
	return this.addFieldByTypeToResultSet(dimName, oFF.PresentationType.lookup(presentationType));
};
oFF.QCmdAbstract.prototype.addFieldByTypeToResultSet = function(dimName, presentationType)
{
	return this.addPresentation(null, dimName, presentationType, oFF.QContextType.RESULT_SET);
};
oFF.QCmdAbstract.prototype.addFieldByTypeToSelector = function(dimName, presentationType)
{
	return this.addPresentation(null, dimName, presentationType, oFF.QContextType.SELECTOR);
};
oFF.QCmdAbstract.prototype.clearMeasureFieldByTypeFromResultSet = function(presentationType)
{
	return this.removePresentation(oFF.DimensionType.MEASURE_STRUCTURE, null, presentationType, oFF.QContextType.RESULT_SET);
};
oFF.QCmdAbstract.prototype.clearMeasureFieldByTypeFromSelector = function(presentationType)
{
	return this.removePresentation(oFF.DimensionType.MEASURE_STRUCTURE, null, presentationType, oFF.QContextType.SELECTOR);
};
oFF.QCmdAbstract.prototype.removePresentation = function(dimType, dimName, presentationType, contextType)
{
	return this.removeField(dimType, dimName, presentationType, null, contextType);
};
oFF.QCmdAbstract.prototype.clearFieldByTypeFromResultSet = function(dimName, presentationType)
{
	return this.removePresentation(null, dimName, presentationType, oFF.QContextType.RESULT_SET);
};
oFF.QCmdAbstract.prototype.clearFieldByTypeFromSelector = function(dimName, presentationType)
{
	return this.removePresentation(null, dimName, presentationType, oFF.QContextType.SELECTOR);
};
oFF.QCmdAbstract.prototype.showKey = function(dimName)
{
	this.setField(null, dimName, oFF.PresentationType.ACTIVE_KEY, null, oFF.QContextType.RESULT_SET);
	return this;
};
oFF.QCmdAbstract.prototype.showText = function(dimName)
{
	this.setField(null, dimName, oFF.PresentationType.ACTIVE_TEXT, null, oFF.QContextType.RESULT_SET);
	return this;
};
oFF.QCmdAbstract.prototype.showKeyAndText = function(dimName)
{
	this.queueEventing();
	this.clearAllFields(dimName, oFF.QContextType.RESULT_SET);
	this.addPresentation(null, dimName, oFF.PresentationType.ACTIVE_KEY, oFF.QContextType.RESULT_SET);
	this.addPresentation(null, dimName, oFF.PresentationType.ACTIVE_TEXT, oFF.QContextType.RESULT_SET);
	this.resumeEventing();
	return this;
};
oFF.QCmdAbstract.prototype.showTextAndKey = function(dimName)
{
	this.queueEventing();
	this.clearAllFields(dimName, oFF.QContextType.RESULT_SET);
	this.addPresentation(null, dimName, oFF.PresentationType.ACTIVE_TEXT, oFF.QContextType.RESULT_SET);
	this.addPresentation(null, dimName, oFF.PresentationType.ACTIVE_KEY, oFF.QContextType.RESULT_SET);
	this.resumeEventing();
	return this;
};
oFF.QCmdAbstract.prototype.alignTotalsOnTop = function(totalsController)
{
	return this.alignTotals(totalsController.getModelLevel(), totalsController.getName(), oFF.ResultAlignment.TOP);
};
oFF.QCmdAbstract.prototype.alignTotalsOnBottom = function(totalsController)
{
	return this.alignTotals(totalsController.getModelLevel(), totalsController.getName(), oFF.ResultAlignment.BOTTOM);
};
oFF.QCmdAbstract.prototype.alignTotalsOnTopAndBottom = function(totalsController)
{
	return this.alignTotals(totalsController.getModelLevel(), totalsController.getName(), oFF.ResultAlignment.TOPBOTTOM);
};
oFF.QCmdAbstract.prototype.alignTotalsOnDefault = function(totalsController)
{
	return this.alignTotals(totalsController.getModelLevel(), totalsController.getName(), null);
};
oFF.QCmdAbstract.prototype.setTotalsVisibleOnDimension = function(dimName, visibility)
{
	return this.setTotalsVisible(oFF.QModelLevel.DIMENSIONS, dimName, visibility);
};
oFF.QCmdAbstract.prototype.setTotalsVisibleOnAxis = function(axisType, visibility)
{
	if (oFF.notNull(axisType))
	{
		return this.setTotalsVisible(oFF.QModelLevel.AXES, axisType.getName(), visibility);
	}
	return this;
};
oFF.QCmdAbstract.prototype.getSupportedExceptionAggregationTypes = function(memberType)
{
	return this.getSupportedExceptionAggregationTypes(memberType);
};
oFF.QCmdAbstract.prototype.getSupportedDimensionsForExceptionAggregation = function(memberType, aggrType)
{
	return this.getSupportedDimensionsForExceptionAggregation(memberType, aggrType);
};
oFF.QCmdAbstract.prototype.getMaxNumberOfDimensionsForExceptionAggregation = function(memberType, aggrType)
{
	return this.getMaxNumberOfDimensionsForExceptionAggregation(memberType, aggrType);
};
oFF.QCmdAbstract.prototype.clearSorting = function()
{
	return this.clearSort(null, null);
};
oFF.QCmdAbstract.prototype.clearDimensionSort = function(dimName)
{
	return this.clearSort(oFF.SortType.ABSTRACT_DIMENSION_SORT, dimName);
};
oFF.QCmdAbstract.prototype.sortByKey = function(dimName, direction)
{
	return this.sort(oFF.SortType.MEMBER_KEY, null, dimName, null, null, null, direction);
};
oFF.QCmdAbstract.prototype.sortByText = function(dimName, direction)
{
	return this.sort(oFF.SortType.MEMBER_TEXT, null, dimName, null, null, null, direction);
};
oFF.QCmdAbstract.prototype.sortByHierarchy = function(dimName, direction)
{
	return this.sort(oFF.SortType.HIERARCHY, null, dimName, null, null, null, direction);
};
oFF.QCmdAbstract.prototype.sortByMeasure = function(measureName, direction)
{
	return this.sort(oFF.SortType.MEASURE, null, null, null, null, measureName, direction);
};
oFF.QCmdAbstract.prototype.sortByField = function(fieldName, direction)
{
	return this.sort(oFF.SortType.FIELD, null, null, null, fieldName, null, direction);
};
oFF.QCmdAbstract.prototype.cloneOlapComponent = oFF.noSupport;
oFF.QCmdAbstract.prototype.getChangedProperties = function()
{
	return null;
};
oFF.QCmdAbstract.prototype.setChangedProperties = oFF.noSupport;
oFF.QCmdAbstract.prototype.getSystemName = function()
{
	return null;
};

oFF.QModelComponent = function() {};
oFF.QModelComponent.prototype = new oFF.DfQContext();
oFF.QModelComponent.prototype._ff_c = "QModelComponent";

oFF.QModelComponent.prototype.m_name = null;
oFF.QModelComponent.prototype.m_text = null;
oFF.QModelComponent.prototype.m_storageGroupName = null;
oFF.QModelComponent.prototype.m_tagging = null;
oFF.QModelComponent.prototype.m_primaryParent = null;
oFF.QModelComponent.prototype.m_secondaryParents = null;
oFF.QModelComponent.prototype.m_modCounter = 0;
oFF.QModelComponent.prototype.m_changedListeners = null;
oFF.QModelComponent.prototype.m_deserializeListeners = null;
oFF.QModelComponent.prototype.m_state = null;
oFF.QModelComponent.prototype.m_deltaStack = null;
oFF.QModelComponent.prototype.m_currentDeltaPhase = null;
oFF.QModelComponent.prototype.m_changedNodes = null;
oFF.QModelComponent.prototype.m_isInRaiseEvents = false;
oFF.QModelComponent.prototype.m_notificationListener = null;
oFF.QModelComponent.prototype.m_changedProperties = null;
oFF.QModelComponent.prototype.copyModelComponent = function(other, flags)
{
	this.copyFrom(other, flags);
};
oFF.QModelComponent.prototype.copyFromInternal = function(other, flags)
{
	var originObj = other;
	this.m_name = originObj.m_name;
	this.m_text = originObj.m_text;
	var queryModel = this.getQueryManager() !== null ? this.getQueryModelBase() : null;
	if (oFF.isNull(queryModel) || !queryModel.isInQueryModelMergeFlow())
	{
		this.m_modCounter = originObj.m_modCounter;
	}
	if (oFF.notNull(originObj.m_tagging))
	{
		this.m_tagging = originObj.m_tagging.createMapOfStringByStringCopy();
	}
	if (oFF.XCollectionUtils.hasElements(originObj.m_changedProperties))
	{
		this.m_changedProperties = originObj.m_changedProperties.createSetCopy();
	}
};
oFF.QModelComponent.prototype.setupModelComponentWithName = function(context, parentNode, name)
{
	this.setupModelComponent(context, parentNode);
	this.setName(name);
};
oFF.QModelComponent.prototype.setupModelComponent = function(context, parentNode)
{
	var theContext = context;
	if (oFF.isNull(theContext) && oFF.notNull(parentNode))
	{
		theContext = parentNode.getContext();
	}
	this.setupContext(theContext);
	this.m_primaryParent = oFF.XWeakReferenceUtil.getWeakRef(parentNode);
	this.m_state = oFF.QDeltaChangeState.UNCHANGED;
	this.m_isInRaiseEvents = false;
	this.m_changedProperties = oFF.XHashSetOfString.create();
};
oFF.QModelComponent.prototype.releaseObject = function()
{
	this.m_name = null;
	this.m_text = null;
	this.m_state = null;
	this.m_modCounter = 0;
	this.m_primaryParent = null;
	this.m_changedListeners = oFF.XObjectExt.release(this.m_changedListeners);
	this.m_deserializeListeners = oFF.XObjectExt.release(this.m_deserializeListeners);
	this.m_secondaryParents = oFF.XObjectExt.release(this.m_secondaryParents);
	if (oFF.notNull(this.m_changedNodes))
	{
		this.m_changedNodes.clear();
	}
	this.m_tagging = oFF.XObjectExt.release(this.m_tagging);
	this.m_notificationListener = null;
	oFF.DfQContext.prototype.releaseObject.call( this );
};
oFF.QModelComponent.prototype.getComponentType = function()
{
	return this.getOlapComponentType();
};
oFF.QModelComponent.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.OLAP;
};
oFF.QModelComponent.prototype.isRoot = function()
{
	return oFF.isNull(this.m_primaryParent);
};
oFF.QModelComponent.prototype.getParent = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_primaryParent);
};
oFF.QModelComponent.prototype.getParentComponent = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_primaryParent);
};
oFF.QModelComponent.prototype.setParent = function(parent)
{
	this.m_primaryParent = oFF.XWeakReferenceUtil.getWeakRef(parent);
	if (oFF.notNull(parent) && this.getContext() === null)
	{
		this.setContext(parent.getContext());
	}
};
oFF.QModelComponent.prototype.addSecondaryParent = function(parent)
{
	if (parent === this)
	{
		throw oFF.XException.createIllegalArgumentException("The parent cannot be set to itself");
	}
	if (oFF.isNull(this.m_secondaryParents))
	{
		this.m_secondaryParents = oFF.XListWeakRef.create();
	}
	this.m_secondaryParents.add(parent);
};
oFF.QModelComponent.prototype.removeSecondaryParent = function(parent)
{
	if (oFF.notNull(this.m_secondaryParents))
	{
		var parentsSize = this.m_secondaryParents.size();
		for (var i = 0; i < parentsSize; i++)
		{
			if (this.m_secondaryParents.get(i) === parent)
			{
				this.m_secondaryParents.removeAt(i);
				break;
			}
		}
	}
};
oFF.QModelComponent.prototype.getName = function()
{
	return this.m_name;
};
oFF.QModelComponent.prototype.setName = function(name)
{
	this.m_name = name;
};
oFF.QModelComponent.prototype.getText = function()
{
	return this.m_text;
};
oFF.QModelComponent.prototype.setText = function(text)
{
	this.m_text = text;
};
oFF.QModelComponent.prototype.isComponentNode = function()
{
	return false;
};
oFF.QModelComponent.prototype.getChildren = function()
{
	return this.getChildrenIterator();
};
oFF.QModelComponent.prototype.getChildrenIterator = function()
{
	var namedChildren = this.getNamedChildren();
	var indexedChildren = this.getIndexedChildren();
	if (oFF.notNull(indexedChildren) && oFF.isNull(namedChildren))
	{
		return indexedChildren;
	}
	var all = oFF.XList.create();
	if (oFF.notNull(namedChildren))
	{
		var keysAsReadOnlyListOfString = namedChildren.getKeysAsReadOnlyListOfString();
		var keys = oFF.XListOfString.createFromReadOnlyList(keysAsReadOnlyListOfString);
		keys.sortByDirection(oFF.XSortDirection.ASCENDING);
		var size = keys.size();
		for (var i = 0; i < size; i++)
		{
			all.add(namedChildren.getByKey(keys.get(i)));
		}
	}
	if (oFF.notNull(indexedChildren))
	{
		while (indexedChildren.hasNext())
		{
			all.add(indexedChildren.next());
		}
	}
	return all.getIterator();
};
oFF.QModelComponent.prototype.getNamedChildren = function()
{
	return null;
};
oFF.QModelComponent.prototype.getIndexedChildren = function()
{
	return null;
};
oFF.QModelComponent.prototype.getPropertyStringValue = function(type)
{
	if (type === oFF.OlapProperty.NAME)
	{
		return this.getName();
	}
	if (type === oFF.OlapProperty.TEXT)
	{
		return this.getText();
	}
	return null;
};
oFF.QModelComponent.prototype.assertValueType = function(value, valueType)
{
	if (oFF.notNull(value) && value.getValueType() !== valueType)
	{
		oFF.noSupport();
	}
};
oFF.QModelComponent.prototype.getTagging = function()
{
	if (oFF.isNull(this.m_tagging))
	{
		this.m_tagging = oFF.XHashMapOfStringByString.create();
	}
	return this.m_tagging;
};
oFF.QModelComponent.prototype.setTagging = function(tagging)
{
	this.m_tagging = tagging;
};
oFF.QModelComponent.prototype.serializeToElement = function(modelFormat)
{
	return this.serializeToElementExt(modelFormat, null);
};
oFF.QModelComponent.prototype.serializeToElementExt = function(modelFormat, capabilities)
{
	var content = this.serializeToContentExt(modelFormat, capabilities);
	return content.getJsonContent();
};
oFF.QModelComponent.prototype.serializeToFormat = function(modelFormat)
{
	return this.serializeToString(modelFormat);
};
oFF.QModelComponent.prototype.serializeToString = function(modelFormat)
{
	return this.serializeToStringExt(modelFormat, null);
};
oFF.QModelComponent.prototype.serialize = function(modelFormat, capabilities)
{
	return this.serializeToStringExt(modelFormat, capabilities);
};
oFF.QModelComponent.prototype.serializeToStringExt = function(modelFormat, capabilities)
{
	var content = this.serializeToContentExt(modelFormat, capabilities);
	return content.getString();
};
oFF.QModelComponent.prototype.serializeToContent = function(modelFormat)
{
	return this.serializeToContentExt(modelFormat, null);
};
oFF.QModelComponent.prototype.serializeToContentExt = function(modelFormat, capabilities)
{
	var exporter;
	var theCapabilities = capabilities;
	if (oFF.isNull(theCapabilities) && modelFormat.isTypeOf(oFF.QModelFormat.INA_DATA))
	{
		theCapabilities = this.getModelCapabilities();
	}
	var contextType = null;
	if (modelFormat.isTypeOf(oFF.QModelFormat.INA_DATA))
	{
		contextType = oFF.QContextType.RESULT_SET;
	}
	exporter = oFF.QInAExportFactory.create(this.getApplication(), modelFormat, theCapabilities, contextType);
	var element = exporter.exportComponent(null, this, null, oFF.QImExFlag.DEFAULT_ALL);
	var content = oFF.XContent.createJsonObjectContent(modelFormat, element);
	return content;
};
oFF.QModelComponent.prototype.raiseDeserializeEvent = function(currentState)
{
	if (oFF.notNull(this.m_deserializeListeners))
	{
		var listenerSize = this.m_deserializeListeners.size();
		for (var idxListener = 0; idxListener < listenerSize; idxListener++)
		{
			var pair = this.m_deserializeListeners.get(idxListener);
			var listener = pair.getListener();
			if (oFF.notNull(listener))
			{
				listener.onModelComponentDeserialize(this, currentState, pair.getCustomIdentifier());
			}
		}
	}
};
oFF.QModelComponent.prototype.deserializeExt = function(modelFormat, expression)
{
	var jsonParser = oFF.JsonParserFactory.newInstance();
	var element = jsonParser.parse(expression);
	if (jsonParser.hasErrors())
	{
		return oFF.ExtResult.create(null, jsonParser);
	}
	oFF.XObjectExt.release(jsonParser);
	return this.deserializeInternal(this, null, modelFormat, element);
};
oFF.QModelComponent.prototype.deserializeFromContent = function(content)
{
	return this.deserializeInternal(this, null, content.getContentType(), content.getJsonContent());
};
oFF.QModelComponent.prototype.deserializeFromElementExt = function(modelFormat, element)
{
	return this.deserializeInternal(this, null, modelFormat, element);
};
oFF.QModelComponent.prototype.deserializeNewComponentExt = function(componentType, modelFormat, expression)
{
	var jsonParser = oFF.JsonParserFactory.newInstance();
	var element = jsonParser.parse(expression);
	if (jsonParser.hasErrors())
	{
		return oFF.ExtResult.create(null, jsonParser);
	}
	oFF.XObjectExt.release(jsonParser);
	return this.deserializeInternal(null, componentType, modelFormat, element);
};
oFF.QModelComponent.prototype.deserializeNewComponentFromElementExt = function(componentType, modelFormat, element)
{
	return this.deserializeInternal(this, componentType, modelFormat, element);
};
oFF.QModelComponent.prototype.deserializeInternal = function(modelComponent, componentType, modelFormat, element)
{
	var importer = oFF.QInAImportFactory.create(this.getApplication(), modelFormat, null);
	if (oFF.isNull(element))
	{
		if (oFF.isNull(importer))
		{
			return oFF.ExtResult.create(null, oFF.MessageManager.createMessageManagerExt(this.getSession()));
		}
		return oFF.ExtResult.create(null, importer);
	}
	this.raiseDeserializeEvent(element);
	var context = this.getContext();
	var resultComponent = importer.importComponent(componentType, element, modelComponent, oFF.notNull(modelComponent) ? modelComponent.getParent() : null, context);
	return oFF.ExtResult.create(resultComponent, importer);
};
oFF.QModelComponent.prototype.getModCounter = function()
{
	return this.m_modCounter;
};
oFF.QModelComponent.prototype.queueEventing = function()
{
	this.setDeltaPhase(oFF.QDeltaOperationPhase.QUEUE);
};
oFF.QModelComponent.prototype.stopEventing = function()
{
	this.setDeltaPhase(oFF.QDeltaOperationPhase.STOP);
};
oFF.QModelComponent.prototype.resumeEventing = function()
{
	this.setDeltaPhase(oFF.QDeltaOperationPhase.RESUME);
};
oFF.QModelComponent.prototype.isEventingStopped = function()
{
	var parentDeltaNode = this.getParentComponent();
	var isEventingStopped;
	if (oFF.isNull(parentDeltaNode))
	{
		var queryModel = this.getQueryModel();
		if (this.getOlapComponentType() !== oFF.OlapComponentType.QUERY_MODEL && oFF.notNull(queryModel))
		{
			isEventingStopped = queryModel.isEventingStopped();
		}
		else
		{
			isEventingStopped = this.m_currentDeltaPhase === oFF.QDeltaOperationPhase.STOP;
		}
	}
	else
	{
		isEventingStopped = parentDeltaNode.isEventingStopped();
	}
	return isEventingStopped;
};
oFF.QModelComponent.prototype.isEventingMetadataUpdate = function()
{
	var parentDeltaNode = this.getParentComponent();
	var isEventingMetadataUpdate;
	if (oFF.isNull(parentDeltaNode))
	{
		isEventingMetadataUpdate = oFF.XCollectionUtils.hasElements(this.m_deltaStack) && this.m_deltaStack.get(0) === oFF.QDeltaOperationPhase.NOTIFY_PAUSE_MODCOUNTER;
	}
	else
	{
		isEventingMetadataUpdate = parentDeltaNode.isEventingMetadataUpdate();
	}
	return isEventingMetadataUpdate;
};
oFF.QModelComponent.prototype.isRaisingEvents = function()
{
	var parentDeltaNode = this.getParentComponent();
	var isRaisingEvents;
	if (oFF.isNull(parentDeltaNode))
	{
		isRaisingEvents = !oFF.XCollectionUtils.hasElements(this.m_deltaStack) || this.m_deltaStack.get(0) !== oFF.QDeltaOperationPhase.NOTIFY_DO_NOT_RAISEEVENTS;
	}
	else
	{
		isRaisingEvents = parentDeltaNode.isRaisingEvents();
	}
	return isRaisingEvents;
};
oFF.QModelComponent.prototype.setDeltaPhase = function(phase)
{
	var parentDeltaNode = this.getParentComponent();
	if (oFF.isNull(parentDeltaNode))
	{
		if (oFF.isNull(this.m_deltaStack))
		{
			this.m_deltaStack = oFF.XList.create();
		}
		if (phase === oFF.QDeltaOperationPhase.RESUME)
		{
			this.m_deltaStack.removeAt(this.m_deltaStack.size() - 1);
		}
		else
		{
			this.m_deltaStack.add(phase);
		}
		var oldPhase = this.m_currentDeltaPhase;
		this.m_currentDeltaPhase = null;
		var stackSize = this.m_deltaStack.size();
		for (var i = 0; i < stackSize && this.m_currentDeltaPhase !== oFF.QDeltaOperationPhase.STOP; i++)
		{
			this.m_currentDeltaPhase = this.m_deltaStack.get(i);
		}
		if ((oldPhase === oFF.QDeltaOperationPhase.QUEUE || oldPhase === oFF.QDeltaOperationPhase.NOTIFY_PAUSE_MODCOUNTER) && oFF.isNull(this.m_currentDeltaPhase))
		{
			this.raiseEvents();
		}
	}
	else
	{
		parentDeltaNode.setDeltaPhase(phase);
	}
};
oFF.QModelComponent.prototype.getNotificationListener = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_notificationListener);
};
oFF.QModelComponent.prototype.setNotificationListener = function(owner)
{
	this.m_notificationListener = oFF.XWeakReferenceUtil.getWeakRef(owner);
};
oFF.QModelComponent.prototype.onModelChangeBeforeBroadcast = function(changedNodes)
{
	var owner = this.getNotificationListener();
	if (oFF.notNull(owner))
	{
		owner.onModelChange(oFF.QDeltaBroadcastPhase.BEFORE_EVENTS_BROADCAST);
	}
};
oFF.QModelComponent.prototype.onModelChangeAfterBroadcast = function(changedNodes)
{
	var owner = this.getNotificationListener();
	if (oFF.notNull(owner))
	{
		owner.onModelChange(oFF.QDeltaBroadcastPhase.AFTER_EVENTS_BROADCAST);
	}
};
oFF.QModelComponent.prototype.resetChangeState = function()
{
	if (oFF.isNull(this.m_primaryParent) && oFF.notNull(this.m_changedNodes))
	{
		var nodeSize = this.m_changedNodes.size();
		for (var i = 0; i < nodeSize; i++)
		{
			var node = this.m_changedNodes.get(i);
			if (node !== this && !node.isRoot())
			{
				node.resetChangeState();
			}
		}
		this.m_changedNodes.clear();
	}
	this.m_state = oFF.QDeltaChangeState.UNCHANGED;
};
oFF.QModelComponent.prototype.notifyChildAttached = function(child)
{
	if (oFF.notNull(child))
	{
		child.setParent(this);
	}
	this.notifyNodeChanged();
};
oFF.QModelComponent.prototype.hasPropertyChanged = function(propertyName)
{
	return this.m_changedProperties.contains(propertyName);
};
oFF.QModelComponent.prototype.notifyPropertyChanged = function(name, oldValue, newValue)
{
	if (this.isDeltaRecordingActive())
	{
		this.m_changedProperties.add(name);
	}
	this.notifyNodeChanged();
};
oFF.QModelComponent.prototype.notifyPropertyIntegerChanged = function(name, oldValue, newValue)
{
	if (this.isDeltaRecordingActive())
	{
		this.m_changedProperties.add(name);
	}
	this.notifyNodeChanged();
};
oFF.QModelComponent.prototype.notifyPropertyStringChanged = function(name, oldValue, newValue)
{
	if (this.isDeltaRecordingActive())
	{
		this.m_changedProperties.add(name);
	}
	this.notifyNodeChanged();
};
oFF.QModelComponent.prototype.notifyPropertyBooleanChanged = function(name, oldValue, newValue)
{
	if (this.isDeltaRecordingActive())
	{
		this.m_changedProperties.add(name);
	}
	this.notifyNodeChanged();
};
oFF.QModelComponent.prototype.notifyPropertyConstantChanged = function(name, oldValue, newValue)
{
	if (oldValue === newValue)
	{
		return;
	}
	if (this.isDeltaRecordingActive())
	{
		this.m_changedProperties.add(name);
	}
	this.notifyNodeChanged();
};
oFF.QModelComponent.prototype.isDeltaRecordingActive = function()
{
	return this.isEventingStopped() === false && this.isEventingMetadataUpdate() === false;
};
oFF.QModelComponent.prototype.notifyNodeChanged = function()
{
	this.notifyChildChanged(oFF.XList.create());
};
oFF.QModelComponent.prototype.reconfigure = function(procedure)
{
	this.stopEventing();
	procedure();
	this.resumeEventing();
	this.notifyNodeChanged();
};
oFF.QModelComponent.prototype.changedNodesContains = function(node)
{
	if (oFF.isNull(this.m_changedNodes))
	{
		this.m_changedNodes = oFF.XList.create();
		return false;
	}
	var size = this.m_changedNodes.size();
	for (var i = 0; i < size; i++)
	{
		if (this.m_changedNodes.get(i) === node)
		{
			return true;
		}
	}
	return false;
};
oFF.QModelComponent.prototype.notifyChildChanged = function(changedNodes)
{
	if (!this.isEventingStopped())
	{
		if (this.m_state === oFF.QDeltaChangeState.UNCHANGED)
		{
			this.m_state = oFF.QDeltaChangeState.CHILDREN_CHANGED;
			if (!this.isEventingMetadataUpdate())
			{
				this.m_modCounter++;
			}
		}
		else if (this.m_state === oFF.QDeltaChangeState.NODE_CHANGED)
		{
			this.m_state = oFF.QDeltaChangeState.NODE_AND_CHILDREN_CHANGED;
			if (!this.isEventingMetadataUpdate())
			{
				this.m_modCounter++;
			}
		}
		changedNodes.add(this);
		var primaryParent = this.getParentComponent();
		if (oFF.notNull(primaryParent))
		{
			primaryParent.notifyChildChanged(changedNodes);
		}
		if (oFF.notNull(this.m_secondaryParents))
		{
			var parentSize = this.m_secondaryParents.size();
			for (var i = 0; i < parentSize; i++)
			{
				var secondaryParent = this.m_secondaryParents.get(i);
				if (oFF.notNull(secondaryParent))
				{
					secondaryParent.notifyChildChanged(changedNodes);
				}
			}
		}
		if (oFF.isNull(this.m_primaryParent))
		{
			var nodeSize = changedNodes.size();
			for (var j = 0; j < nodeSize; j++)
			{
				var node = changedNodes.get(j);
				if (!this.changedNodesContains(node))
				{
					this.m_changedNodes.add(node);
				}
			}
			if (this.isRaisingEvents())
			{
				this.raiseEvents();
			}
		}
	}
};
oFF.QModelComponent.prototype.raiseEvents = function()
{
	if (oFF.isNull(this.m_currentDeltaPhase) && !this.m_isInRaiseEvents && oFF.notNull(this.m_changedNodes))
	{
		this.m_isInRaiseEvents = true;
		this.onModelChangeBeforeBroadcast(this.m_changedNodes);
		var nodeSize = this.m_changedNodes.size();
		for (var idxNode = 0; idxNode < nodeSize; idxNode++)
		{
			var node = this.m_changedNodes.get(idxNode);
			var listeners = node.getChangedListeners();
			if (oFF.notNull(listeners))
			{
				var listenerSize = listeners.size();
				for (var idxListener = 0; idxListener < listenerSize; idxListener++)
				{
					var pair = listeners.get(idxListener);
					var listener = pair.getListener();
					if (oFF.notNull(listener))
					{
						listener.onModelComponentChanged(node, pair.getCustomIdentifier());
					}
				}
			}
		}
		this.onModelChangeAfterBroadcast(this.m_changedNodes);
		this.resetChangeState();
		this.m_isInRaiseEvents = false;
	}
};
oFF.QModelComponent.prototype.registerChangedListener = function(listener, customIdentifier)
{
	if (oFF.isNull(this.m_changedListeners))
	{
		this.m_changedListeners = oFF.XList.create();
	}
	this.unregisterChangedListener(listener);
	this.m_changedListeners.add(oFF.QChangedListenerPair.create(listener, customIdentifier));
	return null;
};
oFF.QModelComponent.prototype.unregisterChangedListener = function(listener)
{
	var listenerIndex = this.getListenerIndex(listener);
	if (listenerIndex !== -1)
	{
		var removeAt = this.m_changedListeners.removeAt(listenerIndex);
		oFF.XObjectExt.release(removeAt);
	}
	return null;
};
oFF.QModelComponent.prototype.getListenerIndex = function(listener)
{
	if (oFF.notNull(this.m_changedListeners))
	{
		var listenerSize = this.m_changedListeners.size();
		for (var i = 0; i < listenerSize; i++)
		{
			if (this.m_changedListeners.get(i).getListener() === listener)
			{
				return i;
			}
		}
	}
	return -1;
};
oFF.QModelComponent.prototype.getChangedListeners = function()
{
	if (oFF.isNull(this.m_changedListeners))
	{
		this.m_changedListeners = oFF.XList.create();
	}
	return this.m_changedListeners;
};
oFF.QModelComponent.prototype.getTagValue = function(tagName)
{
	return null;
};
oFF.QModelComponent.prototype.getContentElement = function()
{
	return this;
};
oFF.QModelComponent.prototype.getContentConstant = function()
{
	return null;
};
oFF.QModelComponent.prototype.isLeaf = function()
{
	return !this.isNode();
};
oFF.QModelComponent.prototype.isNode = function()
{
	return false;
};
oFF.QModelComponent.prototype.mergeDeepRecursive = function(settings, other) {};
oFF.QModelComponent.prototype.getStorageName = function()
{
	if (this.getContext() !== null && this.getContext().getKeyRefStorage() !== null)
	{
		return this.getContext().getKeyRefStorage().getName();
	}
	return null;
};
oFF.QModelComponent.prototype.getStorageGroupName = function()
{
	return this.m_storageGroupName;
};
oFF.QModelComponent.prototype.setStorageGroupName = function(groupName)
{
	this.m_storageGroupName = groupName;
};
oFF.QModelComponent.prototype.getStorageObjectName = function()
{
	return this.m_name;
};
oFF.QModelComponent.prototype.cloneExt = function(flags)
{
	return this.cloneOlapComponent(null, null);
};
oFF.QModelComponent.prototype.cloneOlapComponent = oFF.noSupport;
oFF.QModelComponent.prototype.toString = function()
{
	var output = "[Exporter not available]";
	if (this.getOlapComponentType() !== oFF.OlapComponentType.COMPONENT_LIST)
	{
		var exporter = oFF.QInAExportFactory.create(this.getApplication(), oFF.QModelFormat.INA_CLONE, null, null);
		var element = exporter.exportComponent(null, this, null, oFF.QImExFlag.DEFAULT_ALL);
		if (oFF.notNull(element))
		{
			output = oFF.PrUtils.serialize(element, true, true, 4);
		}
	}
	return output;
};
oFF.QModelComponent.prototype.getChangedProperties = function()
{
	return this.m_changedProperties;
};
oFF.QModelComponent.prototype.setChangedProperties = function(changedProperties)
{
	this.m_changedProperties = changedProperties;
};
oFF.QModelComponent.prototype.updateModCounter = function(modCounter)
{
	this.m_modCounter = modCounter;
};

oFF.HierarchyCatalogService = function() {};
oFF.HierarchyCatalogService.prototype = new oFF.DfService();
oFF.HierarchyCatalogService.prototype._ff_c = "HierarchyCatalogService";

oFF.HierarchyCatalogService.CLAZZ = null;
oFF.HierarchyCatalogService.staticSetup = function()
{
	oFF.HierarchyCatalogService.CLAZZ = oFF.XClass.create(oFF.HierarchyCatalogService);
};
oFF.HierarchyCatalogService.prototype.m_catalogManager = null;
oFF.HierarchyCatalogService.prototype.m_dataSource = null;
oFF.HierarchyCatalogService.prototype.m_dimensionName = null;
oFF.HierarchyCatalogService.prototype.releaseObject = function()
{
	this.m_catalogManager = oFF.XObjectExt.release(this.m_catalogManager);
	this.m_dataSource = null;
	this.m_dimensionName = null;
	oFF.DfService.prototype.releaseObject.call( this );
};
oFF.HierarchyCatalogService.prototype.isServiceConfigMatching = function(serviceConfig, connection, messages)
{
	var systemDescription = serviceConfig.getSystemDescription();
	if (!oFF.HierarchyCatalogUtil.supportsHierarchyCatalog2(serviceConfig.getApplication(), systemDescription))
	{
		return false;
	}
	return oFF.DfService.prototype.isServiceConfigMatching.call( this , serviceConfig, connection, messages);
};
oFF.HierarchyCatalogService.prototype.getCatalogManager = function()
{
	return this.m_catalogManager;
};
oFF.HierarchyCatalogService.prototype.processSynchronization = function(syncType)
{
	var config = this.getServiceConfig();
	this.m_dimensionName = config.getDimensionName();
	var queryServiceConfig;
	if (config.getSystemType() === oFF.SystemType.HANA)
	{
		queryServiceConfig = this._getConfigHana(config);
	}
	else
	{
		queryServiceConfig = this._getConfigBw(config);
	}
	queryServiceConfig.setConnectionContainer(this.getConnection());
	queryServiceConfig.processQueryManagerCreation(syncType, this, null);
	return true;
};
oFF.HierarchyCatalogService.prototype._getConfigHana = function(config)
{
	this.m_dataSource = oFF.QFactory.createDataSourceWithFqn(config.getDataSourceName());
	return oFF.QueryServiceConfig.createWithDataSourceName(this.getApplication(), config.getSystemName(), "view:[][][$$HierarchyName$$]");
};
oFF.HierarchyCatalogService.prototype._getConfigBw = function(config)
{
	var datasource = oFF.QFactory.createDataSourceWithType(oFF.MetaObjectType.HIERARCHY, config.getDimensionName());
	datasource.setEnvironmentName(config.getEnvironmentName());
	return oFF.QueryServiceConfig.createWithDataSource(this.getApplication(), config.getSystemName(), datasource);
};
oFF.HierarchyCatalogService.prototype.onQueryManagerCreated = function(extResult, queryManager, customIdentifier)
{
	this.addAllMessages(extResult);
	if (extResult.isValid())
	{
		this.m_catalogManager = oFF.QFactory.createHierarchyCatalogManager(queryManager, this.m_dataSource, this.m_dimensionName);
		queryManager.setCacheHintEnabled(this.getServiceConfig().isCacheHitsEnabled());
	}
	this.m_dataSource = null;
	this.m_dimensionName = null;
	this.endSync();
};

oFF.HierarchyCatalogServiceConfig = function() {};
oFF.HierarchyCatalogServiceConfig.prototype = new oFF.DfServiceConfig();
oFF.HierarchyCatalogServiceConfig.prototype._ff_c = "HierarchyCatalogServiceConfig";

oFF.HierarchyCatalogServiceConfig.CLAZZ = null;
oFF.HierarchyCatalogServiceConfig.staticSetup = function()
{
	oFF.HierarchyCatalogServiceConfig.CLAZZ = oFF.XClass.create(oFF.HierarchyCatalogServiceConfig);
};
oFF.HierarchyCatalogServiceConfig.prototype.m_dataSourceName = null;
oFF.HierarchyCatalogServiceConfig.prototype.m_dimensionName = null;
oFF.HierarchyCatalogServiceConfig.prototype.m_invalidDimension = false;
oFF.HierarchyCatalogServiceConfig.prototype.m_environmentName = null;
oFF.HierarchyCatalogServiceConfig.prototype.m_cacheHitsEnabled = false;
oFF.HierarchyCatalogServiceConfig.prototype.releaseObject = function()
{
	this.m_dataSourceName = null;
	this.m_dimensionName = null;
	this.m_environmentName = null;
	oFF.DfServiceConfig.prototype.releaseObject.call( this );
};
oFF.HierarchyCatalogServiceConfig.prototype.setDataSourceName = function(dataSourceName)
{
	this.m_dataSourceName = dataSourceName;
};
oFF.HierarchyCatalogServiceConfig.prototype.getDataSourceName = function()
{
	return this.m_dataSourceName;
};
oFF.HierarchyCatalogServiceConfig.prototype.setDimensionName = function(dimensionName)
{
	this.m_dimensionName = dimensionName;
};
oFF.HierarchyCatalogServiceConfig.prototype.getDimensionName = function()
{
	return this.m_dimensionName;
};
oFF.HierarchyCatalogServiceConfig.prototype.setEnvironmentName = function(environmentName)
{
	this.m_environmentName = environmentName;
};
oFF.HierarchyCatalogServiceConfig.prototype.getEnvironmentName = function()
{
	return this.m_environmentName;
};
oFF.HierarchyCatalogServiceConfig.prototype.processHierarchyCatalogManagerCreation = function(syncType, listener, customIdentifier)
{
	if (this.m_invalidDimension)
	{
		return oFF.ExtResult.createWithMessage(oFF.XMessage.createMessage(oFF.OriginLayer.SERVER, oFF.Severity.WARNING, oFF.ErrorCodes.INVALID_DIMENSION, oFF.XStringUtils.concatenate3("Hierarchy Catalog is not supported for the dimensions '", this.m_dimensionName, "'!"), null, false, null));
	}
	return this.processSyncAction(syncType, listener, customIdentifier);
};
oFF.HierarchyCatalogServiceConfig.prototype.callListener = function(extResult, listener, data, customIdentifier)
{
	listener.onHierarchyCatalogManagerCreated(extResult, data, customIdentifier);
};
oFF.HierarchyCatalogServiceConfig.prototype.setDataFromService = function(service)
{
	this.setData(service.getCatalogManager());
};
oFF.HierarchyCatalogServiceConfig.prototype.setDimension = function(dimension)
{
	if (oFF.notNull(dimension))
	{
		this.m_invalidDimension = dimension.getDimensionType() === oFF.DimensionType.SECONDARY_STRUCTURE || dimension.getDimensionType() === oFF.DimensionType.MEASURE_STRUCTURE;
		this.m_dimensionName = dimension.getName();
		this.m_cacheHitsEnabled = dimension.getQueryManager().isCacheHintEnabled();
	}
};
oFF.HierarchyCatalogServiceConfig.prototype.isCacheHitsEnabled = function()
{
	return this.m_cacheHitsEnabled;
};
oFF.HierarchyCatalogServiceConfig.prototype.setCacheHitsEnabled = function(cacheHitsEnabled)
{
	this.m_cacheHitsEnabled = cacheHitsEnabled;
};

oFF.QueryResourceLoadAction3 = function() {};
oFF.QueryResourceLoadAction3.prototype = new oFF.DfQueryResourceLoadAction();
oFF.QueryResourceLoadAction3.prototype._ff_c = "QueryResourceLoadAction3";

oFF.QueryResourceLoadAction3.createAndRun = function(syncType, queryServiceConfig, customIdentifier)
{
	var object = new oFF.QueryResourceLoadAction3();
	object.setupActionAndRun(syncType, null, customIdentifier, queryServiceConfig);
	return object;
};
oFF.QueryResourceLoadAction3.prototype.processSynchronization = function(syncType)
{
	var dataSource = this.getDataSource();
	var type = dataSource.getType();
	if (type === oFF.MetaObjectType.URL)
	{
		var location = dataSource.getObjectName();
		if (this.hasFileExtension(location))
		{
			var extension = oFF.QueryResourceLoadAction.getFileExtension(location);
			if (oFF.XString.isEqual("gz", extension))
			{
				var path = oFF.XStringUtils.stripRight(location, 3);
				if (this.hasFileExtension(path))
				{
					extension = oFF.QueryResourceLoadAction.getFileExtension(path);
				}
			}
			var modelFormat = oFF.ContentType.lookupByFileEnding(extension);
			if (oFF.isNull(modelFormat))
			{
				this.addError(oFF.ErrorCodes.SYSTEM_IO_READ_ACCESS, oFF.XStringUtils.concatenate2("No valid extension to resolve model format: ", location));
			}
			else
			{
				var application = this.getActionContext().getApplication();
				var repositoryManager = application.getRepositoryManager();
				var rpcFunction = repositoryManager.newRpcFunction(location);
				rpcFunction.processFunctionExecution(syncType, this, modelFormat);
				return false;
			}
		}
	}
	return true;
};

oFF.QueryServiceConfigImpl = function() {};
oFF.QueryServiceConfigImpl.prototype = new oFF.DfServiceConfig();
oFF.QueryServiceConfigImpl.prototype._ff_c = "QueryServiceConfigImpl";

oFF.QueryServiceConfigImpl.CLAZZ = null;
oFF.QueryServiceConfigImpl.staticSetup = function()
{
	oFF.QueryServiceConfigImpl.CLAZZ = oFF.XClass.create(oFF.QueryServiceConfigImpl);
};
oFF.QueryServiceConfigImpl._create = function(application)
{
	var object = new oFF.QueryServiceConfigImpl();
	object.setupConfig(application);
	return object;
};
oFF.QueryServiceConfigImpl.prototype.m_providerType = null;
oFF.QueryServiceConfigImpl.prototype.m_openForEdit = false;
oFF.QueryServiceConfigImpl.prototype.m_datasource = null;
oFF.QueryServiceConfigImpl.prototype.m_instanceId = null;
oFF.QueryServiceConfigImpl.prototype.m_serverCustomization = null;
oFF.QueryServiceConfigImpl.prototype.m_mode = null;
oFF.QueryServiceConfigImpl.prototype.m_blendingDefinition = null;
oFF.QueryServiceConfigImpl.prototype.m_isLoadingDefaultQuery = false;
oFF.QueryServiceConfigImpl.prototype.m_stateChangedListener = null;
oFF.QueryServiceConfigImpl.prototype.m_makeEmptyVariableDefinitionInsteadOfMetadata = false;
oFF.QueryServiceConfigImpl.prototype.m_minimizedMetadata = false;
oFF.QueryServiceConfigImpl.prototype.m_requiredDimensions = null;
oFF.QueryServiceConfigImpl.prototype.m_dimensionsOnAxes = null;
oFF.QueryServiceConfigImpl.prototype.m_supportsDimensionLazyLoad = false;
oFF.QueryServiceConfigImpl.prototype.m_definition = null;
oFF.QueryServiceConfigImpl.prototype.m_metadata = null;
oFF.QueryServiceConfigImpl.prototype.m_model = null;
oFF.QueryServiceConfigImpl.prototype.m_repo = null;
oFF.QueryServiceConfigImpl.prototype.m_modeller = null;
oFF.QueryServiceConfigImpl.prototype.m_useCloneCfg = false;
oFF.QueryServiceConfigImpl.prototype.m_isFusionActive = false;
oFF.QueryServiceConfigImpl.prototype.m_isExecuteAutoVariableSubmit = false;
oFF.QueryServiceConfigImpl.prototype.m_isCachingActive = false;
oFF.QueryServiceConfigImpl.prototype.m_isExternalizedDynamicFilter = false;
oFF.QueryServiceConfigImpl.prototype.m_isRequestingDataCells = false;
oFF.QueryServiceConfigImpl.prototype.m_isRequestingConditions = false;
oFF.QueryServiceConfigImpl.prototype.m_isRequestingDynamicFilter = false;
oFF.QueryServiceConfigImpl.prototype.m_isRequestingExceptions = false;
oFF.QueryServiceConfigImpl.prototype.m_isRequestingSorting = false;
oFF.QueryServiceConfigImpl.prototype.m_isRequestingUniversalDisplayHierarchies = false;
oFF.QueryServiceConfigImpl.prototype.m_isRequestingVariables = false;
oFF.QueryServiceConfigImpl.prototype.setupConfig = function(application)
{
	oFF.DfServiceConfig.prototype.setupConfig.call( this , application);
	this.m_openForEdit = false;
	this.m_serverCustomization = oFF.XHashSetOfString.create();
	this.m_providerType = oFF.ProviderType.ANALYTICS;
	this.m_mode = oFF.QueryManagerMode.DEFAULT;
	this.m_instanceId = application.createNextInstanceId();
	this.m_isLoadingDefaultQuery = true;
	this.m_stateChangedListener = oFF.XSimpleMap.create();
	this.m_supportsDimensionLazyLoad = true;
	this.m_definition = null;
	var session = application.getSession();
	this.m_isFusionActive = session.hasFeature(oFF.FeatureToggleOlap.FUSION_SERVICE);
	this.m_isCachingActive = session.hasFeature(oFF.FeatureToggleOlap.METADATA_CACHING);
	this.m_isExternalizedDynamicFilter = session.hasFeature(oFF.FeatureToggleOlap.EXTERNALIZED_DYNAMIC_FILTER);
	if (session.hasFeature(oFF.FeatureToggleOlap.AUTO_VARIABLE_SUBMIT_FOR_FULL_QM))
	{
		if (!session.hasFeature(oFF.FeatureToggleOlap.AUTO_VARIABLE_SUBMIT_CAPABILITY))
		{
			session.activateFeatureToggle(oFF.FeatureToggleOlap.AUTO_VARIABLE_SUBMIT_CAPABILITY);
		}
		if (!session.hasFeature(oFF.FeatureToggleOlap.AUTO_VARIABLE_SUBMIT_FUNCTIONALITY))
		{
			session.activateFeatureToggle(oFF.FeatureToggleOlap.AUTO_VARIABLE_SUBMIT_FUNCTIONALITY);
		}
	}
	this.m_isExecuteAutoVariableSubmit = session.hasFeature(oFF.FeatureToggleOlap.AUTO_VARIABLE_SUBMIT_FUNCTIONALITY);
	this.m_useCloneCfg = true;
	this.m_isRequestingDataCells = true;
	this.m_isRequestingConditions = true;
	this.m_isRequestingDynamicFilter = true;
	this.m_isRequestingExceptions = true;
	this.m_isRequestingSorting = true;
	this.m_isRequestingUniversalDisplayHierarchies = true;
	this.m_isRequestingVariables = true;
	var environment = application.getProcess().getEnvironment();
	var enforcePrivateConnection = environment.getBooleanByKeyExt(oFF.XEnvironmentConstants.FIREFLY_QUERY_PRIVATE_CONN, false);
	if (enforcePrivateConnection)
	{
		this.usePrivateConnection(enforcePrivateConnection);
	}
};
oFF.QueryServiceConfigImpl.prototype.releaseObject = function()
{
	this.m_serverCustomization = oFF.XObjectExt.release(this.m_serverCustomization);
	this.m_providerType = null;
	this.m_mode = null;
	this.m_blendingDefinition = null;
	this.m_datasource = null;
	this.m_definition = null;
	this.m_metadata = null;
	this.m_dimensionsOnAxes = oFF.XObjectExt.release(this.m_dimensionsOnAxes);
	this.m_requiredDimensions = oFF.XObjectExt.release(this.m_requiredDimensions);
	this.m_modeller = oFF.XObjectExt.release(this.m_modeller);
	oFF.DfServiceConfig.prototype.releaseObject.call( this );
};
oFF.QueryServiceConfigImpl.prototype.getServiceTypeInfo = function()
{
	return oFF.OlapApiModule.SERVICE_TYPE_QUERY_CONSUMER;
};
oFF.QueryServiceConfigImpl.prototype.getComponentType = function()
{
	return this.getOlapComponentType();
};
oFF.QueryServiceConfigImpl.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.QUERY_SERVICE_CONFIG;
};
oFF.QueryServiceConfigImpl.prototype.cloneUsingExtDataSource = function(dataSource)
{
	var serviceConfigClone = this.clone();
	serviceConfigClone.setDataSource(dataSource);
	return serviceConfigClone;
};
oFF.QueryServiceConfigImpl.prototype.cloneExt = function(flags)
{
	var cloneObject = oFF.QueryServiceConfigImpl._create(this.getApplication());
	cloneObject.copyFrom(this, flags);
	return cloneObject;
};
oFF.QueryServiceConfigImpl.prototype.copyFromInternal = function(other, flags)
{
	oFF.DfServiceConfig.prototype.copyFromInternal.call( this , other, flags);
	var otherObj = other;
	this.setDataSource(oFF.XObjectExt.cloneIfNotNull(otherObj.getDataSource()));
	this.setProviderType(otherObj.getProviderType());
	this.setIsOpenForEdit(this.isOpenForEdit());
	this.setMakeEmptyVariableDefinitionInsteadOfMetadata(otherObj.getMakeEmptyVariableDefinitionInsteadOfMetadata());
	this.setRequestTimeZone(otherObj.getRequestTimeZone());
	this.setSupportsDimensionLazyLoad(otherObj.supportsDimensionLazyLoad());
	this.setDefinitionByContent(otherObj.getDefinitionContent());
	this.setMetadataContent(otherObj.getMetadataContent());
	this.setRepositoryContent(otherObj.getRepositoryContent());
	this.setMinimizedMetadata(otherObj.getMinimizedMetadata());
	this.m_useCloneCfg = otherObj.useClone();
	this.m_isFusionActive = otherObj.isFusionActive();
	this.m_isCachingActive = otherObj.isCachingActive();
	this.m_isExecuteAutoVariableSubmit = otherObj.isExecuteAutoVariableSubmit();
	this.m_isExternalizedDynamicFilter = otherObj.isExternalizedDynamicFilter();
	var requiredDimensions = otherObj.getRequiredDimensions();
	if (oFF.isNull(requiredDimensions))
	{
		this.setRequiredDimensions(null);
	}
	else
	{
		this.setRequiredDimensions(oFF.XListOfString.createFromReadOnlyList(requiredDimensions));
	}
	this.m_isRequestingDataCells = otherObj.isRequestingDataCells();
	this.m_isRequestingConditions = otherObj.isRequestingConditions();
	this.m_isRequestingDynamicFilter = otherObj.isRequestingDynamicFilter();
	this.m_isRequestingExceptions = otherObj.isRequestingExceptions();
	this.m_isRequestingSorting = otherObj.isRequestingSorting();
	this.m_isRequestingUniversalDisplayHierarchies = otherObj.isRequestingUniversalDisplayHierarchies();
	this.m_isRequestingVariables = otherObj.isRequestingVariables();
	var dimsOnAxes = otherObj.getDimensionsOnAxes();
	if (oFF.isNull(dimsOnAxes))
	{
		this.setDimensionsOnAxes(null);
	}
	else
	{
		this.setDimensionsOnAxes(oFF.XListOfString.createFromReadOnlyList(dimsOnAxes));
	}
	var blendingClone = oFF.XObjectExt.cloneExtIfNotNull(otherObj.getBlendingDefinition(), flags);
	if (oFF.notNull(blendingClone))
	{
		this.setBlendingDefinition(blendingClone);
	}
	this.setMode(otherObj.getMode());
	this.setModellerContent(otherObj.getModellerContent());
};
oFF.QueryServiceConfigImpl.prototype.processQueryManagerCreation = function(syncType, listener, customIdentifier)
{
	var result = null;
	var hasInitActionForFusion = this.getSession().hasFeature(oFF.FeatureToggleOlap.INIT_ACTION_FOR_FUSION);
	if (syncType === oFF.SyncType.REGISTER)
	{
		this.attachListener(listener, oFF.ListenerType.SPECIFIC, customIdentifier);
	}
	else if (syncType === oFF.SyncType.UNREGISTER)
	{
		this.detachListener(listener);
	}
	else if (oFF.notNull(this.m_datasource) && this.m_datasource.getType() === oFF.MetaObjectType.URL)
	{
		this.m_isFusionActive = false;
		var sequence2 = oFF.SyncActionSequence.create(syncType, listener, customIdentifier, this);
		var loadAction = oFF.QueryResourceLoadAction3.createAndRun(oFF.SyncType.DELAYED, this, null);
		sequence2.addAction(loadAction);
		var mainAction2 = this.processSyncAction(oFF.SyncType.DELAYED, null, null);
		sequence2.setMainAction(mainAction2);
		sequence2.process();
		result = sequence2;
	}
	else if (this.m_useCloneCfg === true && hasInitActionForFusion)
	{
		result = oFF.QInitAction.createAndRun(syncType, listener, customIdentifier, this);
	}
	else
	{
		result = this.processSyncAction(syncType, listener, customIdentifier);
	}
	return result;
};
oFF.QueryServiceConfigImpl.prototype.onInitActionDone = function(messages, queryManager)
{
	this.addAllMessages(messages);
	this.setData(queryManager);
	this.callListeners(false);
};
oFF.QueryServiceConfigImpl.prototype.callListener = function(extResult, listener, data, customIdentifier)
{
	listener.onQueryManagerCreated(extResult, data, customIdentifier);
};
oFF.QueryServiceConfigImpl.prototype.setDataFromService = function(service)
{
	this.setData(service);
};
oFF.QueryServiceConfigImpl.prototype.setProviderType = function(type)
{
	this.m_providerType = type;
};
oFF.QueryServiceConfigImpl.prototype.getProviderType = function()
{
	return this.m_providerType;
};
oFF.QueryServiceConfigImpl.prototype.getDataSource = function()
{
	return this.m_datasource;
};
oFF.QueryServiceConfigImpl.prototype.getDataSourceBase = function()
{
	return this.m_datasource;
};
oFF.QueryServiceConfigImpl.prototype.setDataSource = function(dataSource)
{
	this.m_datasource = dataSource;
};
oFF.QueryServiceConfigImpl.prototype.setDataSourceByName = function(name)
{
	var identifierBase = oFF.QFactory.createDataSource();
	identifierBase.setFullQualifiedName(name);
	this.m_datasource = identifierBase;
	return identifierBase;
};
oFF.QueryServiceConfigImpl.prototype.isOpenForEdit = function()
{
	return this.m_openForEdit;
};
oFF.QueryServiceConfigImpl.prototype.setIsOpenForEdit = function(openForEdit)
{
	this.m_openForEdit = openForEdit;
};
oFF.QueryServiceConfigImpl.prototype.setDefinitionByContent = function(definition)
{
	this.m_definition = definition;
};
oFF.QueryServiceConfigImpl.prototype.setDefinitionByString = function(type, definitionContent)
{
	this.m_definition = oFF.XContent.createStringContent(type, definitionContent);
};
oFF.QueryServiceConfigImpl.prototype.setDefinitionByStructure = function(type, definitionStructure)
{
	this.m_definition = oFF.XContent.createJsonObjectContent(type, definitionStructure);
};
oFF.QueryServiceConfigImpl.prototype.setDefinitionByJsonObject = function(type, definitionJson)
{
	this.m_definition = oFF.XContent.createJsonObjectContent(type, definitionJson);
};
oFF.QueryServiceConfigImpl.prototype.getDefinitionType = function()
{
	var modelFormat = null;
	if (oFF.notNull(this.m_definition))
	{
		modelFormat = this.m_definition.getContentType();
	}
	return modelFormat;
};
oFF.QueryServiceConfigImpl.prototype.getDefinitionAsString = function()
{
	var result = null;
	if (oFF.notNull(this.m_definition))
	{
		result = this.m_definition.getString();
	}
	return result;
};
oFF.QueryServiceConfigImpl.prototype.getDefinitionAsStructure = function()
{
	var result = null;
	if (oFF.notNull(this.m_definition))
	{
		var definition = this.m_definition.getJsonContent();
		if (oFF.notNull(definition) && definition.isStructure())
		{
			result = definition;
		}
	}
	return result;
};
oFF.QueryServiceConfigImpl.prototype.getDefinition = function()
{
	var content = null;
	if (oFF.notNull(this.m_definition))
	{
		content = this.m_definition.getJsonContent();
	}
	return content;
};
oFF.QueryServiceConfigImpl.prototype.getDefinitionContent = function()
{
	return this.m_definition;
};
oFF.QueryServiceConfigImpl.prototype.setModelByJsonObject = function(type, modelJson)
{
	this.m_model = oFF.XContent.createJsonObjectContent(type, modelJson);
};
oFF.QueryServiceConfigImpl.prototype.setModelByContent = function(type, modelContent)
{
	this.m_model = modelContent;
};
oFF.QueryServiceConfigImpl.prototype.getModelContent = function()
{
	return this.m_model;
};
oFF.QueryServiceConfigImpl.prototype.setMetadataContent = function(metadata)
{
	this.m_metadata = metadata;
};
oFF.QueryServiceConfigImpl.prototype.getMetadataContent = function()
{
	return this.m_metadata;
};
oFF.QueryServiceConfigImpl.prototype.setRepositoryContent = function(repo)
{
	this.m_repo = repo;
};
oFF.QueryServiceConfigImpl.prototype.getRepositoryContent = function()
{
	return this.m_repo;
};
oFF.QueryServiceConfigImpl.prototype.getServerCustomizations = function()
{
	return this.m_serverCustomization;
};
oFF.QueryServiceConfigImpl.prototype.addServerCustomizations = function(name)
{
	this.m_serverCustomization.add(name);
};
oFF.QueryServiceConfigImpl.prototype.setInstanceId = function(instanceId)
{
	this.m_instanceId = instanceId;
};
oFF.QueryServiceConfigImpl.prototype.getInstanceId = function()
{
	return this.m_instanceId;
};
oFF.QueryServiceConfigImpl.prototype.setMode = function(mode)
{
	if (oFF.notNull(mode))
	{
		this.m_mode = mode;
	}
};
oFF.QueryServiceConfigImpl.prototype.getMode = function()
{
	return this.m_mode;
};
oFF.QueryServiceConfigImpl.prototype.setBlendingDefinition = function(blendingDefinition)
{
	this.m_blendingDefinition = blendingDefinition;
	this.setMode(oFF.QueryManagerMode.BLENDING);
};
oFF.QueryServiceConfigImpl.prototype.getBlendingDefinition = function()
{
	return this.m_blendingDefinition;
};
oFF.QueryServiceConfigImpl.prototype.prepareDefinition = function()
{
	var definitionType = this.getDefinitionType();
	if (oFF.notNull(definitionType))
	{
		var definitionContentStructure = this.getDefinitionAsStructure();
		if (oFF.notNull(definitionContentStructure))
		{
			var preparator = oFF.QueryPreparatorFactory.newInstance(definitionType);
			if (oFF.notNull(preparator))
			{
				preparator.prepareBeforeMetadata(this, definitionContentStructure);
			}
		}
	}
};
oFF.QueryServiceConfigImpl.prototype.setLoadDefaultQuery = function(isLoadingDefaultQuery)
{
	this.m_isLoadingDefaultQuery = isLoadingDefaultQuery;
};
oFF.QueryServiceConfigImpl.prototype.isLoadingDefaultQuery = function()
{
	return this.m_isLoadingDefaultQuery;
};
oFF.QueryServiceConfigImpl.prototype.setDataRequest = function(request)
{
	this.setDefinitionByStructure(oFF.QModelFormat.INA_DATA, request);
};
oFF.QueryServiceConfigImpl.prototype.setDataRequestAsString = function(request)
{
	this.m_definition = oFF.XContent.createStringContent(oFF.QModelFormat.INA_DATA, request);
};
oFF.QueryServiceConfigImpl.prototype.getDataRequest = function()
{
	if (this.getDefinitionType() === oFF.QModelFormat.INA_CLONE_RENDERING)
	{
		return this.getDataRequestFromStructure(this.getDefinitionAsStructure());
	}
	if (this.getDefinitionType() === oFF.QModelFormat.INA_DATA)
	{
		return this.getDefinitionAsStructure();
	}
	return null;
};
oFF.QueryServiceConfigImpl.prototype.getDataRequestAsString = function()
{
	if (this.getDefinitionType() === oFF.QModelFormat.INA_CLONE_RENDERING)
	{
		var dataRequest = this.getDataRequestFromStructure(this.getDefinitionAsStructure());
		return oFF.PrUtils.serialize(dataRequest, false, false, 0);
	}
	if (this.getDefinitionType() === oFF.QModelFormat.INA_DATA)
	{
		return this.getDefinitionAsString();
	}
	return null;
};
oFF.QueryServiceConfigImpl.prototype.getDataRequestFromStructure = function(queryDefinition)
{
	return queryDefinition.getStructureByKey(oFF.InAConstantsBios.QY_DATA_REQUEST);
};
oFF.QueryServiceConfigImpl.prototype.getQueryManager = function()
{
	return this.getData();
};
oFF.QueryServiceConfigImpl.prototype.registerChangedListener = function(listener, customIdentifier)
{
	this.m_stateChangedListener.put(listener, oFF.XPair.create(listener, customIdentifier));
	return null;
};
oFF.QueryServiceConfigImpl.prototype.unregisterChangedListener = function(listener)
{
	this.m_stateChangedListener.remove(listener);
	return null;
};
oFF.QueryServiceConfigImpl.prototype.beforeListenerCall = function()
{
	var values = this.m_stateChangedListener.getValuesAsReadOnlyList();
	var valuesSize = values.size();
	for (var i = 0; i < valuesSize; i++)
	{
		var pair = values.get(i);
		this.attachListener(pair.getFirstObject(), oFF.ListenerType.OLAP_COMPONENT_CHANGED, pair.getSecondObject());
	}
};
oFF.QueryServiceConfigImpl.prototype.callTypedListener = function(extResult, type, listener, data, customIdentifier)
{
	if (type === oFF.ListenerType.OLAP_COMPONENT_CHANGED)
	{
		listener.onModelComponentChanged(this, customIdentifier);
	}
	else
	{
		oFF.DfServiceConfig.prototype.callTypedListener.call( this , extResult, type, listener, data, customIdentifier);
	}
};
oFF.QueryServiceConfigImpl.prototype.cloneOlapComponent = oFF.noSupport;
oFF.QueryServiceConfigImpl.prototype.queueEventing = function() {};
oFF.QueryServiceConfigImpl.prototype.stopEventing = function() {};
oFF.QueryServiceConfigImpl.prototype.isEventingStopped = function()
{
	return false;
};
oFF.QueryServiceConfigImpl.prototype.resumeEventing = function() {};
oFF.QueryServiceConfigImpl.prototype.__refreshMetadata = oFF.noSupport;
oFF.QueryServiceConfigImpl.prototype.checkModelVersionValidity = oFF.noSupport;
oFF.QueryServiceConfigImpl.prototype.linkToQueryManager = function(queryManager)
{
	this.setDataFromService(queryManager);
};
oFF.QueryServiceConfigImpl.prototype.setMakeEmptyVariableDefinitionInsteadOfMetadata = function(makeEmptyVariableDefinitionInsteadOfMetadata)
{
	this.m_makeEmptyVariableDefinitionInsteadOfMetadata = makeEmptyVariableDefinitionInsteadOfMetadata;
};
oFF.QueryServiceConfigImpl.prototype.getMakeEmptyVariableDefinitionInsteadOfMetadata = function()
{
	return this.m_makeEmptyVariableDefinitionInsteadOfMetadata;
};
oFF.QueryServiceConfigImpl.prototype.setMinimizedMetadata = function(minimizedMetadata)
{
	this.m_minimizedMetadata = minimizedMetadata;
};
oFF.QueryServiceConfigImpl.prototype.getMinimizedMetadata = function()
{
	return this.m_minimizedMetadata;
};
oFF.QueryServiceConfigImpl.prototype.setRequiredDimensions = function(requiredDimensions)
{
	this.m_requiredDimensions = requiredDimensions;
};
oFF.QueryServiceConfigImpl.prototype.getRequiredDimensions = function()
{
	return this.m_requiredDimensions;
};
oFF.QueryServiceConfigImpl.prototype.setDimensionsOnAxes = function(dimensionsOnAxes)
{
	this.m_dimensionsOnAxes = dimensionsOnAxes;
};
oFF.QueryServiceConfigImpl.prototype.getDimensionsOnAxes = function()
{
	return this.m_dimensionsOnAxes;
};
oFF.QueryServiceConfigImpl.prototype.setGenericServiceDescription = function(genericServiceDescription)
{
	this.getDataSourceBase().setGenericServiceDescription(genericServiceDescription);
};
oFF.QueryServiceConfigImpl.prototype.getQueryServiceConfig = function()
{
	return this;
};
oFF.QueryServiceConfigImpl.prototype.supportsDimensionLazyLoad = function()
{
	return this.m_supportsDimensionLazyLoad;
};
oFF.QueryServiceConfigImpl.prototype.setSupportsDimensionLazyLoad = function(supportsDimensionLazyLoad)
{
	this.m_supportsDimensionLazyLoad = supportsDimensionLazyLoad;
};
oFF.QueryServiceConfigImpl.prototype.setDataSourceBasedOnMicroCube = function(microCube)
{
	var microCubeQueryManager = microCube.getQueryManager();
	var dataSource = oFF.QFactory.createDataSourceWithType(oFF.MetaObjectType.QUERY, microCubeQueryManager.getNameForMicroCubeUse());
	dataSource.setMicroCube(microCube);
	dataSource.setMicroCubeName(microCubeQueryManager.getNameForMicroCubeUse());
	this.m_datasource = dataSource;
	return dataSource;
};
oFF.QueryServiceConfigImpl.prototype.getQueryManagerBasedOnMicroCube = function()
{
	var dataSource = this.getDataSourceBase();
	if (!dataSource.isBasedOnMicroCube())
	{
		return null;
	}
	var originalQueryManager = dataSource.getMicroCube().getQueryManager();
	var queryManager = originalQueryManager.cloneQueryManagerUsingExtDataSource(oFF.QueryCloneMode.MICRO_CUBE, dataSource);
	return queryManager;
};
oFF.QueryServiceConfigImpl.prototype.useClone = function()
{
	return this.m_useCloneCfg;
};
oFF.QueryServiceConfigImpl.prototype.setUseClone = function(useClone)
{
	this.m_useCloneCfg = useClone;
};
oFF.QueryServiceConfigImpl.prototype.setIsExecuteAutoVariableSubmit = function(isExecuteAutoVariableSubmit)
{
	this.m_isExecuteAutoVariableSubmit = isExecuteAutoVariableSubmit;
};
oFF.QueryServiceConfigImpl.prototype.isExecuteAutoVariableSubmit = function()
{
	return this.m_isExecuteAutoVariableSubmit;
};
oFF.QueryServiceConfigImpl.prototype.isExternalizedDynamicFilter = function()
{
	return this.m_isExternalizedDynamicFilter;
};
oFF.QueryServiceConfigImpl.prototype.setIsFusionActive = function(isFusionServiceActive)
{
	this.m_isFusionActive = isFusionServiceActive;
};
oFF.QueryServiceConfigImpl.prototype.isFusionActive = function()
{
	return this.m_isFusionActive;
};
oFF.QueryServiceConfigImpl.prototype.isRequestingDataCells = function()
{
	return this.m_isRequestingDataCells;
};
oFF.QueryServiceConfigImpl.prototype.setIsRequestingDataCells = function(isRequestingDataCells)
{
	this.m_isRequestingDataCells = isRequestingDataCells;
};
oFF.QueryServiceConfigImpl.prototype.setIsRequestingVariables = function(isRequestingVariables)
{
	this.m_isRequestingVariables = isRequestingVariables;
};
oFF.QueryServiceConfigImpl.prototype.setIsRequestingSorting = function(isRequestingSorting)
{
	this.m_isRequestingSorting = isRequestingSorting;
};
oFF.QueryServiceConfigImpl.prototype.setIsRequestingDynamicFilter = function(isRequestingDynamicFilter)
{
	this.m_isRequestingDynamicFilter = isRequestingDynamicFilter;
};
oFF.QueryServiceConfigImpl.prototype.setIsRequestingUniversalDisplayHierarchies = function(isRequestingUniversalDisplayHierarchies)
{
	this.m_isRequestingUniversalDisplayHierarchies = isRequestingUniversalDisplayHierarchies;
};
oFF.QueryServiceConfigImpl.prototype.setIsRequestingConditions = function(isRequestingConditions)
{
	this.m_isRequestingConditions = isRequestingConditions;
};
oFF.QueryServiceConfigImpl.prototype.setIsRequestingExceptions = function(isRequestingExceptions)
{
	this.m_isRequestingExceptions = isRequestingExceptions;
};
oFF.QueryServiceConfigImpl.prototype.isRequestingVariables = function()
{
	return this.m_isRequestingVariables;
};
oFF.QueryServiceConfigImpl.prototype.isRequestingSorting = function()
{
	return this.m_isRequestingSorting;
};
oFF.QueryServiceConfigImpl.prototype.isRequestingDynamicFilter = function()
{
	return this.m_isRequestingDynamicFilter;
};
oFF.QueryServiceConfigImpl.prototype.isRequestingConditions = function()
{
	return this.m_isRequestingConditions;
};
oFF.QueryServiceConfigImpl.prototype.isRequestingExceptions = function()
{
	return this.m_isRequestingExceptions;
};
oFF.QueryServiceConfigImpl.prototype.isRequestingUniversalDisplayHierarchies = function()
{
	return this.m_isRequestingUniversalDisplayHierarchies;
};
oFF.QueryServiceConfigImpl.prototype.isRequestingDefaultSettings = function()
{
	var isRequestingDefault = this.m_isRequestingConditions && this.m_isRequestingDataCells && this.m_isRequestingDynamicFilter && this.m_isRequestingExceptions && this.m_isRequestingSorting && this.m_isRequestingUniversalDisplayHierarchies && this.m_isRequestingVariables;
	var isRequestingDimensionSubset = oFF.XCollectionUtils.hasElements(this.m_dimensionsOnAxes) || oFF.XCollectionUtils.hasElements(this.m_requiredDimensions);
	return isRequestingDefault && !isRequestingDimensionSubset && !this.m_minimizedMetadata;
};
oFF.QueryServiceConfigImpl.prototype.setIsCachingActive = function(isCachingActive)
{
	this.m_isCachingActive = isCachingActive;
};
oFF.QueryServiceConfigImpl.prototype.isCachingActive = function()
{
	return this.m_isCachingActive;
};
oFF.QueryServiceConfigImpl.prototype.getModellerContent = function()
{
	return this.m_modeller;
};
oFF.QueryServiceConfigImpl.prototype.setModellerContent = function(repo)
{
	this.m_modeller = repo;
};
oFF.QueryServiceConfigImpl.prototype.serialize = function()
{
	var root = oFF.PrFactory.createStructure();
	var exporter = oFF.QInAExportFactory.createForRepository(this.getApplication(), this.getDataSource().getModelCapabilities());
	root.put("DataSource", exporter.exportDataSource(this.getDataSource(), false));
	root.putString("ProviderType", this.m_providerType.toString());
	root.putString("QueryManagerMode", this.m_mode.toString());
	root.putString("InstanceId", this.m_instanceId);
	root.putBoolean("RequestingDataCells", this.m_isRequestingDataCells);
	root.putBoolean("RequestingConditions", this.m_isRequestingConditions);
	root.putBoolean("RequestingDynamicFilter", this.m_isRequestingDynamicFilter);
	root.putBoolean("RequestingExceptions", this.m_isRequestingExceptions);
	root.putBoolean("RequestingSorting", this.m_isRequestingSorting);
	root.putBoolean("RequestingUniversalDisplayHierarchies", this.m_isRequestingUniversalDisplayHierarchies);
	root.putBoolean("RequestingVariables", this.m_isRequestingVariables);
	root.putBoolean("LoadingDefaultQuery", this.m_isLoadingDefaultQuery);
	var requiredDimensions = root.putNewList("RequiredDimensions");
	requiredDimensions.addAllStrings(this.m_requiredDimensions);
	var dimensionsOnAxes = root.putNewList("DimensionsOnAxes");
	dimensionsOnAxes.addAllStrings(this.m_dimensionsOnAxes);
	var serverCustomization = root.putNewList("ServerCustomization");
	serverCustomization.addAllStrings(this.m_serverCustomization.getValuesAsReadOnlyListOfString());
	var tagging = root.putNewStructure("Tagging");
	var tagginKeys = this.getTagging().getKeysAsIteratorOfString();
	while (tagginKeys.hasNext())
	{
		var taggingKey = tagginKeys.next();
		var taggingValue = this.getTagging().getByKey(taggingKey);
		tagging.putString(taggingKey, taggingValue);
	}
	var toggles = root.putNewList("Toggles");
	toggles.addAllStrings(this.getSession().getFeatureToggles().getKeysAsReadOnlyListOfString());
	var connectionSettings = root.putNewStructure("ConnectionSettings");
	connectionSettings.putString("ConnectionName", this.getConnectionName());
	connectionSettings.putString("SystemName", this.getSystemName());
	root.putString("DataProviderName", this.getDataProviderName());
	return root;
};
oFF.QueryServiceConfigImpl.prototype.getStorageGroupName = function()
{
	return null;
};
oFF.QueryServiceConfigImpl.prototype.getStorageName = function()
{
	return null;
};
oFF.QueryServiceConfigImpl.prototype.getStorageObjectName = function()
{
	return null;
};
oFF.QueryServiceConfigImpl.prototype.getName = function()
{
	return null;
};
oFF.QueryServiceConfigImpl.prototype.getContext = function()
{
	return null;
};
oFF.QueryServiceConfigImpl.prototype.getOlapEnv = function()
{
	return null;
};
oFF.QueryServiceConfigImpl.prototype.getChangedProperties = function()
{
	return null;
};
oFF.QueryServiceConfigImpl.prototype.setChangedProperties = oFF.noSupport;

oFF.QAttributeContainer = function() {};
oFF.QAttributeContainer.prototype = new oFF.QModelComponent();
oFF.QAttributeContainer.prototype._ff_c = "QAttributeContainer";

oFF.QAttributeContainer.create = function(context, dimension)
{
	var object = new oFF.QAttributeContainer();
	object.setupAttributeContainer(context, dimension);
	return object;
};
oFF.QAttributeContainer.prototype.m_resultSetAttributes = null;
oFF.QAttributeContainer.prototype.m_selectorAttributes = null;
oFF.QAttributeContainer.prototype.m_defaultResultSetAttributes = null;
oFF.QAttributeContainer.prototype.m_allAttributes = null;
oFF.QAttributeContainer.prototype.m_mainAttribute = null;
oFF.QAttributeContainer.prototype.cloneOlapComponent = function(context, parent)
{
	var clone = oFF.QAttributeContainer.create(context, null);
	clone.copyFrom(this, null);
	return clone;
};
oFF.QAttributeContainer.prototype.setupAttributeContainer = function(context, dimension)
{
	this.setupModelComponentWithName(context, dimension, "Attributes");
	this.m_resultSetAttributes = oFF.QAttributeList.createAttributeList(this, "Resultset Attributes");
	this.m_selectorAttributes = oFF.QAttributeList.createAttributeList(this, "Selector Attribtues");
	this.m_allAttributes = oFF.QAttributeList.createAttributeList(this, "All Attributes");
	this.m_defaultResultSetAttributes = oFF.XListWeakRef.create();
};
oFF.QAttributeContainer.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originAttributeContainer = other;
	var size = originAttributeContainer.m_allAttributes.size();
	var i;
	var context = this.getContext();
	var dimension = this.getDimension();
	for (i = 0; i < size; i++)
	{
		var origAttribute = originAttributeContainer.getAttributes().get(i);
		var cloneAttribute = oFF.QAttribute.createAttribute(context, dimension);
		cloneAttribute.copyFrom(origAttribute, flags);
		this.m_allAttributes.addInternal(cloneAttribute);
	}
	this.m_allAttributes.copyFrom(originAttributeContainer.m_allAttributes, flags);
	size = originAttributeContainer.m_resultSetAttributes.size();
	for (i = 0; i < size; i++)
	{
		this.m_resultSetAttributes.addInternal(this.m_allAttributes.getAttributeByName(originAttributeContainer.m_resultSetAttributes.get(i).getName()));
	}
	this.m_resultSetAttributes.copyFrom(originAttributeContainer.m_resultSetAttributes, flags);
	size = originAttributeContainer.m_defaultResultSetAttributes.size();
	for (i = 0; i < size; i++)
	{
		var attributeByName = this.m_allAttributes.getAttributeByName(originAttributeContainer.m_defaultResultSetAttributes.get(i).getName());
		this.m_defaultResultSetAttributes.add(attributeByName);
		this.m_selectorAttributes.addInternal(attributeByName);
	}
	this.m_selectorAttributes.copyFrom(originAttributeContainer.m_selectorAttributes, flags);
	if (oFF.notNull(originAttributeContainer.m_mainAttribute))
	{
		this.m_mainAttribute = this.m_allAttributes.getAttributeByName(originAttributeContainer.m_mainAttribute.getName());
	}
};
oFF.QAttributeContainer.prototype.releaseObject = function()
{
	this.m_resultSetAttributes = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_resultSetAttributes);
	this.m_selectorAttributes = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_selectorAttributes);
	this.m_allAttributes = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_allAttributes);
	this.m_mainAttribute = oFF.XObjectExt.release(this.m_mainAttribute);
	this.m_defaultResultSetAttributes = oFF.XObjectExt.release(this.m_defaultResultSetAttributes);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QAttributeContainer.prototype.reinit = function(origin)
{
	oFF.XCollectionUtils.releaseEntriesFromCollection(this.m_resultSetAttributes);
	this.m_resultSetAttributes.clear();
	oFF.XCollectionUtils.releaseEntriesFromCollection(this.m_selectorAttributes);
	this.m_selectorAttributes.clear();
	oFF.XCollectionUtils.releaseEntriesFromCollection(this.m_allAttributes);
	this.m_allAttributes.clear();
	this.m_mainAttribute = oFF.XObjectExt.release(this.m_mainAttribute);
	this.m_defaultResultSetAttributes.clear();
	this.copyFrom(origin, null);
};
oFF.QAttributeContainer.prototype.getResultSetAttributes = function()
{
	return this.m_resultSetAttributes;
};
oFF.QAttributeContainer.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.ATTRIBUTE_CONTAINER;
};
oFF.QAttributeContainer.prototype.getAttributesExt = function(context)
{
	if (context === oFF.QContextType.RESULT_SET)
	{
		return this.getResultSetAttributes();
	}
	return this.getSelectorAttributes();
};
oFF.QAttributeContainer.prototype.getSelectorAttributes = function()
{
	return this.m_selectorAttributes;
};
oFF.QAttributeContainer.prototype.getMainAttribute = function()
{
	return this.m_mainAttribute;
};
oFF.QAttributeContainer.prototype.setMainAttribute = function(mainAttribute)
{
	this.m_mainAttribute = mainAttribute;
};
oFF.QAttributeContainer.prototype.getAttributes = function()
{
	return this.m_allAttributes;
};
oFF.QAttributeContainer.prototype.getAttributeByName = function(name)
{
	return this.m_allAttributes.getAttributeByName(name);
};
oFF.QAttributeContainer.prototype.getDimension = function()
{
	return this.getParentComponent();
};
oFF.QAttributeContainer.prototype.addAttribute = function(attribute)
{
	this.m_allAttributes.add(attribute);
};
oFF.QAttributeContainer.prototype.addAttributeInternal = function(attribute)
{
	this.m_allAttributes.addInternal(attribute);
};
oFF.QAttributeContainer.prototype.notifyChildChanged = function(changedNodes)
{
	this.queueEventing();
	oFF.QModelComponent.prototype.notifyChildChanged.call( this , changedNodes);
	var dimension = this.getDimension();
	var size = changedNodes.size();
	for (var i = 0; i < size; i++)
	{
		var next = changedNodes.get(i);
		if (next === this.m_selectorAttributes)
		{
			dimension.setSelectorFieldLayoutType(oFF.FieldLayoutType.ATTRIBUTE_BASED);
		}
		else if (next === this.m_resultSetAttributes)
		{
			dimension.setFieldLayoutType(oFF.FieldLayoutType.ATTRIBUTE_BASED);
		}
	}
	this.resumeEventing();
};
oFF.QAttributeContainer.prototype.isComponentNode = function()
{
	return true;
};
oFF.QAttributeContainer.prototype.getNamedChildren = function()
{
	var map = oFF.XHashMapByString.create();
	map.put("AllAttributes", this.m_allAttributes);
	map.put("ResultSetAttributes", this.m_resultSetAttributes);
	map.put("SelectorAttributes", this.m_selectorAttributes);
	map.put("MainAttribute", this.m_mainAttribute);
	return map;
};
oFF.QAttributeContainer.prototype.addDefaultResultSetAttribute = function(attribute)
{
	this.m_defaultResultSetAttributes.add(attribute);
};
oFF.QAttributeContainer.prototype.getDefaultResultSetAttributes = function()
{
	return this.m_defaultResultSetAttributes;
};
oFF.QAttributeContainer.prototype.mergeDeepRecursive = function(settings, other)
{
	var otherObj = other;
	var otherAttributes = otherObj.getResultSetAttributes();
	this.m_resultSetAttributes.clear();
	for (var i = 0; i < otherAttributes.size(); i++)
	{
		var otherAttribute = otherAttributes.get(i);
		var attributeName = otherAttribute.getName();
		var attribute = this.getAttributeByName(attributeName);
		this.m_resultSetAttributes.add(attribute);
		if (oFF.notNull(attribute))
		{
			attribute.mergeDeepRecursive(settings, otherAttribute);
		}
	}
};

oFF.QAxesManager = function() {};
oFF.QAxesManager.prototype = new oFF.QModelComponent();
oFF.QAxesManager.prototype._ff_c = "QAxesManager";

oFF.QAxesManager.create = function(queryModel)
{
	var newObj = new oFF.QAxesManager();
	newObj.setupAxesManager(queryModel);
	return newObj;
};
oFF.QAxesManager.prototype.m_axisRows = null;
oFF.QAxesManager.prototype.m_axisColumns = null;
oFF.QAxesManager.prototype.m_axisFree = null;
oFF.QAxesManager.prototype.m_axisDynamic = null;
oFF.QAxesManager.prototype.m_axisFilter = null;
oFF.QAxesManager.prototype.m_axisRepository = null;
oFF.QAxesManager.prototype.m_axisVirtual = null;
oFF.QAxesManager.prototype.m_axisTechnical = null;
oFF.QAxesManager.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originAxesManager = other;
	this.m_axisRows.copyFrom(originAxesManager.m_axisRows, flags);
	this.m_axisColumns.copyFrom(originAxesManager.m_axisColumns, flags);
	this.m_axisFree.copyFrom(originAxesManager.m_axisFree, flags);
	if (oFF.notNull(originAxesManager.m_axisDynamic))
	{
		this.getDynamicAxis().copyFrom(originAxesManager.m_axisDynamic, flags);
	}
	if (oFF.notNull(originAxesManager.m_axisFilter))
	{
		this.getFilterAxis().copyFrom(originAxesManager.m_axisFilter, flags);
	}
	if (oFF.notNull(originAxesManager.m_axisRepository))
	{
		this.getRepositoryAxis().copyFrom(originAxesManager.m_axisRepository, flags);
	}
	if (oFF.notNull(originAxesManager.m_axisVirtual))
	{
		this.getVirtualAxis().copyFrom(originAxesManager.m_axisVirtual, flags);
	}
	if (oFF.notNull(originAxesManager.m_axisTechnical))
	{
		this.getTechnicalAxis().copyModelComponent(originAxesManager.m_axisTechnical, flags);
	}
};
oFF.QAxesManager.prototype.setupAxesManager = function(queryModel)
{
	this.setupModelComponent(queryModel, queryModel);
	this.m_axisColumns = oFF.QAxis.createAxis(queryModel, this, oFF.AxisType.COLUMNS);
	this.m_axisRows = oFF.QAxis.createAxis(queryModel, this, oFF.AxisType.ROWS);
	this.m_axisFree = oFF.QAxis.createAxis(queryModel, this, oFF.AxisType.FREE);
};
oFF.QAxesManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.AXES_MANAGER;
};
oFF.QAxesManager.prototype.releaseObject = function()
{
	this.m_axisColumns = oFF.XObjectExt.release(this.m_axisColumns);
	this.m_axisDynamic = oFF.XObjectExt.release(this.m_axisDynamic);
	this.m_axisFilter = oFF.XObjectExt.release(this.m_axisFilter);
	this.m_axisFree = oFF.XObjectExt.release(this.m_axisFree);
	this.m_axisRepository = oFF.XObjectExt.release(this.m_axisRepository);
	this.m_axisVirtual = oFF.XObjectExt.release(this.m_axisVirtual);
	this.m_axisRows = oFF.XObjectExt.release(this.m_axisRows);
	this.m_axisTechnical = oFF.XObjectExt.release(this.m_axisTechnical);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QAxesManager.prototype.getDynamicAxis = function()
{
	if (oFF.isNull(this.m_axisDynamic) && !this.isReleased())
	{
		this.m_axisDynamic = oFF.QAxis.createAxis(this.getContext(), this, oFF.AxisType.DYNAMIC);
	}
	return this.m_axisDynamic;
};
oFF.QAxesManager.prototype.getColumnsAxis = function()
{
	return this.m_axisColumns;
};
oFF.QAxesManager.prototype.getRowsAxis = function()
{
	return this.m_axisRows;
};
oFF.QAxesManager.prototype.getFreeAxis = function()
{
	return this.m_axisFree;
};
oFF.QAxesManager.prototype.getRepositoryAxis = function()
{
	if (oFF.isNull(this.m_axisRepository) && !this.isReleased())
	{
		this.m_axisRepository = oFF.QAxis.createAxis(this.getContext(), this, oFF.AxisType.REPOSITORY);
	}
	return this.m_axisRepository;
};
oFF.QAxesManager.prototype.getVirtualAxis = function()
{
	if (oFF.isNull(this.m_axisVirtual) && !this.isReleased())
	{
		this.m_axisVirtual = oFF.QAxis.createAxis(this.getContext(), this, oFF.AxisType.VIRTUAL);
	}
	return this.m_axisVirtual;
};
oFF.QAxesManager.prototype.getFilterAxis = function()
{
	if (oFF.isNull(this.m_axisFilter) && !this.isReleased())
	{
		this.m_axisFilter = oFF.QAxis.createAxis(this.getContext(), this, oFF.AxisType.FILTER);
	}
	return this.m_axisFilter;
};
oFF.QAxesManager.prototype.getAxis = function(axisType)
{
	return this.getAxisBase(axisType);
};
oFF.QAxesManager.prototype.getAxisBase = function(axis)
{
	if (axis === oFF.AxisType.COLUMNS)
	{
		return this.m_axisColumns;
	}
	if (axis === oFF.AxisType.ROWS)
	{
		return this.m_axisRows;
	}
	if (axis === oFF.AxisType.FREE)
	{
		return this.m_axisFree;
	}
	if (axis === oFF.AxisType.REPOSITORY)
	{
		return this.getRepositoryAxis();
	}
	if (axis === oFF.AxisType.DYNAMIC)
	{
		return this.getDynamicAxis();
	}
	if (axis === oFF.AxisType.FILTER)
	{
		return this.getFilterAxis();
	}
	if (axis === oFF.AxisType.VIRTUAL)
	{
		return this.getVirtualAxis();
	}
	if (axis === oFF.AxisType.TECHNICAL)
	{
		return this.getTechnicalAxis();
	}
	return null;
};
oFF.QAxesManager.prototype.getNamedChildren = function()
{
	var map = oFF.XHashMapByString.create();
	map.put("RowsAxis", this.getRowsAxis());
	map.put("ColumnsAxis", this.getColumnsAxis());
	map.put("FreeAxis", this.getFreeAxis());
	map.put("DynamicAxis", this.getDynamicAxis());
	map.put("FilterAxis", this.getFilterAxis());
	map.put("RepositoryAxis", this.getRepositoryAxis());
	map.put("VirtualAxis", this.getVirtualAxis());
	return map;
};
oFF.QAxesManager.prototype.getTechnicalAxis = function()
{
	if (!this.getModelCapabilities().supportsTechnicalAxis())
	{
		return null;
	}
	if (oFF.isNull(this.m_axisTechnical) && !this.isReleased())
	{
		this.m_axisTechnical = oFF.QAxis.createAxis(this.getContext(), this, oFF.AxisType.TECHNICAL);
	}
	return this.m_axisTechnical;
};

oFF.QueryModelLinkSettings = function() {};
oFF.QueryModelLinkSettings.prototype = new oFF.QModelComponent();
oFF.QueryModelLinkSettings.prototype._ff_c = "QueryModelLinkSettings";

oFF.QueryModelLinkSettings.create = function(blendableQueryManager, firstDatasetId, secondDatasetId)
{
	var queryModelLinkSettings = new oFF.QueryModelLinkSettings();
	queryModelLinkSettings.setupQueryModelLinkSettings(blendableQueryManager, firstDatasetId, secondDatasetId);
	return queryModelLinkSettings;
};
oFF.QueryModelLinkSettings.prototype.m_activeLinkDimensionNames = null;
oFF.QueryModelLinkSettings.prototype.m_linkType = null;
oFF.QueryModelLinkSettings.prototype.m_unlinkedDimensionJoinType = null;
oFF.QueryModelLinkSettings.prototype.m_firstDatasetId = null;
oFF.QueryModelLinkSettings.prototype.m_secondDatasetId = null;
oFF.QueryModelLinkSettings.prototype.setupQueryModelLinkSettings = function(blendableQueryManager, firstDatasetId, secondDatasetId)
{
	oFF.QModelComponent.prototype.setupModelComponent.call( this , blendableQueryManager, blendableQueryManager);
	oFF.XStringUtils.checkStringNotEmpty(firstDatasetId, "firstDatasetId cannot be null or empty");
	this.m_firstDatasetId = firstDatasetId;
	oFF.XStringUtils.checkStringNotEmpty(secondDatasetId, "secondDatasetId cannot be null or empty");
	this.m_secondDatasetId = secondDatasetId;
	var modelDimensionLinks = blendableQueryManager.getOlapEnv().getModelLinkManager().getModelDimensionLinksStorage(blendableQueryManager.getStorageName(), firstDatasetId, secondDatasetId);
	oFF.XObjectExt.assertNotNullExt(modelDimensionLinks, oFF.XStringUtils.concatenate4("Model Link Manager does not contain datasetId pair: ", firstDatasetId, " and ", secondDatasetId));
	modelDimensionLinks.addSecondaryParent(this);
	this.m_activeLinkDimensionNames = oFF.XListOfString.create();
	this.m_linkType = oFF.BlendingLinkType.PRIMARY;
	this.m_unlinkedDimensionJoinType = oFF.UnlinkedDimensionJoinType.MERGE_MEMBERS;
};
oFF.QueryModelLinkSettings.prototype.releaseObject = function()
{
	this.m_firstDatasetId = null;
	this.m_secondDatasetId = null;
	this.m_activeLinkDimensionNames = oFF.XObjectExt.release(this.m_activeLinkDimensionNames);
	this.m_linkType = null;
	this.m_unlinkedDimensionJoinType = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QueryModelLinkSettings.prototype.copyFromInternal = function(other, flags)
{
	var origin = other;
	this.m_firstDatasetId = origin.m_firstDatasetId;
	this.m_secondDatasetId = origin.m_secondDatasetId;
	this.m_activeLinkDimensionNames = origin.m_activeLinkDimensionNames.createListOfStringCopy();
	this.m_linkType = origin.m_linkType;
	this.m_unlinkedDimensionJoinType = origin.m_unlinkedDimensionJoinType;
};
oFF.QueryModelLinkSettings.prototype.cloneOlapComponent = function(context, parent)
{
	var queryModelLinkSettingsClone = oFF.QueryModelLinkSettings.create(context, this.m_firstDatasetId, this.m_secondDatasetId);
	queryModelLinkSettingsClone.copyFrom(this, null);
	return queryModelLinkSettingsClone;
};
oFF.QueryModelLinkSettings.prototype.getLinkType = function()
{
	return this.m_linkType;
};
oFF.QueryModelLinkSettings.prototype.setLinkType = function(blendingLinkType)
{
	this.m_linkType = blendingLinkType;
	this.notifyNodeChanged();
};
oFF.QueryModelLinkSettings.prototype.getUnlinkedDimensionJoinType = function()
{
	return this.m_unlinkedDimensionJoinType;
};
oFF.QueryModelLinkSettings.prototype.setUnlinkedDimensionJoinType = function(unlinkedDimensionJoinType)
{
	this.m_unlinkedDimensionJoinType = unlinkedDimensionJoinType;
	this.notifyNodeChanged();
};
oFF.QueryModelLinkSettings.prototype.getActivePrimaryLinkDimensionNames = function()
{
	return this.m_activeLinkDimensionNames;
};
oFF.QueryModelLinkSettings.prototype.addActivePrimaryLinkDimensionName = function(primaryDimensionLinkName)
{
	if (this.getQueryModel().getDimensionByName(primaryDimensionLinkName) !== null)
	{
		this.m_activeLinkDimensionNames.add(primaryDimensionLinkName);
		this.notifyNodeChanged();
	}
};
oFF.QueryModelLinkSettings.prototype.removeActivePrimaryLinkDimensionName = function(primaryDimensionLinkName)
{
	this.m_activeLinkDimensionNames.removeElement(primaryDimensionLinkName);
	this.notifyNodeChanged();
};
oFF.QueryModelLinkSettings.prototype.removeAllActivePrimaryLinkDimensionNames = function()
{
	this.m_activeLinkDimensionNames.clear();
	this.notifyNodeChanged();
};
oFF.QueryModelLinkSettings.prototype.getSecondDatasetId = function()
{
	return this.m_secondDatasetId;
};
oFF.QueryModelLinkSettings.prototype.getName = function()
{
	return this.m_secondDatasetId;
};

oFF.OlapClientQueryObjectManager = function() {};
oFF.OlapClientQueryObjectManager.prototype = new oFF.QModelComponent();
oFF.OlapClientQueryObjectManager.prototype._ff_c = "OlapClientQueryObjectManager";

oFF.OlapClientQueryObjectManager.create = function(context)
{
	var clientQueryObjectManager = new oFF.OlapClientQueryObjectManager();
	clientQueryObjectManager.setupExt(context);
	return clientQueryObjectManager;
};
oFF.OlapClientQueryObjectManager.prototype.m_storage = null;
oFF.OlapClientQueryObjectManager.prototype.m_contextStorage = null;
oFF.OlapClientQueryObjectManager.prototype.setupExt = function(context)
{
	this.setupModelComponentWithName(context, null, "OlapClientQueryObjectManager");
	this.m_storage = oFF.QFactory.createKeyRefStorage(context, "clientQueryObjectManager");
	this.m_contextStorage = oFF.QCache.create(context.getSession());
};
oFF.OlapClientQueryObjectManager.prototype.getKeyRefStorage = function()
{
	return this.m_storage;
};
oFF.OlapClientQueryObjectManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.OLAP_CLIENT_QUERY_OBJECT_MANAGER;
};
oFF.OlapClientQueryObjectManager.prototype.releaseObject = function()
{
	var allSubStores = this.m_storage.getAllSubStores();
	var subStoresIter = allSubStores.getIterator();
	while (subStoresIter.hasNext())
	{
		var subStorage = subStoresIter.next();
		subStorage.removeObjectsByStorage(subStorage.getName(), true);
		oFF.XObjectExt.release(subStorage);
	}
	this.m_storage = oFF.XObjectExt.release(this.m_storage);
	this.m_contextStorage = oFF.XObjectExt.release(this.m_contextStorage);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.OlapClientQueryObjectManager.prototype.getStorage = function(storageName)
{
	var storage = this.m_storage.getSubStore(storageName);
	if (oFF.isNull(storage))
	{
		storage = oFF.QFactory.createKeyRefStorage(this.getContext(), storageName);
		this.m_storage.setSubKefRefStore(storage);
	}
	return storage;
};
oFF.OlapClientQueryObjectManager.prototype.getCacheKeyPrefix = function(storageName)
{
	return oFF.XStringUtils.concatenate2(storageName, "~");
};
oFF.OlapClientQueryObjectManager.prototype.getCachedKeyRefContext = function(context, storageName)
{
	var queryModel = context.getQueryModel();
	var cacheKey = oFF.XStringUtils.concatenate2(this.getCacheKeyPrefix(storageName), queryModel.getDataSource().getCacheKeyName());
	var memberContext;
	if (this.m_contextStorage.containsKey(cacheKey))
	{
		memberContext = this.m_contextStorage.useEntry(cacheKey);
		if (!memberContext.isReleased() && memberContext.getQueryModel() !== null && !memberContext.getQueryModel().isReleased())
		{
			return memberContext;
		}
		this.m_contextStorage.remove(cacheKey);
	}
	memberContext = oFF.QFactory.createKeyRefStoreContextWithCapabilities(queryModel, storageName, context.getModelCapabilities().cloneExt(null));
	this.m_contextStorage.put(cacheKey, memberContext);
	return memberContext;
};
oFF.OlapClientQueryObjectManager.prototype.remapObjectName = function(name, memberType, context)
{
	var queryModel = context.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var datasetId = queryModel.getDatasetId();
		if (memberType.isEqualTo(oFF.MemberType.CURRENCY_MEASURE))
		{
			var currencyTranslationManager = queryModel.getCurrencyTranslationManager();
			if (oFF.notNull(currencyTranslationManager) && oFF.notNull(datasetId) && (oFF.XString.isEqual(name, oFF.CurrencyConstants.DEFAULT_CURRENCY) || oFF.XString.isEqual(name, oFF.CurrencyConstants.LOCAL_CURRENCY)))
			{
				return oFF.XStringUtils.concatenate3(datasetId, "-", name);
			}
		}
		else if (queryModel.getDimensionByType(oFF.DimensionType.SECONDARY_STRUCTURE) !== null && oFF.notNull(datasetId) && memberType.isEqualTo(oFF.MemberType.RESTRICTED_MEASURE) && oFF.XString.isEqual(name, oFF.MeasureModelConstants.DEFAULT_CUSTOMDIMENSION2_MEMBER))
		{
			return oFF.XStringUtils.concatenate3(datasetId, "-", name);
		}
	}
	return name;
};
oFF.OlapClientQueryObjectManager.prototype.addNewPrimaryStructureMember = function(name, memberType, context, storageName)
{
	var storage = this.getStorage(storageName);
	var memberContext = this.getCachedKeyRefContext(context, storageName);
	var newMember = oFF.QStructureMember.createMeasure(memberType, memberContext, context.getQueryModel().getPrimaryCalculationDimension());
	var remappedName = this.remapObjectName(name, memberType, context);
	storage.putExt(newMember, oFF.QClientQueryObjectType.PRIMARY_STRUCTURE_MEMBER.getName(), remappedName);
	if (!oFF.XString.isEqual(name, remappedName))
	{
		newMember.setName(name);
	}
	return newMember;
};
oFF.OlapClientQueryObjectManager.prototype.addNewSecondaryStructureMember = function(name, memberType, context, storageName)
{
	var storage = this.getStorage(storageName);
	var memberContext = this.getCachedKeyRefContext(context, storageName);
	var newMember = oFF.QStructureMember.createMeasure(memberType, memberContext, context.getQueryModel().getSecondaryCalculationDimension());
	var remappedName = this.remapObjectName(name, memberType, context);
	storage.putExt(newMember, oFF.QClientQueryObjectType.SECONDARY_STRUCTURE_MEMBER.getName(), remappedName);
	if (!oFF.XString.isEqual(name, remappedName))
	{
		newMember.setName(name);
	}
	return newMember;
};
oFF.OlapClientQueryObjectManager.prototype.addNewFormulaCalcDimProperties = function(name, context, storageName)
{
	var storage = this.getStorage(storageName);
	var memberContext = this.getCachedKeyRefContext(context, storageName);
	var newFormulaCalculatedDimension = oFF.QFactory.createFormulaCalculatedDimension(memberContext, name);
	storage.putExt(newFormulaCalculatedDimension.getProperties(), oFF.QClientQueryObjectType.FORMULA_CALCDIM_PROPERTIES.getName(), name);
	return newFormulaCalculatedDimension.getProperties();
};
oFF.OlapClientQueryObjectManager.prototype.addNewFormulaException = function(name, context, storageName)
{
	var storage = this.getStorage(storageName);
	var memberContext = this.getCachedKeyRefContext(context, storageName);
	var newFormulaException = oFF.QFactory.createFormulaException(memberContext, name, null);
	storage.putExt(newFormulaException, oFF.QClientQueryObjectType.FORMULA_EXCEPTION.getName(), name);
	return newFormulaException;
};
oFF.OlapClientQueryObjectManager.prototype.getStructuredMember = function(name, storageName, isPrimaryStructureMember)
{
	return this.m_storage.get(storageName, isPrimaryStructureMember ? oFF.QClientQueryObjectType.PRIMARY_STRUCTURE_MEMBER.getName() : oFF.QClientQueryObjectType.SECONDARY_STRUCTURE_MEMBER.getName(), name);
};
oFF.OlapClientQueryObjectManager.prototype.getFormulaCalcDimProperties = function(name, storageName)
{
	return this.m_storage.get(storageName, oFF.QClientQueryObjectType.FORMULA_CALCDIM_PROPERTIES.getName(), name);
};
oFF.OlapClientQueryObjectManager.prototype.getFormulaException = function(name, storageName)
{
	return this.m_storage.get(storageName, oFF.QClientQueryObjectType.FORMULA_EXCEPTION.getName(), name);
};
oFF.OlapClientQueryObjectManager.prototype.getFormulaCalcDimPropertiesByFieldName = function(fieldName, storageName)
{
	var calcDimProperties = this.m_storage.getObjectsByGroup(storageName, oFF.QClientQueryObjectType.FORMULA_CALCDIM_PROPERTIES.getName());
	if (oFF.notNull(calcDimProperties))
	{
		var calcDimPropertiesIter = calcDimProperties.getIterator();
		while (calcDimPropertiesIter.hasNext())
		{
			var properties = calcDimPropertiesIter.next();
			if (properties.getFormulaCalcFields().getFieldByName(fieldName) !== null)
			{
				return properties;
			}
		}
	}
	return null;
};
oFF.OlapClientQueryObjectManager.prototype.removeClientQueryObject = function(name, storageName, objectType, releaseObject)
{
	this.m_storage.removeObject(storageName, objectType.getName(), name, releaseObject);
};
oFF.OlapClientQueryObjectManager.prototype.destroyStorage = function(storageName)
{
	var cacheKeys = this.m_contextStorage.getKeysAsReadOnlyListOfString();
	var cacheKeyPrefix = this.getCacheKeyPrefix(storageName);
	for (var i = cacheKeys.size() - 1; i >= 0; i--)
	{
		var cacheKey = cacheKeys.get(i);
		if (oFF.XString.startsWith(cacheKey, cacheKeyPrefix))
		{
			this.m_contextStorage.remove(cacheKey);
		}
	}
	this.m_storage.removeSubKeyRefStore(storageName, true);
};
oFF.OlapClientQueryObjectManager.prototype.getClientQueryObjectByKeyRef = function(keyRef)
{
	if (oFF.isNull(keyRef))
	{
		return null;
	}
	try
	{
		return this.m_storage.get(keyRef.getStorageName(), keyRef.getStorageGroupName(), keyRef.getStorageObjectName());
	}
	catch (e)
	{
		return null;
	}
};

oFF.QCmdDummyContext = function() {};
oFF.QCmdDummyContext.prototype = new oFF.QCmdAbstract();
oFF.QCmdDummyContext.prototype._ff_c = "QCmdDummyContext";

oFF.QCmdDummyContext.createDummyContext = function()
{
	return new oFF.QCmdDummyContext();
};
oFF.QCmdDummyContext.prototype.getOlapComponentType = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.setActiveComponent = function(component)
{
	return false;
};
oFF.QCmdDummyContext.prototype.registerChangedListener = function(listener, customIdentifier)
{
	return this;
};
oFF.QCmdDummyContext.prototype.unregisterChangedListener = function(listener)
{
	return this;
};
oFF.QCmdDummyContext.prototype.queueEventing = function() {};
oFF.QCmdDummyContext.prototype.stopEventing = function() {};
oFF.QCmdDummyContext.prototype.isEventingStopped = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.resumeEventing = function() {};
oFF.QCmdDummyContext.prototype.getApplication = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getSession = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getFieldAccessorSingle = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getModelCapabilities = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getDrillManager = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getQueryModel = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getVariableContainer = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getDimensionAccessor = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getOlapEnv = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getQueryManager = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getDataSourceOrigin = function()
{
	return this.getDataSource();
};
oFF.QCmdDummyContext.prototype.getDataSourceTarget = function()
{
	return this.getDataSource();
};
oFF.QCmdDummyContext.prototype.getDataSource = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getKeyRefStorage = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getDimension = function(dimName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getDimensionsContainingValueType = function(valueType)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getFirstGISDimension = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getGISAttributesForDimension = function(dimension)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getMeasure = function(measureName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getField = function(fieldName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.select = function(sigSelExpression)
{
	return this;
};
oFF.QCmdDummyContext.prototype.clearAxis = function(targetAxis)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setDimensionsAndMeasures = function(dimNames, measureNames)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setDimensionAndMeasure = function(dimName, measureName)
{
	return this;
};
oFF.QCmdDummyContext.prototype.moveDimensionExt = function(dimType, dimName, targetAxis, index)
{
	return null;
};
oFF.QCmdDummyContext.prototype.activateConditionalZeroSuppression = function()
{
	return this;
};
oFF.QCmdDummyContext.prototype.addAllDimensions = function()
{
	return this;
};
oFF.QCmdDummyContext.prototype.switchAxes = function()
{
	return this;
};
oFF.QCmdDummyContext.prototype.removeField = function(dimType, dimName, presentationType, fieldName, contextType)
{
	return null;
};
oFF.QCmdDummyContext.prototype.removeAttributeField = function(dimType, dimName, attributeName, presentationType, fieldName, contextType)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addField = function(dimType, dimName, presentationType, fieldName, contextType)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addAttributeField = function(dimType, dimName, attributeName, presentationType, fieldName, contextType)
{
	return null;
};
oFF.QCmdDummyContext.prototype.setField = function(dimType, dimName, presentationType, fieldName, contextType)
{
	return null;
};
oFF.QCmdDummyContext.prototype.clearFields = function(dimType, dimName, contextType)
{
	return this;
};
oFF.QCmdDummyContext.prototype.clearAttributeFields = function(dimType, dimName, attributeName, contextType)
{
	return this;
};
oFF.QCmdDummyContext.prototype.addAllFieldsToModelArea = function(contextType)
{
	return this;
};
oFF.QCmdDummyContext.prototype.addAllFieldsOfDimensionToModelArea = function(dimName, contextType)
{
	return this;
};
oFF.QCmdDummyContext.prototype.clearAllFieldsFromModelArea = function(contextType)
{
	return this;
};
oFF.QCmdDummyContext.prototype.containsField = function(dimName, fieldName, contextType)
{
	return false;
};
oFF.QCmdDummyContext.prototype.addAttributeToResultSet = function(dimName, attributeName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.removeAttributeFromResultSet = function(dimName, attributeName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.clearAttributes = function(dimType, dimName, contextType)
{
	return this;
};
oFF.QCmdDummyContext.prototype.containsResultSetFieldByType = function(dimName, presentationType)
{
	return false;
};
oFF.QCmdDummyContext.prototype.containsSelectorFieldByType = function(dimName, presentationType)
{
	return false;
};
oFF.QCmdDummyContext.prototype.sort = function(sortType, dimType, dimName, presentationType, fieldName, memberName, direction)
{
	return this;
};
oFF.QCmdDummyContext.prototype.clearSort = function(sortType, name)
{
	return this;
};
oFF.QCmdDummyContext.prototype.applyCustomSort = function(dimension, field, customOrder, sortDirection, customSortPosition, createNewSortOperation)
{
	return null;
};
oFF.QCmdDummyContext.prototype.newCustomSorting = function(dimension, field, sortFromStart, sortFromEnd)
{
	return this;
};
oFF.QCmdDummyContext.prototype.alignTotals = function(modelLevel, name, alignment)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setTotalsVisible = function(modelLevel, name, visibility)
{
	return this;
};
oFF.QCmdDummyContext.prototype.addNewRestrictedMeasure = function(dimType, measureName, text, memberName, targetDim, targetMember)
{
	return this;
};
oFF.QCmdDummyContext.prototype.addNewRestrictedMeasureOnNode = function(dimType, measureName, text, memberName, targetDim, targetHierarchyName, targetNode)
{
	return this;
};
oFF.QCmdDummyContext.prototype.addMeasure = function(measureName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getAccountDimensionMemberNameByAlias = function(queryModel, aliasName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getAccountDimensionMemberAliasByName = function(queryModel, memberName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getMeasureMemberNameByAlias = function(queryModel, aliasName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getRuntimeMemberNameByAlias = function(queryModel, aliasName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getMeasureMemberAliasByName = function(queryModel, memberName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getFilterById = function(uniqueId)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getVisibilityFilterById = function(uniqueId)
{
	return null;
};
oFF.QCmdDummyContext.prototype.clearAllFiltersExt = function(filterLayer, filterScopeVariables)
{
	return this;
};
oFF.QCmdDummyContext.prototype.clearNonMeasureFilters = function()
{
	return this;
};
oFF.QCmdDummyContext.prototype.clearNonStructureFilters = function()
{
	return this;
};
oFF.QCmdDummyContext.prototype.clearFiltersByDimensionExt = function(filterLayer, dimType, dimName)
{
	return this;
};
oFF.QCmdDummyContext.prototype.clearSingleMemberFilterByName = function(dimName, memberName, comparisonOperator)
{
	return this;
};
oFF.QCmdDummyContext.prototype.clearFilterByIdExt = function(filterLayer, uniqueId)
{
	return this;
};
oFF.QCmdDummyContext.prototype.addFilter = function(filterLayer, dimType, dimName, presentationType, fieldName, lowValue, highValue, comparisonOperator)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addSingleMemberFilter = function(filterLayer, dimType, dimName, memberName, comparisonOperator)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getSingleMemberFilter = function(filterLayer, dimType, dimName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addStringFilterByField = function(field, filterValue, comparisonOperator)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addFilterByFieldAndValue = function(field, filterValue, comparisonOperator)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addStringFilterByFieldNameAndOperator = function(dimName, fieldName, filterValue, comparisonOperator)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addIntFilterByFieldName = function(dimName, fieldName, filterValue, comparisonOperator)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addIntFilterByField = function(field, filterValue, comparisonOperator)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addDoubleFilterByFieldName = function(dimName, fieldName, filterValue, comparisonOperator)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addDoubleFilterByField = function(field, filterValue, comparisonOperator)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addLongFilterByFieldName = function(dimName, fieldName, filterValue, comparisonOperator)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addLongFilterByField = function(field, filterValue, comparisonOperator)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addStringFilterByName = function(dimName, fieldName, filterValue, comparisonOperator)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addStringFilterByPresentation = function(dimName, presentationType, filterValue, comparisonOperator)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addIntervalFilterByValues = function(dimName, lowValue, highValue)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addWithinDistanceFilter = function(dimension, fieldName, point, distance, unit)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addFilterByField = function(field, firstValue, secondValue, thirdValue, comparisonOperator, isVisibility)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addIntersectsRectFilter = function(dimension, fieldName, lowerLeft, upperRight)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addContainsGeometryFilter = function(dimension, fieldName, geometry)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addIntersectsGeometryFilter = function(dimension, fieldName, geometry)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addCoversGeometryFilter = function(dimension, fieldName, geometry)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addCrossesLinestringFilter = function(dimension, fieldName, geometry)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addDisjointGeometryFilter = function(dimension, fieldName, geometry)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addOverlapsGeometryFilter = function(dimension, fieldName, geometry)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addTouchesGeometryFilter = function(dimension, fieldName, geometry)
{
	return null;
};
oFF.QCmdDummyContext.prototype.addWithinGeometryFilter = function(dimension, fieldName, geometry)
{
	return null;
};
oFF.QCmdDummyContext.prototype.setFilterForLeaves = function(dimension)
{
	return this;
};
oFF.QCmdDummyContext.prototype.getVariablesNameAndText = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.setVariable = function(varName, value)
{
	return this;
};
oFF.QCmdDummyContext.prototype.submitVariables = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getVariable = function(varName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.updateDynamicVariables = function(syncType, listener, customIdentifier)
{
	return this;
};
oFF.QCmdDummyContext.prototype.processResetExitOrDynamicVariable = function(syncType, listener, customIdentifier, overwriteDefaultForInputEnabledVar)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setDimensionHierarchy = function(dimName, hierarchyName, hierarchyActive, initialDrillLevel)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setDimensionCustomHierarchyDefinition = function(customHierarchyDefinition, hierarchyActive, initialDrillLevel)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setUniversalDisplayHierarchy = function(dimensionNames, initialDrillLevel, active)
{
	return null;
};
oFF.QCmdDummyContext.prototype.drillNode = function(dimName, nodeName, drillState)
{
	return this;
};
oFF.QCmdDummyContext.prototype.getReferenceGrid = function(withDetails)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getAbstractRendering = function(type, protocol)
{
	return null;
};
oFF.QCmdDummyContext.prototype.processQueryExecution = function(syncType, listener, customIdentifier)
{
	return this;
};
oFF.QCmdDummyContext.prototype.refresh = function()
{
	return this;
};
oFF.QCmdDummyContext.prototype.setOffsetColumns = function(offset)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setMaxColumns = function(max)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setExecuteRequestOnOldResultSet = function(executeRequestOnOldResultSet)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setMaxResultRecords = function(maxResultRecords)
{
	return this;
};
oFF.QCmdDummyContext.prototype.resetMaxResultRecords = function()
{
	return this;
};
oFF.QCmdDummyContext.prototype.setResultSetPersistanceTargetSchema = function(resultSetPersistenceSchema)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setResultSetPersistanceTargetTable = function(resultSetPersistenceTable)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setResultSetPersistenceTargetType = function(resultSetPersistenceType)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setResultSetPersistenceIdentifier = function(resultSetPersistenceIdentifier)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setResultSetTransportEnabled = function(isEnabled)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setSuppressKeyfigureCalculation = function(doSupress)
{
	return this;
};
oFF.QCmdDummyContext.prototype.hasMoreColumnRecordsAvailable = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.getOffsetColumns = function()
{
	return 0;
};
oFF.QCmdDummyContext.prototype.getMaxColumns = function()
{
	return 0;
};
oFF.QCmdDummyContext.prototype.getExecuteRequestOnOldResultSet = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.getMaxResultRecords = function()
{
	return 0;
};
oFF.QCmdDummyContext.prototype.getResultSetPersistenceSchema = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getResultSetPersistenceTable = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getResultSetPersistenceType = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getResultSetPersistenceIdentifier = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.isResultSetTransportEnabled = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.isKeyfigureCalculationSuppressed = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.hasMoreRowRecordsAvailable = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.getOffsetRows = function()
{
	return 0;
};
oFF.QCmdDummyContext.prototype.getMaxRows = function()
{
	return 0;
};
oFF.QCmdDummyContext.prototype.setOffsetRows = function(offset)
{
	return this;
};
oFF.QCmdDummyContext.prototype.setMaxRows = function(max)
{
	return this;
};
oFF.QCmdDummyContext.prototype.reset = function()
{
	return this;
};
oFF.QCmdDummyContext.prototype.resetToDefault = function()
{
	return this;
};
oFF.QCmdDummyContext.prototype.resetPreserveCustomMembers = function()
{
	return this;
};
oFF.QCmdDummyContext.prototype.resetPreserveCustomMembersAndCalcDims = function()
{
	return this;
};
oFF.QCmdDummyContext.prototype.buildRank = function(maxRows, measureName, secondaryMeasure, applyToDimensions, indicateTopBottom, versionElementId, versionDimension)
{
	return null;
};
oFF.QCmdDummyContext.prototype.setRank = function(maxRows, complexSorting, condition, applyToDimensions)
{
	return this;
};
oFF.QCmdDummyContext.prototype.getRank = function(conditionName)
{
	return null;
};
oFF.QCmdDummyContext.prototype.clearRank = function(conditionName)
{
	return this;
};
oFF.QCmdDummyContext.prototype.getAllRanks = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.processQueryManagerCreation = function(syncType, listener, customIdentifier)
{
	return null;
};
oFF.QCmdDummyContext.prototype.getQueryServiceConfig = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.isHana = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.isBw = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.isBpcs = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.isBpce = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.isUniverse = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.isHybris = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.isUqas = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.isOdata = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.isTypeOfBw = function()
{
	return false;
};
oFF.QCmdDummyContext.prototype.getStorageGroupName = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getStorageName = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getStorageObjectName = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getName = function()
{
	return null;
};
oFF.QCmdDummyContext.prototype.getTagging = function()
{
	return null;
};

oFF.QCmdSpace = function() {};
oFF.QCmdSpace.prototype = new oFF.QCmdAbstract();
oFF.QCmdSpace.prototype._ff_c = "QCmdSpace";

oFF.QCmdSpace.TRACE_COMMAND = "Command";
oFF.QCmdSpace.TRACE_PARAMETERS = "Parameters";
oFF.QCmdSpace.TRACE_SIGNATURE = "Signature";
oFF.QCmdSpace.createBySelection = function(application, sigSelExpression)
{
	var cmdSpace = new oFF.QCmdSpace();
	cmdSpace.setupCmdsSpace(application);
	cmdSpace.selectOnSpace(sigSelExpression);
	return cmdSpace;
};
oFF.QCmdSpace.createWithElement = function(application, modelComponent)
{
	var cmdSpace = new oFF.QCmdSpace();
	cmdSpace.setupCmdsSpace(application);
	cmdSpace.addElement(modelComponent);
	return cmdSpace;
};
oFF.QCmdSpace.prototype.m_olapEnv = null;
oFF.QCmdSpace.prototype.m_activeCmdEngine = null;
oFF.QCmdSpace.prototype.m_cmdEngineList = null;
oFF.QCmdSpace.prototype.m_dummyCmdEngine = null;
oFF.QCmdSpace.prototype.m_elements = null;
oFF.QCmdSpace.prototype.m_activeComponent = null;
oFF.QCmdSpace.prototype.m_spaceSigSel = null;
oFF.QCmdSpace.prototype.setupCmdsSpace = function(application)
{
	this.m_olapEnv = application;
	this.m_elements = oFF.XList.create();
	this.m_cmdEngineList = oFF.XList.create();
};
oFF.QCmdSpace.prototype.releaseObject = function()
{
	this.m_olapEnv = null;
	this.m_elements = oFF.XObjectExt.release(this.m_elements);
	this.m_cmdEngineList = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_cmdEngineList);
	oFF.QCmdAbstract.prototype.releaseObject.call( this );
};
oFF.QCmdSpace.prototype.getComponentType = function()
{
	return this.getOlapComponentType();
};
oFF.QCmdSpace.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.CONVENIENCE_CMDS;
};
oFF.QCmdSpace.prototype.addComponent = function(component)
{
	var olapComponent = component;
	this.addElement(olapComponent);
};
oFF.QCmdSpace.prototype.setActiveComponent = function(component)
{
	return false;
};
oFF.QCmdSpace.prototype.sizeElements = function()
{
	return this.m_elements.size();
};
oFF.QCmdSpace.prototype.getDataSourceOrigin = function()
{
	return this.getDataSource();
};
oFF.QCmdSpace.prototype.getDataSourceTarget = function()
{
	return this.getDataSource();
};
oFF.QCmdSpace.prototype.getDataSource = function()
{
	return this.setActive(0).getDataSource();
};
oFF.QCmdSpace.prototype.addElement = function(modelComponent)
{
	if (oFF.notNull(modelComponent))
	{
		this.m_elements.add(oFF.XWeakReferenceUtil.getWeakRef(modelComponent));
		this.m_activeComponent = modelComponent;
		if (oFF.isNull(this.m_olapEnv))
		{
			this.m_olapEnv = modelComponent.getApplication().getOlapEnvironment();
		}
	}
};
oFF.QCmdSpace.prototype.setActive = function(index)
{
	if (index < this.m_elements.size())
	{
		var weakRef = this.m_elements.get(index);
		this.m_activeComponent = oFF.XWeakReferenceUtil.getHardRef(weakRef);
		if (oFF.notNull(this.m_activeCmdEngine))
		{
			var ok = this.m_activeCmdEngine.setActiveComponent(this.m_activeComponent);
			if (!ok)
			{
				this.m_activeCmdEngine = null;
				var size = this.m_cmdEngineList.size();
				if (size > 1)
				{
					for (var i = 0; i < size; i++)
					{
						var context = this.m_cmdEngineList.get(i);
						if (context.setActiveComponent(this.m_activeComponent))
						{
							this.m_activeCmdEngine = context;
							break;
						}
					}
				}
			}
		}
		if (oFF.isNull(this.m_activeCmdEngine))
		{
			this.m_activeCmdEngine = oFF.QCmdContextFactory.createCmdContext(this.m_olapEnv, this.m_activeComponent);
			if (oFF.notNull(this.m_activeCmdEngine))
			{
				this.m_cmdEngineList.add(this.m_activeCmdEngine);
			}
		}
	}
	if (oFF.isNull(this.m_activeCmdEngine))
	{
		if (oFF.isNull(this.m_dummyCmdEngine))
		{
			this.m_dummyCmdEngine = oFF.QCmdDummyContext.createDummyContext();
		}
		this.m_activeCmdEngine = this.m_dummyCmdEngine;
	}
	return this.m_activeCmdEngine;
};
oFF.QCmdSpace.prototype.select = function(sigSelExpression)
{
	return this.getOlapEnv().select(sigSelExpression);
};
oFF.QCmdSpace.prototype.selectOnSpace = function(sigSelExpression)
{
	var parser = oFF.SigSelParser.create();
	var result = parser.parse(sigSelExpression);
	if (result.isValid())
	{
		this.m_spaceSigSel = result.getData();
		this.selectOnSpaceExpr();
	}
};
oFF.QCmdSpace.prototype.selectOnSpaceExpr = function()
{
	if (oFF.notNull(this.m_spaceSigSel))
	{
		var process = this.getSession();
		var selector = process.getSelector();
		this.m_elements.clear();
		this.m_activeComponent = null;
		for (var i = 0; i < this.m_spaceSigSel.size(); i++)
		{
			var operation = this.m_spaceSigSel.get(i);
			var components = selector.selectComponentsByOp(operation, oFF.SigSelDomain.DATA, null, -1);
			if (oFF.notNull(components))
			{
				for (var k = 0; k < components.size(); k++)
				{
					var component = components.get(k);
					this.addElement(component);
				}
			}
		}
	}
};
oFF.QCmdSpace.prototype.addTrace = function(name, parameter)
{
	var cmdStructure = oFF.PrFactory.createStructure();
	cmdStructure.putString(oFF.QCmdSpace.TRACE_COMMAND, name);
	if (oFF.notNull(parameter) && parameter.hasElements())
	{
		var parameterList = cmdStructure.putNewList(oFF.QCmdSpace.TRACE_PARAMETERS);
		var signature = oFF.QCmdSignature.lookupSignature(name);
		if (oFF.XStringUtils.isNotNullAndNotEmpty(signature))
		{
			var signatureList = oFF.PrFactory.createList();
			signatureList.addAllStrings(oFF.XStringTokenizer.splitString(signature, ","));
			cmdStructure.put(oFF.QCmdSpace.TRACE_SIGNATURE, signatureList);
		}
		var len = parameter.size();
		for (var j = 0; j < len; j++)
		{
			parameterList.addString(parameter.getTrace(j));
		}
	}
	this.getOlapEnv().addTraceEntry(cmdStructure);
};
oFF.QCmdSpace.prototype.getSession = function()
{
	return this.m_olapEnv.getSession();
};
oFF.QCmdSpace.prototype.getOlapEnv = function()
{
	return this.m_olapEnv;
};
oFF.QCmdSpace.prototype.getApplication = function()
{
	return this.m_olapEnv.getApplication();
};
oFF.QCmdSpace.prototype.getQueryManager = function()
{
	return this.setActive(0).getQueryManager();
};
oFF.QCmdSpace.prototype.getQueryServiceConfig = function()
{
	return this.setActive(0).getQueryServiceConfig();
};
oFF.QCmdSpace.prototype.getQueryModel = function()
{
	return this.setActive(0).getQueryModel();
};
oFF.QCmdSpace.prototype.getDimension = function(dimName)
{
	var theDimName = this.checkAndReplace(dimName);
	return this.setActive(0).getDimension(theDimName);
};
oFF.QCmdSpace.prototype.getField = function(fieldName)
{
	var theFieldName = this.checkAndReplace(fieldName);
	return this.setActive(0).getField(theFieldName);
};
oFF.QCmdSpace.prototype.getMeasure = function(measureName)
{
	var theMeasureName = this.checkAndReplace(measureName);
	return this.setActive(0).getMeasure(theMeasureName);
};
oFF.QCmdSpace.prototype.getFieldAccessorSingle = function()
{
	return this.setActive(0).getFieldAccessorSingle();
};
oFF.QCmdSpace.prototype.getVariableContainer = function()
{
	return this.setActive(0).getVariableContainer();
};
oFF.QCmdSpace.prototype.getDimensionAccessor = function()
{
	return this.setActive(0).getDimensionAccessor();
};
oFF.QCmdSpace.prototype.getDrillManager = function()
{
	return this.setActive(0).getDrillManager();
};
oFF.QCmdSpace.prototype.getDimensionsContainingValueType = function(valueType)
{
	return this.setActive(0).getDimensionsContainingValueType(valueType);
};
oFF.QCmdSpace.prototype.getFirstGISDimension = function()
{
	return this.setActive(0).getFirstGISDimension();
};
oFF.QCmdSpace.prototype.getGISAttributesForDimension = function(dimension)
{
	return this.setActive(0).getGISAttributesForDimension(dimension);
};
oFF.QCmdSpace.prototype.getModelCapabilities = function()
{
	return this.setActive(0).getModelCapabilities();
};
oFF.QCmdSpace.prototype.registerChangedListener = function(listener, customIdentifier)
{
	for (var i = 0; i < this.m_elements.size(); i++)
	{
		this.setActive(i).registerChangedListener(listener, customIdentifier);
	}
	return this;
};
oFF.QCmdSpace.prototype.unregisterChangedListener = function(listener)
{
	for (var i = 0; i < this.m_elements.size(); i++)
	{
		this.setActive(i).unregisterChangedListener(listener);
	}
	return this;
};
oFF.QCmdSpace.prototype.reset = function()
{
	if (this.getOlapEnv().isTracing())
	{
		this.addTrace(oFF.QCmdSignature.RESET, null);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).reset();
	}
	return this;
};
oFF.QCmdSpace.prototype.resetPreserveCustomMembers = function()
{
	if (this.getOlapEnv().isTracing())
	{
		this.addTrace(oFF.QCmdSignature.RESET_PRESERVE_CUSTOM_MEMBERS, null);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).resetPreserveCustomMembers();
	}
	return this;
};
oFF.QCmdSpace.prototype.resetPreserveCustomMembersAndCalcDims = function()
{
	if (this.getOlapEnv().isTracing())
	{
		this.addTrace(oFF.QCmdSignature.RESET_PRESERVE_CUSTOM_MEMBERS_AND_CALC_DIMS, null);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).resetPreserveCustomMembersAndCalcDims();
	}
	return this;
};
oFF.QCmdSpace.prototype.buildRank = function(maxRows, measureName, secondaryMeasure, applyToDimensions, indicateTopBottom, versionElementId, versionDimension)
{
	var theMeasureName = this.checkAndReplace(measureName);
	var size = this.sizeElements();
	var condition = null;
	for (var i = 0; i < size; i++)
	{
		condition = this.setActive(i).buildRank(maxRows, theMeasureName, secondaryMeasure, applyToDimensions, indicateTopBottom, versionElementId, versionDimension);
	}
	return condition;
};
oFF.QCmdSpace.prototype.setRank = function(maxRows, complexSorting, condition, applyToDimensions)
{
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setRank(maxRows, complexSorting, condition, applyToDimensions);
	}
	return this;
};
oFF.QCmdSpace.prototype.clearRank = function(conditionName)
{
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).clearRank(conditionName);
	}
	return this;
};
oFF.QCmdSpace.prototype.getRank = function(conditionName)
{
	return this.setActive(0).getRank(conditionName);
};
oFF.QCmdSpace.prototype.getAllRanks = function()
{
	return this.setActive(0).getAllRanks();
};
oFF.QCmdSpace.prototype.resetToDefault = function()
{
	if (this.getOlapEnv().isTracing())
	{
		this.addTrace(oFF.QCmdSignature.RESET_TO_DEFAULT, null);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).resetToDefault();
	}
	return this;
};
oFF.QCmdSpace.prototype.addSingleMemberFilter = function(filterLayer, dimType, dimName, memberName, comparisonOperator)
{
	var theDimName = this.checkAndReplace(dimName);
	var theMemberName = this.checkAndReplace(memberName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(filterLayer).addNameObject(dimType).addString(theDimName);
		params.addString(theMemberName).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.ADD_SINGLE_MEMBER_FILTER, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addSingleMemberFilter(filterLayer, dimType, theDimName, theMemberName, comparisonOperator);
	}
	return result;
};
oFF.QCmdSpace.prototype.getSingleMemberFilter = function(filterLayer, dimType, dimName)
{
	return this.setActive(0).getSingleMemberFilter(filterLayer, dimType, dimName);
};
oFF.QCmdSpace.prototype.addStringFilterByField = function(field, filterValue, comparisonOperator)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(field).addString(filterValue).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.ADD_STRING_FILTER_BY_FIELD, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addStringFilterByField(field, filterValue, comparisonOperator);
	}
	return result;
};
oFF.QCmdSpace.prototype.addFilter = function(filterLayer, dimType, dimName, presentationType, fieldName, lowValue, highValue, comparisonOperator)
{
	var theDimName = this.checkAndReplace(dimName);
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(filterLayer).addNameObject(dimType).addString(theDimName).addNameObject(presentationType).addString(theFieldName).addString(lowValue).addString(highValue).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.ADD_FILTER, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addFilter(filterLayer, dimType, theDimName, presentationType, theFieldName, lowValue, highValue, comparisonOperator);
	}
	return result;
};
oFF.QCmdSpace.prototype.addFilterByFieldAndValue = function(field, filterValue, comparisonOperator)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(field).addXValue(filterValue).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.ADD_FILTER_BY_FIELD_AND_VALUE, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addFilterByFieldAndValue(field, filterValue, comparisonOperator);
	}
	return result;
};
oFF.QCmdSpace.prototype.addFilterByField = function(field, firstValue, secondValue, thirdValue, comparisonOperator, isVisibility)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(field).addXValue(firstValue).addXValue(secondValue).addXValue(thirdValue);
		params.addNameObject(comparisonOperator).addBoolean(isVisibility);
		this.addTrace(oFF.QCmdSignature.ADD_FILTER_BY_FIELD, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addFilterByField(field, firstValue, secondValue, thirdValue, comparisonOperator, isVisibility);
	}
	return result;
};
oFF.QCmdSpace.prototype.addStringFilterByFieldNameAndOperator = function(dimName, fieldName, filterValue, comparisonOperator)
{
	var theDimName = this.checkAndReplace(dimName);
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theDimName).addString(theFieldName).addString(filterValue).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.ADD_STRING_FILTER_BY_FIELD_NAME_AND_OPERATOR, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addStringFilterByFieldNameAndOperator(theDimName, theFieldName, filterValue, comparisonOperator);
	}
	return result;
};
oFF.QCmdSpace.prototype.addIntFilterByFieldName = function(dimName, fieldName, filterValue, comparisonOperator)
{
	var theDimName = this.checkAndReplace(dimName);
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theDimName).addString(theFieldName).addInteger(filterValue).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.ADD_INT_FILTER_BY_FIELD_NAME, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addIntFilterByFieldName(theDimName, theFieldName, filterValue, comparisonOperator);
	}
	return result;
};
oFF.QCmdSpace.prototype.addIntFilterByField = function(field, filterValue, comparisonOperator)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(field).addInteger(filterValue).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.ADD_INT_FILTER_BY_FIELD, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addIntFilterByField(field, filterValue, comparisonOperator);
	}
	return result;
};
oFF.QCmdSpace.prototype.addDoubleFilterByFieldName = function(dimName, fieldName, filterValue, comparisonOperator)
{
	var theDimName = this.checkAndReplace(dimName);
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theDimName).addString(theFieldName).addDouble(filterValue).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.ADD_DOUBLE_FILTER_BY_FIELD_NAME, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addDoubleFilterByFieldName(theDimName, theFieldName, filterValue, comparisonOperator);
	}
	return result;
};
oFF.QCmdSpace.prototype.addDoubleFilterByField = function(field, filterValue, comparisonOperator)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(field).addDouble(filterValue).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.ADD_DOUBLE_FILTER_BY_FIELD, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addDoubleFilterByField(field, filterValue, comparisonOperator);
	}
	return result;
};
oFF.QCmdSpace.prototype.addLongFilterByFieldName = function(dimName, fieldName, filterValue, comparisonOperator)
{
	var theDimName = this.checkAndReplace(dimName);
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theDimName).addString(theFieldName).addLong(filterValue).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.ADD_LONG_FILTER_BY_FIELD_NAME, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addLongFilterByFieldName(theDimName, theFieldName, filterValue, comparisonOperator);
	}
	return result;
};
oFF.QCmdSpace.prototype.addLongFilterByField = function(field, filterValue, comparisonOperator)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(field).addLong(filterValue).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.ADD_LONG_FILTER_BY_FIELD, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addLongFilterByField(field, filterValue, comparisonOperator);
	}
	return result;
};
oFF.QCmdSpace.prototype.addStringFilterByName = function(dimName, fieldName, filterValue, comparisonOperator)
{
	var theDimName = this.checkAndReplace(dimName);
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theDimName).addString(theFieldName).addString(filterValue).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.ADD_STRING_FILTER_BY_NAME, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addStringFilterByName(theDimName, theFieldName, filterValue, comparisonOperator);
	}
	return result;
};
oFF.QCmdSpace.prototype.addStringFilterByPresentation = function(dimName, presentationType, filterValue, comparisonOperator)
{
	var theDimName = this.checkAndReplace(dimName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theDimName).addNameObject(presentationType).addString(filterValue).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.ADD_STRING_FILTER_BY_PRESENTATION, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addStringFilterByPresentation(theDimName, presentationType, filterValue, comparisonOperator);
	}
	return result;
};
oFF.QCmdSpace.prototype.addIntervalFilterByValues = function(dimName, lowValue, highValue)
{
	var theDimName = this.checkAndReplace(dimName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theDimName).addXValue(lowValue).addXValue(highValue);
		this.addTrace(oFF.QCmdSignature.ADD_INTERVAL_FILTER_BY_VALUES, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addIntervalFilterByValues(theDimName, lowValue, highValue);
	}
	return result;
};
oFF.QCmdSpace.prototype.addWithinDistanceFilter = function(dimension, fieldName, point, distance, unit)
{
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimension).addString(theFieldName).addXValue(point).addDouble(distance).addString(unit);
		this.addTrace(oFF.QCmdSignature.ADD_WITHIN_DISTANCE_FILTER, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addWithinDistanceFilter(dimension, theFieldName, point, distance, unit);
	}
	return result;
};
oFF.QCmdSpace.prototype.addIntersectsRectFilter = function(dimension, fieldName, lowerLeft, upperRight)
{
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimension).addString(theFieldName).addXValue(lowerLeft).addXValue(upperRight);
		this.addTrace(oFF.QCmdSignature.ADD_INTERSECTS_RECT_FILTER, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addIntersectsRectFilter(dimension, theFieldName, lowerLeft, upperRight);
	}
	return result;
};
oFF.QCmdSpace.prototype.addContainsGeometryFilter = function(dimension, fieldName, geometry)
{
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimension).addString(theFieldName).addXValue(geometry);
		this.addTrace(oFF.QCmdSignature.ADD_CONTAINS_GEOMETRY_FILTER, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addContainsGeometryFilter(dimension, theFieldName, geometry);
	}
	return result;
};
oFF.QCmdSpace.prototype.addIntersectsGeometryFilter = function(dimension, fieldName, geometry)
{
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimension).addString(theFieldName).addXValue(geometry);
		this.addTrace(oFF.QCmdSignature.ADD_INTERSECTS_GEOMETRY_FILTER, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addIntersectsGeometryFilter(dimension, theFieldName, geometry);
	}
	return result;
};
oFF.QCmdSpace.prototype.addCoversGeometryFilter = function(dimension, fieldName, geometry)
{
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimension).addString(theFieldName).addXValue(geometry);
		this.addTrace(oFF.QCmdSignature.ADD_COVERS_GEOMETRY_FILTER, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addCoversGeometryFilter(dimension, theFieldName, geometry);
	}
	return result;
};
oFF.QCmdSpace.prototype.addCrossesLinestringFilter = function(dimension, fieldName, geometry)
{
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimension).addString(theFieldName).addXValue(geometry);
		this.addTrace(oFF.QCmdSignature.ADD_CROSSES_LINESTRING_FILTER, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addCrossesLinestringFilter(dimension, theFieldName, geometry);
	}
	return result;
};
oFF.QCmdSpace.prototype.addDisjointGeometryFilter = function(dimension, fieldName, geometry)
{
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimension).addString(theFieldName).addXValue(geometry);
		this.addTrace(oFF.QCmdSignature.ADD_DISJOINT_GEOMETRY_FILTER, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addDisjointGeometryFilter(dimension, theFieldName, geometry);
	}
	return result;
};
oFF.QCmdSpace.prototype.addOverlapsGeometryFilter = function(dimension, fieldName, geometry)
{
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimension).addString(theFieldName).addXValue(geometry);
		this.addTrace(oFF.QCmdSignature.ADD_OVERLAPS_GEOMETRY_FILTER, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addOverlapsGeometryFilter(dimension, theFieldName, geometry);
	}
	return result;
};
oFF.QCmdSpace.prototype.addTouchesGeometryFilter = function(dimension, fieldName, geometry)
{
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimension).addString(theFieldName).addXValue(geometry);
		this.addTrace(oFF.QCmdSignature.ADD_TOUCHES_GEOMETRY_FILTER, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addTouchesGeometryFilter(dimension, theFieldName, geometry);
	}
	return result;
};
oFF.QCmdSpace.prototype.addWithinGeometryFilter = function(dimension, fieldName, geometry)
{
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimension).addString(theFieldName).addXValue(geometry);
		this.addTrace(oFF.QCmdSignature.ADD_WITHIN_GEOMETRY_FILTER, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addWithinGeometryFilter(dimension, theFieldName, geometry);
	}
	return result;
};
oFF.QCmdSpace.prototype.setFilterForLeaves = function(dimension)
{
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setFilterForLeaves(dimension);
	}
	return this;
};
oFF.QCmdSpace.prototype.clearNonMeasureFilters = function()
{
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).clearNonMeasureFilters();
	}
	return this;
};
oFF.QCmdSpace.prototype.clearNonStructureFilters = function()
{
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).clearNonStructureFilters();
	}
	return this;
};
oFF.QCmdSpace.prototype.clearFiltersByDimensionExt = function(filterLayer, dimType, dimName)
{
	var theDimName = this.checkAndReplace(dimName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(filterLayer).addNameObject(dimType).addString(theDimName);
		this.addTrace(oFF.QCmdSignature.CLEAR_FILTERS_BY_DIMENSION_EXT, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).clearFiltersByDimensionExt(filterLayer, dimType, theDimName);
	}
	return this;
};
oFF.QCmdSpace.prototype.clearAllFiltersExt = function(filterLayer, filterScopeVariables)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(filterLayer).addNameObject(filterScopeVariables);
		this.addTrace(oFF.QCmdSignature.CLEAR_ALL_FILTERS_EXT, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).clearAllFiltersExt(filterLayer, filterScopeVariables);
	}
	return this;
};
oFF.QCmdSpace.prototype.clearFilterByIdExt = function(filterLayer, uniqueId)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(filterLayer).addString(uniqueId);
		this.addTrace(oFF.QCmdSignature.CLEAR_FILTER_BY_ID_EXT, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).clearFilterByIdExt(filterLayer, uniqueId);
	}
	return this;
};
oFF.QCmdSpace.prototype.clearSingleMemberFilterByName = function(dimName, memberName, comparisonOperator)
{
	var theDimName = this.checkAndReplace(dimName);
	var theMemberName = this.checkAndReplace(memberName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theDimName).addString(theMemberName).addNameObject(comparisonOperator);
		this.addTrace(oFF.QCmdSignature.CLEAR_SINGLE_MEMBER_FILTER_BY_NAME, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).clearSingleMemberFilterByName(theDimName, theMemberName, comparisonOperator);
	}
	return this;
};
oFF.QCmdSpace.prototype.getFilterById = function(uniqueId)
{
	return this.setActive(0).getFilterById(uniqueId);
};
oFF.QCmdSpace.prototype.getVisibilityFilterById = function(uniqueId)
{
	return this.setActive(0).getVisibilityFilterById(uniqueId);
};
oFF.QCmdSpace.prototype.setVariable = function(varName, value)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(varName).addString(value);
		this.addTrace(oFF.QCmdSignature.SET_VARIABLE, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setVariable(varName, value);
	}
	return this;
};
oFF.QCmdSpace.prototype.submitVariables = function()
{
	if (this.getOlapEnv().isTracing())
	{
		this.addTrace(oFF.QCmdSignature.SUBMIT_VARIABLES, null);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).submitVariables();
	}
	return result;
};
oFF.QCmdSpace.prototype.getVariablesNameAndText = function()
{
	return this.setActive(0).getVariablesNameAndText();
};
oFF.QCmdSpace.prototype.getVariable = function(varName)
{
	return this.setActive(0).getVariable(varName);
};
oFF.QCmdSpace.prototype.updateDynamicVariables = function(syncType, listener, customIdentifier)
{
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).updateDynamicVariables(syncType, listener, customIdentifier);
	}
	return this;
};
oFF.QCmdSpace.prototype.processResetExitOrDynamicVariable = function(syncType, listener, customIdentifier, overwriteDefaultForInputEnabledVar)
{
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).processResetExitOrDynamicVariable(syncType, listener, customIdentifier, overwriteDefaultForInputEnabledVar);
	}
	return this;
};
oFF.QCmdSpace.prototype.switchAxes = function()
{
	if (this.getOlapEnv().isTracing())
	{
		this.addTrace(oFF.QCmdSignature.SWITCH_AXES, null);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).switchAxes();
	}
	return this;
};
oFF.QCmdSpace.prototype.clearAxis = function(targetAxis)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(targetAxis);
		this.addTrace(oFF.QCmdSignature.CLEAR_AXIS, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).clearAxis(targetAxis);
	}
	return this;
};
oFF.QCmdSpace.prototype.setDimensionsAndMeasures = function(dimNames, measureNames)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addStringList(dimNames).addStringList(measureNames);
		this.addTrace(oFF.QCmdSignature.SET_DIMENSION_AND_MEASURE, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setDimensionsAndMeasures(dimNames, measureNames);
	}
	return this;
};
oFF.QCmdSpace.prototype.setDimensionAndMeasure = function(dimName, measureName)
{
	var theDimName = this.checkAndReplace(dimName);
	var theMeasureName = this.checkAndReplace(measureName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theDimName).addString(theMeasureName);
		this.addTrace(oFF.QCmdSignature.SET_DIMENSION_AND_MEASURE, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setDimensionAndMeasure(theDimName, theMeasureName);
	}
	return this;
};
oFF.QCmdSpace.prototype.moveDimensionExt = function(dimType, dimName, targetAxis, index)
{
	var theDimName = this.checkAndReplace(dimName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimType).addString(theDimName).addNameObject(targetAxis).addInteger(index);
		this.addTrace(oFF.QCmdSignature.MOVE_DIMENSION_EXT, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).moveDimensionExt(dimType, theDimName, targetAxis, index);
	}
	return result;
};
oFF.QCmdSpace.prototype.activateConditionalZeroSuppression = function()
{
	if (this.getOlapEnv().isTracing())
	{
		this.addTrace(oFF.QCmdSignature.ACTIVATE_CONDITIONAL_ZERO_SUPPRESSION, null);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).activateConditionalZeroSuppression();
	}
	return this;
};
oFF.QCmdSpace.prototype.addAllDimensions = function()
{
	if (this.getOlapEnv().isTracing())
	{
		this.addTrace(oFF.QCmdSignature.ADD_ALL_DIMENSIONS, null);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).addAllDimensions();
	}
	return this;
};
oFF.QCmdSpace.prototype.addAttributeToResultSet = function(dimName, attributeName)
{
	var theDimName = this.checkAndReplace(dimName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theDimName).addString(attributeName);
		this.addTrace(oFF.QCmdSignature.ADD_ATTRIBUTE_TO_RESULT_SET, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addAttributeToResultSet(theDimName, attributeName);
	}
	return result;
};
oFF.QCmdSpace.prototype.removeAttributeFromResultSet = function(dimName, attributeName)
{
	var theDimName = this.checkAndReplace(dimName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theDimName).addString(attributeName);
		this.addTrace(oFF.QCmdSignature.REMOVE_ATTRIBUTE_FROM_RESULT_SET, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).removeAttributeFromResultSet(theDimName, attributeName);
	}
	return result;
};
oFF.QCmdSpace.prototype.addAttributeField = function(dimType, dimName, attributeName, presentationType, fieldName, contextType)
{
	var theDimName = this.checkAndReplace(dimName);
	var theAttributeName = this.checkAndReplace(attributeName);
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimType).addString(theDimName).addString(theAttributeName).addNameObject(presentationType).addString(theFieldName).addNameObject(contextType);
		this.addTrace(oFF.QCmdSignature.ADD_ATTRIBUTE_FIELD, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addAttributeField(dimType, theDimName, theAttributeName, presentationType, theFieldName, contextType);
	}
	return result;
};
oFF.QCmdSpace.prototype.addField = function(dimType, dimName, presentationType, fieldName, contextType)
{
	var theDimName = this.checkAndReplace(dimName);
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimType).addString(theDimName).addNameObject(presentationType).addString(theFieldName).addNameObject(contextType);
		this.addTrace(oFF.QCmdSignature.ADD_FIELD, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addField(dimType, theDimName, presentationType, theFieldName, contextType);
	}
	return result;
};
oFF.QCmdSpace.prototype.setField = function(dimType, dimName, presentationType, fieldName, contextType)
{
	var theDimName = this.checkAndReplace(dimName);
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimType).addString(theDimName).addNameObject(presentationType).addString(theFieldName).addNameObject(contextType);
		this.addTrace(oFF.QCmdSignature.SET_FIELD, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).setField(dimType, theDimName, presentationType, theFieldName, contextType);
	}
	return result;
};
oFF.QCmdSpace.prototype.removeField = function(dimType, dimName, presentationType, fieldName, contextType)
{
	var theDimName = this.checkAndReplace(dimName);
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimType).addString(theDimName).addNameObject(presentationType).addString(theFieldName).addNameObject(contextType);
		this.addTrace(oFF.QCmdSignature.REMOVE_FIELD, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).removeField(dimType, theDimName, presentationType, theFieldName, contextType);
	}
	return result;
};
oFF.QCmdSpace.prototype.removeAttributeField = function(dimType, dimName, attributeName, presentationType, fieldName, contextType)
{
	var theDimName = this.checkAndReplace(dimName);
	var theAttributeName = this.checkAndReplace(attributeName);
	var theFieldName = this.checkAndReplace(fieldName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimType).addString(theDimName).addString(theAttributeName).addNameObject(presentationType).addString(theFieldName).addNameObject(contextType);
		this.addTrace(oFF.QCmdSignature.REMOVE_ATTRIBUTE_FIELD, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).removeAttributeField(dimType, theDimName, theAttributeName, presentationType, theFieldName, contextType);
	}
	return result;
};
oFF.QCmdSpace.prototype.addAllFieldsToModelArea = function(contextType)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(contextType);
		this.addTrace(oFF.QCmdSignature.ADD_ALL_FIELDS_TO_MODEL_AREA, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).addAllFieldsToModelArea(contextType);
	}
	return this;
};
oFF.QCmdSpace.prototype.addAllFieldsOfDimensionToModelArea = function(dimName, contextType)
{
	var theDimName = this.checkAndReplace(dimName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theDimName).addNameObject(contextType);
		this.addTrace(oFF.QCmdSignature.ADD_ALL_FIELDS_OF_DIMENSION_TO_MODEL_AREA, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).addAllFieldsOfDimensionToModelArea(theDimName, contextType);
	}
	return this;
};
oFF.QCmdSpace.prototype.clearFields = function(dimType, dimName, contextType)
{
	var theDimName = this.checkAndReplace(dimName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimType).addString(theDimName).addNameObject(contextType);
		this.addTrace(oFF.QCmdSignature.CLEAR_FIELDS, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).clearFields(dimType, theDimName, contextType);
	}
	return this;
};
oFF.QCmdSpace.prototype.clearAttributeFields = function(dimType, dimName, attributeName, contextType)
{
	var theDimName = this.checkAndReplace(dimName);
	var theAttributeName = this.checkAndReplace(attributeName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimType).addString(theDimName).addString(theAttributeName).addNameObject(contextType);
		this.addTrace(oFF.QCmdSignature.CLEAR_ATTRIBUTE_FIELDS, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).clearAttributeFields(dimType, theDimName, attributeName, contextType);
	}
	return this;
};
oFF.QCmdSpace.prototype.clearAttributes = function(dimType, dimName, contextType)
{
	var theDimName = this.checkAndReplace(dimName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimType).addString(theDimName).addNameObject(contextType);
		this.addTrace(oFF.QCmdSignature.CLEAR_ATTRIBUTES, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).clearAttributes(dimType, theDimName, contextType);
	}
	return this;
};
oFF.QCmdSpace.prototype.clearAllFieldsFromModelArea = function(contextType)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(contextType);
		this.addTrace(oFF.QCmdSignature.CLEAR_ALL_FIELDS_FROM_MODEL_AREA, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).clearAllFieldsFromModelArea(contextType);
	}
	return this;
};
oFF.QCmdSpace.prototype.containsField = function(dimName, fieldName, contextType)
{
	var theDimName = this.checkAndReplace(dimName);
	var theFieldName = this.checkAndReplace(fieldName);
	return this.setActive(0).containsField(theDimName, theFieldName, contextType);
};
oFF.QCmdSpace.prototype.containsResultSetFieldByType = function(dimName, presentationType)
{
	var theDimName = this.checkAndReplace(dimName);
	return this.setActive(0).containsResultSetFieldByType(theDimName, presentationType);
};
oFF.QCmdSpace.prototype.containsSelectorFieldByType = function(dimName, presentationType)
{
	var theDimName = this.checkAndReplace(dimName);
	return this.setActive(0).containsSelectorFieldByType(theDimName, presentationType);
};
oFF.QCmdSpace.prototype.setDimensionHierarchy = function(dimName, hierarchyName, hierarchyActive, initialDrillLevel)
{
	var theDimName = this.checkAndReplace(dimName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theDimName).addString(hierarchyName).addBoolean(hierarchyActive).addInteger(initialDrillLevel);
		this.addTrace(oFF.QCmdSignature.SET_DIMENSION_HIERARCHY, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setDimensionHierarchy(theDimName, hierarchyName, hierarchyActive, initialDrillLevel);
	}
	return this;
};
oFF.QCmdSpace.prototype.setDimensionCustomHierarchyDefinition = function(customHierarchyDefinition, hierarchyActive, initialDrillLevel)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(customHierarchyDefinition.toString()).addBoolean(hierarchyActive).addInteger(initialDrillLevel);
		this.addTrace(oFF.QCmdSignature.SET_DIMENSION_CUSTOM_HIERARCHY, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setDimensionCustomHierarchyDefinition(customHierarchyDefinition, hierarchyActive, initialDrillLevel);
	}
	return this;
};
oFF.QCmdSpace.prototype.drillNode = function(dimName, nodeName, drillState)
{
	var theDimName = this.checkAndReplace(dimName);
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).drillNode(theDimName, nodeName, drillState);
	}
	return this;
};
oFF.QCmdSpace.prototype.setUniversalDisplayHierarchy = function(dimensionNames, initialDrillLevel, active)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addStringList(dimensionNames).addInteger(initialDrillLevel).addBoolean(active);
		this.addTrace(oFF.QCmdSignature.SET_UNIVERSAL_DISPLAY_HIERARCHY, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).setUniversalDisplayHierarchy(dimensionNames, initialDrillLevel, active);
	}
	return result;
};
oFF.QCmdSpace.prototype.getSupportedExceptionAggregationTypes = function(memberType)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(memberType);
		this.addTrace(oFF.QCmdSignature.GET_SUPPORTED_EXCEPTION_AGGREGATION_TYPES, params);
	}
	var result = oFF.XListOfString.create();
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).getSupportedExceptionAggregationTypes(memberType);
	}
	return result;
};
oFF.QCmdSpace.prototype.getSupportedDimensionsForExceptionAggregation = function(memberType, aggrType)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(memberType).addNameObject(aggrType);
		this.addTrace(oFF.QCmdSignature.GET_SUPPORTED_DIMENSIONS_FOR_EXCEPTION_AGGREGATION, params);
	}
	var result = oFF.XListOfString.create();
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).getSupportedDimensionsForExceptionAggregation(memberType, aggrType);
	}
	return result;
};
oFF.QCmdSpace.prototype.getMaxNumberOfDimensionsForExceptionAggregation = function(memberType, aggrType)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(memberType).addNameObject(aggrType);
		this.addTrace(oFF.QCmdSignature.GET_MAX_NUMBER_OF_DIMENSIONS_FOR_EXCEPTION_AGGREGATION, params);
	}
	var result = 0;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).getMaxNumberOfDimensionsForExceptionAggregation(memberType, aggrType);
	}
	return result;
};
oFF.QCmdSpace.prototype.sort = function(sortType, dimType, dimName, presentationType, fieldName, memberName, direction)
{
	var theDimName = this.checkAndReplace(dimName);
	var theFieldName = this.checkAndReplace(fieldName);
	var theMemberName = this.checkAndReplace(memberName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(sortType).addNameObject(dimType).addString(theDimName).addNameObject(presentationType).addString(theFieldName).addString(theMemberName).addNameObject(direction);
		this.addTrace(oFF.QCmdSignature.SORT, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).sort(sortType, dimType, theDimName, presentationType, theFieldName, theMemberName, direction);
	}
	return this;
};
oFF.QCmdSpace.prototype.applyCustomSort = function(dimension, field, customOrder, sortDirection, customSortPosition, createNewSortOperation)
{
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).applyCustomSort(dimension, field, customOrder, sortDirection, customSortPosition, createNewSortOperation);
	}
	return result;
};
oFF.QCmdSpace.prototype.clearSort = function(sortType, name)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(sortType).addString(name);
		this.addTrace(oFF.QCmdSignature.CLEAR_SORT, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).clearSort(sortType, name);
	}
	return this;
};
oFF.QCmdSpace.prototype.newCustomSorting = function(dimension, field, sortFromStart, sortFromEnd)
{
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).newCustomSorting(dimension, field, sortFromStart, sortFromEnd);
	}
	return this;
};
oFF.QCmdSpace.prototype.alignTotals = function(modelLevel, name, alignment)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(modelLevel).addString(name).addNameObject(alignment);
		this.addTrace(oFF.QCmdSignature.ALIGN_TOTALS, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).alignTotals(modelLevel, name, alignment);
	}
	return this;
};
oFF.QCmdSpace.prototype.setTotalsVisible = function(modelLevel, name, visibility)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(modelLevel).addString(name).addNameObject(visibility);
		this.addTrace(oFF.QCmdSignature.SET_TOTALS_VISIBLE, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setTotalsVisible(modelLevel, name, visibility);
	}
	return this;
};
oFF.QCmdSpace.prototype.addMeasure = function(measureName)
{
	var theMeasureName = this.checkAndReplace(measureName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(theMeasureName);
		this.addTrace(oFF.QCmdSignature.ADD_MEASURE, params);
	}
	var result = null;
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		result = this.setActive(i).addMeasure(theMeasureName);
	}
	return result;
};
oFF.QCmdSpace.prototype.addNewRestrictedMeasure = function(dimType, measureName, text, memberName, targetDim, targetMember)
{
	var theMeasureName = this.checkAndReplace(measureName);
	var theMemberName = this.checkAndReplace(memberName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimType).addString(theMeasureName).addString(text);
		params.addString(theMemberName).addString(targetDim).addString(targetMember);
		this.addTrace(oFF.QCmdSignature.ADD_NEW_RESTRICTED_MEASURE, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).addNewRestrictedMeasure(dimType, theMeasureName, text, theMemberName, targetDim, targetMember);
	}
	return this;
};
oFF.QCmdSpace.prototype.addNewRestrictedMeasureOnNode = function(dimType, measureName, text, memberName, targetDim, targetHierarchyName, targetNode)
{
	var theMeasureName = this.checkAndReplace(measureName);
	var theMemberName = this.checkAndReplace(memberName);
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addNameObject(dimType).addString(theMeasureName).addString(text);
		params.addString(theMemberName).addString(targetDim).addString(targetHierarchyName).addString(targetNode);
		this.addTrace(oFF.QCmdSignature.ADD_NEW_RESTRICTED_MEASURE_ON_NODE, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).addNewRestrictedMeasureOnNode(dimType, theMeasureName, text, theMemberName, targetDim, targetHierarchyName, targetNode);
	}
	return this;
};
oFF.QCmdSpace.prototype.getAccountDimensionMemberNameByAlias = function(queryModel, aliasName)
{
	return this.setActive(0).getAccountDimensionMemberNameByAlias(queryModel, aliasName);
};
oFF.QCmdSpace.prototype.getAccountDimensionMemberAliasByName = function(queryModel, memberName)
{
	var theMemberName = this.checkAndReplace(memberName);
	return this.setActive(0).getAccountDimensionMemberAliasByName(queryModel, theMemberName);
};
oFF.QCmdSpace.prototype.getMeasureMemberNameByAlias = function(queryModel, aliasName)
{
	return this.setActive(0).getMeasureMemberNameByAlias(queryModel, aliasName);
};
oFF.QCmdSpace.prototype.getRuntimeMemberNameByAlias = function(queryModel, aliasName)
{
	return this.setActive(0).getRuntimeMemberNameByAlias(queryModel, aliasName);
};
oFF.QCmdSpace.prototype.getMeasureMemberAliasByName = function(queryModel, memberName)
{
	var theMemberName = this.checkAndReplace(memberName);
	return this.setActive(0).getMeasureMemberAliasByName(queryModel, theMemberName);
};
oFF.QCmdSpace.prototype.setOffsetRows = function(offset)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addInteger(offset);
		this.addTrace(oFF.QCmdSignature.SET_OFFSET_ROWS, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setOffsetRows(offset);
	}
	return this;
};
oFF.QCmdSpace.prototype.setMaxRows = function(max)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addInteger(max);
		this.addTrace(oFF.QCmdSignature.SET_MAX_ROWS, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setMaxRows(max);
	}
	return this;
};
oFF.QCmdSpace.prototype.hasMoreColumnRecordsAvailable = function()
{
	return this.setActive(0).hasMoreColumnRecordsAvailable();
};
oFF.QCmdSpace.prototype.hasMoreRowRecordsAvailable = function()
{
	return this.setActive(0).hasMoreRowRecordsAvailable();
};
oFF.QCmdSpace.prototype.getOffsetColumns = function()
{
	return this.setActive(0).getOffsetColumns();
};
oFF.QCmdSpace.prototype.getMaxColumns = function()
{
	return this.setActive(0).getMaxColumns();
};
oFF.QCmdSpace.prototype.getOffsetRows = function()
{
	return this.setActive(0).getOffsetRows();
};
oFF.QCmdSpace.prototype.getMaxRows = function()
{
	return this.setActive(0).getMaxRows();
};
oFF.QCmdSpace.prototype.setOffsetColumns = function(offset)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addInteger(offset);
		this.addTrace(oFF.QCmdSignature.SET_OFFSET_COLUMNS, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setOffsetColumns(offset);
	}
	return this;
};
oFF.QCmdSpace.prototype.setMaxColumns = function(max)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addInteger(max);
		this.addTrace(oFF.QCmdSignature.SET_MAX_COLUMNS, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setMaxColumns(max);
	}
	return this;
};
oFF.QCmdSpace.prototype.setMaxResultRecords = function(maxResultRecords)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addLong(maxResultRecords);
		this.addTrace(oFF.QCmdSignature.SET_MAX_RESULT_RECORDS, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setMaxResultRecords(maxResultRecords);
	}
	return this;
};
oFF.QCmdSpace.prototype.resetMaxResultRecords = function()
{
	if (this.getOlapEnv().isTracing())
	{
		this.addTrace(oFF.QCmdSignature.RESET_MAX_RESULT_RECORDS, null);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).resetMaxResultRecords();
	}
	return this;
};
oFF.QCmdSpace.prototype.getReferenceGrid = function(withDetails)
{
	return this.setActive(0).getReferenceGrid(withDetails);
};
oFF.QCmdSpace.prototype.getAbstractRendering = function(type, protocol)
{
	return this.setActive(0).getAbstractRendering(type, protocol);
};
oFF.QCmdSpace.prototype.setResultSetPersistanceTargetSchema = function(resultSetPersistenceSchema)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(resultSetPersistenceSchema);
		this.addTrace(oFF.QCmdSignature.SET_RESULT_SET_PERSISTANCE_TARGET_SCHEMA, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setResultSetPersistanceTargetSchema(resultSetPersistenceSchema);
	}
	return this;
};
oFF.QCmdSpace.prototype.setResultSetPersistanceTargetTable = function(resultSetPersistenceTable)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(resultSetPersistenceTable);
		this.addTrace(oFF.QCmdSignature.SET_RESULT_SET_PERSISTANCE_TARGET_TABLE, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setResultSetPersistanceTargetTable(resultSetPersistenceTable);
	}
	return this;
};
oFF.QCmdSpace.prototype.setResultSetPersistenceTargetType = function(resultSetPersistenceType)
{
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setResultSetPersistenceTargetType(resultSetPersistenceType);
	}
	return this;
};
oFF.QCmdSpace.prototype.setResultSetPersistenceIdentifier = function(resultSetPersistenceIdentifier)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addString(resultSetPersistenceIdentifier);
		this.addTrace(oFF.QCmdSignature.SET_RESULT_SET_PERSISTANCE_IDENTIFIER, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setResultSetPersistenceIdentifier(resultSetPersistenceIdentifier);
	}
	return this;
};
oFF.QCmdSpace.prototype.setResultSetTransportEnabled = function(isEnabled)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addBoolean(isEnabled);
		this.addTrace(oFF.QCmdSignature.SET_RESULT_SET_TRANSPORT_ENABLED, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setResultSetTransportEnabled(isEnabled);
	}
	return this;
};
oFF.QCmdSpace.prototype.setSuppressKeyfigureCalculation = function(doSupress)
{
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setSuppressKeyfigureCalculation(doSupress);
	}
	return this;
};
oFF.QCmdSpace.prototype.getExecuteRequestOnOldResultSet = function()
{
	return this.setActive(0).getExecuteRequestOnOldResultSet();
};
oFF.QCmdSpace.prototype.getMaxResultRecords = function()
{
	return this.setActive(0).getMaxResultRecords();
};
oFF.QCmdSpace.prototype.getResultSetPersistenceSchema = function()
{
	return this.setActive(0).getResultSetPersistenceSchema();
};
oFF.QCmdSpace.prototype.getResultSetPersistenceTable = function()
{
	return this.setActive(0).getResultSetPersistenceTable();
};
oFF.QCmdSpace.prototype.getResultSetPersistenceType = function()
{
	return this.setActive(0).getResultSetPersistenceType();
};
oFF.QCmdSpace.prototype.getResultSetPersistenceIdentifier = function()
{
	return this.setActive(0).getResultSetPersistenceIdentifier();
};
oFF.QCmdSpace.prototype.isResultSetTransportEnabled = function()
{
	return this.setActive(0).isResultSetTransportEnabled();
};
oFF.QCmdSpace.prototype.isKeyfigureCalculationSuppressed = function()
{
	return this.setActive(0).isKeyfigureCalculationSuppressed();
};
oFF.QCmdSpace.prototype.setExecuteRequestOnOldResultSet = function(executeRequestOnOldResultSet)
{
	if (this.getOlapEnv().isTracing())
	{
		var params = oFF.XTrace.create().addBoolean(executeRequestOnOldResultSet);
		this.addTrace(oFF.QCmdSignature.SET_EXECUTE_REQUEST_ON_OLD_RESULT_SET, params);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).setExecuteRequestOnOldResultSet(executeRequestOnOldResultSet);
	}
	return this;
};
oFF.QCmdSpace.prototype.processQueryManagerCreation = function(syncType, listener, customIdentifier)
{
	for (var i = 0; i < this.m_elements.size(); i++)
	{
		this.setActive(i).processQueryManagerCreation(syncType, listener, customIdentifier);
	}
	return this;
};
oFF.QCmdSpace.prototype.processQueryExecution = function(syncType, listener, customIdentifier)
{
	for (var i = 0; i < this.m_elements.size(); i++)
	{
		this.setActive(i).processQueryExecution(syncType, listener, customIdentifier);
	}
	return this;
};
oFF.QCmdSpace.prototype.refresh = function()
{
	if (this.getOlapEnv().isTracing())
	{
		this.addTrace(oFF.QCmdSignature.REFRESH, null);
	}
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).refresh();
	}
	return this;
};
oFF.QCmdSpace.prototype.isHana = function()
{
	return this.setActive(0).isHana();
};
oFF.QCmdSpace.prototype.isBw = function()
{
	return this.setActive(0).isBw();
};
oFF.QCmdSpace.prototype.isBpcs = function()
{
	return this.setActive(0).isBpcs();
};
oFF.QCmdSpace.prototype.isBpce = function()
{
	return this.setActive(0).isBpce();
};
oFF.QCmdSpace.prototype.isUniverse = function()
{
	return this.setActive(0).isUniverse();
};
oFF.QCmdSpace.prototype.isHybris = function()
{
	return this.setActive(0).isHybris();
};
oFF.QCmdSpace.prototype.isUqas = function()
{
	return this.setActive(0).isUqas();
};
oFF.QCmdSpace.prototype.isOdata = function()
{
	return this.setActive(0).isOdata();
};
oFF.QCmdSpace.prototype.isTypeOfBw = function()
{
	return this.setActive(0).isTypeOfBw();
};
oFF.QCmdSpace.prototype.getKeyRefStorage = function()
{
	if (!this.isReleased())
	{
		return this.setActive(0).getKeyRefStorage();
	}
	return null;
};
oFF.QCmdSpace.prototype.queueEventing = function()
{
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).queueEventing();
	}
};
oFF.QCmdSpace.prototype.stopEventing = function()
{
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).stopEventing();
	}
};
oFF.QCmdSpace.prototype.isEventingStopped = function()
{
	return this.setActive(0).isEventingStopped();
};
oFF.QCmdSpace.prototype.resumeEventing = function()
{
	var size = this.sizeElements();
	for (var i = 0; i < size; i++)
	{
		this.setActive(i).resumeEventing();
	}
};
oFF.QCmdSpace.prototype.getStorageGroupName = function()
{
	return null;
};
oFF.QCmdSpace.prototype.getStorageName = function()
{
	return null;
};
oFF.QCmdSpace.prototype.getStorageObjectName = function()
{
	return null;
};
oFF.QCmdSpace.prototype.getName = function()
{
	return null;
};
oFF.QCmdSpace.prototype.getTagging = function()
{
	return null;
};

oFF.QConvenienceCommands = function() {};
oFF.QConvenienceCommands.prototype = new oFF.QCmdAbstract();
oFF.QConvenienceCommands.prototype._ff_c = "QConvenienceCommands";

oFF.QConvenienceCommands.create = function(olapApplication, component)
{
	var cmds = new oFF.QConvenienceCommands();
	cmds.m_olapEnvironment = olapApplication;
	cmds.m_activeComponent = component;
	return cmds;
};
oFF.QConvenienceCommands.prototype.m_activeComponent = null;
oFF.QConvenienceCommands.prototype.m_olapEnvironment = null;
oFF.QConvenienceCommands.prototype.releaseObject = function()
{
	this.m_activeComponent = null;
	this.m_olapEnvironment = null;
	oFF.QCmdAbstract.prototype.releaseObject.call( this );
};
oFF.QConvenienceCommands.prototype.getComponentType = function()
{
	return this.getOlapComponentType();
};
oFF.QConvenienceCommands.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.CONVENIENCE_CMDS;
};
oFF.QConvenienceCommands.prototype.getSession = function()
{
	return this.getApplication().getSession();
};
oFF.QConvenienceCommands.prototype.getApplication = function()
{
	return this.getOlapEnv().getApplication();
};
oFF.QConvenienceCommands.prototype.getOlapEnv = function()
{
	return this.m_olapEnvironment;
};
oFF.QConvenienceCommands.prototype.setActiveComponent = function(component)
{
	if (oFF.notNull(component))
	{
		var olapComponentType = component.getComponentType();
		if (olapComponentType === oFF.OlapComponentType.QUERY_MODEL || olapComponentType === oFF.OlapComponentType.QUERY_MANAGER || olapComponentType === oFF.OlapComponentType.QUERY_SERVICE_CONFIG)
		{
			this.m_activeComponent = component;
			return true;
		}
	}
	this.m_activeComponent = null;
	return false;
};
oFF.QConvenienceCommands.prototype.getQueryServiceConfig = function()
{
	if (oFF.notNull(this.m_activeComponent))
	{
		var olapComponentType = this.m_activeComponent.getOlapComponentType();
		if (olapComponentType === oFF.OlapComponentType.QUERY_SERVICE_CONFIG)
		{
			return this.m_activeComponent;
		}
		else if (olapComponentType === oFF.OlapComponentType.QUERY_MANAGER)
		{
			var qm = this.m_activeComponent;
			return qm.getQueryServiceConfig();
		}
	}
	return null;
};
oFF.QConvenienceCommands.prototype.getQueryManager = function()
{
	if (oFF.notNull(this.m_activeComponent))
	{
		var olapComponentType = this.m_activeComponent.getOlapComponentType();
		if (olapComponentType === oFF.OlapComponentType.QUERY_MANAGER)
		{
			return this.m_activeComponent;
		}
		else if (olapComponentType === oFF.OlapComponentType.QUERY_SERVICE_CONFIG)
		{
			var dp = this.m_activeComponent;
			return dp.getQueryManager();
		}
	}
	return null;
};
oFF.QConvenienceCommands.prototype.getQueryModel = function()
{
	var result = null;
	if (oFF.notNull(this.m_activeComponent))
	{
		var olapComponentType = this.m_activeComponent.getOlapComponentType();
		if (olapComponentType === oFF.OlapComponentType.QUERY_MODEL)
		{
			result = this.m_activeComponent;
		}
		else
		{
			var queryManager = this.getQueryManager();
			if (oFF.notNull(queryManager))
			{
				result = queryManager.getQueryModel();
			}
		}
	}
	return result;
};
oFF.QConvenienceCommands.prototype.getExternalFilters = function()
{
	return this.getQueryModel().getFilter().getLinkedFilters();
};
oFF.QConvenienceCommands.prototype.getDataSourceOrigin = function()
{
	return this.getDataSource();
};
oFF.QConvenienceCommands.prototype.getDataSourceTarget = function()
{
	return this.getDataSource();
};
oFF.QConvenienceCommands.prototype.getDataSource = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.isNull(queryModel))
	{
		return null;
	}
	return queryModel.getDataSource();
};
oFF.QConvenienceCommands.prototype.getModelCapabilities = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.isNull(queryModel))
	{
		return null;
	}
	return queryModel.getModelCapabilities();
};
oFF.QConvenienceCommands.prototype.getDimensionsContainingValueType = function(valueType)
{
	var dimList = oFF.XList.create();
	var dimensions = this.getQueryModel().getDimensions();
	var count = dimensions.getDimensionCount();
	for (var idxDim = 0; idxDim < count; idxDim++)
	{
		var dim = dimensions.getDimensionAt(idxDim);
		var fields = dim.getFields();
		for (var idxField = 0; idxField < fields.size(); idxField++)
		{
			var field = fields.getFieldAt(idxField);
			if (field.getValueType() === valueType)
			{
				dimList.add(dim);
				break;
			}
		}
	}
	return dimList;
};
oFF.QConvenienceCommands.prototype.getDimensionNames = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		return oFF.XCollectionUtils.createListOfNames(queryModel.getDimensions());
	}
	return oFF.XListOfString.create();
};
oFF.QConvenienceCommands.prototype.getDimension = function(dimName)
{
	return this.getQueryModel().getDimensionByName(dimName);
};
oFF.QConvenienceCommands.prototype.getDimensionAccessor = function()
{
	return this.getQueryManager().getDimensionAccessor();
};
oFF.QConvenienceCommands.prototype.select = oFF.noSupport;
oFF.QConvenienceCommands.prototype.resolveDimension = function(dimType, dimName)
{
	var resolvedDimName = this.resolveDimName(dimType, dimName);
	return this.getDimensionAccessor().getDimensionByName(resolvedDimName);
};
oFF.QConvenienceCommands.prototype.resolveDimName = function(dimType, dimName)
{
	if (oFF.isNull(dimName))
	{
		if (oFF.isNull(dimType))
		{
			return null;
		}
		var dimension = this.getDimensionAccessor().getDimensionByType(dimType);
		if (oFF.notNull(dimension))
		{
			return dimension.getName();
		}
	}
	return dimName;
};
oFF.QConvenienceCommands.prototype.registerChangedListener = oFF.noSupport;
oFF.QConvenienceCommands.prototype.unregisterChangedListener = oFF.noSupport;
oFF.QConvenienceCommands.prototype.clearFilterExpression = function(filter)
{
	if (oFF.notNull(filter) && !filter.isLocked())
	{
		if (filter.isCartesianProduct())
		{
			filter.getCartesianProduct().clear();
		}
		else if (filter.isComplexFilter())
		{
			filter.setComplexRoot(null);
		}
	}
};
oFF.QConvenienceCommands.prototype.resetPreserveCustomMembers = function()
{
	return this._resetWithOptions(false, true);
};
oFF.QConvenienceCommands.prototype.resetPreserveCustomMembersAndCalcDims = function()
{
	return this._resetWithOptions(false, false);
};
oFF.QConvenienceCommands.prototype.reset = function()
{
	return this._resetWithOptions(true, true);
};
oFF.QConvenienceCommands.prototype._resetWithOptions = function(resetCustomMembers, resetCalculatedDimensions)
{
	var queryModel = this.getQueryModel();
	if (resetCustomMembers)
	{
		var measureDimension = queryModel.getMeasureDimension();
		if (oFF.notNull(measureDimension))
		{
			measureDimension.removeCustomMembers();
		}
		var accountDimension = queryModel.getAccountDimension();
		if (oFF.notNull(accountDimension))
		{
			accountDimension.removeCustomMembers();
		}
	}
	this.clearAxis(oFF.AxisType.ROWS);
	this.clearAxis(oFF.AxisType.COLUMNS);
	queryModel.setSpatialClusterSettings(null);
	var filter = queryModel.getFilter();
	if (filter.isDynamicFilterInitialized())
	{
		this.clearFilterExpression(filter.getDynamicFilter());
	}
	if (filter.isTmpFilterInitialized())
	{
		this.clearFilterExpression(filter.getTmpFilter());
	}
	if (filter.getModelCapabilities().supportsVisibilityFilter() && filter.isVisibilityFilterInitialized())
	{
		this.clearFilterExpression(filter.getVisibilityFilter());
	}
	if (filter.isTmpVisibilityFilterInitialized())
	{
		this.clearFilterExpression(filter.getTmpVisibilityFilter());
	}
	if (resetCalculatedDimensions)
	{
		queryModel.clearCalculatedDimensions();
		queryModel.clearPreQueries();
	}
	queryModel.getDrillManager().removeAllContextDrillOperations();
	var conditionManager = queryModel.getConditionManager();
	if (oFF.notNull(conditionManager))
	{
		conditionManager.clear();
	}
	queryModel.getExceptionManager().clear();
	queryModel.getSortingManager().getSortingOperations().clear();
	this.getQueryManager().enableHierarchyToUDHConversion(false);
	return this;
};
oFF.QConvenienceCommands.prototype.resetToDefault = function()
{
	var queryModel = this.getQueryModel();
	var importer = oFF.QInAImportFactory.createForData(this.getApplication(), queryModel.getModelCapabilities());
	importer.importQueryModel(queryModel.getServerBaseSerialization(), queryModel);
	return this;
};
oFF.QConvenienceCommands.prototype.addFilter = function(filterLayer, dimType, dimName, presentationType, fieldName, lowValue, highValue, comparisonOperator)
{
	var dimension = this.resolveDimension(dimType, dimName);
	if (oFF.notNull(dimension))
	{
		var field = this.resolveField(dimension, presentationType, fieldName);
		if (oFF.notNull(field) && field.isFilterable())
		{
			var filterContainer = this.getFilterContainer(filterLayer);
			var memberSelection = filterContainer.getCartesianListByField(field);
			if (oFF.notNull(memberSelection))
			{
				if (memberSelection.isEmpty())
				{
					memberSelection.setField(field);
				}
				if (memberSelection.getField() === field)
				{
					memberSelection.queueEventing();
					var element = memberSelection.addNewCartesianElement();
					var numberOfParameters = comparisonOperator.getNumberOfParameters();
					if (numberOfParameters > 0)
					{
						var valueAccess = oFF.XValueAccess.createWithType(field.getValueType());
						valueAccess.parseString(lowValue);
						element.configureSingleParameterExpression(valueAccess.getValue(), comparisonOperator);
						if (numberOfParameters > 1)
						{
							valueAccess.parseString(highValue);
							element.getHigh().setValue(valueAccess.getValue());
						}
					}
					if (dimension.isHierarchyActive())
					{
						memberSelection.setHierarchyName(dimension.getHierarchyName());
					}
					memberSelection.resumeEventing();
					return element;
				}
			}
		}
	}
	return null;
};
oFF.QConvenienceCommands.prototype.addIntervalFilterByValues = function(dimName, lowValue, highValue)
{
	var dimension = this.getDimension(dimName);
	if (oFF.isNull(dimension))
	{
		return null;
	}
	return this.addFilterByField(dimension.getKeyField(), lowValue, highValue, null, oFF.ComparisonOperator.BETWEEN, false);
};
oFF.QConvenienceCommands.prototype.addWithinDistanceFilter = function(dimension, fieldName, point, distance, unit)
{
	return this.addFilterByField(dimension.getFieldByName(fieldName), point, oFF.XDoubleValue.create(distance), oFF.XStringValue.create(unit), oFF.SpatialComparisonOperator.WITHIN_DISTANCE, false);
};
oFF.QConvenienceCommands.prototype.getSingleMemberFilter = function(filterLayer, dimType, dimName)
{
	if (filterLayer === oFF.FilterLayer.EXTERNAL)
	{
		var externalFilterIt = this.getExternalFilters().getIterator();
		var filterOp = null;
		while (externalFilterIt.hasNext())
		{
			var filterOpTmp = this.getSingleMemberFilterInternal(externalFilterIt.next(), dimType, dimName);
			if (oFF.notNull(filterOpTmp))
			{
				filterOp = filterOpTmp;
			}
		}
		return filterOp;
	}
	var filterExpression = this.getFilterContainer(filterLayer);
	return this.getSingleMemberFilterInternal(filterExpression, dimType, dimName);
};
oFF.QConvenienceCommands.prototype.getSingleMemberFilterInternal = function(filterExpression, dimType, dimName)
{
	if (oFF.notNull(filterExpression))
	{
		var resolvedDimName = this.resolveDimName(dimType, dimName);
		if (filterExpression.isCartesianProduct() && oFF.notNull(resolvedDimName))
		{
			var cp = filterExpression;
			var cartesianList = cp.getCartesianListByDimensionName(resolvedDimName);
			if (cartesianList.size() === 1)
			{
				var op = cartesianList.getOp(0);
				return op;
			}
		}
	}
	return null;
};
oFF.QConvenienceCommands.prototype.addSingleMemberFilter = function(filterLayer, dimType, dimName, memberName, comparisonOperator)
{
	var selectionContainer = this.getFilterContainer(filterLayer);
	return selectionContainer.addSingleMemberFilterByName(this.resolveDimName(dimType, dimName), memberName, comparisonOperator);
};
oFF.QConvenienceCommands.prototype.addDoubleFilterByFieldName = function(dimName, fieldName, filterValue, comparisonOperator)
{
	var field = this.getFieldFromDimension(dimName, fieldName);
	return this.addDoubleFilterByField(field, filterValue, comparisonOperator);
};
oFF.QConvenienceCommands.prototype.addDoubleFilterByField = function(field, filterValue, comparisonOperator)
{
	return this.addFilterByField(field, oFF.XDoubleValue.create(filterValue), null, null, comparisonOperator, false);
};
oFF.QConvenienceCommands.prototype.clearSingleMemberFilterByName = function(dimName, memberName, comparisonOperator)
{
	var filterExpression = this.getFilterContainer(oFF.FilterLayer.DYNAMIC);
	filterExpression.removeSingleMemberFilterByName(dimName, memberName, comparisonOperator);
	return this;
};
oFF.QConvenienceCommands.prototype.addStringFilterByName = function(dimName, fieldName, filterValue, comparisonOperator)
{
	var field = this.getFieldFromDimension(dimName, fieldName);
	return this.addStringFilterByField(field, filterValue, comparisonOperator);
};
oFF.QConvenienceCommands.prototype.addStringFilterByPresentation = function(dimName, presentationType, filterValue, comparisonOperator)
{
	var dimension = this.getDimension(dimName);
	if (oFF.isNull(dimension))
	{
		return null;
	}
	var field = dimension.getFirstFieldByType(presentationType);
	return this.addStringFilterByField(field, filterValue, comparisonOperator);
};
oFF.QConvenienceCommands.prototype.addStringFilterByFieldNameAndOperator = function(dimName, fieldName, filterValue, comparisonOperator)
{
	return this.addStringFilterByName(dimName, fieldName, filterValue, comparisonOperator);
};
oFF.QConvenienceCommands.prototype.addStringFilterByField = function(field, filterValue, comparisonOperator)
{
	return this.addFilterByField(field, oFF.XStringValue.create(filterValue), null, null, comparisonOperator, false);
};
oFF.QConvenienceCommands.prototype.addFilterByFieldAndValue = function(field, filterValue, comparisonOperator)
{
	return this.addFilterByField(field, filterValue, null, null, comparisonOperator, false);
};
oFF.QConvenienceCommands.prototype.addIntFilterByFieldName = function(dimName, fieldName, filterValue, comparisonOperator)
{
	var field = this.getFieldFromDimension(dimName, fieldName);
	return this.addIntFilterByField(field, filterValue, comparisonOperator);
};
oFF.QConvenienceCommands.prototype.addIntFilterByField = function(field, filterValue, comparisonOperator)
{
	return this.addFilterByField(field, oFF.XIntegerValue.create(filterValue), null, null, comparisonOperator, false);
};
oFF.QConvenienceCommands.prototype.addLongFilterByFieldName = function(dimName, fieldName, filterValue, comparisonOperator)
{
	var field = this.getFieldFromDimension(dimName, fieldName);
	return this.addLongFilterByField(field, filterValue, comparisonOperator);
};
oFF.QConvenienceCommands.prototype.addLongFilterByField = function(field, filterValue, comparisonOperator)
{
	return this.addFilterByField(field, oFF.XLongValue.create(filterValue), null, null, comparisonOperator, false);
};
oFF.QConvenienceCommands.prototype.clearVariableSelections = function(dynamicFilter, inspectLists)
{
	var cartesianProduct = dynamicFilter.getCartesianProduct();
	if (oFF.isNull(cartesianProduct))
	{
		return;
	}
	var filterIdsFromVariables = dynamicFilter.getFilterIdsFromVariables();
	if (oFF.XCollectionUtils.hasElements(filterIdsFromVariables))
	{
		var idxProd = 0;
		while (idxProd < cartesianProduct.size())
		{
			var cartesianList = cartesianProduct.getCartesianChild(idxProd);
			if (filterIdsFromVariables.contains(cartesianList.getUniqueId()))
			{
				if (inspectLists)
				{
					var idxList = 0;
					while (idxList < cartesianList.size())
					{
						var cartesianElement = cartesianList.getOp(idxList);
						if (filterIdsFromVariables.contains(cartesianElement.getUniqueId()))
						{
							idxList++;
						}
						else
						{
							cartesianList.removeAt(idxList);
						}
					}
				}
				idxProd++;
			}
			else
			{
				cartesianProduct.removeAt(idxProd);
			}
		}
	}
	else
	{
		cartesianProduct.clear();
	}
};
oFF.QConvenienceCommands.prototype.clearNonMeasureFilters = function()
{
	return this.clearFiltersExceptDimensionType(oFF.FilterLayer.DYNAMIC, oFF.DimensionType.MEASURE_STRUCTURE);
};
oFF.QConvenienceCommands.prototype.clearNonStructureFilters = function()
{
	return this.clearFiltersExceptDimensionType(oFF.FilterLayer.DYNAMIC, oFF.DimensionType.ABSTRACT_STRUCTURE);
};
oFF.QConvenienceCommands.prototype.clearFiltersExceptDimensionType = function(filterLayer, dimType)
{
	if (filterLayer === oFF.FilterLayer.EXTERNAL)
	{
		var externalFilterIt = this.getExternalFilters().getIterator();
		while (externalFilterIt.hasNext())
		{
			this.clearFiltersExceptDimensionTypeInternal(externalFilterIt.next(), dimType);
		}
	}
	else
	{
		var filterExpression = this.getFilterContainer(filterLayer);
		this.clearFiltersExceptDimensionTypeInternal(filterExpression, dimType);
	}
	return this;
};
oFF.QConvenienceCommands.prototype.clearFiltersExceptDimensionTypeInternal = function(filterExpression, dimType)
{
	if (filterExpression.isCartesianProduct())
	{
		var cartesianProduct = filterExpression.getCartesianProduct();
		if (oFF.notNull(cartesianProduct))
		{
			var i = cartesianProduct.size() - 1;
			while (i >= 0)
			{
				var cartesianList = cartesianProduct.getCartesianChild(i);
				var filterDimensionName = cartesianList.getDimensionName();
				var filterDimension = this.getQueryModel().getDimensionByName(filterDimensionName);
				if (oFF.notNull(filterDimension) && !filterDimension.getDimensionType().isTypeOf(dimType))
				{
					cartesianProduct.removeAt(i);
				}
				i--;
			}
		}
	}
	else
	{
		this.removeComplexSelection(filterExpression.getComplexRoot(), dimType);
	}
};
oFF.QConvenienceCommands.prototype.clearFiltersByDimensionExt = function(filterLayer, dimType, dimName)
{
	var theDimName = this.resolveDimName(dimType, dimName);
	if (oFF.notNull(theDimName) && oFF.notNull(filterLayer))
	{
		if (filterLayer === oFF.FilterLayer.EXTERNAL)
		{
			var externalFilterIt = this.getExternalFilters().getIterator();
			while (externalFilterIt.hasNext())
			{
				oFF.QFilterUtil.clearSelectionsInContainerByDimension(theDimName, externalFilterIt.next());
			}
		}
		else
		{
			var filterExpression = this.getFilterContainer(filterLayer);
			oFF.QFilterUtil.clearSelectionsInContainerByDimension(theDimName, filterExpression);
		}
	}
	return this;
};
oFF.QConvenienceCommands.prototype.clearAllFiltersExt = function(filterLayer, filterScopeVariables)
{
	if (filterLayer === oFF.FilterLayer.ALL)
	{
		this.clearAllFiltersExt(oFF.FilterLayer.DYNAMIC, filterScopeVariables);
		this.clearAllFiltersExt(oFF.FilterLayer.VISIBILITY, filterScopeVariables);
	}
	else
	{
		if (filterLayer === oFF.FilterLayer.EXTERNAL)
		{
			var externalFilters = this.getExternalFilters();
			var filterIt = externalFilters.getIterator();
			while (filterIt.hasNext())
			{
				this.clearFilterExtInternal(filterIt.next(), filterScopeVariables);
			}
		}
		else
		{
			var filterContainer = this.getFilterContainer(filterLayer);
			this.clearFilterExtInternal(filterContainer, filterScopeVariables);
		}
	}
	return this;
};
oFF.QConvenienceCommands.prototype.clearFilterExtInternal = function(filterContainer, filterScopeVariables)
{
	if (filterScopeVariables === oFF.FilterScopeVariables.IGNORE || oFF.isNull(filterScopeVariables))
	{
		this.clearFilterExpression(filterContainer);
	}
	else if (filterScopeVariables === oFF.FilterScopeVariables.NOT_AFFECTED_BY_VARIABLES)
	{
		this.clearVariableSelections(filterContainer, false);
	}
	else if (filterScopeVariables === oFF.FilterScopeVariables.NOT_CREATED_BY_VARIABLES)
	{
		this.clearVariableSelections(filterContainer, true);
	}
};
oFF.QConvenienceCommands.prototype.removeComplexSelection = function(filterElement, dimType)
{
	if (oFF.notNull(filterElement))
	{
		var componentType = filterElement.getComponentType();
		if (componentType === oFF.FilterComponentType.OPERATION)
		{
			var filterOp = filterElement;
			var filterOpDim = this.getQueryModel().getDimensionByName(filterOp.getDimensionName());
			return oFF.notNull(filterOpDim) && !filterOpDim.getDimensionType().isTypeOf(dimType);
		}
		else if (componentType.isTypeOf(oFF.FilterComponentType.AND) || componentType === oFF.FilterComponentType.OR)
		{
			var filterAlgebra = filterElement;
			var idxFilterOp = 0;
			while (idxFilterOp < filterAlgebra.size())
			{
				var iqFilterElement = filterAlgebra.get(idxFilterOp);
				var removeFilter = this.removeComplexSelection(iqFilterElement, dimType);
				if (removeFilter)
				{
					filterAlgebra.removeAt(idxFilterOp);
				}
				else
				{
					idxFilterOp++;
				}
			}
		}
		else if (componentType.isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
		{
			var complexCartesianList = filterElement;
			var listDimension = this.getQueryModel().getDimensionByName(complexCartesianList.getDimensionName());
			return oFF.notNull(listDimension) && !listDimension.getDimensionType().isTypeOf(dimType);
		}
	}
	return false;
};
oFF.QConvenienceCommands.prototype.addDisjointGeometryFilter = function(dimension, fieldName, geometry)
{
	return this.addFilterByField(dimension.getFieldByName(fieldName), geometry, null, null, oFF.SpatialComparisonOperator.DISJOINT, false);
};
oFF.QConvenienceCommands.prototype.addOverlapsGeometryFilter = function(dimension, fieldName, geometry)
{
	return this.addFilterByField(dimension.getFieldByName(fieldName), geometry, null, null, oFF.SpatialComparisonOperator.OVERLAPS, false);
};
oFF.QConvenienceCommands.prototype.addTouchesGeometryFilter = function(dimension, fieldName, geometry)
{
	return this.addFilterByField(dimension.getFieldByName(fieldName), geometry, null, null, oFF.SpatialComparisonOperator.TOUCHES, false);
};
oFF.QConvenienceCommands.prototype.addWithinGeometryFilter = function(dimension, fieldName, geometry)
{
	return this.addFilterByField(dimension.getFieldByName(fieldName), geometry, null, null, oFF.SpatialComparisonOperator.WITHIN, false);
};
oFF.QConvenienceCommands.prototype.addFilterByField = function(field, firstValue, secondValue, thirdValue, comparisonOperator, isVisibility)
{
	if (oFF.isNull(field) || !field.isFilterable())
	{
		return null;
	}
	if (isVisibility && !this.getQueryModel().getFilter().getModelCapabilities().supportsVisibilityFilter())
	{
		return null;
	}
	var filterLayer;
	if (isVisibility)
	{
		filterLayer = oFF.FilterLayer.VISIBILITY;
	}
	else
	{
		filterLayer = oFF.FilterLayer.DYNAMIC;
	}
	var filterContainer = this.getFilterContainer(filterLayer);
	var memberSelection = filterContainer.getCartesianListByField(field);
	var dimension = field.getDimension();
	if (oFF.isNull(memberSelection) && dimension.getDimensionType().isTypeOf(oFF.DimensionType.CALCULATED_DIMENSION))
	{
		var dimensionName = field.getDimension().getName();
		var dimensionContext = this.getDimensionAccessor().getDimensionByName(dimensionName);
		memberSelection = filterContainer.getCartesianListWithDefault(oFF.notNull(dimensionContext) ? dimensionContext : dimension);
	}
	if (oFF.notNull(memberSelection))
	{
		if (memberSelection.isEmpty())
		{
			memberSelection.setField(field);
		}
		else if (memberSelection.getField() !== field)
		{
			return null;
		}
		memberSelection.queueEventing();
		var element = memberSelection.addNewCartesianElement();
		var numberOfParameters = comparisonOperator.getNumberOfParameters();
		if (numberOfParameters === 3)
		{
			element.configureTripleParameterExpression(firstValue, secondValue, thirdValue, comparisonOperator);
		}
		else
		{
			element.configureDoubleParameterExpression(firstValue, secondValue, comparisonOperator);
		}
		if (dimension.isHierarchyActive())
		{
			memberSelection.setHierarchyName(dimension.getHierarchyName());
		}
		memberSelection.resumeEventing();
	}
	return memberSelection;
};
oFF.QConvenienceCommands.prototype.addIntersectsRectFilter = function(dimension, fieldName, lowerLeft, upperRight)
{
	return this.addFilterByField(dimension.getFieldByName(fieldName), lowerLeft, upperRight, null, oFF.SpatialComparisonOperator.INTERSECTS_RECT, false);
};
oFF.QConvenienceCommands.prototype.addContainsGeometryFilter = function(dimension, fieldName, geometry)
{
	return this.addFilterByField(dimension.getFieldByName(fieldName), geometry, null, null, oFF.SpatialComparisonOperator.CONTAINS, false);
};
oFF.QConvenienceCommands.prototype.addIntersectsGeometryFilter = function(dimension, fieldName, geometry)
{
	return this.addFilterByField(dimension.getFieldByName(fieldName), geometry, null, null, oFF.SpatialComparisonOperator.INTERSECTS, false);
};
oFF.QConvenienceCommands.prototype.addCoversGeometryFilter = function(dimension, fieldName, geometry)
{
	return this.addFilterByField(dimension.getFieldByName(fieldName), geometry, null, null, oFF.SpatialComparisonOperator.COVERS, false);
};
oFF.QConvenienceCommands.prototype.addCrossesLinestringFilter = function(dimension, fieldName, geometry)
{
	if (geometry.getValueType() === oFF.XValueType.LINE_STRING || geometry.getValueType() === oFF.XValueType.MULTI_LINE_STRING)
	{
		return this.addFilterByField(dimension.getFieldByName(fieldName), geometry, null, null, oFF.SpatialComparisonOperator.COVERS, false);
	}
	return null;
};
oFF.QConvenienceCommands.prototype.getFilterContainer = function(filterLayer)
{
	var filter = this.getQueryModel().getFilter();
	if (filterLayer === oFF.FilterLayer.VISIBILITY)
	{
		return filter.getVisibilityFilter();
	}
	return filter.getDynamicFilter();
};
oFF.QConvenienceCommands.prototype.getFilterById = function(uniqueId)
{
	return this.getFilterContainer(oFF.FilterLayer.DYNAMIC).getFilterById(uniqueId);
};
oFF.QConvenienceCommands.prototype.clearFilterByIdExt = function(filterLayer, uniqueId)
{
	if (filterLayer === oFF.FilterLayer.ALL)
	{
		this.clearFilterByIdExt(oFF.FilterLayer.DYNAMIC, uniqueId);
		this.clearFilterByIdExt(oFF.FilterLayer.VISIBILITY, uniqueId);
	}
	else
	{
		if (filterLayer === oFF.FilterLayer.EXTERNAL)
		{
			var externalFilterIt = this.getExternalFilters().getIterator();
			while (externalFilterIt.hasNext())
			{
				externalFilterIt.next().removeFilterById(uniqueId);
			}
		}
		else
		{
			var filterContainer = this.getFilterContainer(filterLayer);
			filterContainer.removeFilterById(uniqueId);
		}
	}
	return this;
};
oFF.QConvenienceCommands.prototype.getVisibilityFilterById = function(uniqueId)
{
	return this.getFilterContainer(oFF.FilterLayer.VISIBILITY).getFilterById(uniqueId);
};
oFF.QConvenienceCommands.prototype.setVariable = function(varName, value)
{
	var variable = this.getQueryManager().getVariables().getByKey(varName);
	if (oFF.notNull(variable) && variable.isInputEnabled())
	{
		var variableType = variable.getVariableType();
		if (variableType === oFF.VariableType.HIERARCHY_NAME_VARIABLE)
		{
			var hnv = variable;
			hnv.setValueByString(value);
		}
		else if (variableType === oFF.VariableType.HIERARCHY_NODE_VARIABLE)
		{
			var hnodev = variable;
			hnodev.setValueByString(value);
		}
		else if (variableType === oFF.VariableType.DIMENSION_MEMBER_VARIABLE)
		{
			var dimMember = variable;
			dimMember.setValueByString(value);
		}
		else if (variableType === oFF.VariableType.SIMPLE_TYPE_VARIABLE)
		{
			var simpleType = variable;
			simpleType.setValueByString(value);
		}
	}
	return this;
};
oFF.QConvenienceCommands.prototype.submitVariables = function()
{
	return this.getQueryManager().submitVariables(oFF.SyncType.BLOCKING, null, null);
};
oFF.QConvenienceCommands.prototype.getVariable = function(varName)
{
	return this.getQueryManager().getVariables().getByKey(varName);
};
oFF.QConvenienceCommands.prototype.getVariablesNameAndText = function()
{
	var map = oFF.XHashMapOfStringByString.create();
	var variables = this.getQueryManager().getVariables();
	var variableSize = variables.size();
	for (var i = 0; i < variableSize; i++)
	{
		var variable = variables.get(i);
		map.put(variable.getName(), variable.getText());
	}
	return map;
};
oFF.QConvenienceCommands.prototype.getVariableContainer = function()
{
	return this.getQueryModel().getVariableContainer();
};
oFF.QConvenienceCommands.prototype.switchAxes = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var rowsAxis = queryModel.getRowsAxis();
		var rows = rowsAxis.createListCopy();
		var colsAxis = queryModel.getColumnsAxis();
		var cols = colsAxis.createListCopy();
		colsAxis.addAll(rows);
		rowsAxis.addAll(cols);
		var hierarchies = this.getQueryModel().getUniversalDisplayHierarchies().getHierarchies();
		for (var i = 0; i < hierarchies.size(); i++)
		{
			var udh = hierarchies.get(i);
			udh.setAxis(udh.getHierarchyDedicatedAxis().getType() === oFF.AxisType.ROWS ? queryModel.getColumnsAxis() : queryModel.getRowsAxis());
		}
	}
	return this;
};
oFF.QConvenienceCommands.prototype.moveDimensionExt = function(dimType, dimName, targetAxis, index)
{
	var dimension = this.resolveDimension(dimType, dimName);
	if (oFF.notNull(dimension))
	{
		var queryModel = this.getQueryModel();
		var axis = queryModel.getAxis(targetAxis);
		if (oFF.notNull(axis))
		{
			if (index === -1)
			{
				axis.add(dimension);
			}
			else
			{
				axis.insert(index, dimension);
			}
		}
	}
	return dimension;
};
oFF.QConvenienceCommands.prototype.activateConditionalZeroSuppression = function()
{
	if (!this.isSystemType(oFF.SystemType.BW))
	{
		return this;
	}
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var isAnyDimensionShowsUnbookedData = false;
		var rowAxis = queryModel.getRowsAxis();
		var columnAxis = queryModel.getColumnsAxis();
		if (this.getQueryManager().isKeyfigureCalculationSuppressed())
		{
			isAnyDimensionShowsUnbookedData = true;
		}
		else
		{
			var rowIterator = rowAxis.getIterator();
			while (rowIterator.hasNext())
			{
				var rowReadMode = rowIterator.next().getReadMode(oFF.QContextType.RESULT_SET);
				if (oFF.notNull(rowReadMode) && rowReadMode.isTypeOf(oFF.QMemberReadMode.MASTER))
				{
					isAnyDimensionShowsUnbookedData = true;
					break;
				}
			}
			if (!isAnyDimensionShowsUnbookedData)
			{
				var columnIterator = columnAxis.getIterator();
				while (columnIterator.hasNext())
				{
					var columnReadMode = columnIterator.next().getReadMode(oFF.QContextType.RESULT_SET);
					if (oFF.notNull(columnReadMode) && columnReadMode.isTypeOf(oFF.QMemberReadMode.MASTER))
					{
						isAnyDimensionShowsUnbookedData = true;
						break;
					}
				}
			}
		}
		if (isAnyDimensionShowsUnbookedData)
		{
			if (rowAxis.supportsZeroSuppression())
			{
				rowAxis.setZeroSuppressionType(oFF.ZeroSuppressionType.NONE);
			}
			if (columnAxis.supportsZeroSuppression())
			{
				columnAxis.setZeroSuppressionType(oFF.ZeroSuppressionType.NONE);
			}
		}
	}
	return this;
};
oFF.QConvenienceCommands.prototype.getFirstGISDimension = function()
{
	var dimList = this.getDimensionsContainingValueType(oFF.XValueType.POINT);
	if (dimList.isEmpty())
	{
		dimList = this.getDimensionsContainingValueType(oFF.XValueType.MULTI_POINT);
	}
	if (dimList.isEmpty())
	{
		dimList = this.getDimensionsContainingValueType(oFF.XValueType.POLYGON);
	}
	if (dimList.isEmpty())
	{
		dimList = this.getDimensionsContainingValueType(oFF.XValueType.MULTI_POLYGON);
	}
	if (dimList.isEmpty())
	{
		dimList = this.getDimensionsContainingValueType(oFF.XValueType.LINE_STRING);
	}
	if (dimList.isEmpty())
	{
		dimList = this.getDimensionsContainingValueType(oFF.XValueType.MULTI_LINE_STRING);
	}
	var dim = null;
	if (dimList.hasElements())
	{
		dim = dimList.get(0);
	}
	return dim;
};
oFF.QConvenienceCommands.prototype.getGISAttributesForDimension = function(dimension)
{
	var gisFields = oFF.XList.create();
	var dimensionFields = dimension.getFields();
	for (var idxField = 0; idxField < dimensionFields.size(); idxField++)
	{
		var field = dimensionFields.getFieldAt(idxField);
		if (field.getValueType().isSpatial())
		{
			gisFields.add(field);
		}
	}
	return gisFields;
};
oFF.QConvenienceCommands.prototype.clearAxis = function(targetAxis)
{
	var queryModel = this.getQueryModel();
	queryModel.getAxis(targetAxis).clear();
	return this;
};
oFF.QConvenienceCommands.prototype.addAllDimensions = function()
{
	this.queueEventing();
	this.clearAxis(oFF.AxisType.ROWS);
	this.clearAxis(oFF.AxisType.COLUMNS);
	var queryModel = this.getQueryModel();
	var dimensionNames = this.getDimensionNames();
	dimensionNames.sortByDirection(oFF.XSortDirection.ASCENDING);
	for (var i = 0; i < dimensionNames.size(); i++)
	{
		var dimName = dimensionNames.get(i);
		var dimension = queryModel.getDimensionByName(dimName);
		if (!dimension.isSelectable())
		{
			continue;
		}
		if (oFF.XString.isEqual(dimension.getName(), "$$All$$"))
		{
			continue;
		}
		if (oFF.XString.startsWith(dimension.getName(), "$$"))
		{
			continue;
		}
		if (dimension.isMeasureStructure())
		{
			if (dimension.supportsAxis(oFF.AxisType.COLUMNS))
			{
				this.moveDimensionToColumns(dimName);
			}
		}
		else if (dimension.supportsAxis(oFF.AxisType.ROWS))
		{
			this.moveDimensionToRows(dimName);
		}
	}
	this.resumeEventing();
	return this;
};
oFF.QConvenienceCommands.prototype.setDimensionsAndMeasures = function(dimNames, measureNames)
{
	this.clearAxis(oFF.AxisType.COLUMNS);
	this.clearAxis(oFF.AxisType.ROWS);
	for (var dimIdx = 0; dimIdx < dimNames.size(); dimIdx++)
	{
		this.moveDimensionToRows(dimNames.get(dimIdx));
	}
	var dynamicFilter = this.getFilterContainer(oFF.FilterLayer.DYNAMIC);
	if (dynamicFilter.isCartesianProduct())
	{
		dynamicFilter.getCartesianProduct().clear();
	}
	for (var measureIdx = 0; measureIdx < measureNames.size(); measureIdx++)
	{
		this.addMeasure(measureNames.get(measureIdx));
	}
	return this;
};
oFF.QConvenienceCommands.prototype.setDimensionAndMeasure = function(dimName, measureName)
{
	var dimensions = oFF.XListOfString.create();
	dimensions.add(dimName);
	var measures = oFF.XListOfString.create();
	measures.add(measureName);
	this.setDimensionsAndMeasures(dimensions, measures);
	return this;
};
oFF.QConvenienceCommands.prototype.addAttributeToResultSet = function(dimName, attributeName)
{
	var dimension = this.getDimension(dimName);
	if (oFF.notNull(dimension))
	{
		var attributeContainer = dimension.getAttributeContainer();
		var attribute = attributeContainer.getAttributeByName(attributeName);
		if (oFF.notNull(attribute))
		{
			var resultSetAttributes = attributeContainer.getResultSetAttributes();
			resultSetAttributes.add(attribute);
			return attribute;
		}
	}
	return null;
};
oFF.QConvenienceCommands.prototype.removeAttributeFromResultSet = function(dimName, attributeName)
{
	var dimension = this.getDimension(dimName);
	if (oFF.notNull(dimension))
	{
		var attributeContainer = dimension.getAttributeContainer();
		var attribute = attributeContainer.getAttributeByName(attributeName);
		if (oFF.notNull(attribute))
		{
			var resultSetAttributes = attributeContainer.getResultSetAttributes();
			resultSetAttributes.removeElement(attribute);
			return attribute;
		}
	}
	return null;
};
oFF.QConvenienceCommands.prototype.removeField = function(dimType, dimName, presentationType, fieldName, contextType)
{
	var dimension = this.resolveDimension(dimType, dimName);
	var field = null;
	if (oFF.notNull(dimension))
	{
		var resolvedFieldName = this.resolveFieldName(dimension.getName(), presentationType, fieldName);
		field = dimension.getFieldByName(resolvedFieldName);
		var fields = this.getFieldList(dimension, contextType);
		if (!fields.isFixed() && oFF.notNull(field))
		{
			fields.removeElement(field);
		}
	}
	return field;
};
oFF.QConvenienceCommands.prototype.removeAttributeField = function(dimType, dimName, attributeName, presentationType, fieldName, contextType)
{
	var dimension = this.resolveDimension(dimType, dimName);
	var field = null;
	if (oFF.notNull(dimension))
	{
		var resolvedFieldName = this.resolveAttributeFieldName(dimension.getName(), attributeName, presentationType, fieldName);
		field = dimension.getFieldByName(resolvedFieldName);
		var fields = this.getFieldList(dimension, contextType);
		if (!fields.isFixed() && oFF.notNull(field))
		{
			fields.removeElement(field);
		}
	}
	return field;
};
oFF.QConvenienceCommands.prototype.addField = function(dimType, dimName, presentationType, fieldName, contextType)
{
	var dimension = this.resolveDimension(dimType, dimName);
	var field = null;
	if (oFF.notNull(dimension))
	{
		var resolvedFieldName = this.resolveFieldName(dimension.getName(), presentationType, fieldName);
		field = dimension.getFieldByName(resolvedFieldName);
		var fields = this.getFieldList(dimension, contextType);
		if (!fields.isFixed() && oFF.notNull(field))
		{
			fields.add(field);
		}
	}
	return field;
};
oFF.QConvenienceCommands.prototype.addAttributeField = function(dimType, dimName, attributeName, presentationType, fieldName, contextType)
{
	var dimension = this.resolveDimension(dimType, dimName);
	var field = null;
	if (oFF.notNull(dimension))
	{
		var resolvedFieldName = this.resolveAttributeFieldName(dimension.getName(), attributeName, presentationType, fieldName);
		field = dimension.getFieldByName(resolvedFieldName);
		var attribute = dimension.getAttributeByName(attributeName);
		var fields = this.getAttributeFieldList(attribute, contextType);
		if (!fields.isFixed() && oFF.notNull(field))
		{
			fields.add(field);
		}
	}
	return field;
};
oFF.QConvenienceCommands.prototype.setField = function(dimType, dimName, presentationType, fieldName, contextType)
{
	var dimension = this.resolveDimension(dimType, dimName);
	var field = null;
	if (oFF.notNull(dimension))
	{
		var resolvedFieldName = this.resolveFieldName(dimension.getName(), presentationType, fieldName);
		field = dimension.getFieldByName(resolvedFieldName);
		var fields = this.getFieldList(dimension, contextType);
		if (!fields.isFixed() && oFF.notNull(field))
		{
			fields.queueEventing();
			fields.clear();
			fields.add(field);
			fields.resumeEventing();
		}
	}
	return field;
};
oFF.QConvenienceCommands.prototype.clearFields = function(dimType, dimName, contextType)
{
	var dimension = this.getDimension(dimName);
	if (oFF.notNull(dimension))
	{
		if (dimension.getDimensionType() === oFF.DimensionType.FORMULA_CALCULATED_DIMENSION)
		{
			dimension.getResultSetFields().clear();
		}
		else
		{
			this.getFieldList(dimension, contextType).clear();
		}
	}
	return this;
};
oFF.QConvenienceCommands.prototype.clearAttributeFields = function(dimType, dimName, attributeName, contextType)
{
	var dimension = this.getDimension(dimName);
	if (oFF.notNull(dimension))
	{
		var attribute = dimension.getAttributeByName(attributeName);
		if (oFF.notNull(attribute))
		{
			this.getAttributeFieldList(attribute, contextType).clear();
		}
	}
	return this;
};
oFF.QConvenienceCommands.prototype.clearAttributes = function(dimType, dimName, contextType)
{
	var dimension = this.getDimension(dimName);
	if (oFF.notNull(dimension))
	{
		var attributeList = dimension.getAttributesExt(contextType);
		if (oFF.XCollectionUtils.hasElements(attributeList))
		{
			attributeList.clear();
		}
	}
	return this;
};
oFF.QConvenienceCommands.prototype.getAttributeFieldList = function(attribute, contextType)
{
	return attribute.getFieldsExt(contextType);
};
oFF.QConvenienceCommands.prototype.getFieldList = function(dimension, contextType)
{
	if (dimension.getFieldLayoutType() === oFF.FieldLayoutType.ATTRIBUTE_BASED)
	{
		return dimension.getMainAttribute().getFieldsExt(contextType);
	}
	return dimension.getFieldsExt(contextType);
};
oFF.QConvenienceCommands.prototype.containsField = function(dimName, fieldName, contextType)
{
	var dimension = this.getDimension(dimName);
	if (oFF.notNull(dimension))
	{
		var field = dimension.getFieldByName(fieldName);
		if (oFF.notNull(field))
		{
			if (contextType === oFF.QContextType.RESULT_SET)
			{
				return dimension.getResultSetFields().contains(field);
			}
			return dimension.getSelectorFields().contains(field);
		}
	}
	return false;
};
oFF.QConvenienceCommands.prototype.containsResultSetFieldByType = function(dimName, presentationType)
{
	var dimension = this.getDimension(dimName);
	if (oFF.isNull(dimension))
	{
		return false;
	}
	var field = dimension.getFirstFieldByType(presentationType);
	if (oFF.isNull(field))
	{
		return false;
	}
	return this.containsResultSetField(dimName, field.getName());
};
oFF.QConvenienceCommands.prototype.containsSelectorFieldByType = function(dimName, presentationType)
{
	var dimension = this.getDimension(dimName);
	if (oFF.isNull(dimension))
	{
		return false;
	}
	var field = dimension.getFirstFieldByType(presentationType);
	if (oFF.isNull(field))
	{
		return false;
	}
	return this.containsSelectorField(dimName, field.getName());
};
oFF.QConvenienceCommands.prototype.addAllFieldsOfDimensionToModelArea = function(dimName, contextType)
{
	if (contextType === oFF.QContextType.RESULT_SET)
	{
		this.addAllFieldsToResultSetOrToSelector(dimName, true);
	}
	else if (contextType === oFF.QContextType.SELECTOR)
	{
		this.addAllFieldsToResultSetOrToSelector(dimName, false);
	}
	return this;
};
oFF.QConvenienceCommands.prototype.addAllFieldsToResultSetOrToSelector = function(dimName, isResultSet)
{
	var dimension = this.getDimension(dimName);
	if (oFF.isNull(dimension))
	{
		return;
	}
	var fields = dimension.getFields();
	var fieldNames = fields.getKeysAsReadOnlyListOfString();
	var hasHierarchy = dimension.isHierarchyAssignedAndActive();
	for (var i = 0; i < fieldNames.size(); i++)
	{
		var field = fields.getByKey(fieldNames.get(i));
		var usageType = field.getUsageType();
		if (hasHierarchy && usageType === oFF.FieldUsageType.FLAT || usageType === oFF.FieldUsageType.HIERARCHY)
		{
			continue;
		}
		var fieldList;
		if (isResultSet)
		{
			fieldList = dimension.getResultSetFields();
		}
		else
		{
			fieldList = dimension.getSelectorFields();
		}
		if (!fieldList.isFixed())
		{
			fieldList.add(field);
		}
	}
};
oFF.QConvenienceCommands.prototype.getField = function(fieldName)
{
	return this.getQueryModel().getFieldByName(fieldName);
};
oFF.QConvenienceCommands.prototype.addAllFieldsToModelArea = function(contextType)
{
	var queryModel = this.getQueryModel();
	var dimensions = queryModel.getDimensions();
	for (var i = 0; i < dimensions.size(); i++)
	{
		var dimension = dimensions.get(i);
		if (!dimension.isSelectable())
		{
			continue;
		}
		if (oFF.XString.startsWith(dimension.getName(), "$$"))
		{
			continue;
		}
		if (contextType === oFF.QContextType.SELECTOR)
		{
			this.addAllFieldsToSelector(dimension.getName());
		}
		else if (contextType === oFF.QContextType.RESULT_SET)
		{
			this.addAllFieldsToResultSet(dimension.getName());
		}
	}
	return this;
};
oFF.QConvenienceCommands.prototype.clearAllFieldsFromModelArea = function(contextType)
{
	var dimensionNames = this.getDimensionNames();
	for (var i = 0; i < dimensionNames.size(); i++)
	{
		if (contextType === oFF.QContextType.RESULT_SET)
		{
			this.clearAllResultSetFields(dimensionNames.get(i));
		}
		else if (contextType === oFF.QContextType.SELECTOR)
		{
			this.clearAllSelectorFields(dimensionNames.get(i));
		}
	}
	return this;
};
oFF.QConvenienceCommands.prototype.resolveField = function(dimension, presentationType, fieldName)
{
	if (oFF.isNull(fieldName))
	{
		if (oFF.notNull(presentationType))
		{
			return dimension.getFieldByPresentationType(presentationType);
		}
		return dimension.getKeyField();
	}
	return dimension.getFieldByName(fieldName);
};
oFF.QConvenienceCommands.prototype.resolveFieldName = function(dimName, presentationType, fieldName)
{
	var theFieldName = fieldName;
	if (oFF.isNull(fieldName))
	{
		if (oFF.notNull(presentationType) && oFF.notNull(dimName))
		{
			var dimension = this.getDimension(dimName);
			if (oFF.notNull(dimension))
			{
				var field = dimension.getFieldByPresentationType(presentationType);
				if (oFF.isNull(field))
				{
					theFieldName = null;
				}
				else
				{
					theFieldName = field.getName();
				}
			}
		}
	}
	return theFieldName;
};
oFF.QConvenienceCommands.prototype.resolveAttributeFieldName = function(dimName, attributeName, presentationType, fieldName)
{
	var theFieldName = fieldName;
	if (oFF.isNull(fieldName))
	{
		if (oFF.notNull(presentationType) && oFF.notNull(dimName))
		{
			var dimension = this.getDimension(dimName);
			if (oFF.notNull(dimension) && oFF.XStringUtils.isNotNullAndNotEmpty(attributeName))
			{
				var attribute = dimension.getAttributeByName(attributeName);
				if (oFF.notNull(attribute))
				{
					var field = attribute.getFieldByPresentationType(presentationType);
					if (oFF.isNull(field))
					{
						theFieldName = null;
					}
					else
					{
						theFieldName = field.getName();
					}
				}
			}
		}
	}
	return theFieldName;
};
oFF.QConvenienceCommands.prototype.getFieldAccessorSingle = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.isNull(queryModel))
	{
		return null;
	}
	return queryModel.getFieldAccessorSingle();
};
oFF.QConvenienceCommands.prototype.getFieldFromDimension = function(dimName, fieldName)
{
	var dimension = this.getDimension(dimName);
	if (oFF.isNull(dimension))
	{
		return null;
	}
	return dimension.getFieldByName(fieldName);
};
oFF.QConvenienceCommands.prototype.getDrillManager = function()
{
	return this.getQueryModel().getDrillManager();
};
oFF.QConvenienceCommands.prototype.getKeyRefStorage = function()
{
	return this.getQueryModel().getKeyRefStorage();
};
oFF.QConvenienceCommands.prototype.drillNode = function(dimName, nodeName, drillState)
{
	var dimension = this.getDimension(dimName);
	var drillElement = oFF.QFactory.createDrillPathElement(this, nodeName, dimension);
	this.getQueryModel().getDrillManager().setDrillStateElement(drillElement, drillState);
	return null;
};
oFF.QConvenienceCommands.prototype.setDimensionHierarchy = function(dimName, hierarchyName, hierarchyActive, initialDrillLevel)
{
	var dimension = this.getDimension(dimName);
	if (oFF.notNull(dimension) && !dimension.isUniversalDisplayHierarchyDimension())
	{
		dimension.setHierarchyName(hierarchyName);
		dimension.setHierarchyActive(hierarchyActive);
		dimension.setInitialDrillLevel(initialDrillLevel);
	}
	return this;
};
oFF.QConvenienceCommands.prototype.setDimensionCustomHierarchyDefinition = function(customHierarchyDefinition, hierarchyActive, initialDrillLevel)
{
	var dimension = this.getDimension(customHierarchyDefinition.getDimensionName());
	if (oFF.notNull(dimension) && !dimension.isUniversalDisplayHierarchyDimension() && dimension.getModelCapabilities().supportsCustomHierarchy())
	{
		dimension.setCustomHierarchyDefinition(customHierarchyDefinition);
		dimension.setHierarchyActive(hierarchyActive);
		dimension.setInitialDrillLevel(initialDrillLevel);
	}
	return this;
};
oFF.QConvenienceCommands.prototype.setUniversalDisplayHierarchy = function(dimensionNames, initialDrillLevel, active)
{
	var udh = this.getQueryModel().getUniversalDisplayHierarchies();
	return udh.setHierarchy(dimensionNames, initialDrillLevel, active);
};
oFF.QConvenienceCommands.prototype.getSupportedExceptionAggregationTypes = function(memberType)
{
	var excepAggrMgr = this.getQueryModel()._getExceptionAggregationManagerBase();
	return oFF.isNull(excepAggrMgr) ? oFF.XListOfString.create() : excepAggrMgr._getSupportedAggregationTypesForMember(memberType);
};
oFF.QConvenienceCommands.prototype.getSupportedDimensionsForExceptionAggregation = function(memberType, aggrType)
{
	var excepAggrMgr = this.getQueryModel()._getExceptionAggregationManagerBase();
	return oFF.isNull(excepAggrMgr) ? oFF.XListOfString.create() : excepAggrMgr._getSupportedDimensionsForMemberAndAggregation(memberType, aggrType);
};
oFF.QConvenienceCommands.prototype.getMaxNumberOfDimensionsForExceptionAggregation = function(memberType, aggrType)
{
	var excepAggrMgr = this.getQueryModel()._getExceptionAggregationManagerBase();
	return oFF.isNull(excepAggrMgr) ? 0 : excepAggrMgr._getMaxNumberOfAllowedDimensions(memberType, aggrType);
};
oFF.QConvenienceCommands.prototype.sort = function(sortType, dimType, dimName, presentationType, fieldName, memberName, direction)
{
	var sortingManager = this.getQueryModel().getSortingManager();
	sortingManager.queueEventing();
	if (sortType === oFF.SortType.MEMBER_KEY || sortType === oFF.SortType.MEMBER_TEXT || sortType === oFF.SortType.HIERARCHY || sortType === oFF.SortType.FILTER)
	{
		var dimension = this.resolveDimension(dimType, dimName);
		if (oFF.notNull(dimension) && !dimension.isUniversalDisplayHierarchyDimension())
		{
			var dimensionSorting = sortingManager.getDimensionSorting(dimension, true);
			if (sortType === oFF.SortType.MEMBER_KEY)
			{
				dimensionSorting.setSortingPresentationType(oFF.PresentationType.KEY);
			}
			else if (sortType === oFF.SortType.MEMBER_TEXT)
			{
				dimensionSorting.setSortingPresentationType(oFF.PresentationType.TEXT);
			}
			else if (sortType === oFF.SortType.HIERARCHY)
			{
				dimensionSorting.setSortByHierarchy();
			}
			else if (sortType === oFF.SortType.FILTER)
			{
				dimensionSorting.setSortByFilter();
			}
			dimensionSorting.setDirection(direction);
		}
	}
	else if (sortType === oFF.SortType.MEASURE)
	{
		var member = this.getMeasure(memberName);
		if (oFF.notNull(member))
		{
			sortingManager.getMeasureSorting(member, true).setDirection(direction);
		}
	}
	else if (sortType === oFF.SortType.FIELD)
	{
		var resolvedDimName = this.resolveDimName(dimType, dimName);
		var resolvedFieldName = this.resolveFieldName(resolvedDimName, presentationType, fieldName);
		var field = this.getField(resolvedFieldName);
		if (oFF.notNull(field))
		{
			sortingManager.getFieldSorting(field, true).setDirection(direction);
		}
	}
	sortingManager.resumeEventing();
	return this;
};
oFF.QConvenienceCommands.prototype.clearSort = function(sortType, name)
{
	var sortingManager = this.getQueryModel().getSortingManager();
	var sortingOperations = sortingManager.getSortingOperations();
	if (oFF.isNull(sortType))
	{
		sortingOperations.clear();
	}
	else if (sortType === oFF.SortType.ABSTRACT_DIMENSION_SORT)
	{
		var dimension = this.getDimension(name);
		if (oFF.notNull(dimension))
		{
			sortingManager.removeDimensionSorting(dimension);
		}
	}
	else
	{
		sortingOperations.queueEventing();
		for (var i = sortingOperations.size() - 1; i >= 0; i--)
		{
			var sorting = sortingOperations.get(i);
			if (sorting.getSortingType() === sortType)
			{
				if (oFF.isNull(name) || oFF.XString.isEqual(name, sorting.getName()))
				{
					sortingOperations.removeAt(i);
				}
			}
		}
		sortingOperations.resumeEventing();
	}
	return this;
};
oFF.QConvenienceCommands.prototype.setTotalsVisible = function(modelLevel, name, visibility)
{
	var totalsController = this.getTotalsController(modelLevel, name);
	if (oFF.notNull(totalsController))
	{
		totalsController.setResultVisibility(visibility);
	}
	return this;
};
oFF.QConvenienceCommands.prototype.alignTotals = function(modelLevel, name, alignment)
{
	var totalsController = this.getTotalsController(modelLevel, name);
	if (oFF.notNull(totalsController))
	{
		if (oFF.isNull(alignment))
		{
			totalsController.restoreTotalsAlignment(oFF.RestoreAction.DEFAULT_VALUE, false);
		}
		else
		{
			totalsController.setResultAlignment(alignment);
		}
	}
	return this;
};
oFF.QConvenienceCommands.prototype.getTotalsController = function(modelLevel, name)
{
	var queryModel = this.getQueryModel();
	if (modelLevel === oFF.QModelLevel.QUERY)
	{
		return queryModel;
	}
	if (modelLevel === oFF.QModelLevel.AXES)
	{
		var type = oFF.AxisType.lookup(name);
		if (oFF.notNull(type))
		{
			return queryModel.getAxis(type);
		}
	}
	if (modelLevel === oFF.QModelLevel.DIMENSIONS)
	{
		return queryModel.getDimensionByName(name);
	}
	return null;
};
oFF.QConvenienceCommands.prototype.addMeasure = function(measureName)
{
	var measureStructure = this.moveMeasureDimensionToAxis(oFF.AxisType.COLUMNS);
	measureStructure.setReadMode(oFF.QContextType.RESULT_SET, oFF.QMemberReadMode.BOOKED);
	this.addSingleStructureMemberFilterByType(oFF.DimensionType.MEASURE_STRUCTURE, measureName, oFF.ComparisonOperator.EQUAL);
	return measureStructure.getStructureMember(measureName);
};
oFF.QConvenienceCommands.prototype.getMeasure = function(measureName)
{
	return this.getQueryModel().getMeasureDimension().getStructureMember(measureName);
};
oFF.QConvenienceCommands.prototype.addNewRestrictedMeasure = function(dimType, measureName, text, memberName, targetDim, targetMember)
{
	var dim = this.getQueryModel().getDimensionByType(dimType);
	var restrictedMeasure = dim.addNewRestrictedMeasure(measureName, text);
	var filter = restrictedMeasure.getFilter();
	filter.addSingleMemberFilterByDimension(dim, memberName, oFF.ComparisonOperator.EQUAL);
	var targetDimObj = this.getDimension(targetDim);
	filter.addSingleMemberFilterByDimension(targetDimObj, targetMember, oFF.ComparisonOperator.EQUAL);
	return this;
};
oFF.QConvenienceCommands.prototype.addNewRestrictedMeasureOnNode = function(dimType, measureName, text, memberName, targetDim, targetHierarchyName, targetNode)
{
	var measure = this.getQueryModel().getDimensionByType(dimType);
	var restrictedMeasure = measure.addNewRestrictedMeasure(measureName, text);
	var filter = restrictedMeasure.getFilter();
	var context = this.getQueryModel();
	var andFilter = oFF.QFactory.createFilterAnd(context);
	filter.setComplexRoot(andFilter);
	var measureOp = oFF.QFactory.createFilterOperation(context, measure.getKeyField());
	measureOp.setLowString(memberName);
	andFilter.add(measureOp);
	var restriction = oFF.QFactory.createFilterOperation(context, this.getDimension(targetDim).getHierarchyKeyField());
	restriction.setHierarchyName(targetHierarchyName);
	restriction.setLowString(targetNode);
	andFilter.add(restriction);
	return this;
};
oFF.QConvenienceCommands.prototype.getAccountDimensionMemberAliasByName = function(queryModel, memberName)
{
	return this.getMeasureMemberAliasByName(queryModel, memberName);
};
oFF.QConvenienceCommands.prototype.getAccountDimensionMemberNameByAlias = function(queryModel, aliasName)
{
	return this.getMeasureMemberNameByAlias(queryModel, aliasName);
};
oFF.QConvenienceCommands.prototype.getMeasureMemberAliasByName = function(queryModel, memberName)
{
	var queryManager = queryModel.getQueryManager();
	if (queryManager.getMode() === oFF.QueryManagerMode.BLENDING)
	{
		var blendingSources = queryManager.getQueryModel().getBlendingSources();
		for (var i = 0; i < blendingSources.size(); i++)
		{
			var blendingSource = blendingSources.get(i);
			var prefix = oFF.XStringUtils.concatenate2(blendingSource.getQueryAliasName(), ".");
			var nameWithoutPrefix = oFF.XString.replace(memberName, prefix, "");
			var leafQueryModel = blendingSource.getQueryModel();
			var aliasName = this.getMeasureMemberAliasByName(leafQueryModel, nameWithoutPrefix);
			if (oFF.notNull(aliasName))
			{
				if (oFF.XString.containsString(memberName, prefix))
				{
					aliasName = oFF.XStringUtils.concatenate2(prefix, aliasName);
				}
				return aliasName;
			}
		}
	}
	else
	{
		var leafAliasName = this.getDimensionMeasureMemberAliasByName(queryModel.getMeasureDimension(), memberName);
		if (oFF.isNull(leafAliasName))
		{
			leafAliasName = this.getDimensionMeasureMemberAliasByName(queryModel.getAccountDimension(), memberName);
		}
		return leafAliasName;
	}
	return null;
};
oFF.QConvenienceCommands.prototype.getMeasureMemberNameByAlias = function(queryModel, aliasName)
{
	if (oFF.isNull(aliasName))
	{
		return null;
	}
	var queryManager = queryModel.getQueryManager();
	if (queryManager.getMode() === oFF.QueryManagerMode.BLENDING)
	{
		var blendingSources = queryManager.getQueryModel().getBlendingSources();
		for (var i = 0; i < blendingSources.size(); i++)
		{
			var blendingSource = blendingSources.get(i);
			var prefix = oFF.XStringUtils.concatenate2(blendingSource.getQueryAliasName(), ".");
			var aliasNameWithoutPrefix = oFF.XString.replace(aliasName, prefix, "");
			var leafQueryModel = blendingSource.getQueryModel();
			var name = this.getMeasureMemberNameByAlias(leafQueryModel, aliasNameWithoutPrefix);
			if (oFF.notNull(name))
			{
				if (oFF.XString.containsString(aliasName, prefix))
				{
					name = oFF.XStringUtils.concatenate2(prefix, name);
				}
				return name;
			}
		}
	}
	else
	{
		var leafName = this.getDimensionMeasureMemberNameByAlias(queryModel.getMeasureDimension(), aliasName);
		if (oFF.isNull(leafName))
		{
			leafName = this.getDimensionMeasureMemberNameByAlias(queryModel.getAccountDimension(), aliasName);
		}
		return leafName;
	}
	return null;
};
oFF.QConvenienceCommands.prototype.getRuntimeMemberNameByAlias = function(queryModel, aliasName)
{
	if (oFF.isNull(aliasName))
	{
		return null;
	}
	var queryManager = queryModel.getQueryManager();
	if (queryManager.getMode() === oFF.QueryManagerMode.BLENDING)
	{
		var blendingSources = queryManager.getQueryModel().getBlendingSources();
		for (var i = 0; i < blendingSources.size(); i++)
		{
			var blendingSource = blendingSources.get(i);
			var prefix = oFF.XStringUtils.concatenate2(blendingSource.getQueryAliasName(), ".");
			var aliasNameWithoutPrefix = oFF.XString.replace(aliasName, prefix, "");
			var leafQueryModel = blendingSource.getQueryModel();
			var name = this.getRuntimeMemberNameByAlias(leafQueryModel, aliasNameWithoutPrefix);
			if (oFF.notNull(name))
			{
				if (oFF.XString.containsString(aliasName, prefix))
				{
					name = oFF.XStringUtils.concatenate2(prefix, name);
				}
				return name;
			}
		}
	}
	else
	{
		var leafName = this.getDimensionRuntimeMemberNameByAlias(queryModel.getMeasureDimension(), aliasName);
		if (oFF.isNull(leafName))
		{
			leafName = this.getDimensionRuntimeMemberNameByAlias(queryModel.getAccountDimension(), aliasName);
		}
		return leafName;
	}
	return null;
};
oFF.QConvenienceCommands.prototype.getDimensionMeasureMemberAliasByName = function(dimension, memberName)
{
	if (oFF.notNull(dimension))
	{
		var structureMember = dimension.getPlaceholderIdMemberMap().getByKey(memberName);
		if (oFF.isNull(structureMember))
		{
			structureMember = dimension.getStructureMember(memberName);
		}
		if (oFF.notNull(structureMember))
		{
			return structureMember.getAliasName();
		}
	}
	return null;
};
oFF.QConvenienceCommands.prototype.getDimensionMeasureMemberNameByAlias = function(dimension, aliasName)
{
	if (oFF.notNull(dimension))
	{
		return dimension.getPlaceholderIdByAlias(aliasName);
	}
	return null;
};
oFF.QConvenienceCommands.prototype.getDimensionRuntimeMemberNameByAlias = function(dimension, aliasName)
{
	if (oFF.notNull(dimension))
	{
		return dimension.getRuntimePlaceholderIdByAlias(aliasName);
	}
	return null;
};
oFF.QConvenienceCommands.prototype.setOffsetColumns = function(offset)
{
	this.getQueryManager().setOffsetColumns(offset);
	return this;
};
oFF.QConvenienceCommands.prototype.setMaxColumns = function(max)
{
	this.getQueryManager().setMaxColumns(max);
	return this;
};
oFF.QConvenienceCommands.prototype.setMaxResultRecords = function(maxResultRecords)
{
	this.getQueryManager().setMaxResultRecords(maxResultRecords);
	return this;
};
oFF.QConvenienceCommands.prototype.resetMaxResultRecords = function()
{
	this.getQueryManager().resetMaxResultRecords();
	return this;
};
oFF.QConvenienceCommands.prototype.getOffsetColumns = function()
{
	return this.getQueryManager().getOffsetColumns();
};
oFF.QConvenienceCommands.prototype.getMaxColumns = function()
{
	return this.getQueryManager().getMaxColumns();
};
oFF.QConvenienceCommands.prototype.setSuppressKeyfigureCalculation = function(doSupress)
{
	this.getQueryManager().setSuppressKeyfigureCalculation(doSupress);
	return this;
};
oFF.QConvenienceCommands.prototype.isKeyfigureCalculationSuppressed = function()
{
	return this.getQueryManager().isKeyfigureCalculationSuppressed();
};
oFF.QConvenienceCommands.prototype.getOffsetRows = function()
{
	return this.getQueryManager().getOffsetRows();
};
oFF.QConvenienceCommands.prototype.getMaxRows = function()
{
	return this.getQueryManager().getMaxRows();
};
oFF.QConvenienceCommands.prototype.setOffsetRows = function(offset)
{
	this.getQueryManager().setOffsetRows(offset);
	return this;
};
oFF.QConvenienceCommands.prototype.setMaxRows = function(max)
{
	this.getQueryManager().setMaxRows(max);
	return this;
};
oFF.QConvenienceCommands.prototype.getMaxResultRecords = function()
{
	return this.getQueryManager().getMaxResultRecords();
};
oFF.QConvenienceCommands.prototype.setExecuteRequestOnOldResultSet = function(executeRequestOnOldResultSet)
{
	this.getQueryManager().setExecuteRequestOnOldResultSet(executeRequestOnOldResultSet);
	return this;
};
oFF.QConvenienceCommands.prototype.setResultSetPersistanceTargetSchema = function(resultSetPersistenceSchema)
{
	this.getQueryManager().setResultSetPersistanceTargetSchema(resultSetPersistenceSchema);
	return this;
};
oFF.QConvenienceCommands.prototype.setResultSetPersistanceTargetTable = function(resultSetPersistenceTable)
{
	this.getQueryManager().setResultSetPersistanceTargetTable(resultSetPersistenceTable);
	return this;
};
oFF.QConvenienceCommands.prototype.setResultSetPersistenceTargetType = function(resultSetPersistenceType)
{
	this.getQueryManager().setResultSetPersistenceTargetType(resultSetPersistenceType);
	return this;
};
oFF.QConvenienceCommands.prototype.setResultSetPersistenceIdentifier = function(resultSetPersistenceIdentifier)
{
	this.getQueryManager().setResultSetPersistenceIdentifier(resultSetPersistenceIdentifier);
	return this;
};
oFF.QConvenienceCommands.prototype.setResultSetTransportEnabled = function(isEnabled)
{
	this.getQueryManager().setResultSetTransportEnabled(isEnabled);
	return this;
};
oFF.QConvenienceCommands.prototype.hasMoreColumnRecordsAvailable = function()
{
	return this.getQueryManager().hasMoreColumnRecordsAvailable();
};
oFF.QConvenienceCommands.prototype.getExecuteRequestOnOldResultSet = function()
{
	return this.getQueryManager().getExecuteRequestOnOldResultSet();
};
oFF.QConvenienceCommands.prototype.getResultSetPersistenceSchema = function()
{
	return this.getQueryManager().getResultSetPersistenceSchema();
};
oFF.QConvenienceCommands.prototype.getResultSetPersistenceTable = function()
{
	return this.getQueryManager().getResultSetPersistenceTable();
};
oFF.QConvenienceCommands.prototype.getResultSetPersistenceType = function()
{
	return this.getQueryManager().getResultSetPersistenceType();
};
oFF.QConvenienceCommands.prototype.getResultSetPersistenceIdentifier = function()
{
	return this.getQueryManager().getResultSetPersistenceIdentifier();
};
oFF.QConvenienceCommands.prototype.isResultSetTransportEnabled = function()
{
	return this.getQueryManager().isResultSetTransportEnabled();
};
oFF.QConvenienceCommands.prototype.hasMoreRowRecordsAvailable = function()
{
	return this.getQueryManager().hasMoreRowRecordsAvailable();
};
oFF.QConvenienceCommands.prototype.refresh = function()
{
	return this.processQueryExecution(oFF.SyncType.NON_BLOCKING, null, null);
};
oFF.QConvenienceCommands.prototype.processQueryManagerCreation = function(syncType, listener, customIdentifier)
{
	var queryServiceConfig = this.getQueryServiceConfig();
	if (oFF.notNull(queryServiceConfig))
	{
		queryServiceConfig.processQueryManagerCreation(syncType, listener, customIdentifier);
	}
	return this;
};
oFF.QConvenienceCommands.prototype.processQueryExecution = function(syncType, listener, customIdentifier)
{
	var queryManager = this.getQueryManager();
	if (oFF.notNull(queryManager))
	{
		queryManager.processQueryExecution(syncType, listener, customIdentifier);
	}
	return this;
};
oFF.QConvenienceCommands.prototype.getReferenceGrid = function(withDetails)
{
	var queryManager = this.getQueryManager();
	if (oFF.isNull(queryManager))
	{
		return null;
	}
	var rs = queryManager.getClassicResultSet();
	return oFF.ReferenceGridFactory.createReferenceGrid(rs, withDetails);
};
oFF.QConvenienceCommands.prototype.getAbstractRendering = function(type, protocol)
{
	var queryManager = this.getQueryManager();
	if (oFF.isNull(queryManager))
	{
		return null;
	}
	return queryManager.getAbstractRendering(type, protocol);
};
oFF.QConvenienceCommands.prototype.queueEventing = function()
{
	this.m_activeComponent.queueEventing();
};
oFF.QConvenienceCommands.prototype.stopEventing = function()
{
	this.m_activeComponent.stopEventing();
};
oFF.QConvenienceCommands.prototype.isEventingStopped = function()
{
	return this.m_activeComponent.isEventingStopped();
};
oFF.QConvenienceCommands.prototype.resumeEventing = function()
{
	this.m_activeComponent.resumeEventing();
};
oFF.QConvenienceCommands.prototype.isHana = function()
{
	return this.isSystemType(oFF.SystemType.HANA);
};
oFF.QConvenienceCommands.prototype.isBw = function()
{
	return this.isSystemType(oFF.SystemType.BW);
};
oFF.QConvenienceCommands.prototype.isBpcs = function()
{
	return this.isSystemType(oFF.SystemType.BPCS);
};
oFF.QConvenienceCommands.prototype.isBpce = function()
{
	return this.isSystemType(oFF.SystemType.BPCE);
};
oFF.QConvenienceCommands.prototype.isUniverse = function()
{
	return this.isSystemType(oFF.SystemType.UNV);
};
oFF.QConvenienceCommands.prototype.isHybris = function()
{
	return this.isSystemType(oFF.SystemType.HYBRIS);
};
oFF.QConvenienceCommands.prototype.isUqas = function()
{
	return this.isSystemType(oFF.SystemType.UQAS);
};
oFF.QConvenienceCommands.prototype.isOdata = function()
{
	return this.isSystemType(oFF.SystemType.VIRTUAL_INA_ODATA);
};
oFF.QConvenienceCommands.prototype.isSystemType = function(systemType)
{
	var systemDescription = this.getQueryManager().getSystemDescription();
	return oFF.notNull(systemDescription) && systemDescription.getSystemType() === systemType;
};
oFF.QConvenienceCommands.prototype.isTypeOfBw = function()
{
	var systemDescription = this.getQueryManager().getSystemDescription();
	return oFF.notNull(systemDescription) && systemDescription.getSystemType().isTypeOf(oFF.SystemType.BW);
};
oFF.QConvenienceCommands.prototype.updateDynamicVariables = function(syncType, listener, customIdentifier)
{
	var variables = this.getDynamicVariables();
	if (variables.size() === 0 || this.isBw())
	{
		if (oFF.notNull(listener))
		{
			var activeResultSetContainer = this.getQueryManager().getActiveResultSetContainer();
			listener.onQueryExecuted(activeResultSetContainer, activeResultSetContainer, customIdentifier);
		}
	}
	else
	{
		this.getOlapEnv().updateDynamicVariablesForQueryManager(this.getQueryManager(), syncType, listener, customIdentifier);
	}
	return this;
};
oFF.QConvenienceCommands.prototype.updateBWDynamicVariables = function(listener, customIdentifier, overwriteDefaultForInputEnabledVar)
{
	var variables = this.getDynamicVariables();
	var numberOfDynamicVariables = variables.size();
	for (var i = 0; i < numberOfDynamicVariables; i++)
	{
		var variable = variables.get(i);
		if (!variable.isInputEnabled() || overwriteDefaultForInputEnabledVar)
		{
			var defaultMemberFilter = variable.getDefaultMemberFilter();
			if (oFF.notNull(defaultMemberFilter))
			{
				variable.setMemberFilter(defaultMemberFilter.cloneOlapComponent(variable, null));
			}
		}
	}
	if (oFF.notNull(listener))
	{
		var activeResultSetContainer = this.getQueryManager().getActiveResultSetContainer();
		listener.onQueryExecuted(activeResultSetContainer, activeResultSetContainer, customIdentifier);
	}
	return this;
};
oFF.QConvenienceCommands.prototype.processResetExitOrDynamicVariable = function(syncType, listener, customIdentifier, overwriteDefaultForInputEnabledVar)
{
	if (this.isBw())
	{
		return this.updateBWDynamicVariables(listener, customIdentifier, overwriteDefaultForInputEnabledVar);
	}
	return this.updateDynamicVariables(syncType, listener, customIdentifier);
};
oFF.QConvenienceCommands.prototype.getDynamicVariables = function()
{
	var variables = this.getQueryModel().getVariables();
	var dynamicVariables = oFF.XList.create();
	var numberOfVariables = variables.size();
	for (var i = 0; i < numberOfVariables; i++)
	{
		var variable = variables.get(i);
		if (variable.isDynamicOrExitVariable())
		{
			dynamicVariables.add(variable);
		}
	}
	return dynamicVariables;
};
oFF.QConvenienceCommands.prototype.setFilterForLeaves = function(dimension)
{
	var capabilities = this.getModelCapabilities();
	if (capabilities.supportsHierarchyRestNode() === false || capabilities.supportsHierarchyVirtualRootNode() === false)
	{
		return this;
	}
	var hierarchyCatalogItem = this.getHierarchyCatalogItem(dimension);
	if (oFF.isNull(hierarchyCatalogItem))
	{
		return this;
	}
	this.addSingleMemberFilterByDimensionName(dimension.getName(), hierarchyCatalogItem.getVirtualRootNode(), oFF.ComparisonOperator.EQUAL);
	var dynamicFilter = this.getFilterContainer(oFF.FilterLayer.DYNAMIC);
	var singleMemberSelection = dynamicFilter.addSingleMemberFilterByName(dimension.getName(), hierarchyCatalogItem.getRestNode(), oFF.ComparisonOperator.EQUAL);
	singleMemberSelection.setSetSign(oFF.SetSign.EXCLUDING);
	return this;
};
oFF.QConvenienceCommands.prototype.getHierarchyCatalogItem = function(dimension)
{
	var hierarchyName = dimension.getHierarchyName();
	var hierarchies = dimension.getHierarchies();
	var hierarchyObjects = hierarchies.getObjects();
	var size = hierarchyObjects.size();
	for (var i = 0; i < size; i++)
	{
		var hierarchyCatalogItem = hierarchyObjects.get(i);
		if (oFF.XString.isEqual(hierarchyCatalogItem.getHierarchyName(), hierarchyName))
		{
			return hierarchyCatalogItem;
		}
	}
	return null;
};
oFF.QConvenienceCommands.prototype.buildRank = function(maxRows, measureName, secondaryMeasure, applyToDimensions, indicateTopBottom, versionElementId, versionDimension)
{
	var queryModel = this.getQueryModel();
	var measureDimension = queryModel.getMeasureDimension();
	var accountDimension = queryModel.getAccountDimension();
	var newCondition = null;
	if (!this.getModelCapabilities().supportsConditions())
	{
		var sortingManager = queryModel.getSortingManager();
		var complexSorting = this.getSortForRank(measureName, secondaryMeasure, queryModel, sortingManager, versionElementId, versionDimension);
		if (oFF.ConditionComparisonOperator.TOP_N === indicateTopBottom)
		{
			complexSorting.setDirection(oFF.XSortDirection.DESCENDING);
		}
		else if (oFF.ConditionComparisonOperator.BOTTOM_N === indicateTopBottom)
		{
			complexSorting.setDirection(oFF.XSortDirection.ASCENDING);
		}
		if (oFF.notNull(accountDimension) && queryModel.getDrillManager().getAllZoomDrillOperationsForDimension(accountDimension).size() > 0)
		{
			complexSorting.setPreserveGrouping(true);
		}
		else
		{
			complexSorting.setPreserveGrouping(false);
		}
		this.setRank(maxRows, complexSorting, null, applyToDimensions);
	}
	else
	{
		var conditionManager = queryModel.getConditionManager();
		if (oFF.isNull(conditionManager))
		{
			return null;
		}
		var nonMeasureDimension = queryModel.getNonMeasureDimension();
		var iqDimensionMember1 = null;
		var accountDimensionMember = null;
		if (oFF.notNull(accountDimension))
		{
			if (oFF.XStringUtils.isNullOrEmpty(secondaryMeasure))
			{
				iqDimensionMember1 = measureDimension.getDimensionMember(oFF.QModelConstants.MEASURE_SIGNED_DATA);
			}
			accountDimensionMember = accountDimension.getDimensionMember(measureName);
		}
		else
		{
			iqDimensionMember1 = measureDimension.getDimensionMember(measureName);
		}
		var iqDimensionMember2 = null;
		if (oFF.XStringUtils.isNotNullAndNotEmpty(secondaryMeasure))
		{
			iqDimensionMember2 = oFF.notNull(nonMeasureDimension) ? nonMeasureDimension.getDimensionMember(secondaryMeasure) : measureDimension.getDimensionMember(secondaryMeasure);
		}
		var versionDimensionToUse = oFF.notNull(versionDimension) ? versionDimension : queryModel.getDimensionByType(oFF.DimensionType.VERSION);
		newCondition = this.getConditionWithUniqueName(conditionManager, "RANKING_CONDITION", "", 1);
		if (oFF.XCollectionUtils.hasElements(applyToDimensions))
		{
			newCondition.setDimensionEvaluationType(oFF.ConditionDimensionEvaluationType.GIVEN_LIST);
			if (oFF.isNull(applyToDimensions) || applyToDimensions.size() === 0)
			{
				throw oFF.XException.createRuntimeException("Parameter applyTopOnEveryDimension is false. Expect the list of Dimensions on which to apply");
			}
			for (var i = 0; i < applyToDimensions.size(); i++)
			{
				newCondition.addEvaluationDimension(queryModel.getDimensionByName(applyToDimensions.get(i)));
			}
		}
		else
		{
			if (this.isBw())
			{
				newCondition.setDimensionEvaluationType(oFF.ConditionDimensionEvaluationType.ALL_IN_DRILL_DOWN);
			}
			else
			{
				newCondition.setDimensionEvaluationType(oFF.ConditionDimensionEvaluationType.GIVEN_LIST);
				var axisToUseForEDL = queryModel.getAxis(oFF.AxisType.ROWS);
				if (measureDimension.getAxis().getType() === oFF.AxisType.ROWS)
				{
					axisToUseForEDL = queryModel.getAxis(oFF.AxisType.COLUMNS);
				}
				for (var dimensionIndex = 0; dimensionIndex < axisToUseForEDL.size(); dimensionIndex++)
				{
					var dimension = axisToUseForEDL.get(dimensionIndex);
					if (dimension !== accountDimension && dimension !== versionDimensionToUse)
					{
						newCondition.addEvaluationDimension(dimension);
					}
				}
			}
		}
		var newThreshold = newCondition.createThreshold();
		if (oFF.notNull(iqDimensionMember1))
		{
			newThreshold.addMeasureCoordinate(iqDimensionMember1);
		}
		if (oFF.notNull(iqDimensionMember2))
		{
			newThreshold.addMeasureCoordinate(iqDimensionMember2);
		}
		if (oFF.notNull(accountDimensionMember))
		{
			newThreshold.addMeasureCoordinate(accountDimensionMember);
		}
		if (oFF.XStringUtils.isNotNullAndNotEmpty(versionElementId) && oFF.notNull(versionDimensionToUse))
		{
			newThreshold.addMeasureCoordinate(versionDimensionToUse.getDimensionMember(versionElementId));
		}
		newThreshold.setComparisonOperator(indicateTopBottom);
		if (this.isBw())
		{
			newThreshold.getLow().setString(oFF.XInteger.convertToString(maxRows));
		}
		else
		{
			newThreshold.getLow().setInteger(maxRows);
		}
		this.setRank(maxRows, null, newCondition, applyToDimensions);
	}
	return newCondition;
};
oFF.QConvenienceCommands.prototype.getConditionWithUniqueName = function(conditionManager, conditionNamePrefix, spacer, rankNumber)
{
	var conditionName = oFF.XStringUtils.isNullOrEmpty(spacer) ? conditionNamePrefix : oFF.XStringUtils.concatenate3(conditionNamePrefix, spacer, oFF.XInteger.convertToString(rankNumber));
	var newCondition = conditionManager.createNewCondition(conditionName);
	if (oFF.isNull(newCondition))
	{
		return this.getConditionWithUniqueName(conditionManager, conditionNamePrefix, "_", rankNumber + 1);
	}
	return newCondition;
};
oFF.QConvenienceCommands.prototype.getSortForRank = function(measureElementId, secondaryMeasureElementId, queryModel, sortingManager, versionElementId, versionDimension)
{
	var measureDimension = queryModel.getMeasureDimension();
	var accountDimension = queryModel.getAccountDimension();
	var secondaryCalculationDimension = queryModel.getSecondaryCalculationDimension();
	var versionDimensionToUse = oFF.notNull(versionDimension) ? versionDimension : queryModel.getDimensionByType(oFF.DimensionType.VERSION);
	var path = oFF.XList.create();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(versionElementId) && oFF.notNull(versionDimensionToUse))
	{
		if (versionDimensionToUse.getAxisType() === oFF.AxisType.ROWS)
		{
			queryModel.getRowsAxis().removeElement(versionDimensionToUse);
			queryModel.getColumnsAxis().insert(0, versionDimensionToUse);
		}
		var dimensionElementVersion = oFF.QFactory.createDimensionElement(versionDimensionToUse.getKeyField(), null, versionElementId);
		path.add(dimensionElementVersion);
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(secondaryMeasureElementId))
	{
		path.add(oFF.QFactory.createDimensionElement(secondaryCalculationDimension.getKeyField(), null, secondaryMeasureElementId));
	}
	if (oFF.notNull(accountDimension))
	{
		if (!oFF.XStringUtils.isNotNullAndNotEmpty(secondaryMeasureElementId))
		{
			path.add(oFF.QFactory.createDimensionElement(measureDimension.getKeyField(), null, oFF.QModelConstants.MEASURE_SIGNED_DATA));
		}
		var dimensionElementAccount = oFF.QFactory.createDimensionElement(accountDimension.getKeyField(), null, measureElementId);
		path.add(dimensionElementAccount);
	}
	else
	{
		path.add(oFF.QFactory.createDimensionElement(measureDimension.getKeyField(), null, measureElementId));
	}
	var complexSorting = null;
	var isDataCellSortingValid = this.isSortTupleValidForDataCellSort(measureDimension, accountDimension);
	if (isDataCellSortingValid)
	{
		complexSorting = sortingManager.newDataCellSorting(path);
	}
	else
	{
		complexSorting = sortingManager.newComplexSorting(path);
	}
	return complexSorting;
};
oFF.QConvenienceCommands.prototype.isSortTupleValidForDataCellSort = function(measureDimension, accountDimension)
{
	if (oFF.isNull(accountDimension))
	{
		return true;
	}
	var accountAxis = accountDimension.getAxisType();
	var measureAxis = measureDimension.getAxisType();
	if (accountAxis !== oFF.AxisType.ROWS && accountAxis !== oFF.AxisType.COLUMNS)
	{
		return true;
	}
	if (measureAxis !== oFF.AxisType.ROWS && measureAxis !== oFF.AxisType.COLUMNS)
	{
		return true;
	}
	return accountAxis === measureAxis;
};
oFF.QConvenienceCommands.prototype.setRank = function(maxRows, complexSorting, condition, applyToDimensions)
{
	var queryModel = this.getQueryModel();
	if (!this.getModelCapabilities().supportsConditions())
	{
		this.removePriorSortOperationForRank();
		if (oFF.isNull(complexSorting))
		{
			return this;
		}
		var applyTopOnIndividualDimension = oFF.XCollectionUtils.hasElements(applyToDimensions);
		complexSorting.setUsedInRanking(true);
		complexSorting.setAppliedTopOnIndividualDimension(applyTopOnIndividualDimension);
		queryModel.getSortingManager().getSortingOperations().add(complexSorting);
		var topForDimensions = maxRows;
		if (!applyTopOnIndividualDimension)
		{
			this.setMaxRows(maxRows);
			topForDimensions = 0;
		}
		this.addTopToDimensions(topForDimensions, queryModel.getAxesManager().getRowsAxis());
		this.addTopToDimensions(topForDimensions, queryModel.getAxesManager().getColumnsAxis());
	}
	else if (oFF.notNull(condition))
	{
		var conditionManager = queryModel.getConditionManager();
		conditionManager.add(condition);
	}
	return this;
};
oFF.QConvenienceCommands.prototype.getRank = function(conditionName)
{
	var queryModel = this.getQueryModel();
	var complexSortForRank = null;
	var conditionForRank = null;
	var maxRows = 0;
	if (!this.getModelCapabilities().supportsConditions())
	{
		var sortingOperations = queryModel.getSortingManager().getSortingOperations();
		var numberOfSortOperations = sortingOperations.size();
		for (var i = 0; i < numberOfSortOperations; i++)
		{
			var iqGenericSorting = sortingOperations.get(i);
			var sortingType = iqGenericSorting.getSortingType();
			if (sortingType === oFF.SortType.COMPLEX || sortingType === oFF.SortType.DATA_CELL_VALUE)
			{
				var complexSorting = iqGenericSorting;
				if (complexSorting.usedInRanking())
				{
					complexSortForRank = complexSorting;
					if (complexSortForRank.appliedTopOnIndividualDimension())
					{
						maxRows = queryModel.getRowsAxis().get(0).getTopEntries();
					}
					else
					{
						maxRows = this.getMaxRows();
					}
				}
			}
		}
	}
	else
	{
		var conditionManager = queryModel.getConditionManager();
		if (oFF.notNull(conditionManager))
		{
			for (var conditionIndex = 0; conditionIndex < conditionManager.size(); conditionIndex++)
			{
				var condition = conditionManager.get(conditionIndex);
				if (condition.isBackendCondition())
				{
					continue;
				}
				var thresholds = condition.getThresholds();
				if (oFF.XCollectionUtils.hasElements(thresholds))
				{
					var thresholdZeroIndex = thresholds.get(0);
					var conditionComparisonOperator = thresholdZeroIndex.getComparisonOperator();
					if (conditionComparisonOperator === oFF.ConditionComparisonOperator.TOP_N || conditionComparisonOperator === oFF.ConditionComparisonOperator.BOTTOM_N)
					{
						if (oFF.XStringUtils.isNullOrEmpty(conditionName) || oFF.XString.isEqual(conditionName, condition.getName()))
						{
							conditionForRank = condition;
							maxRows = oFF.XInteger.convertFromString(thresholdZeroIndex.getLow().getString());
							break;
						}
					}
				}
			}
		}
	}
	if (oFF.isNull(complexSortForRank) && oFF.isNull(conditionForRank))
	{
		return null;
	}
	var rankInfo = oFF.QFactory.createRankInfo(maxRows, complexSortForRank, conditionForRank);
	return rankInfo;
};
oFF.QConvenienceCommands.prototype.getAllRanks = function()
{
	var ranks = oFF.XList.create();
	if (!this.getModelCapabilities().supportsConditions())
	{
		var rank = this.getRank(null);
		if (oFF.notNull(rank))
		{
			ranks.add(rank);
		}
	}
	else
	{
		var conditionManager = this.getQueryModel().getConditionManager();
		if (oFF.notNull(conditionManager))
		{
			for (var conditionIndex = 0; conditionIndex < conditionManager.size(); conditionIndex++)
			{
				var condition = conditionManager.get(conditionIndex);
				if (condition.isBackendCondition())
				{
					continue;
				}
				var thresholds = condition.getThresholds();
				if (oFF.XCollectionUtils.hasElements(thresholds))
				{
					var thresholdZeroIndex = thresholds.get(0);
					var conditionComparisonOperator = thresholdZeroIndex.getComparisonOperator();
					if (conditionComparisonOperator === oFF.ConditionComparisonOperator.TOP_N || conditionComparisonOperator === oFF.ConditionComparisonOperator.BOTTOM_N)
					{
						var maxRows = oFF.XInteger.convertFromString(thresholdZeroIndex.getLow().getString());
						ranks.add(oFF.QFactory.createRankInfo(maxRows, null, condition));
					}
				}
			}
		}
	}
	return ranks;
};
oFF.QConvenienceCommands.prototype.removePriorSortOperationForRank = function()
{
	var queryModel = this.getQueryModel();
	var sortingOperations = queryModel.getSortingManager().getSortingOperations();
	var numberOfSortingOperations = sortingOperations.size();
	for (var i = 0; i < numberOfSortingOperations; i++)
	{
		var iqGenericSorting = sortingOperations.get(i);
		var sortingType = iqGenericSorting.getSortingType();
		if (sortingType === oFF.SortType.COMPLEX || sortingType === oFF.SortType.DATA_CELL_VALUE)
		{
			var complexSorting = iqGenericSorting;
			if (complexSorting.usedInRanking())
			{
				sortingOperations.removeElement(complexSorting);
				return complexSorting;
			}
		}
	}
	return null;
};
oFF.QConvenienceCommands.prototype.addTopToDimensions = function(numberOfTopEntries, rowsAxis)
{
	var measureDimensionName = this.getQueryModel().getMeasureDimension().getName();
	var dimensionsOnRows = rowsAxis.getDimensions();
	var numberOfDimensionsOnRows = dimensionsOnRows.size();
	for (var j = 0; j < numberOfDimensionsOnRows; j++)
	{
		var dimension = dimensionsOnRows.get(j);
		if (oFF.XString.isEqual(measureDimensionName, dimension.getName()))
		{
			continue;
		}
		dimension.setTopEntries(numberOfTopEntries);
	}
};
oFF.QConvenienceCommands.prototype.clearRank = function(conditionName)
{
	var modelCapabilities = this.getModelCapabilities();
	var queryModel = this.getQueryModel();
	if (this.isHana() && !modelCapabilities.supportsConditions())
	{
		var sortUsedInRanking = this.removePriorSortOperationForRank();
		if (oFF.isNull(sortUsedInRanking))
		{
			return this;
		}
		if (sortUsedInRanking.appliedTopOnIndividualDimension())
		{
			this.addTopToDimensions(0, this.getQueryModel().getAxesManager().getRowsAxis());
			this.addTopToDimensions(0, this.getQueryModel().getAxesManager().getColumnsAxis());
		}
		else
		{
			this.setMaxRows(-1);
		}
	}
	else
	{
		var conditionManager = queryModel.getConditionManager();
		if (oFF.notNull(conditionManager))
		{
			for (var conditionIndex = 0; conditionIndex < conditionManager.size(); )
			{
				var condition = conditionManager.get(conditionIndex);
				if (condition.isBackendCondition())
				{
					conditionIndex++;
					continue;
				}
				var thresholds = condition.getThresholds();
				if (oFF.XCollectionUtils.hasElements(thresholds))
				{
					var thresholdZeroIndex = thresholds.get(0);
					var conditionComparisonOperator = thresholdZeroIndex.getComparisonOperator();
					if (conditionComparisonOperator === oFF.ConditionComparisonOperator.TOP_N || conditionComparisonOperator === oFF.ConditionComparisonOperator.BOTTOM_N)
					{
						if (oFF.XStringUtils.isNullOrEmpty(conditionName) || oFF.XString.isEqual(conditionName, condition.getName()))
						{
							conditionManager.removeElement(condition);
						}
						else
						{
							conditionIndex++;
						}
					}
				}
			}
		}
	}
	return this;
};
oFF.QConvenienceCommands.prototype.applyCustomSort = function(dimension, field, customOrder, sortDirection, customSortPosition, createNewSortOperation)
{
	return this.getQueryModel().getSortingManager().applyCustomSort(dimension, field, customOrder, sortDirection, customSortPosition, createNewSortOperation);
};
oFF.QConvenienceCommands.prototype.newCustomSorting = function(dimension, field, sortFromStart, sortFromEnd)
{
	this.getQueryModel().getSortingManager().newCustomSorting(dimension, field, sortFromStart, sortFromEnd);
	return this;
};
oFF.QConvenienceCommands.prototype.getStorageGroupName = function()
{
	return null;
};
oFF.QConvenienceCommands.prototype.getStorageName = function()
{
	return null;
};
oFF.QConvenienceCommands.prototype.getStorageObjectName = function()
{
	return null;
};
oFF.QConvenienceCommands.prototype.getName = function()
{
	return null;
};
oFF.QConvenienceCommands.prototype.getTagging = function()
{
	return null;
};

oFF.AbstractValueAccessComponent = function() {};
oFF.AbstractValueAccessComponent.prototype = new oFF.QModelComponent();
oFF.AbstractValueAccessComponent.prototype._ff_c = "AbstractValueAccessComponent";

oFF.AbstractValueAccessComponent.prototype.getValueType = function()
{
	var value = this.getValue();
	return oFF.isNull(value) ? null : value.getValueType();
};
oFF.AbstractValueAccessComponent.prototype.getErrorValue = function()
{
	return null;
};
oFF.AbstractValueAccessComponent.prototype.getMultiPoint = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.MULTI_POINT);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getDouble = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.DOUBLE);
	return value.getDouble();
};
oFF.AbstractValueAccessComponent.prototype.getDecFloat = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.DECIMAL_FLOAT);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getInteger = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.INTEGER);
	return value.getInteger();
};
oFF.AbstractValueAccessComponent.prototype.getLong = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.LONG);
	return value.getLong();
};
oFF.AbstractValueAccessComponent.prototype.getDate = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.DATE);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getTime = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.TIME);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getTimeSpan = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.TIMESPAN);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getLineString = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.LINE_STRING);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getMultiLineString = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.MULTI_LINE_STRING);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getGeometry = function()
{
	var value = this.getValue();
	var valueType = value.getValueType();
	if (!valueType.isSpatial())
	{
		oFF.noSupport();
	}
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getBoolean = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.BOOLEAN);
	return value.getBoolean();
};
oFF.AbstractValueAccessComponent.prototype.getDateTime = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.DATE_TIME);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getPolygon = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.POLYGON);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getMultiPolygon = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.MULTI_POLYGON);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getPoint = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.POINT);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getString = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.STRING);
	return value.getString();
};
oFF.AbstractValueAccessComponent.prototype.getStructureValue = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.STRUCTURE);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getStructureListValue = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.LIST);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getPropertiesValue = function()
{
	var value = oFF.XValueUtil.convertValueStrict(this.getValue(), oFF.XValueType.PROPERTIES);
	return value;
};
oFF.AbstractValueAccessComponent.prototype.getNull = function()
{
	return null;
};

oFF.QModelComponentNode = function() {};
oFF.QModelComponentNode.prototype = new oFF.QModelComponent();
oFF.QModelComponentNode.prototype._ff_c = "QModelComponentNode";

oFF.QModelComponentNode.createLeave = function(context, name)
{
	var object = new oFF.QModelComponentNode();
	object.setupModelComponentNode(context, null, name, false);
	return object;
};
oFF.QModelComponentNode.prototype.m_modelComponentList = null;
oFF.QModelComponentNode.prototype.m_isComponentNode = false;
oFF.QModelComponentNode.prototype.setupModelComponentNode = function(context, modelComponentList, name, isComponentNode)
{
	this.setupModelComponentWithName(context, this, name);
	this.m_modelComponentList = modelComponentList;
	this.m_isComponentNode = isComponentNode;
};
oFF.QModelComponentNode.prototype.releaseObject = function()
{
	this.m_modelComponentList = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QModelComponentNode.prototype.isComponentNode = function()
{
	return this.m_isComponentNode;
};
oFF.QModelComponentNode.prototype.getIndexedChildren = function()
{
	return this.m_modelComponentList.getIterator();
};

oFF.QCondition = function() {};
oFF.QCondition.prototype = new oFF.QModelComponent();
oFF.QCondition.prototype._ff_c = "QCondition";

oFF.QCondition.create = function(context, conditionManager, technicalName, isBackendCondition)
{
	if (oFF.isNull(technicalName) || oFF.XString.isEqual(technicalName, ""))
	{
		return null;
	}
	var newObj = new oFF.QCondition();
	newObj.setupCondition(context, conditionManager, technicalName, isBackendCondition);
	return newObj;
};
oFF.QCondition.prototype.m_isActive = false;
oFF.QCondition.prototype.m_isBackendCondition = false;
oFF.QCondition.prototype.m_breakGroup = false;
oFF.QCondition.prototype.m_description = null;
oFF.QCondition.prototype.m_onDisabledToWarning = false;
oFF.QCondition.prototype.m_usedState = null;
oFF.QCondition.prototype.m_dimensionEvaluationType = null;
oFF.QCondition.prototype.m_evaluationDimensions = null;
oFF.QCondition.prototype.m_conditionThresholds = null;
oFF.QCondition.prototype.m_breakGroupDimensions = null;
oFF.QCondition.prototype.m_afterVisibilityFilter = false;
oFF.QCondition.prototype.m_breakHierarchy = false;
oFF.QCondition.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originCondition = other;
	this.m_isActive = originCondition.m_isActive;
	this.m_description = originCondition.m_description;
	this.m_usedState = originCondition.m_usedState;
	this.m_onDisabledToWarning = originCondition.m_onDisabledToWarning;
	this.m_dimensionEvaluationType = originCondition.m_dimensionEvaluationType;
	this.m_isBackendCondition = originCondition.m_isBackendCondition;
	var i;
	var queryModel = this.getQueryModel();
	var size = originCondition.m_evaluationDimensions.size();
	for (i = 0; i < size; i++)
	{
		var origEvalDimension = originCondition.m_evaluationDimensions.get(i);
		this.m_evaluationDimensions.addInternal(queryModel.getDimensionByNameFromExistingMetadata(origEvalDimension.getName()));
	}
	this.m_evaluationDimensions.copyFrom(originCondition.m_evaluationDimensions, flags);
	size = originCondition.m_conditionThresholds.size();
	for (i = 0; i < size; i++)
	{
		var originThreshold = originCondition.m_conditionThresholds.get(i);
		var cloneThreshold = oFF.QConditionThreshold.create(this, this);
		this.m_conditionThresholds.add(cloneThreshold);
		cloneThreshold.copyFrom(originThreshold, flags);
	}
	this.m_conditionThresholds.copyFrom(originCondition.m_conditionThresholds, flags);
	this.m_breakGroup = originCondition.m_breakGroup;
	size = originCondition.m_breakGroupDimensions.size();
	for (i = 0; i < size; i++)
	{
		var origBreakGroupDimension = originCondition.m_breakGroupDimensions.get(i);
		this.m_breakGroupDimensions.addInternal(queryModel.getDimensionByNameFromExistingMetadata(origBreakGroupDimension.getName()));
	}
	this.m_afterVisibilityFilter = originCondition.m_afterVisibilityFilter;
	this.m_breakHierarchy = originCondition.m_breakHierarchy;
};
oFF.QCondition.prototype.setupCondition = function(context, conditionManager, technicalName, isBackendCondition)
{
	this.setupModelComponentWithName(context, conditionManager, technicalName);
	this.m_onDisabledToWarning = true;
	this.m_isActive = true;
	this.m_isBackendCondition = isBackendCondition;
	this.m_conditionThresholds = oFF.QModelComponentList.createModelComponentList(context, this, true, "ThresholdList");
	this.m_evaluationDimensions = oFF.QModelComponentList.createModelComponentList(context, this, false, "EvaluationDimensionList");
	this.m_breakGroupDimensions = oFF.QModelComponentList.createModelComponentList(context, this, false, "BreakGroupDimensionList");
	this.m_breakHierarchy = false;
};
oFF.QCondition.prototype.setParent = function(parent)
{
	if (oFF.notNull(parent))
	{
		var context = parent.getContext();
		this.m_evaluationDimensions.setContext(context);
		this.m_conditionThresholds.setContext(context);
		this.m_breakGroupDimensions.setContext(context);
	}
	oFF.QModelComponent.prototype.setParent.call( this , parent);
};
oFF.QCondition.prototype.isActive = function()
{
	return this.m_isActive;
};
oFF.QCondition.prototype.setActive = function(active)
{
	if (this.m_isActive !== active)
	{
		this.m_isActive = active;
		this.notifyPropertyBooleanChanged(oFF.QConditionProperties.QY_CONDITIONS_ACTIVE, !active, active);
	}
};
oFF.QCondition.prototype.getUsedState = function()
{
	return this.m_usedState;
};
oFF.QCondition.prototype.setUsedState = function(usedState)
{
	this.m_usedState = usedState;
};
oFF.QCondition.prototype.getDescription = function()
{
	return this.m_description;
};
oFF.QCondition.prototype.setDescription = function(description)
{
	if (!oFF.XString.isEqual(this.m_description, description))
	{
		this.m_description = description;
		this.notifyNodeChanged();
	}
};
oFF.QCondition.prototype.getDimensionEvaluationType = function()
{
	return this.m_dimensionEvaluationType;
};
oFF.QCondition.prototype.setDimensionEvaluationType = function(dimensionEvalutationType)
{
	if (this.m_dimensionEvaluationType !== dimensionEvalutationType)
	{
		var oldValue = this.m_dimensionEvaluationType;
		this.m_dimensionEvaluationType = dimensionEvalutationType;
		this.notifyPropertyConstantChanged(oFF.QConditionProperties.QY_CONDITIONS_EVALUATE_ON_DIMENSIONS, oldValue, dimensionEvalutationType);
	}
};
oFF.QCondition.prototype.getEvaluationDimensions = function()
{
	return this.m_evaluationDimensions;
};
oFF.QCondition.prototype.addEvaluationDimension = function(dimension)
{
	this.m_evaluationDimensions.add(dimension);
};
oFF.QCondition.prototype.removeEvaluationDimension = function(dimension)
{
	this.m_evaluationDimensions.removeElement(dimension);
};
oFF.QCondition.prototype.clearEvaluationDimensions = function()
{
	this.m_evaluationDimensions.clear();
};
oFF.QCondition.prototype.getThresholds = function()
{
	return this.m_conditionThresholds;
};
oFF.QCondition.prototype.addThreshold = function(threshold)
{
	if (oFF.notNull(threshold))
	{
		threshold.setParent(this.m_conditionThresholds);
		this.m_conditionThresholds.add(threshold);
		if (threshold.isValid())
		{
			this.notifyNodeChanged();
		}
	}
};
oFF.QCondition.prototype.removeThreshold = function(threshold)
{
	if (oFF.notNull(threshold))
	{
		threshold.setParent(null);
		this.m_conditionThresholds.removeElement(threshold);
		if (threshold.isValid())
		{
			this.notifyNodeChanged();
		}
	}
};
oFF.QCondition.prototype.clearThresholds = function()
{
	this.m_conditionThresholds.clear();
	this.notifyNodeChanged();
};
oFF.QCondition.prototype.getConditionManager = function()
{
	return this.getParentComponent();
};
oFF.QCondition.prototype.createThreshold = function()
{
	var newThreshold = oFF.QConditionThreshold.create(this.getContext(), this);
	this.addThreshold(newThreshold);
	return newThreshold;
};
oFF.QCondition.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.CONDITION;
};
oFF.QCondition.prototype.isValid = function()
{
	if (oFF.isNull(this.m_dimensionEvaluationType))
	{
		return false;
	}
	return this.m_dimensionEvaluationType !== oFF.ConditionDimensionEvaluationType.GIVEN_LIST || !this.getEvaluationDimensions().isEmpty();
};
oFF.QCondition.prototype.releaseObject = function()
{
	this.m_description = null;
	this.m_dimensionEvaluationType = null;
	this.m_usedState = null;
	this.m_evaluationDimensions = oFF.XObjectExt.release(this.m_evaluationDimensions);
	this.m_breakGroupDimensions = oFF.XObjectExt.release(this.m_breakGroupDimensions);
	this.m_conditionThresholds = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_conditionThresholds);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QCondition.prototype.setConditionName = function(conditionName)
{
	if (oFF.XStringUtils.isNullOrEmpty(conditionName) || this.getConditionManager().getConditionByName(conditionName) !== null)
	{
		oFF.noSupport();
	}
	this.setName(conditionName);
};
oFF.QCondition.prototype.isChangeable = function()
{
	return this.isUserCondition();
};
oFF.QCondition.prototype.isBackendCondition = function()
{
	return this.m_isBackendCondition;
};
oFF.QCondition.prototype.isUserCondition = function()
{
	return !this.isBackendCondition();
};
oFF.QCondition.prototype.addBreakGroupDimension = function(dimension)
{
	this.m_breakGroupDimensions.add(dimension);
};
oFF.QCondition.prototype.removeBreakGroupDimension = function(dimension)
{
	this.m_breakGroupDimensions.removeElement(dimension);
};
oFF.QCondition.prototype.getBreakGroupDimensions = function()
{
	return this.m_breakGroupDimensions;
};
oFF.QCondition.prototype.setBreakGroup = function(breakGroup)
{
	if (this.m_breakGroup !== breakGroup)
	{
		this.m_breakGroup = breakGroup;
		this.notifyPropertyBooleanChanged(oFF.QConditionProperties.QY_BREAK_GROUP, !breakGroup, breakGroup);
	}
};
oFF.QCondition.prototype.isBreakGroup = function()
{
	return this.m_breakGroup;
};
oFF.QCondition.prototype.getOnDisabledToWarning = function()
{
	return this.m_onDisabledToWarning;
};
oFF.QCondition.prototype.setOnDisabledToWarning = function(disabledToWarning)
{
	if (this.m_onDisabledToWarning !== disabledToWarning)
	{
		this.m_onDisabledToWarning = disabledToWarning;
		this.notifyPropertyBooleanChanged(oFF.QConditionProperties.QY_CONDITIONS_ON_DISABLED_WARNING, !disabledToWarning, disabledToWarning);
	}
};
oFF.QCondition.prototype.setApplyConditionAfterVisibilityFilter = function(afterVisibilityFilter)
{
	if (this.m_afterVisibilityFilter !== afterVisibilityFilter)
	{
		this.m_afterVisibilityFilter = afterVisibilityFilter;
		this.notifyPropertyBooleanChanged(oFF.QConditionProperties.QY_CONDITIONS_AFTER_VISIBILITY_FILTER, !afterVisibilityFilter, afterVisibilityFilter);
	}
};
oFF.QCondition.prototype.isApplyingConditionAfterVisibilityFilter = function()
{
	return this.m_afterVisibilityFilter;
};
oFF.QCondition.prototype.setBreakHierarchy = function(breakHierarchy)
{
	if (this.m_breakHierarchy !== breakHierarchy)
	{
		this.m_breakHierarchy = breakHierarchy;
		this.notifyPropertyBooleanChanged(oFF.QConditionProperties.QY_CONDITIONS_BREAK_HIERARCHY, !breakHierarchy, breakHierarchy);
	}
};
oFF.QCondition.prototype.isBreakHierarchy = function()
{
	return this.m_breakHierarchy;
};

oFF.QConditionThreshold = function() {};
oFF.QConditionThreshold.prototype = new oFF.QModelComponent();
oFF.QConditionThreshold.prototype._ff_c = "QConditionThreshold";

oFF.QConditionThreshold.create = function(context, parentCondition)
{
	var newObj = new oFF.QConditionThreshold();
	newObj.setupThreshold(context, parentCondition);
	return newObj;
};
oFF.QConditionThreshold.prototype.m_firstValue = null;
oFF.QConditionThreshold.prototype.m_firstValueIs = null;
oFF.QConditionThreshold.prototype.m_secondValue = null;
oFF.QConditionThreshold.prototype.m_secondValueIs = null;
oFF.QConditionThreshold.prototype.m_measureCoordinates = null;
oFF.QConditionThreshold.prototype.m_conditionComparisonOperator = null;
oFF.QConditionThreshold.prototype.m_hierarchyLevel = null;
oFF.QConditionThreshold.prototype.m_leavesOnly = false;
oFF.QConditionThreshold.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originConditionThreshold = other;
	if (oFF.notNull(originConditionThreshold.m_firstValue))
	{
		this.getLow().copyFrom(originConditionThreshold.getLow(), flags);
	}
	if (oFF.notNull(originConditionThreshold.m_firstValueIs))
	{
		this.getLowIs().copyFrom(originConditionThreshold.getLowIs(), flags);
	}
	if (oFF.notNull(originConditionThreshold.m_secondValue))
	{
		this.getHigh().copyFrom(originConditionThreshold.getHigh(), flags);
	}
	if (oFF.notNull(originConditionThreshold.m_secondValueIs))
	{
		this.getHighIs().copyFrom(originConditionThreshold.getHighIs(), flags);
	}
	var queryModel = this.getQueryModel();
	var size = originConditionThreshold.m_measureCoordinates.size();
	for (var i = 0; i < size; i++)
	{
		var origMember = originConditionThreshold.m_measureCoordinates.get(i);
		var cloneMember = queryModel.getDimensionByNameFromExistingMetadata(origMember.getDimension().getName()).getDimensionMember(origMember.getName());
		if (oFF.notNull(cloneMember))
		{
			cloneMember.copyFrom(origMember, flags);
			this.m_measureCoordinates.addInternal(cloneMember);
		}
	}
	if (oFF.notNull(originConditionThreshold.m_hierarchyLevel))
	{
		this.m_hierarchyLevel = oFF.XIntegerValue.create(originConditionThreshold.m_hierarchyLevel.getInteger());
	}
	this.m_leavesOnly = originConditionThreshold.m_leavesOnly;
	this.m_conditionComparisonOperator = originConditionThreshold.m_conditionComparisonOperator;
};
oFF.QConditionThreshold.prototype.setupThreshold = function(context, parentCondition)
{
	this.setupModelComponentWithName(context, parentCondition.getThresholds(), "Threshold");
	this.m_conditionComparisonOperator = oFF.ConditionComparisonOperator.EQUAL;
	this.m_measureCoordinates = oFF.QModelComponentList.createModelComponentList(context, this, false, "MeasureCoordinates");
};
oFF.QConditionThreshold.prototype.setParent = function(parent)
{
	if (oFF.notNull(parent))
	{
		this.m_measureCoordinates.setContext(parent.getContext());
	}
	oFF.QModelComponent.prototype.setParent.call( this , parent);
};
oFF.QConditionThreshold.prototype.getMeasureCoordinates = function()
{
	return this.m_measureCoordinates;
};
oFF.QConditionThreshold.prototype.addMeasureCoordinate = function(dimensionMember)
{
	if (oFF.notNull(dimensionMember))
	{
		this.m_measureCoordinates.add(dimensionMember);
		this.notifyNodeChanged();
	}
};
oFF.QConditionThreshold.prototype.removeMeasureCoordinate = function(dimensionMember)
{
	if (oFF.notNull(dimensionMember))
	{
		this.m_measureCoordinates.removeElement(dimensionMember);
		this.notifyNodeChanged();
	}
};
oFF.QConditionThreshold.prototype.getLow = function()
{
	if (oFF.isNull(this.m_firstValue))
	{
		this.m_firstValue = oFF.QFactory.createFilterValueBag(this.getContext(), null, this);
	}
	return this.m_firstValue;
};
oFF.QConditionThreshold.prototype.getLowIs = function()
{
	if (oFF.isNull(this.m_firstValueIs))
	{
		this.m_firstValueIs = oFF.QFactory.createFilterValueBag(this.getContext(), null, this);
	}
	return this.m_firstValueIs;
};
oFF.QConditionThreshold.prototype.getHigh = function()
{
	if (oFF.isNull(this.m_secondValue))
	{
		this.m_secondValue = oFF.QFactory.createFilterValueBag(this.getContext(), null, this);
	}
	return this.m_secondValue;
};
oFF.QConditionThreshold.prototype.getHighIs = function()
{
	if (oFF.isNull(this.m_secondValueIs))
	{
		this.m_secondValueIs = oFF.QFactory.createFilterValueBag(this.getContext(), null, this);
	}
	return this.m_secondValueIs;
};
oFF.QConditionThreshold.prototype.getComparisonOperator = function()
{
	if (oFF.isNull(this.m_conditionComparisonOperator))
	{
		this.m_conditionComparisonOperator = oFF.ConditionComparisonOperator.EQUAL;
	}
	return this.m_conditionComparisonOperator;
};
oFF.QConditionThreshold.prototype.setComparisonOperator = function(conditionComparisonOperator)
{
	if (this.m_conditionComparisonOperator !== conditionComparisonOperator)
	{
		var oldValue = this.m_conditionComparisonOperator;
		this.m_conditionComparisonOperator = conditionComparisonOperator;
		this.notifyPropertyConstantChanged(oFF.QConditionProperties.QY_CONDITIONS_COMPARISON, oldValue, conditionComparisonOperator);
	}
};
oFF.QConditionThreshold.prototype.isValid = function()
{
	return this.getLow().getValue() !== null && this.getMeasureCoordinates().size() >= 1;
};
oFF.QConditionThreshold.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.CONDITIONS_THRESHOLD;
};
oFF.QConditionThreshold.prototype.releaseObject = function()
{
	this.m_firstValue = oFF.XObjectExt.release(this.m_firstValue);
	this.m_firstValueIs = oFF.XObjectExt.release(this.m_firstValueIs);
	this.m_secondValue = oFF.XObjectExt.release(this.m_secondValue);
	this.m_secondValueIs = oFF.XObjectExt.release(this.m_secondValueIs);
	this.m_measureCoordinates = oFF.XObjectExt.release(this.m_measureCoordinates);
	this.m_hierarchyLevel = oFF.XObjectExt.release(this.m_hierarchyLevel);
	this.m_conditionComparisonOperator = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QConditionThreshold.prototype.setLeavesOnly = function(leavesOnly)
{
	if (this.m_leavesOnly !== leavesOnly)
	{
		this.m_leavesOnly = leavesOnly;
		this.notifyPropertyBooleanChanged(oFF.QConditionProperties.QY_LEAVES_ONLY, !leavesOnly, leavesOnly);
	}
};
oFF.QConditionThreshold.prototype.isLeavesOnly = function()
{
	return this.m_leavesOnly;
};
oFF.QConditionThreshold.prototype.setLevel = function(level)
{
	if (oFF.isNull(level))
	{
		if (oFF.notNull(this.m_hierarchyLevel))
		{
			oFF.XObjectExt.release(this.m_hierarchyLevel);
			this.m_hierarchyLevel = null;
			this.notifyNodeChanged();
		}
	}
	else
	{
		var newLevelValue = level.getInteger();
		if (oFF.isNull(this.m_hierarchyLevel))
		{
			this.m_hierarchyLevel = oFF.XIntegerValue.create(newLevelValue);
			this.notifyNodeChanged();
		}
		else if (this.m_hierarchyLevel.getInteger() !== newLevelValue)
		{
			this.m_hierarchyLevel.setInteger(newLevelValue);
			this.notifyNodeChanged();
		}
	}
};
oFF.QConditionThreshold.prototype.getLevel = function()
{
	return this.m_hierarchyLevel;
};
oFF.QConditionThreshold.prototype.getParent = function()
{
	var thresholdList = oFF.QModelComponent.prototype.getParent.call( this );
	return oFF.notNull(thresholdList) ? thresholdList.getParent() : null;
};

oFF.QCurrencyLookupValue = function() {};
oFF.QCurrencyLookupValue.prototype = new oFF.QModelComponent();
oFF.QCurrencyLookupValue.prototype._ff_c = "QCurrencyLookupValue";

oFF.QCurrencyLookupValue.isEmpty = function(lookupValue)
{
	return oFF.isNull(lookupValue) || lookupValue.getFixedValue() === null && lookupValue.getFormulaItem() === null && oFF.XStringUtils.isNullOrEmpty(lookupValue.getFieldName()) && oFF.XStringUtils.isNullOrEmpty(lookupValue.getVariableName());
};
oFF.QCurrencyLookupValue.createFixedByValue = function(parent, value)
{
	var newInstance = new oFF.QCurrencyLookupValue();
	if (oFF.notNull(parent))
	{
		newInstance.setupModelComponent(parent.getContext(), parent);
	}
	newInstance.setFixedValue(value);
	return newInstance;
};
oFF.QCurrencyLookupValue.createByFieldName = function(parent, fieldName)
{
	var newInstance = new oFF.QCurrencyLookupValue();
	if (oFF.notNull(parent))
	{
		newInstance.setupModelComponent(parent.getContext(), parent);
	}
	newInstance.setFieldName(fieldName);
	return newInstance;
};
oFF.QCurrencyLookupValue.createByVariableName = function(parent, variableName)
{
	var newInstance = new oFF.QCurrencyLookupValue();
	if (oFF.notNull(parent))
	{
		newInstance.setupModelComponent(parent.getContext(), parent);
	}
	newInstance.setVariableName(variableName);
	return newInstance;
};
oFF.QCurrencyLookupValue.createByFormulaItem = function(parent, formulaItem)
{
	var newInstance = new oFF.QCurrencyLookupValue();
	newInstance.setFormulaItem(formulaItem);
	if (oFF.notNull(parent))
	{
		newInstance.setupModelComponent(parent.getContext(), parent);
	}
	return newInstance;
};
oFF.QCurrencyLookupValue.create = function(parent)
{
	var newInstance = new oFF.QCurrencyLookupValue();
	if (oFF.notNull(parent))
	{
		newInstance.setupModelComponent(parent.getContext(), parent);
	}
	return newInstance;
};
oFF.QCurrencyLookupValue.prototype.m_fixedValue = null;
oFF.QCurrencyLookupValue.prototype.m_formulaItem = null;
oFF.QCurrencyLookupValue.prototype.m_fieldName = null;
oFF.QCurrencyLookupValue.prototype.m_variableName = null;
oFF.QCurrencyLookupValue.prototype.releaseObject = function()
{
	this.m_fieldName = null;
	this.m_variableName = null;
	this.m_fixedValue = oFF.XObjectExt.release(this.m_fixedValue);
	this.m_formulaItem = oFF.XObjectExt.release(this.m_formulaItem);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QCurrencyLookupValue.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originValue = other;
	this.m_fixedValue = oFF.XObjectExt.cloneExtIfNotNull(originValue.m_fixedValue, flags);
	this.m_fieldName = originValue.m_fieldName;
	this.m_variableName = originValue.m_variableName;
	if (oFF.notNull(originValue.m_formulaItem))
	{
		this.m_formulaItem = originValue.m_formulaItem.cloneOlapComponent(this.getContext(), this);
	}
};
oFF.QCurrencyLookupValue.prototype.reset = function()
{
	this.m_fieldName = null;
	this.m_fixedValue = null;
	this.m_formulaItem = null;
	this.m_variableName = null;
};
oFF.QCurrencyLookupValue.prototype.isFixed = function()
{
	return oFF.notNull(this.m_fixedValue);
};
oFF.QCurrencyLookupValue.prototype.isFieldBased = function()
{
	return oFF.XStringUtils.isNotNullAndNotEmpty(this.m_fieldName);
};
oFF.QCurrencyLookupValue.prototype.isFormulaBased = function()
{
	return oFF.notNull(this.m_formulaItem);
};
oFF.QCurrencyLookupValue.prototype.isVariableBased = function()
{
	return oFF.XStringUtils.isNotNullAndNotEmpty(this.m_variableName);
};
oFF.QCurrencyLookupValue.prototype.setFixedValue = function(value)
{
	this.reset();
	this.m_fixedValue = value;
	this.notifyNodeChanged();
};
oFF.QCurrencyLookupValue.prototype.getFixedValue = function()
{
	return this.m_fixedValue;
};
oFF.QCurrencyLookupValue.prototype.getFixedValueAsString = function()
{
	return oFF.isNull(this.m_fixedValue) ? null : this.m_fixedValue.getStringRepresentation();
};
oFF.QCurrencyLookupValue.prototype.getFixedValueAsDate = function()
{
	return oFF.isNull(this.m_fixedValue) || this.m_fixedValue.getValueType() !== oFF.XValueType.DATE ? null : this.m_fixedValue;
};
oFF.QCurrencyLookupValue.prototype.setFieldName = function(fieldName)
{
	this.reset();
	this.m_fieldName = fieldName;
	this.notifyNodeChanged();
};
oFF.QCurrencyLookupValue.prototype.getFieldName = function()
{
	return this.m_fieldName;
};
oFF.QCurrencyLookupValue.prototype.setField = function(field)
{
	this.setFieldName(oFF.isNull(field) ? null : field.getName());
};
oFF.QCurrencyLookupValue.prototype.getField = function()
{
	return this.getQueryModel().getFieldByName(this.m_fieldName);
};
oFF.QCurrencyLookupValue.prototype.setFormulaItem = function(formulaItem)
{
	this.reset();
	this.m_formulaItem = formulaItem;
	this.notifyNodeChanged();
};
oFF.QCurrencyLookupValue.prototype.getFormulaItem = function()
{
	return this.m_formulaItem;
};
oFF.QCurrencyLookupValue.prototype.setVariableName = function(variableName)
{
	this.reset();
	this.m_variableName = variableName;
	this.notifyNodeChanged();
};
oFF.QCurrencyLookupValue.prototype.setVariable = function(variable)
{
	this.setVariableName(oFF.isNull(variable) ? null : variable.getName());
};
oFF.QCurrencyLookupValue.prototype.getVariable = function()
{
	return this.getQueryModel().getVariable(this.m_variableName);
};
oFF.QCurrencyLookupValue.prototype.getVariableName = function()
{
	return this.m_variableName;
};

oFF.QCurrencyTranslationManager = function() {};
oFF.QCurrencyTranslationManager.prototype = new oFF.QModelComponent();
oFF.QCurrencyTranslationManager.prototype._ff_c = "QCurrencyTranslationManager";

oFF.QCurrencyTranslationManager.createForModelling = function(cttdFieldName, rateTypeFieldName, rateVersionFieldName, categoryFieldName)
{
	var object = new oFF.QCurrencyTranslationManager();
	object.setupCatalogLists();
	object.setCurrencyTranslationTimeDimensionFieldName(cttdFieldName);
	object.setRateTypeFieldName(rateTypeFieldName);
	object.setRateVersionFieldName(rateVersionFieldName);
	object.setCategoryFieldName(categoryFieldName);
	object.setSupportsExtendedRateNameParameters(true);
	return object;
};
oFF.QCurrencyTranslationManager.create = function(queryModel)
{
	var supportsQueryCurrencyTranslation = queryModel.getModelCapabilities().supportsQueryCurrencyTranslation();
	var supportsMeasureCurrencyTranslation = queryModel.getModelCapabilities().supportsCurrencyTranslation();
	var object = new oFF.QCurrencyTranslationManager();
	object.setupCatalogLists();
	object.setupCurrencyTranslationManager(queryModel);
	if (supportsMeasureCurrencyTranslation)
	{
		object.initializeCurrencyTranslationList();
	}
	if (supportsQueryCurrencyTranslation)
	{
		object.initializeCurrencyTranslationDetailsBW();
	}
	else
	{
		object.initializeMeasure2QueryCurrencyTranslationProxy();
	}
	return object;
};
oFF.QCurrencyTranslationManager.prototype.m_currencyTranslationDetails = null;
oFF.QCurrencyTranslationManager.prototype.m_resetCurrencyTranslationDetails = false;
oFF.QCurrencyTranslationManager.prototype.m_currencyTranslationTypeEnabled = null;
oFF.QCurrencyTranslationManager.prototype.m_legacyMeasureCurrencyTranslationAccountModel = false;
oFF.QCurrencyTranslationManager.prototype.m_supportsExtendedRateNameParameters = false;
oFF.QCurrencyTranslationManager.prototype.m_maximumNumberOfTranslations = 0;
oFF.QCurrencyTranslationManager.prototype.m_rateTypeFieldName = null;
oFF.QCurrencyTranslationManager.prototype.m_rateVersionFieldName = null;
oFF.QCurrencyTranslationManager.prototype.m_categoryFieldName = null;
oFF.QCurrencyTranslationManager.prototype.m_currencyDimensionKeyFieldName = null;
oFF.QCurrencyTranslationManager.prototype.m_currencyTranslationTimeDimensionKeyFieldName = null;
oFF.QCurrencyTranslationManager.prototype.m_query2measureCurrencyTranslationBridge = null;
oFF.QCurrencyTranslationManager.prototype.m_availableCurrencyTranslationsMap = null;
oFF.QCurrencyTranslationManager.prototype.m_availableCurrencyTranslations = null;
oFF.QCurrencyTranslationManager.prototype.m_availableCurrencies = null;
oFF.QCurrencyTranslationManager.prototype.m_availableCategories = null;
oFF.QCurrencyTranslationManager.prototype.m_availableRateVersions = null;
oFF.QCurrencyTranslationManager.prototype.m_availableRateTypes = null;
oFF.QCurrencyTranslationManager.prototype.m_defaultCurrency = null;
oFF.QCurrencyTranslationManager.prototype.m_measureCurrencyTranslations = null;
oFF.QCurrencyTranslationManager.prototype.m_activeSyncType = null;
oFF.QCurrencyTranslationManager.prototype.m_availableCOsComplete = false;
oFF.QCurrencyTranslationManager.prototype.m_availableCTOsComplete = false;
oFF.QCurrencyTranslationManager.prototype.m_bwCatalogLoadedListener = null;
oFF.QCurrencyTranslationManager.prototype.m_rateTypeFromAccountDimension = false;
oFF.QCurrencyTranslationManager.prototype.m_rateTableId = null;
oFF.QCurrencyTranslationManager.prototype.setupCatalogLists = function()
{
	this.m_measureCurrencyTranslations = oFF.XHashMapByString.create();
	this.m_availableCurrencyTranslationsMap = oFF.XHashMapByString.create();
	this.m_availableCurrencyTranslations = oFF.XList.create();
	this.m_availableCurrencies = oFF.XList.create();
};
oFF.QCurrencyTranslationManager.prototype.initializeCurrencyTranslationList = function()
{
	this.m_measureCurrencyTranslations = oFF.XHashMapByString.create();
};
oFF.QCurrencyTranslationManager.prototype.initializeCurrencyTranslationDetailsBW = function()
{
	this.m_currencyTranslationDetails = oFF.QCurrencyTranslationDetails.create(this);
};
oFF.QCurrencyTranslationManager.prototype.initializeMeasure2QueryCurrencyTranslationProxy = function()
{
	this.m_query2measureCurrencyTranslationBridge = oFF.QMeasure2QueryCurrencyTranslation.createFromMeasureCurrencyTranslation(this.getContext(), this);
};
oFF.QCurrencyTranslationManager.prototype.releaseObject = function()
{
	this.m_currencyTranslationDetails = oFF.XObjectExt.release(this.m_currencyTranslationDetails);
	this.m_measureCurrencyTranslations = oFF.XObjectExt.release(this.m_measureCurrencyTranslations);
	this.m_query2measureCurrencyTranslationBridge = oFF.XObjectExt.release(this.m_query2measureCurrencyTranslationBridge);
	this.m_availableCurrencyTranslations = oFF.XObjectExt.release(this.m_availableCurrencyTranslations);
	this.m_availableCurrencies = oFF.XObjectExt.release(this.m_availableCurrencies);
	this.m_availableCategories = oFF.XObjectExt.release(this.m_availableCategories);
	this.m_availableRateTypes = oFF.XObjectExt.release(this.m_availableRateTypes);
	this.m_availableRateVersions = oFF.XObjectExt.release(this.m_availableRateVersions);
	this.m_defaultCurrency = null;
	this.m_currencyTranslationTypeEnabled = null;
	this.m_legacyMeasureCurrencyTranslationAccountModel = false;
	this.m_currencyTranslationTimeDimensionKeyFieldName = null;
	this.m_currencyDimensionKeyFieldName = null;
	this.m_rateTypeFieldName = null;
	this.m_rateVersionFieldName = null;
	this.m_categoryFieldName = null;
	this.m_supportsExtendedRateNameParameters = false;
	this.m_maximumNumberOfTranslations = -1;
	this.m_rateTypeFromAccountDimension = false;
	this.m_rateTableId = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QCurrencyTranslationManager.prototype.setupCurrencyTranslationManager = function(queryModel)
{
	this.setupModelComponent(queryModel, queryModel);
};
oFF.QCurrencyTranslationManager.prototype.getMeasureCurrencyTranslations = function()
{
	return oFF.isNull(this.m_measureCurrencyTranslations) ? null : this.m_measureCurrencyTranslations.getValuesAsReadOnlyList();
};
oFF.QCurrencyTranslationManager.prototype.getMeasureCurrencyTranslationsForInaData = function()
{
	var resultList = oFF.XList.create();
	if (!this.isLegacyMeasureCurrencyTranslationAccountModel())
	{
		var defaultCurrencyTranslation = this.getDefaultMeasureCurrencyTranslation();
		var structureMembers = this.getQueryModel().getMeasureDimension().getAllStructureMembers();
		var size = structureMembers.size();
		var uniqSet = oFF.XHashSetOfString.create();
		for (var i = 0; i < size; i++)
		{
			var cuStMe = structureMembers.get(i);
			var currencyTranslation = this.getMeasureCurrencyTranslation(cuStMe.getCurrencyTranslationName());
			if (oFF.isNull(currencyTranslation) && (cuStMe.getUnitType() === oFF.UnitType.CURRENCY || !this.getModelCapabilities().supportsCustomMeasuresInMetadata()))
			{
				currencyTranslation = defaultCurrencyTranslation;
			}
			if (oFF.notNull(currencyTranslation) && !currencyTranslation.isMetadataDefined())
			{
				if (!currencyTranslation.isParametersComplete())
				{
					var missing = oFF.XStringBuffer.create();
					if (currencyTranslation.isMissingTargetCurrency())
					{
						missing.append(", Target Currency");
					}
					if (currencyTranslation.isMissingReferenceDate())
					{
						missing.append(", Reference Date");
					}
					if (currencyTranslation.isMissingRateName())
					{
						missing.append(", Rate Name");
					}
					var missingHint = "";
					var missingLength = missing.length();
					if (missingLength > 2)
					{
						missingHint = oFF.XString.substring(missing.toString(), 1, missingLength);
					}
					throw oFF.XException.createIllegalStateException(oFF.XStringUtils.concatenate5("Currency Translation with name: ", currencyTranslation.getName(), " not fully specified. Please check the parameters", missingHint, "."));
				}
				this.handleInaDataCurrencyTranslationMeasure(resultList, uniqSet, currencyTranslation, cuStMe);
			}
		}
	}
	return resultList;
};
oFF.QCurrencyTranslationManager.prototype.handleInaDataCurrencyTranslationMeasure = function(resultList, uniqSet, currencyTranslation, structureMember)
{
	if (oFF.notNull(currencyTranslation) && !currencyTranslation.isIgnore())
	{
		var mappedName = currencyTranslation.getMappedName(structureMember.getRuntimeRateType());
		if (!uniqSet.contains(mappedName))
		{
			uniqSet.add(mappedName);
			if (oFF.XString.isEqual(mappedName, currencyTranslation.getName()))
			{
				resultList.add(currencyTranslation);
			}
			else
			{
				var mappedInstance = oFF.QMeasureCurrencyTranslation.createWithName(this.getContext(), null, mappedName, mappedName);
				mappedInstance.copyFrom(currencyTranslation, null);
				mappedInstance.setName(mappedName);
				mappedInstance.setFixedRateType(structureMember.getRuntimeRateType());
				resultList.add(mappedInstance);
			}
		}
	}
};
oFF.QCurrencyTranslationManager.prototype.addNewMeasureCurrencyTranslationBase = function(name, description)
{
	var currencyTranslation = oFF.QMeasureCurrencyTranslation.createWithName(this.getContext(), this, name, description);
	this.m_measureCurrencyTranslations.put(name, currencyTranslation);
	this.m_availableCurrencyTranslationsMap.put(name, currencyTranslation);
	this.m_availableCurrencyTranslations.add(currencyTranslation);
	return currencyTranslation;
};
oFF.QCurrencyTranslationManager.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var i;
	var originCurrencyTranslationManager = other;
	this.m_legacyMeasureCurrencyTranslationAccountModel = originCurrencyTranslationManager.m_legacyMeasureCurrencyTranslationAccountModel;
	this.m_supportsExtendedRateNameParameters = originCurrencyTranslationManager.m_supportsExtendedRateNameParameters;
	this.m_rateTypeFromAccountDimension = originCurrencyTranslationManager.m_rateTypeFromAccountDimension;
	this.m_currencyTranslationTypeEnabled = originCurrencyTranslationManager.m_currencyTranslationTypeEnabled;
	if (oFF.notNull(originCurrencyTranslationManager.m_currencyTranslationDetails))
	{
		if (oFF.isNull(this.m_currencyTranslationDetails))
		{
			this.initializeCurrencyTranslationDetailsBW();
		}
		this.m_currencyTranslationDetails.copyFrom(originCurrencyTranslationManager.m_currencyTranslationDetails, flags);
	}
	if (oFF.notNull(originCurrencyTranslationManager.m_measureCurrencyTranslations))
	{
		if (oFF.isNull(this.m_measureCurrencyTranslations))
		{
			this.initializeCurrencyTranslationList();
		}
		this.m_measureCurrencyTranslations.clear();
		var keys = originCurrencyTranslationManager.m_measureCurrencyTranslations.getKeysAsReadOnlyListOfString();
		for (i = 0; i < keys.size(); i++)
		{
			var key = keys.get(i);
			var originTranslation = originCurrencyTranslationManager.m_measureCurrencyTranslations.getByKey(key);
			this.addNewMeasureCurrencyTranslationBase(key, originTranslation.getText()).copyFrom(originTranslation, flags);
		}
	}
	if (oFF.notNull(originCurrencyTranslationManager.m_query2measureCurrencyTranslationBridge))
	{
		if (oFF.isNull(this.m_query2measureCurrencyTranslationBridge))
		{
			this.initializeMeasure2QueryCurrencyTranslationProxy();
		}
		this.m_query2measureCurrencyTranslationBridge.copyFrom(originCurrencyTranslationManager.m_query2measureCurrencyTranslationBridge, flags);
	}
	this.m_maximumNumberOfTranslations = originCurrencyTranslationManager.m_maximumNumberOfTranslations;
	this.m_currencyTranslationTimeDimensionKeyFieldName = originCurrencyTranslationManager.m_currencyTranslationTimeDimensionKeyFieldName;
	this.m_currencyDimensionKeyFieldName = originCurrencyTranslationManager.m_currencyDimensionKeyFieldName;
	this.m_rateTypeFieldName = originCurrencyTranslationManager.m_rateTypeFieldName;
	this.m_rateVersionFieldName = originCurrencyTranslationManager.m_rateVersionFieldName;
	this.m_categoryFieldName = originCurrencyTranslationManager.m_categoryFieldName;
	this.m_defaultCurrency = originCurrencyTranslationManager.m_defaultCurrency;
	if (oFF.notNull(originCurrencyTranslationManager.m_availableCurrencies))
	{
		this.m_availableCurrencies = oFF.XList.create();
		this.m_availableCurrencies.addAll(originCurrencyTranslationManager.m_availableCurrencies);
	}
	if (oFF.notNull(originCurrencyTranslationManager.m_availableRateTypes))
	{
		this.m_availableRateTypes = oFF.XList.create();
		this.m_availableRateTypes.addAll(originCurrencyTranslationManager.m_availableRateTypes);
	}
	if (oFF.notNull(originCurrencyTranslationManager.m_availableRateVersions))
	{
		this.m_availableRateVersions = oFF.XList.create();
		this.m_availableRateVersions.addAll(originCurrencyTranslationManager.m_availableRateVersions);
	}
	if (oFF.notNull(originCurrencyTranslationManager.m_availableCategories))
	{
		this.m_availableCategories = oFF.XList.create();
		this.m_availableCategories.addAll(originCurrencyTranslationManager.m_availableCategories);
	}
	if (oFF.notNull(originCurrencyTranslationManager.m_availableCurrencyTranslations))
	{
		this.m_availableCurrencyTranslations = oFF.XList.create();
		this.m_availableCurrencyTranslations.addAll(originCurrencyTranslationManager.m_availableCurrencyTranslations);
	}
	if (oFF.notNull(originCurrencyTranslationManager.m_availableCurrencyTranslationsMap))
	{
		this.m_availableCurrencyTranslationsMap = oFF.XHashMapByString.create();
		this.m_availableCurrencyTranslationsMap.putAll(originCurrencyTranslationManager.m_availableCurrencyTranslationsMap);
	}
	this.m_rateTableId = originCurrencyTranslationManager.m_rateTableId;
};
oFF.QCurrencyTranslationManager.prototype.getQueryCurrencyTranslation = function()
{
	if (oFF.notNull(this.m_currencyTranslationDetails))
	{
		return this.m_currencyTranslationDetails;
	}
	if (oFF.notNull(this.m_query2measureCurrencyTranslationBridge))
	{
		return this.m_query2measureCurrencyTranslationBridge;
	}
	return null;
};
oFF.QCurrencyTranslationManager.prototype.getCurrencyTranslationDetails = function()
{
	return this.m_currencyTranslationDetails;
};
oFF.QCurrencyTranslationManager.prototype.getCurrencyTranslationEnabledType = function()
{
	return this.m_currencyTranslationTypeEnabled;
};
oFF.QCurrencyTranslationManager.prototype.setCurrencyTranslationEnabledProperty = function(currencyTranslationEnabled)
{
	this.m_currencyTranslationTypeEnabled = currencyTranslationEnabled;
};
oFF.QCurrencyTranslationManager.prototype.shouldExportInAList = function(mode)
{
	if (mode.isTypeOf(oFF.QModelFormat.INA_REPOSITORY) || this.isLegacyMeasureCurrencyTranslationAccountModel())
	{
		return false;
	}
	return oFF.XCollectionUtils.hasElements(this.m_measureCurrencyTranslations) || this.getDefaultMeasureCurrencyTranslation() !== null;
};
oFF.QCurrencyTranslationManager.prototype.shouldExportInAStructure = function(mode)
{
	if (mode.isTypeOf(oFF.QModelFormat.INA_REPOSITORY) && (oFF.XCollectionUtils.hasElements(this.m_measureCurrencyTranslations) || this.getDefaultMeasureCurrencyTranslation() !== null || oFF.notNull(this.m_currencyTranslationDetails)))
	{
		return true;
	}
	if (oFF.notNull(this.m_currencyTranslationDetails) && (this.m_resetCurrencyTranslationDetails || oFF.XStringUtils.isNotNullAndNotEmpty(this.m_currencyTranslationDetails.getCurrencyTranslationName())))
	{
		return true;
	}
	return false;
};
oFF.QCurrencyTranslationManager.prototype.getDefaultReferenceDateFieldName = function()
{
	return this.m_currencyTranslationTimeDimensionKeyFieldName;
};
oFF.QCurrencyTranslationManager.prototype.getRateTypeFieldName = function()
{
	return this.m_rateTypeFieldName;
};
oFF.QCurrencyTranslationManager.prototype.getRateVersionFieldName = function()
{
	return this.m_rateVersionFieldName;
};
oFF.QCurrencyTranslationManager.prototype.getCategoryFieldName = function()
{
	return this.m_categoryFieldName;
};
oFF.QCurrencyTranslationManager.prototype.setDefaultCurrency = function(defaultCurrency)
{
	this.m_defaultCurrency = defaultCurrency;
};
oFF.QCurrencyTranslationManager.prototype.setCurrencyTranslationTimeDimensionName = function(dimName)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(dimName))
	{
		var cttd = this.getQueryModel().getDimensionByName(dimName);
		if (oFF.notNull(cttd))
		{
			this.m_currencyTranslationTimeDimensionKeyFieldName = this.getDateField(cttd).getName();
		}
	}
};
oFF.QCurrencyTranslationManager.prototype.getDateField = function(dimension)
{
	var fields = dimension.getFields();
	var size = fields.size();
	for (var i = 0; i < size; i++)
	{
		var field = fields.getFieldAt(i);
		if (field.getValueType() === oFF.XValueType.DATE)
		{
			return field;
		}
	}
	return dimension.getKeyField();
};
oFF.QCurrencyTranslationManager.prototype.setCurrencyTranslationTimeDimensionFieldName = function(cttdFieldName)
{
	this.m_currencyTranslationTimeDimensionKeyFieldName = cttdFieldName;
};
oFF.QCurrencyTranslationManager.prototype.setCurrencyDimensionName = function(dimName)
{
	var dimension = this.getQueryModel().getDimensionByName(dimName);
	if (oFF.notNull(dimension))
	{
		this.m_currencyDimensionKeyFieldName = dimension.getKeyField().getName();
	}
};
oFF.QCurrencyTranslationManager.prototype.setRateTypeFieldName = function(fieldName)
{
	this.m_rateTypeFieldName = fieldName;
};
oFF.QCurrencyTranslationManager.prototype.setRateVersionFieldName = function(fieldName)
{
	this.m_rateVersionFieldName = fieldName;
};
oFF.QCurrencyTranslationManager.prototype.setCategoryFieldName = function(fieldName)
{
	this.m_categoryFieldName = fieldName;
};
oFF.QCurrencyTranslationManager.prototype.resetCurrencyTranslationDetails = function()
{
	var currencyTranslationDetails = this.getCurrencyTranslationDetails();
	if (oFF.notNull(currencyTranslationDetails))
	{
		currencyTranslationDetails.reset();
		this.m_resetCurrencyTranslationDetails = true;
	}
};
oFF.QCurrencyTranslationManager.prototype.getCurrencyTranslationDetailsReset = function()
{
	return this.m_resetCurrencyTranslationDetails;
};
oFF.QCurrencyTranslationManager.prototype.addNewMeasureCurrencyTranslation = function(name, description)
{
	return this.addNewMeasureCurrencyTranslationBase(name, description);
};
oFF.QCurrencyTranslationManager.prototype.isLegacyMeasureCurrencyTranslationAccountModel = function()
{
	return this.m_legacyMeasureCurrencyTranslationAccountModel;
};
oFF.QCurrencyTranslationManager.prototype.supportsExtendedRateNameParameters = function()
{
	return this.m_supportsExtendedRateNameParameters;
};
oFF.QCurrencyTranslationManager.prototype.setSupportsExtendedRateNameParameters = function(extendedRateType)
{
	this.m_supportsExtendedRateNameParameters = extendedRateType;
};
oFF.QCurrencyTranslationManager.prototype.setMaxNumberOfTranslations = function(maximumNumber)
{
	if (this.m_maximumNumberOfTranslations !== maximumNumber)
	{
		var oldValue = this.m_maximumNumberOfTranslations;
		this.m_maximumNumberOfTranslations = maximumNumber;
		this.notifyPropertyIntegerChanged(oFF.QCurrencyTranslationProperties.QY_MAX_NUMBER_OF_CONVERSIONS, oldValue, maximumNumber);
	}
};
oFF.QCurrencyTranslationManager.prototype.initializeLegacyCurrencyTranslation = function(legacyCurrencyTranslation)
{
	this.m_legacyMeasureCurrencyTranslationAccountModel = legacyCurrencyTranslation;
};
oFF.QCurrencyTranslationManager.prototype.getMaxNumberOfTranslations = function()
{
	return this.m_maximumNumberOfTranslations;
};
oFF.QCurrencyTranslationManager.prototype.getDefaultCurrency = function()
{
	return this.m_defaultCurrency;
};
oFF.QCurrencyTranslationManager.prototype.addMeasureCurrencyTranslation = function(measureCurrencyTranslation)
{
	this.m_measureCurrencyTranslations.put(measureCurrencyTranslation.getName(), measureCurrencyTranslation);
};
oFF.QCurrencyTranslationManager.prototype.getCurrencyTranslationCrossCalculation = function(currencyMeasureAlias)
{
	var measureDimension = this.getQueryModel().getMeasureDimension();
	return measureDimension.getPlaceholderIdByAlias(currencyMeasureAlias);
};
oFF.QCurrencyTranslationManager.prototype.postImportInitialization = function()
{
	var i;
	var size;
	var field;
	var fieldsList;
	if (oFF.XStringUtils.isNullOrEmpty(this.m_rateTypeFieldName))
	{
		var accountDimension = this.getQueryModel().getDimensionByType(oFF.DimensionType.ACCOUNT);
		if (oFF.notNull(accountDimension))
		{
			fieldsList = accountDimension.getFields();
			size = fieldsList.size();
			for (i = 0; i < size; i++)
			{
				field = fieldsList.get(i);
				if (oFF.XString.isEqual(field.getSemanticType(), oFF.CurrencyTranslationConstants.SAC_RATE_TYPE))
				{
					this.m_rateTypeFieldName = field.getName();
					break;
				}
			}
		}
	}
	if (oFF.XStringUtils.isNullOrEmpty(this.m_rateVersionFieldName) || oFF.XStringUtils.isNullOrEmpty(this.m_categoryFieldName))
	{
		var versionDimension = this.getQueryModel().getDimensionByType(oFF.DimensionType.VERSION);
		if (oFF.notNull(versionDimension))
		{
			fieldsList = versionDimension.getFields();
			size = fieldsList.size();
			for (i = 0; i < size; i++)
			{
				field = fieldsList.get(i);
				if (oFF.XString.isEqual(field.getSemanticType(), oFF.CurrencyTranslationConstants.SAC_RATE_VERSION))
				{
					this.m_rateVersionFieldName = field.getName();
					if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_categoryFieldName))
					{
						break;
					}
				}
				else if (oFF.XString.isEqual(field.getSemanticType(), oFF.CurrencyTranslationConstants.SAC_CURRENCY_CONVERSION_CATEGORY))
				{
					this.m_categoryFieldName = field.getName();
					if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_rateVersionFieldName))
					{
						break;
					}
				}
			}
		}
	}
};
oFF.QCurrencyTranslationManager.prototype.getMeasureCurrencyTranslation = function(currencyTranslationName)
{
	return oFF.isNull(currencyTranslationName) ? null : this.m_measureCurrencyTranslations.getByKey(currencyTranslationName);
};
oFF.QCurrencyTranslationManager.prototype.removeMeasureCurrencyTranslationByName = function(name)
{
	this.m_measureCurrencyTranslations.remove(name);
};
oFF.QCurrencyTranslationManager.prototype.clearMeasureCurrencyTranslations = function()
{
	this.m_measureCurrencyTranslations.clear();
};
oFF.QCurrencyTranslationManager.prototype.supportsCurrencyTranslation = function()
{
	return this.isLegacyMeasureCurrencyTranslationAccountModel() || this.supportsMeasureBasedCurrencyTranslation();
};
oFF.QCurrencyTranslationManager.prototype.supportsMeasureBasedCurrencyTranslation = function()
{
	return this.getModelCapabilities().supportsCurrencyTranslation();
};
oFF.QCurrencyTranslationManager.prototype.supportsGlobalQueryCurrencyTranslation = function()
{
	var modelCapabilities = this.getModelCapabilities();
	return modelCapabilities.supportsQueryCurrencyTranslation() || modelCapabilities.supportsCustomMeasuresInMetadata();
};
oFF.QCurrencyTranslationManager.prototype.supportsSimpleFixedTargetCurrencyTranslation = function()
{
	if (this.isLegacyMeasureCurrencyTranslationAccountModel() && this.supportsGlobalQueryCurrencyTranslation())
	{
		var queryCurrencyTranslation = this.getQueryCurrencyTranslation();
		if (oFF.notNull(queryCurrencyTranslation))
		{
			return !queryCurrencyTranslation.requiresReferenceDate() && !queryCurrencyTranslation.requiresRateName();
		}
	}
	return false;
};
oFF.QCurrencyTranslationManager.prototype.getAvailableCurrencyTranslationObjects = function()
{
	return this.m_availableCurrencyTranslations;
};
oFF.QCurrencyTranslationManager.prototype.getAvailableCurrencies = function()
{
	return this.m_availableCurrencies;
};
oFF.QCurrencyTranslationManager.prototype.getAvailableCurrencyTranslationObjectsMap = function()
{
	return this.m_availableCurrencyTranslationsMap;
};
oFF.QCurrencyTranslationManager.prototype.getAvailableRateNames = function()
{
	return null;
};
oFF.QCurrencyTranslationManager.prototype.getAvailableRateTypes = function()
{
	return this.m_availableRateTypes;
};
oFF.QCurrencyTranslationManager.prototype.getAvailableRateVersions = function()
{
	return this.m_availableRateVersions;
};
oFF.QCurrencyTranslationManager.prototype.getAvailableCategories = function()
{
	return this.m_availableCategories;
};
oFF.QCurrencyTranslationManager.prototype.setCurrencyTranslationDetails = function(currencyTranslationDetails)
{
	if (!this.getModelCapabilities().supportsQueryCurrencyTranslation())
	{
		throw oFF.XException.createIllegalArgumentException("Capability QueryCurrencyTranslation not supported.");
	}
	this.m_currencyTranslationDetails = currencyTranslationDetails;
};
oFF.QCurrencyTranslationManager.prototype.setCurrencyTranslationDetailsReset = function(resetCurrencyTranslationDetails)
{
	this.m_resetCurrencyTranslationDetails = resetCurrencyTranslationDetails;
};
oFF.QCurrencyTranslationManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.CURRENCY_TRANSLATION_MANAGER;
};
oFF.QCurrencyTranslationManager.prototype.getDefaultMeasureCurrencyTranslation = function()
{
	if (oFF.notNull(this.m_query2measureCurrencyTranslationBridge) && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_query2measureCurrencyTranslationBridge.getCurrencyTranslationName()) && this.m_query2measureCurrencyTranslationBridge.isApplyDefinedCurrencyTranslation())
	{
		return this.m_query2measureCurrencyTranslationBridge.getMeasureCurrencyTranslation();
	}
	return null;
};
oFF.QCurrencyTranslationManager.prototype.getQuery2MeasureCurrencyTranslationBridge = function()
{
	return this.m_query2measureCurrencyTranslationBridge;
};
oFF.QCurrencyTranslationManager.prototype.setupBwCatalogs = function(syncType, listener)
{
	if (!this.getModelCapabilities().supportsQueryCurrencyTranslation() && this.getModelCapabilities().supportsCurrencyTranslation() && oFF.notNull(listener))
	{
		listener.onCatalogsLoaded();
	}
	else if (this.m_availableCOsComplete && this.m_availableCTOsComplete && oFF.notNull(listener))
	{
		listener.onCatalogsLoaded();
	}
	else if (!this.m_availableCTOsComplete && !this.m_availableCOsComplete)
	{
		this.m_bwCatalogLoadedListener = listener;
		this.setupCatalog(oFF.MetaObjectType.CURRENCY_TRANSLATION, syncType);
		this.setupCatalog(oFF.MetaObjectType.CURRENCY, syncType);
	}
};
oFF.QCurrencyTranslationManager.prototype.setupCatalog = function(metaObjectType, syncType)
{
	this.m_activeSyncType = syncType;
	var currencyTranslationDataSource = oFF.QFactory.createDataSourceWithType(metaObjectType, "$$DataSource$$");
	var currencyTranslationServiceConfig = oFF.QueryServiceConfig.createWithDataSource(this.getApplication(), this.getQueryModel().getSystemName(), currencyTranslationDataSource);
	currencyTranslationServiceConfig.processQueryManagerCreation(this.m_activeSyncType, this, metaObjectType);
};
oFF.QCurrencyTranslationManager.prototype.onQueryManagerCreated = function(extResult, queryManager, customIdentifier)
{
	oFF.MessageUtil.checkNoError(extResult);
	var currencyTranslationQueryManager = extResult.getData();
	currencyTranslationQueryManager.processQueryExecution(this.m_activeSyncType, this, customIdentifier);
};
oFF.QCurrencyTranslationManager.prototype.onQueryExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	oFF.MessageUtil.checkNoError(extResult);
	var rows = resultSetContainer.getCursorResultSet().getCursorRowsAxis();
	var name;
	var text;
	var target;
	var fieldValue;
	if (customIdentifier === oFF.MetaObjectType.CURRENCY_TRANSLATION)
	{
		this.m_availableCurrencyTranslations.clear();
		while (rows.hasNextTuple())
		{
			rows.nextTuple();
			name = "";
			text = "";
			target = "";
			while (rows.hasNextTupleElement())
			{
				rows.nextTupleElement();
				while (rows.hasNextFieldValue())
				{
					fieldValue = rows.nextFieldValue();
					switch (fieldValue.getField().getName())
					{
						case "Name.KEY":
							name = fieldValue.getString();
							break;

						case "Name.LONG_TEXT":
							text = fieldValue.getString();
							break;

						case "Target.KEY":
							target = fieldValue.getString();
							break;
					}
				}
			}
			this.m_availableCurrencyTranslationsMap.put(name, oFF.QCurrencyTranslationObject.create(name, text, target));
			this.m_availableCurrencyTranslations.add(oFF.QCurrencyTranslationObject.create(name, text, target));
		}
		this.m_availableCTOsComplete = true;
	}
	else if (customIdentifier === oFF.MetaObjectType.CURRENCY)
	{
		this.m_availableCurrencies.clear();
		while (rows.hasNextTuple())
		{
			rows.nextTuple();
			name = "";
			text = "";
			while (rows.hasNextTupleElement())
			{
				rows.nextTupleElement();
				while (rows.hasNextFieldValue())
				{
					fieldValue = rows.nextFieldValue();
					switch (fieldValue.getField().getName())
					{
						case "Currency.KEY":
							name = fieldValue.getString();
							break;

						case "Currency.LONG_TEXT":
							text = fieldValue.getString();
							break;
					}
				}
			}
			this.m_availableCurrencies.add(oFF.QCurrencyObject.create(name, text));
		}
		this.m_availableCOsComplete = true;
	}
	if (this.m_availableCTOsComplete && this.m_availableCOsComplete && oFF.notNull(this.m_bwCatalogLoadedListener))
	{
		this.m_bwCatalogLoadedListener.onCatalogsLoaded();
		this.m_bwCatalogLoadedListener = null;
	}
};
oFF.QCurrencyTranslationManager.prototype.clearAvailableCurrencies = function()
{
	if (oFF.isNull(this.m_availableCurrencies))
	{
		this.m_availableCurrencies = oFF.XList.create();
	}
	else
	{
		this.m_availableCurrencies.clear();
	}
};
oFF.QCurrencyTranslationManager.prototype.addAvailableCurrency = function(name, text)
{
	if (oFF.isNull(this.m_availableCurrencies))
	{
		this.m_availableCurrencies = oFF.XList.create();
	}
	else
	{
		this.m_availableCurrencies.add(oFF.QCurrencyObject.create(name, text));
	}
};
oFF.QCurrencyTranslationManager.prototype.clearAvailableRateTypes = function()
{
	if (oFF.isNull(this.m_availableRateTypes))
	{
		this.m_availableRateTypes = oFF.XList.create();
	}
	else
	{
		this.m_availableRateTypes.clear();
	}
};
oFF.QCurrencyTranslationManager.prototype.addAvailableRateType = function(rateType)
{
	this.m_availableRateTypes.add(rateType);
};
oFF.QCurrencyTranslationManager.prototype.clearAvailableCategories = function()
{
	if (oFF.isNull(this.m_availableCategories))
	{
		this.m_availableCategories = oFF.XList.create();
	}
	else
	{
		this.m_availableCategories.clear();
	}
};
oFF.QCurrencyTranslationManager.prototype.addAvailableCategory = function(category)
{
	this.m_availableCategories.add(category);
};
oFF.QCurrencyTranslationManager.prototype.clearAvailableRateVersions = function()
{
	if (oFF.isNull(this.m_availableRateVersions))
	{
		this.m_availableRateVersions = oFF.XList.create();
	}
	else
	{
		this.m_availableRateVersions.clear();
	}
};
oFF.QCurrencyTranslationManager.prototype.addAvailableRateVersion = function(name, text)
{
	this.m_availableRateVersions.add(oFF.QCurrencyObject.create(name, text));
};
oFF.QCurrencyTranslationManager.prototype.getCurrencyDimensionKeyFieldName = function()
{
	return this.m_currencyDimensionKeyFieldName;
};
oFF.QCurrencyTranslationManager.prototype.deriveRateTypeFromAccount = function()
{
	return this.m_rateTypeFromAccountDimension;
};
oFF.QCurrencyTranslationManager.prototype.setDeriveRateTypeFromAccount = function(rateTypeFromAccount)
{
	this.m_rateTypeFromAccountDimension = rateTypeFromAccount;
};
oFF.QCurrencyTranslationManager.prototype.getCurrencyRateTableId = function()
{
	return this.m_rateTableId;
};
oFF.QCurrencyTranslationManager.prototype.setCurrencyRateTableId = function(rateTableId)
{
	this.m_rateTableId = rateTableId;
};

oFF.QMeasureCurrencyTranslation = function() {};
oFF.QMeasureCurrencyTranslation.prototype = new oFF.QModelComponent();
oFF.QMeasureCurrencyTranslation.prototype._ff_c = "QMeasureCurrencyTranslation";

oFF.QMeasureCurrencyTranslation.createWithName = function(context, modelComponentBase, name, text)
{
	var newInstance = new oFF.QMeasureCurrencyTranslation();
	newInstance.setupModelComponentWithName(context, modelComponentBase, name);
	newInstance.setText(text);
	return newInstance;
};
oFF.QMeasureCurrencyTranslation.prototype.m_sourceCurrency = null;
oFF.QMeasureCurrencyTranslation.prototype.m_targetCurrency = null;
oFF.QMeasureCurrencyTranslation.prototype.m_referenceDate = null;
oFF.QMeasureCurrencyTranslation.prototype.m_rateName = null;
oFF.QMeasureCurrencyTranslation.prototype.m_defaultCurrency = false;
oFF.QMeasureCurrencyTranslation.prototype.m_dateOffset = 0;
oFF.QMeasureCurrencyTranslation.prototype.m_dateOffsetGranularity = null;
oFF.QMeasureCurrencyTranslation.prototype.m_rateType = null;
oFF.QMeasureCurrencyTranslation.prototype.m_rateVersion = null;
oFF.QMeasureCurrencyTranslation.prototype.m_category = null;
oFF.QMeasureCurrencyTranslation.prototype.m_metadataDefined = false;
oFF.QMeasureCurrencyTranslation.prototype.m_errorHandlingMode = null;
oFF.QMeasureCurrencyTranslation.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.CURRENCY_TRANSLATION_ITEM;
};
oFF.QMeasureCurrencyTranslation.prototype.getCurrencyTranslationManager = function()
{
	var queryModel = this.getQueryModelBase();
	if (oFF.notNull(queryModel))
	{
		return queryModel.getCurrencyTranslationManagerBase();
	}
	var parent = this.getParentComponent();
	if (oFF.notNull(parent) && parent.getComponentType() === oFF.OlapComponentType.CURRENCY_TRANSLATION_MANAGER)
	{
		return parent;
	}
	return null;
};
oFF.QMeasureCurrencyTranslation.prototype.releaseObject = function()
{
	this.m_rateName = oFF.XObjectExt.release(this.m_rateName);
	this.m_referenceDate = oFF.XObjectExt.release(this.m_referenceDate);
	this.m_sourceCurrency = oFF.XObjectExt.release(this.m_sourceCurrency);
	this.m_targetCurrency = oFF.XObjectExt.release(this.m_targetCurrency);
	this.m_rateVersion = null;
	this.m_category = null;
	this.m_rateType = null;
	this.m_dateOffsetGranularity = null;
	this.m_dateOffset = 0;
	this.m_errorHandlingMode = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QMeasureCurrencyTranslation.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originCurrencyTranslation = other;
	this.m_rateName = oFF.QCurrencyLookupValue.create(this);
	if (originCurrencyTranslation.getRateName() !== null)
	{
		this.m_rateName.copyFrom(originCurrencyTranslation.getRateName(), flags);
	}
	this.m_referenceDate = oFF.QCurrencyLookupValue.create(this);
	if (originCurrencyTranslation.getReferenceDate() !== null)
	{
		this.m_referenceDate.copyFrom(originCurrencyTranslation.getReferenceDate(), flags);
	}
	this.m_sourceCurrency = oFF.QCurrencyLookupValue.create(this);
	if (originCurrencyTranslation.getSourceCurrency() !== null)
	{
		this.m_sourceCurrency.copyFrom(originCurrencyTranslation.getSourceCurrency(), flags);
	}
	this.m_targetCurrency = oFF.QCurrencyLookupValue.create(this);
	if (originCurrencyTranslation.getTargetCurrency() !== null)
	{
		this.m_targetCurrency.copyFrom(originCurrencyTranslation.getTargetCurrency(), flags);
	}
	this.m_rateType = originCurrencyTranslation.m_rateType;
	this.m_rateVersion = originCurrencyTranslation.m_rateVersion;
	this.m_category = originCurrencyTranslation.m_category;
	this.m_dateOffset = originCurrencyTranslation.m_dateOffset;
	this.m_dateOffsetGranularity = originCurrencyTranslation.m_dateOffsetGranularity;
	this.m_metadataDefined = originCurrencyTranslation.m_metadataDefined;
	this.m_errorHandlingMode = originCurrencyTranslation.m_errorHandlingMode;
};
oFF.QMeasureCurrencyTranslation.prototype.supportsDefaultCurrency = function()
{
	return !this.m_metadataDefined && oFF.XStringUtils.isNotNullAndNotEmpty(this.getCurrencyTranslationManager().getDefaultCurrency());
};
oFF.QMeasureCurrencyTranslation.prototype.setDefaultCurrency = function()
{
	if (!this.m_defaultCurrency)
	{
		if (!this.supportsDefaultCurrency())
		{
			throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the default target currency");
		}
		this.m_targetCurrency = null;
		this.m_defaultCurrency = true;
		this.notifyNodeChanged();
	}
};
oFF.QMeasureCurrencyTranslation.prototype.isDefaultCurrency = function()
{
	return this.m_defaultCurrency;
};
oFF.QMeasureCurrencyTranslation.prototype.getSourceCurrency = function()
{
	return this.m_sourceCurrency;
};
oFF.QMeasureCurrencyTranslation.prototype.supportsReferenceDate = function()
{
	return !this.m_metadataDefined;
};
oFF.QMeasureCurrencyTranslation.prototype.supportsReferenceDateAsField = function()
{
	return !this.m_metadataDefined && !this.getCurrencyTranslationManager().isLegacyMeasureCurrencyTranslationAccountModel();
};
oFF.QMeasureCurrencyTranslation.prototype.supportsReferenceDateAsFormulaItem = function()
{
	return !this.m_metadataDefined && !this.getCurrencyTranslationManager().isLegacyMeasureCurrencyTranslationAccountModel();
};
oFF.QMeasureCurrencyTranslation.prototype.setErrorHandling = function(errorHandlingMode)
{
	if (this.m_errorHandlingMode !== errorHandlingMode)
	{
		this.m_errorHandlingMode = errorHandlingMode;
		this.notifyNodeChanged();
	}
};
oFF.QMeasureCurrencyTranslation.prototype.getErrorHandling = function()
{
	return this.m_errorHandlingMode;
};
oFF.QMeasureCurrencyTranslation.prototype.supportsErrorHandling = function()
{
	return !this.m_metadataDefined && !this.getCurrencyTranslationManager().isLegacyMeasureCurrencyTranslationAccountModel();
};
oFF.QMeasureCurrencyTranslation.prototype.supportsTargetCurrency = function()
{
	return !this.m_metadataDefined;
};
oFF.QMeasureCurrencyTranslation.prototype.supportsTargetCurrencyAsField = function()
{
	return !this.m_metadataDefined && !this.getCurrencyTranslationManager().isLegacyMeasureCurrencyTranslationAccountModel();
};
oFF.QMeasureCurrencyTranslation.prototype.supportsTargetCurrencyAsVariable = function()
{
	return !this.m_metadataDefined && !this.getCurrencyTranslationManager().isLegacyMeasureCurrencyTranslationAccountModel();
};
oFF.QMeasureCurrencyTranslation.prototype.supportsOffsetInDays = function()
{
	return !this.m_metadataDefined && !this.getCurrencyTranslationManager().isLegacyMeasureCurrencyTranslationAccountModel();
};
oFF.QMeasureCurrencyTranslation.prototype.supportsOffsetInMonths = function()
{
	return !this.m_metadataDefined;
};
oFF.QMeasureCurrencyTranslation.prototype.requiresTargetCurrency = function()
{
	return this.supportsTargetCurrency();
};
oFF.QMeasureCurrencyTranslation.prototype.isMissingTargetCurrency = function()
{
	return oFF.QCurrencyLookupValue.isEmpty(this.m_targetCurrency) && !this.m_defaultCurrency && this.requiresTargetCurrency();
};
oFF.QMeasureCurrencyTranslation.prototype.requiresReferenceDate = function()
{
	var curTrans = this.getCurrencyTranslationManager();
	return this.supportsReferenceDate() && curTrans.getDefaultReferenceDateFieldName() === null && !curTrans.isLegacyMeasureCurrencyTranslationAccountModel();
};
oFF.QMeasureCurrencyTranslation.prototype.isMissingReferenceDate = function()
{
	return oFF.QCurrencyLookupValue.isEmpty(this.m_referenceDate) && this.requiresReferenceDate();
};
oFF.QMeasureCurrencyTranslation.prototype.supportsRateName = function()
{
	return !this.m_metadataDefined && !this.getCurrencyTranslationManager().isLegacyMeasureCurrencyTranslationAccountModel();
};
oFF.QMeasureCurrencyTranslation.prototype.requiresRateName = function()
{
	var curTrans = this.getCurrencyTranslationManager();
	return this.supportsRateName() && !curTrans.supportsExtendedRateNameParameters();
};
oFF.QMeasureCurrencyTranslation.prototype.isMissingRateName = function()
{
	return oFF.QCurrencyLookupValue.isEmpty(this.m_rateName) && this.requiresRateName();
};
oFF.QMeasureCurrencyTranslation.prototype.supportsPlanningParameters = function()
{
	var curTrans = this.getCurrencyTranslationManager();
	return curTrans.isLegacyMeasureCurrencyTranslationAccountModel() || curTrans.supportsExtendedRateNameParameters();
};
oFF.QMeasureCurrencyTranslation.prototype.setSourceCurrency = function(sourceCurrency)
{
	this.m_sourceCurrency = sourceCurrency;
};
oFF.QMeasureCurrencyTranslation.prototype.setFixedSourceCurrencyByString = function(currencyName)
{
	this.m_sourceCurrency = oFF.QCurrencyLookupValue.createFixedByValue(this, oFF.XStringValue.create(currencyName));
	return this.m_sourceCurrency;
};
oFF.QMeasureCurrencyTranslation.prototype.setSourceCurrencyByFieldName = function(currencyFieldName)
{
	this.m_sourceCurrency = oFF.QCurrencyLookupValue.createByFieldName(this, currencyFieldName);
	return this.m_sourceCurrency;
};
oFF.QMeasureCurrencyTranslation.prototype.getTargetCurrency = function()
{
	return this.m_targetCurrency;
};
oFF.QMeasureCurrencyTranslation.prototype.setTargetCurrency = function(targetCurrency)
{
	this.m_targetCurrency = targetCurrency;
	this.m_defaultCurrency = false;
};
oFF.QMeasureCurrencyTranslation.prototype.setFixedTargetCurrencyByString = function(currencyName)
{
	if (!this.supportsTargetCurrency())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the TargetCurrency");
	}
	if (oFF.notNull(currencyName) && !oFF.XString.isEqual(this.getFixedTargetCurrency(), currencyName))
	{
		this.m_defaultCurrency = false;
		if (oFF.notNull(this.m_targetCurrency))
		{
			this.m_targetCurrency.setFixedValue(oFF.XStringValue.create(currencyName));
		}
		else
		{
			this.m_targetCurrency = oFF.QCurrencyLookupValue.createFixedByValue(this, oFF.XStringValue.create(currencyName));
		}
		this.notifyNodeChanged();
	}
};
oFF.QMeasureCurrencyTranslation.prototype.isTargetCurrencyFixed = function()
{
	return oFF.notNull(this.m_targetCurrency) && this.m_targetCurrency.isFixed();
};
oFF.QMeasureCurrencyTranslation.prototype.getFixedTargetCurrency = function()
{
	return oFF.isNull(this.m_targetCurrency) ? null : this.m_targetCurrency.getFixedValueAsString();
};
oFF.QMeasureCurrencyTranslation.prototype.setTargetCurrencyByFieldName = function(currencyFieldName)
{
	if (!this.supportsTargetCurrencyAsField())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the TargetCurrency");
	}
	this.m_defaultCurrency = false;
	this.m_targetCurrency = oFF.QCurrencyLookupValue.createByFieldName(this, currencyFieldName);
	this.notifyNodeChanged();
};
oFF.QMeasureCurrencyTranslation.prototype.setTargetCurrencyByField = function(currencyField)
{
	if (!this.supportsTargetCurrencyAsField())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the TargetCurrency");
	}
	this.m_targetCurrency = oFF.QCurrencyLookupValue.createByFieldName(this, currencyField.getName());
	this.notifyNodeChanged();
};
oFF.QMeasureCurrencyTranslation.prototype.getTargetCurrencyField = function()
{
	return oFF.isNull(this.m_targetCurrency) ? null : this.m_targetCurrency.getField();
};
oFF.QMeasureCurrencyTranslation.prototype.getTargetCurrencyFieldName = function()
{
	return oFF.isNull(this.m_targetCurrency) ? null : this.m_targetCurrency.getFieldName();
};
oFF.QMeasureCurrencyTranslation.prototype.isTargetCurrencyField = function()
{
	return oFF.notNull(this.m_targetCurrency) && this.m_targetCurrency.isFieldBased();
};
oFF.QMeasureCurrencyTranslation.prototype.setTargetCurrencyByVariableName = function(variableName)
{
	if (!this.supportsTargetCurrencyAsVariable())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the TargetCurrency via variables");
	}
	this.m_defaultCurrency = false;
	this.m_targetCurrency = oFF.QCurrencyLookupValue.createByVariableName(this, variableName);
	this.notifyNodeChanged();
};
oFF.QMeasureCurrencyTranslation.prototype.setTargetCurrencyByVariable = function(variable)
{
	this.setTargetCurrencyByVariableName(oFF.isNull(variable) ? null : variable.getName());
};
oFF.QMeasureCurrencyTranslation.prototype.getTargetCurrencyVariable = function()
{
	return oFF.isNull(this.m_targetCurrency) ? null : this.m_targetCurrency.getVariable();
};
oFF.QMeasureCurrencyTranslation.prototype.getTargetCurrencyVariableName = function()
{
	return oFF.isNull(this.m_targetCurrency) ? null : this.m_targetCurrency.getVariableName();
};
oFF.QMeasureCurrencyTranslation.prototype.isTargetCurrencyVariable = function()
{
	return this.m_targetCurrency.isVariableBased();
};
oFF.QMeasureCurrencyTranslation.prototype.getReferenceDate = function()
{
	return this.m_referenceDate;
};
oFF.QMeasureCurrencyTranslation.prototype.setReferenceDate = function(conversionDateLookup)
{
	this.setDateOffset(0);
	this.m_referenceDate = conversionDateLookup;
	this.notifyNodeChanged();
};
oFF.QMeasureCurrencyTranslation.prototype.setFixedReferenceDateByString = function(referenceDateString)
{
	if (!this.supportsReferenceDate())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the ReferenceDate");
	}
	this.setDateOffset(0);
	this.m_referenceDate = oFF.QCurrencyLookupValue.createFixedByValue(this, oFF.XDate.createDateSafe(referenceDateString));
	this.notifyNodeChanged();
};
oFF.QMeasureCurrencyTranslation.prototype.setFixedReferenceDateByDateValue = function(referenceDateValue)
{
	if (!this.supportsReferenceDate())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the ReferenceDate");
	}
	this.setDateOffset(0);
	this.m_referenceDate = oFF.QCurrencyLookupValue.createFixedByValue(this, referenceDateValue);
	this.notifyNodeChanged();
};
oFF.QMeasureCurrencyTranslation.prototype.isReferenceDateFixed = function()
{
	return oFF.notNull(this.m_referenceDate) && this.m_referenceDate.isFixed();
};
oFF.QMeasureCurrencyTranslation.prototype.getFixedReferenceDate = function()
{
	return oFF.isNull(this.m_referenceDate) ? null : this.m_referenceDate.getFixedValueAsDate();
};
oFF.QMeasureCurrencyTranslation.prototype.getFixedReferenceDateAsString = function()
{
	return oFF.isNull(this.m_referenceDate) ? null : this.m_referenceDate.getFixedValueAsString();
};
oFF.QMeasureCurrencyTranslation.prototype.setReferenceDateByFieldName = function(fieldName)
{
	if (!this.supportsTargetCurrencyAsField())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the ReferenceDate");
	}
	this.setDateOffset(0);
	this.m_referenceDate = oFF.QCurrencyLookupValue.createByFieldName(this, fieldName);
	this.notifyNodeChanged();
};
oFF.QMeasureCurrencyTranslation.prototype.setReferenceDateByField = function(field)
{
	if (!this.supportsReferenceDateAsField())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the ReferenceDate");
	}
	this.setDateOffset(0);
	this.m_referenceDate = oFF.QCurrencyLookupValue.createByFieldName(this, field.getName());
	this.notifyNodeChanged();
};
oFF.QMeasureCurrencyTranslation.prototype.isReferenceDateField = function()
{
	return oFF.notNull(this.m_referenceDate) && this.m_referenceDate.isFieldBased();
};
oFF.QMeasureCurrencyTranslation.prototype.getReferenceDateField = function()
{
	return oFF.isNull(this.m_referenceDate) ? null : this.m_referenceDate.getField();
};
oFF.QMeasureCurrencyTranslation.prototype.getReferenceDateFieldName = function()
{
	return oFF.isNull(this.m_referenceDate) ? null : this.m_referenceDate.getFieldName();
};
oFF.QMeasureCurrencyTranslation.prototype.setReferenceDateByFormulaItem = function(dateFormula)
{
	if (!this.supportsReferenceDateAsFormulaItem())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the ReferenceDate");
	}
	this.setDateOffset(0);
	this.m_referenceDate = oFF.QCurrencyLookupValue.createByFormulaItem(this, dateFormula);
	return this.m_referenceDate;
};
oFF.QMeasureCurrencyTranslation.prototype.setDynamicReferenceDate = function()
{
	if (this.requiresReferenceDate())
	{
		throw oFF.XException.createIllegalStateException("Reference Date has to be set explicitly");
	}
	this.setDateOffset(0);
	this.m_referenceDate = null;
	this.notifyNodeChanged();
};
oFF.QMeasureCurrencyTranslation.prototype.setDynamicReferenceDateWithOffsetAndGranularity = function(offset, offsetGranularity)
{
	this.assertOffset(offsetGranularity);
	if (this.requiresReferenceDate())
	{
		throw oFF.XException.createIllegalStateException("Reference Date has to be set explicitly");
	}
	this.m_referenceDate = null;
	this.setDateOffset(offset);
	this.setDateOffsetGranularity(offsetGranularity);
	this.notifyNodeChanged();
};
oFF.QMeasureCurrencyTranslation.prototype.assertOffset = function(offsetGranularity)
{
	if (!this.supportsReferenceDate())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the ReferenceDate");
	}
	if (!this.supportsOffsetInMonths())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the ReferenceDate Offset");
	}
	if (!this.supportsOffsetInDays() && (offsetGranularity === oFF.DateOffsetGranularity.WEEK || offsetGranularity === oFF.DateOffsetGranularity.DAY))
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set an offset below month granularity");
	}
};
oFF.QMeasureCurrencyTranslation.prototype.setReferenceDateByFieldOffsetAndGranularity = function(field, offset, offsetGranularity)
{
	if (!this.supportsReferenceDateAsField())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the ReferenceDate");
	}
	this.assertOffset(offsetGranularity);
	this.m_referenceDate = oFF.QCurrencyLookupValue.createByFieldName(this, field.getName());
	this.setDateOffset(offset);
	this.setDateOffsetGranularity(offsetGranularity);
	this.notifyNodeChanged();
};
oFF.QMeasureCurrencyTranslation.prototype.setReferenceDateByFieldNameOffsetAndGranularity = function(fieldName, offset, offsetGranularity)
{
	if (!this.supportsReferenceDateAsField())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the ReferenceDate");
	}
	this.assertOffset(offsetGranularity);
	this.m_referenceDate = oFF.QCurrencyLookupValue.createByFieldName(this, fieldName);
	this.setDateOffset(offset);
	this.setDateOffsetGranularity(offsetGranularity);
	this.notifyNodeChanged();
};
oFF.QMeasureCurrencyTranslation.prototype.getDateOffset = function()
{
	return this.m_dateOffset;
};
oFF.QMeasureCurrencyTranslation.prototype.setDateOffset = function(offset)
{
	if (this.m_dateOffset !== offset)
	{
		var oldValue = this.m_dateOffset;
		this.m_dateOffset = offset;
		this.notifyPropertyIntegerChanged(oFF.QCurrencyTranslationProperties.QY_DATE_OFFSET, oldValue, offset);
	}
};
oFF.QMeasureCurrencyTranslation.prototype.setDateOffsetGranularity = function(dateOffsetGranularity)
{
	if (this.m_dateOffsetGranularity !== dateOffsetGranularity)
	{
		var oldValue = this.m_dateOffsetGranularity;
		this.m_dateOffsetGranularity = dateOffsetGranularity;
		this.notifyPropertyConstantChanged(oFF.QCurrencyTranslationProperties.QY_DATE_OFFSET_GRANULARITY, oldValue, dateOffsetGranularity);
	}
};
oFF.QMeasureCurrencyTranslation.prototype.getDateOffsetGranularity = function()
{
	return this.m_dateOffsetGranularity;
};
oFF.QMeasureCurrencyTranslation.prototype.getRateName = function()
{
	return this.m_rateName;
};
oFF.QMeasureCurrencyTranslation.prototype.setRateName = function(rateName)
{
	this._setRateType(null);
	this._setCategory(null);
	this._setRateVersion(null);
	this._setRateName(rateName);
};
oFF.QMeasureCurrencyTranslation.prototype.setFixedRateNameByString = function(rateNameString)
{
	if (!this.supportsRateName())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the rate name");
	}
	this._setRateType(null);
	this._setCategory(null);
	this._setRateVersion(null);
	this._setRateName(oFF.QCurrencyLookupValue.createFixedByValue(this, oFF.XStringValue.create(rateNameString)));
};
oFF.QMeasureCurrencyTranslation.prototype.isFixedRateName = function()
{
	return oFF.notNull(this.m_rateName) && this.m_rateName.isFixed();
};
oFF.QMeasureCurrencyTranslation.prototype.getFixedRateName = function()
{
	return oFF.isNull(this.m_rateName) ? null : this.m_rateName.getFixedValueAsString();
};
oFF.QMeasureCurrencyTranslation.prototype.setRateNameByFieldName = function(fieldName)
{
	if (!this.supportsRateName())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the rate name");
	}
	this._setRateType(null);
	this._setCategory(null);
	this._setRateVersion(null);
	this._setRateName(oFF.QCurrencyLookupValue.createByFieldName(this, fieldName));
};
oFF.QMeasureCurrencyTranslation.prototype.setRateNameByField = function(field)
{
	if (!this.supportsRateName())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the rate name");
	}
	this._setRateType(null);
	this._setCategory(null);
	this._setRateVersion(null);
	this._setRateName(oFF.QCurrencyLookupValue.createByFieldName(this, field.getName()));
};
oFF.QMeasureCurrencyTranslation.prototype.isRateNameField = function()
{
	return oFF.notNull(this.m_rateName) && this.m_rateName.isFieldBased();
};
oFF.QMeasureCurrencyTranslation.prototype.getRateNameField = function()
{
	return oFF.isNull(this.m_rateName) ? null : this.m_rateName.getField();
};
oFF.QMeasureCurrencyTranslation.prototype.getRateNameFieldName = function()
{
	return oFF.isNull(this.m_rateName) ? null : this.m_rateName.getFieldName();
};
oFF.QMeasureCurrencyTranslation.prototype.setFixedRateType = function(rateType)
{
	if (!this.supportsPlanningParameters())
	{
		throw oFF.XException.createIllegalStateException("Planning parameters not allowed in this Translation Operation");
	}
	this._setRateName(null);
	this._setRateType(rateType);
};
oFF.QMeasureCurrencyTranslation.prototype.setDynamicRateType = function()
{
	if (!this.supportsPlanningParameters())
	{
		throw oFF.XException.createIllegalStateException("Planning parameters not allowed in this Translation Operation");
	}
	this._setRateName(null);
	this._setRateType(null);
};
oFF.QMeasureCurrencyTranslation.prototype.getFixedRateType = function()
{
	return this.m_rateType;
};
oFF.QMeasureCurrencyTranslation.prototype.setFixedCategory = function(category)
{
	if (!this.supportsPlanningParameters())
	{
		throw oFF.XException.createIllegalStateException("Planning parameters not allowed in this Translation Operation");
	}
	this._setRateName(null);
	this._setRateVersion(null);
	this._setCategory(category);
};
oFF.QMeasureCurrencyTranslation.prototype.getFixedCategory = function()
{
	return this.m_category;
};
oFF.QMeasureCurrencyTranslation.prototype.setFixedRateVersion = function(rateVersion)
{
	if (!this.supportsPlanningParameters())
	{
		throw oFF.XException.createIllegalStateException("Planning parameters not allowed in this Translation Operation");
	}
	this._setRateName(null);
	this._setCategory(null);
	this._setRateVersion(rateVersion);
};
oFF.QMeasureCurrencyTranslation.prototype.getFixedRateVersion = function()
{
	return this.m_rateVersion;
};
oFF.QMeasureCurrencyTranslation.prototype.setDynamicRateVersionAndCategory = function()
{
	if (!this.supportsPlanningParameters())
	{
		throw oFF.XException.createIllegalStateException("Planning parameters not allowed in this Translation Operation");
	}
	this._setRateName(null);
	this._setRateVersion(null);
	this._setCategory(null);
};
oFF.QMeasureCurrencyTranslation.prototype.setRateNameByFormulaItem = function(formulaItem)
{
	if (!this.supportsRateName())
	{
		throw oFF.XException.createIllegalStateException("The Currency Translation Object does not allow to set the rate name");
	}
	this._setRateType(null);
	this._setCategory(null);
	this._setRateVersion(null);
	this._setRateName(oFF.QCurrencyLookupValue.createByFormulaItem(this, formulaItem));
	return this.m_rateName;
};
oFF.QMeasureCurrencyTranslation.prototype.getMappedName = function(rateType)
{
	if (!this.needsRemapping(rateType))
	{
		return this.getName();
	}
	return oFF.XStringUtils.concatenate3(this.getName(), "@@@", rateType.getName());
};
oFF.QMeasureCurrencyTranslation.prototype.setMetadataDefined = function(metadataDefined)
{
	this.m_metadataDefined = metadataDefined;
};
oFF.QMeasureCurrencyTranslation.prototype.isMetadataDefined = function()
{
	return this.m_metadataDefined;
};
oFF.QMeasureCurrencyTranslation.prototype.isIgnore = function()
{
	var targetCurrencyVariable = this.getTargetCurrencyVariable();
	var externalVariable = oFF.isNull(targetCurrencyVariable) ? null : targetCurrencyVariable.getExternalRepresentation();
	if (oFF.notNull(externalVariable))
	{
		targetCurrencyVariable = externalVariable;
	}
	return oFF.notNull(targetCurrencyVariable) && (targetCurrencyVariable.isEmpty() || oFF.XStringUtils.isNullOrEmpty(targetCurrencyVariable.getValueByString()));
};
oFF.QMeasureCurrencyTranslation.prototype.needsRemapping = function(rateTypeLocal)
{
	return !this.getCurrencyTranslationManager().deriveRateTypeFromAccount() && this.supportsRateName() && this.supportsPlanningParameters() && oFF.QCurrencyLookupValue.isEmpty(this.m_rateName) && !oFF.CtRateType.isDefined(this.m_rateType) && oFF.CtRateType.isDefined(rateTypeLocal);
};
oFF.QMeasureCurrencyTranslation.prototype.isParametersComplete = function()
{
	return !this.isMissingRateName() && !this.isMissingReferenceDate() && !this.isMissingTargetCurrency();
};
oFF.QMeasureCurrencyTranslation.prototype._setRateName = function(rateName)
{
	this.m_rateName = rateName;
	this.notifyNodeChanged();
};
oFF.QMeasureCurrencyTranslation.prototype._setRateVersion = function(rateVersion)
{
	if (!oFF.XString.isEqual(this.m_rateVersion, rateVersion))
	{
		this.m_rateVersion = rateVersion;
		this.notifyNodeChanged();
	}
};
oFF.QMeasureCurrencyTranslation.prototype._setCategory = function(rateCategory)
{
	if (this.m_category !== rateCategory)
	{
		var oldValue = this.m_category;
		this.m_category = rateCategory;
		this.notifyPropertyConstantChanged(oFF.QCurrencyTranslationProperties.QY_CATEGORY, oldValue, rateCategory);
	}
};
oFF.QMeasureCurrencyTranslation.prototype._setRateType = function(rateType)
{
	if (this.m_rateType !== rateType)
	{
		var oldValue = this.m_rateType;
		this.m_rateType = rateType;
		this.notifyPropertyConstantChanged(oFF.QCurrencyTranslationProperties.QY_RATE_TYPE, oldValue, rateType);
	}
};

oFF.QDataCell = function() {};
oFF.QDataCell.prototype = new oFF.QModelComponent();
oFF.QDataCell.prototype._ff_c = "QDataCell";

oFF.QDataCell._create = function(parentNode, name)
{
	var cell = new oFF.QDataCell();
	cell.setupDataCell(parentNode, name);
	return cell;
};
oFF.QDataCell.prototype.m_disaggMode = null;
oFF.QDataCell.prototype.m_disaggRefCellName = null;
oFF.QDataCell.prototype.m_cumulation = false;
oFF.QDataCell.prototype.m_emphasized = false;
oFF.QDataCell.prototype.m_inputEnabled = false;
oFF.QDataCell.prototype.m_signReversal = false;
oFF.QDataCell.prototype.m_decimalPlaces = 0;
oFF.QDataCell.prototype.m_scalingFactor = 0;
oFF.QDataCell.prototype.m_baseCellValueType = null;
oFF.QDataCell.prototype.m_dimensionReference = null;
oFF.QDataCell.prototype.m_memberName1 = null;
oFF.QDataCell.prototype.m_memberName2 = null;
oFF.QDataCell.prototype.m_signReversalExplicitlySet = false;
oFF.QDataCell.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originDataCell = other;
	this.m_disaggMode = originDataCell.m_disaggMode;
	this.m_disaggRefCellName = originDataCell.m_disaggRefCellName;
	this.m_cumulation = originDataCell.m_cumulation;
	this.m_emphasized = originDataCell.m_emphasized;
	this.m_inputEnabled = originDataCell.m_inputEnabled;
	this.m_signReversal = originDataCell.m_signReversal;
	this.m_decimalPlaces = originDataCell.m_decimalPlaces;
	this.m_scalingFactor = originDataCell.m_scalingFactor;
	this.m_baseCellValueType = originDataCell.m_baseCellValueType;
	if (oFF.notNull(originDataCell.m_dimensionReference))
	{
		this.setDimensionReference(this.getDimensionAccessor().getDimensionByNameFromExistingMetadata(originDataCell.getDimensionReference().getName()));
	}
	this.m_memberName1 = originDataCell.m_memberName1;
	this.m_memberName2 = originDataCell.m_memberName2;
	this.m_signReversalExplicitlySet = originDataCell.m_signReversalExplicitlySet;
};
oFF.QDataCell.prototype.setupDataCell = function(parentNode, name)
{
	this.setupModelComponentWithName(parentNode, parentNode, name);
	this.m_baseCellValueType = null;
	this.m_decimalPlaces = -1;
	this.m_scalingFactor = 0;
};
oFF.QDataCell.prototype.releaseObject = function()
{
	this.m_disaggMode = null;
	this.m_disaggRefCellName = null;
	this.m_baseCellValueType = null;
	this.m_dimensionReference = oFF.XObjectExt.release(this.m_dimensionReference);
	this.m_memberName1 = null;
	this.m_memberName2 = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QDataCell.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.DATA_CELL;
};
oFF.QDataCell.prototype.getText = function()
{
	return this.getName();
};
oFF.QDataCell.prototype.setBaseCellValueType = function(cellValueType)
{
	this.m_baseCellValueType = cellValueType;
};
oFF.QDataCell.prototype.setDimensionReference = function(dimensionReference)
{
	this.m_dimensionReference = oFF.XWeakReferenceUtil.getWeakRef(dimensionReference);
};
oFF.QDataCell.prototype.getDimensionReference = function()
{
	return oFF.isNull(this.m_dimensionReference) ? null : oFF.XWeakReferenceUtil.getHardRef(this.m_dimensionReference);
};
oFF.QDataCell.prototype.isInputEnabled = function()
{
	return this.m_inputEnabled;
};
oFF.QDataCell.prototype.setInputEnabled = function(enabled)
{
	if (this.m_inputEnabled !== enabled)
	{
		this.m_inputEnabled = enabled;
		this.notifyPropertyBooleanChanged(oFF.QDataCellProperties.QY_INPUT_ENABLED, !enabled, enabled);
	}
};
oFF.QDataCell.prototype.setDisaggregationMode = function(mode)
{
	if (this.m_disaggMode !== mode)
	{
		var oldValue = this.m_disaggMode;
		this.m_disaggMode = mode;
		this.notifyPropertyConstantChanged(oFF.QDataCellProperties.QY_DISAGGREGATION_MODE, oldValue, mode);
	}
};
oFF.QDataCell.prototype.setDisaggregationRefCell = function(cell)
{
	if (oFF.isNull(cell))
	{
		if (oFF.notNull(this.m_disaggRefCellName))
		{
			this.notifyNodeChanged();
		}
		this.m_disaggRefCellName = null;
	}
	else
	{
		if (oFF.isNull(this.m_disaggRefCellName) || this.getDisaggregationRefCell() !== cell)
		{
			this.m_disaggRefCellName = cell.getName();
			this.notifyNodeChanged();
		}
	}
};
oFF.QDataCell.prototype.getDisaggregationRefCell = function()
{
	var refCellName = this.getDisaggregationRefCellName();
	var parentComponent = this.getParentComponent();
	return parentComponent.getByKey(refCellName);
};
oFF.QDataCell.prototype.getDisaggregationMode = function()
{
	var dataCellEntry = this.getDataCellEntry(false);
	if (oFF.notNull(dataCellEntry))
	{
		var entryDisaggregationMode = dataCellEntry.getDisaggregationMode();
		if (oFF.notNull(entryDisaggregationMode))
		{
			return entryDisaggregationMode;
		}
	}
	return this.m_disaggMode;
};
oFF.QDataCell.prototype.setDisaggregationRefCellName = function(name)
{
	this.m_disaggRefCellName = name;
};
oFF.QDataCell.prototype.getDisaggregationRefCellName = function()
{
	var dataCellEntry = this.getDataCellEntry(false);
	if (oFF.notNull(dataCellEntry))
	{
		var entryRefCellName = dataCellEntry.getDisaggregationRefCellName();
		if (oFF.XStringUtils.isNotNullAndNotEmpty(entryRefCellName))
		{
			return entryRefCellName;
		}
	}
	return this.m_disaggRefCellName;
};
oFF.QDataCell.prototype.getDataCellEntry = function(createIfNotExisting)
{
	var queryManager = this.getQueryManager();
	var resultSetContainer = queryManager.getActiveResultSetContainer();
	if (oFF.isNull(resultSetContainer) || resultSetContainer.getSyncState().isNotInSync())
	{
		return null;
	}
	if (!resultSetContainer.hasDataEntryCollection())
	{
		return null;
	}
	var dataEntries = resultSetContainer.getDataEntryCollection();
	if (createIfNotExisting)
	{
		return dataEntries.getDataCellEntry(this.getName());
	}
	return dataEntries.getDataCellEntryIfExisting(this.getName());
};
oFF.QDataCell.prototype.setDisaggregationModeForDataEntry = function(mode)
{
	var dataCellEntry = this.getDataCellEntry(true);
	if (oFF.notNull(dataCellEntry))
	{
		dataCellEntry.setDisaggregationMode(mode);
	}
};
oFF.QDataCell.prototype.setDisaggregationRefCellForDataEntry = function(cell)
{
	var dataCellEntry = this.getDataCellEntry(true);
	if (oFF.notNull(dataCellEntry))
	{
		dataCellEntry.setDisaggregationRefCellName(oFF.isNull(cell) ? null : cell.getName());
	}
};
oFF.QDataCell.prototype.getDecimalPlaces = function()
{
	return this.m_decimalPlaces;
};
oFF.QDataCell.prototype.setDecimalPlaces = function(places)
{
	if (this.m_decimalPlaces !== places)
	{
		var oldDecimalPlaces = this.m_decimalPlaces;
		this.m_decimalPlaces = places;
		this.notifyPropertyIntegerChanged(oFF.QDataCellProperties.QY_DECIMAL_PLACES, oldDecimalPlaces, places);
	}
};
oFF.QDataCell.prototype.getScalingFactor = function()
{
	return this.m_scalingFactor;
};
oFF.QDataCell.prototype.setScalingFactor = function(factor)
{
	if (this.m_scalingFactor !== factor)
	{
		var oldScalingFactor = this.m_scalingFactor;
		this.m_scalingFactor = factor;
		this.notifyPropertyIntegerChanged(oFF.QDataCellProperties.QY_SCALING_FACTOR, oldScalingFactor, factor);
	}
};
oFF.QDataCell.prototype.hasSignReversal = function()
{
	return this.m_signReversal;
};
oFF.QDataCell.prototype.setSignReversal = function(reverse)
{
	this.m_signReversalExplicitlySet = true;
	if (this.m_signReversal !== reverse)
	{
		this.m_signReversal = reverse;
		this.notifyPropertyBooleanChanged(oFF.QDataCellProperties.QY_SIGN_REVERSAL, !reverse, reverse);
	}
};
oFF.QDataCell.prototype.signReversalExplicitlySet = function()
{
	return this.m_signReversalExplicitlySet;
};
oFF.QDataCell.prototype.isEmphasized = function()
{
	return this.m_emphasized;
};
oFF.QDataCell.prototype.setEmphasized = function(emphazised)
{
	if (this.m_emphasized !== emphazised)
	{
		this.m_emphasized = emphazised;
		this.notifyPropertyBooleanChanged(oFF.QDataCellProperties.QY_EMPHASIZED, !emphazised, emphazised);
	}
};
oFF.QDataCell.prototype.isCumulated = function()
{
	return this.m_cumulation;
};
oFF.QDataCell.prototype.setCumulation = function(cumulate)
{
	if (this.m_cumulation !== cumulate)
	{
		this.m_cumulation = cumulate;
		this.notifyPropertyBooleanChanged(oFF.QDataCellProperties.QY_CUMULATION, !cumulate, cumulate);
	}
};
oFF.QDataCell.prototype.getBaseValueType = function()
{
	return this.m_baseCellValueType;
};
oFF.QDataCell.prototype.addDimensionMemberReference = function(name)
{
	if (oFF.isNull(this.m_memberName1))
	{
		this.m_memberName1 = name;
	}
	else if (oFF.isNull(this.m_memberName2))
	{
		this.m_memberName2 = name;
	}
};
oFF.QDataCell.prototype.hasMeasureReference = function(measureName)
{
	return oFF.XString.isEqual(this.m_memberName1, measureName) || oFF.XString.isEqual(this.m_memberName2, measureName);
};
oFF.QDataCell.prototype.hasMemberReference = function(strucMember)
{
	if (oFF.XString.isEqual(this.m_memberName1, strucMember.getName()))
	{
		return true;
	}
	return oFF.XString.isEqual(this.m_memberName2, strucMember.getName());
};
oFF.QDataCell.prototype.getReferenceStructureElement1 = function()
{
	return this.getReferenceStructureElement(this.m_memberName1);
};
oFF.QDataCell.prototype.getReferenceStructureElement2 = function()
{
	return this.getReferenceStructureElement(this.m_memberName2);
};
oFF.QDataCell.prototype.getReferenceStructureElement = function(memberName)
{
	if (oFF.isNull(memberName))
	{
		return null;
	}
	var measureStructure = this.getQueryModel().getMeasureDimension();
	if (oFF.notNull(measureStructure))
	{
		var member = measureStructure.getStructureMember(memberName);
		if (oFF.notNull(member))
		{
			return member;
		}
	}
	var nonMeasureStructure = this.getQueryModel().getNonMeasureDimension();
	return oFF.isNull(nonMeasureStructure) ? null : nonMeasureStructure.getStructureMember(memberName);
};
oFF.QDataCell.prototype.isUserAddedDataCell = function()
{
	var measure1UserDefined = false;
	var measure1 = this.getReferenceStructureElement1();
	if (oFF.notNull(measure1))
	{
		measure1UserDefined = !measure1.isCreatedFromMetadata();
	}
	var measure2 = this.getReferenceStructureElement2();
	if (oFF.isNull(measure2))
	{
		return measure1UserDefined;
	}
	return measure1UserDefined || !measure2.isCreatedFromMetadata();
};

oFF.QQueryCell = function() {};
oFF.QQueryCell.prototype = new oFF.QModelComponent();
oFF.QQueryCell.prototype._ff_c = "QQueryCell";

oFF.QQueryCell.create = function(context, name)
{
	var queryCell = new oFF.QQueryCell();
	queryCell.setupModelComponentWithName(context, context, name);
	queryCell.m_positions = oFF.XList.create();
	return queryCell;
};
oFF.QQueryCell.prototype.m_cellCalculationMember = null;
oFF.QQueryCell.prototype.m_positions = null;
oFF.QQueryCell.prototype.cloneOlapComponent = function(context, parent)
{
	var queryCell = oFF.QQueryCell.create(context, this.getName());
	var dimensionAccessor = context.getDimensionAccessor();
	var dimension = dimensionAccessor.getDimensionByName(this.m_cellCalculationMember.getDimension().getName());
	queryCell.m_cellCalculationMember = dimension.getStructureMember(this.m_cellCalculationMember.getName());
	var queryCellPosIt = this.m_positions.getIterator();
	while (queryCellPosIt.hasNext())
	{
		var queryCellPosition = queryCellPosIt.next();
		dimension = dimensionAccessor.getDimensionByName(queryCellPosition.getDimensionName());
		queryCell.addPosition(dimension.getStructureMember(queryCellPosition.getMemberName()));
	}
	return queryCell;
};
oFF.QQueryCell.prototype.releaseObject = function()
{
	this.m_cellCalculationMember = null;
	this.m_positions = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_positions);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QQueryCell.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.QUERY_CELL;
};
oFF.QQueryCell.prototype.getPositions = function()
{
	return this.m_positions;
};
oFF.QQueryCell.prototype.addPosition = function(member)
{
	var cellPosition = oFF.QQueryCellPosition.createCellPosition(member);
	this.m_positions.add(cellPosition);
	this.notifyNodeChanged();
	return cellPosition;
};
oFF.QQueryCell.prototype.clearPositions = function()
{
	this.m_positions.clear();
	this.notifyNodeChanged();
};
oFF.QQueryCell.prototype.setCellCalculationMember = function(member)
{
	this.m_cellCalculationMember = member;
	this.notifyNodeChanged();
};
oFF.QQueryCell.prototype.getCellCalculationMember = function()
{
	return this.m_cellCalculationMember;
};

oFF.QDimensionReadModeManager = function() {};
oFF.QDimensionReadModeManager.prototype = new oFF.QModelComponent();
oFF.QDimensionReadModeManager.prototype._ff_c = "QDimensionReadModeManager";

oFF.QDimensionReadModeManager._create = function(dimension)
{
	var readModeManager = new oFF.QDimensionReadModeManager();
	readModeManager.setupModelComponent(dimension, dimension);
	readModeManager.setupReadModeManager();
	return readModeManager;
};
oFF.QDimensionReadModeManager.prototype.m_readModes = null;
oFF.QDimensionReadModeManager.prototype.setupReadModeManager = function()
{
	this.m_readModes = oFF.XHashMapByString.create();
	this.m_readModes.put(oFF.QContextType.RESULT_SET.getName(), oFF.QDimensionReadMode.create(this));
	this.m_readModes.put(oFF.QContextType.SELECTOR.getName(), oFF.QDimensionReadMode.create(this));
	this.m_readModes.put(oFF.QContextType.VARIABLE.getName(), oFF.QDimensionReadMode.create(this));
};
oFF.QDimensionReadModeManager.prototype.releaseObject = function()
{
	this.m_readModes = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_readModes);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QDimensionReadModeManager.prototype.copyFromInternal = function(other, flags)
{
	var xOrigin = other;
	var contextName = oFF.QContextType.RESULT_SET.getName();
	this.m_readModes.getByKey(contextName).copyDimensionReadMode(xOrigin.m_readModes.getByKey(contextName));
	contextName = oFF.QContextType.SELECTOR.getName();
	this.m_readModes.getByKey(contextName).copyDimensionReadMode(xOrigin.m_readModes.getByKey(contextName));
	contextName = oFF.QContextType.VARIABLE.getName();
	this.m_readModes.getByKey(contextName).copyDimensionReadMode(xOrigin.m_readModes.getByKey(contextName));
};
oFF.QDimensionReadModeManager.prototype.mergeDeepRecursive = function(settings, other)
{
	var otherDim = other;
	this.setNewReadModes(otherDim, oFF.QContextType.RESULT_SET);
	this.setNewReadModes(otherDim, oFF.QContextType.SELECTOR);
	this.setNewReadModes(otherDim, oFF.QContextType.VARIABLE);
};
oFF.QDimensionReadModeManager.prototype.setNewReadModes = function(otherDim, context)
{
	var readModeContainer = this.m_readModes.getByKey(context.getName());
	readModeContainer.clearReadmode();
	var supportedReadModes = otherDim.getSupportedReadModes(context).getValuesAsReadOnlyList();
	var size = supportedReadModes.size();
	for (var idx = 0; idx < size; idx++)
	{
		readModeContainer.addSupportedReadMode(supportedReadModes.get(idx));
	}
	var activeReadMode = otherDim.getReadMode(context);
	var defaultReadMode = otherDim.getReadModeDefault(context);
	readModeContainer.setDefaultReadMode(defaultReadMode, otherDim.hasReadModeDefault(context));
	if (oFF.isNull(activeReadMode))
	{
		readModeContainer.setActiveReadMode(defaultReadMode);
	}
	else
	{
		readModeContainer.setActiveReadMode(activeReadMode);
	}
};
oFF.QDimensionReadModeManager.prototype.getSupportedReadModes = function(context)
{
	var readModeContainer = this.m_readModes.getByKey(context.getName());
	return readModeContainer.getSupportedReadModes();
};
oFF.QDimensionReadModeManager.prototype.supportsReadMode = function(context, readMode)
{
	return readMode === oFF.QMemberReadMode.DEFAULT_VALUE || this.getSupportedReadModes(context).contains(readMode);
};
oFF.QDimensionReadModeManager.prototype.getReadModeDefault = function(context)
{
	var readModeContainer = this.m_readModes.getByKey(context.getName());
	return readModeContainer.getDefaultReadMode();
};
oFF.QDimensionReadModeManager.prototype.hasReadModeDefault = function(context)
{
	var readModeContainer = this.m_readModes.getByKey(context.getName());
	return readModeContainer.hasReadModeDefault();
};
oFF.QDimensionReadModeManager.prototype.getReadMode = function(context)
{
	var readModeContainer = this.m_readModes.getByKey(context.getName());
	return readModeContainer.getActiveReadMode();
};
oFF.QDimensionReadModeManager.prototype.setReadMode = function(context, mode)
{
	var readModeContainer = this.m_readModes.getByKey(context.getName());
	var oldValue = readModeContainer.getActiveReadMode();
	readModeContainer.setActiveReadMode(mode);
	if (context === oFF.QContextType.RESULT_SET)
	{
		this.notifyPropertyConstantChanged(oFF.QDimensionProperties.QY_READ_MODE, oldValue, mode);
	}
	else if (context === oFF.QContextType.SELECTOR)
	{
		this.setDeltaPhase(oFF.QDeltaOperationPhase.NOTIFY_DO_NOT_RAISEEVENTS);
		this.notifyPropertyConstantChanged(oFF.QDimensionProperties.QY_SELECTOR_READ_MODE, oldValue, mode);
		this.resumeEventing();
	}
};
oFF.QDimensionReadModeManager.prototype.setReadModeGraceful = function(context, mode)
{
	var readModeContainer = this.m_readModes.getByKey(context.getName());
	var bestReadMode = readModeContainer.determineBestReadMode(mode);
	this.setReadMode(context, bestReadMode);
	return bestReadMode;
};
oFF.QDimensionReadModeManager.prototype.determineBestReadMode = function(context, mode)
{
	var readModeContainer = this.m_readModes.getByKey(context.getName());
	return readModeContainer.determineBestReadMode(mode);
};
oFF.QDimensionReadModeManager.prototype.addSupportedReadMode = function(context, mode)
{
	var readModeContainer = this.m_readModes.getByKey(context.getName());
	readModeContainer.addSupportedReadMode(mode);
};
oFF.QDimensionReadModeManager.prototype.clearReadModes = function(context)
{
	this.m_readModes.getByKey(context.getName()).clearReadmode();
};
oFF.QDimensionReadModeManager.prototype.setReadModeDefault = function(context, mode, modeIsDefinedByDimensionMetadata)
{
	var readModeContainer = this.m_readModes.getByKey(context.getName());
	readModeContainer.setDefaultReadMode(mode, modeIsDefinedByDimensionMetadata);
};

oFF.QDimensionSelector = function() {};
oFF.QDimensionSelector.prototype = new oFF.QModelComponent();
oFF.QDimensionSelector.prototype._ff_c = "QDimensionSelector";

oFF.QDimensionSelector.QY_UNIQUE_NAME = "UniqueName";
oFF.QDimensionSelector.m_wildcard = "*";
oFF.QDimensionSelector.create = function(dimension)
{
	var dimensionSelector = new oFF.QDimensionSelector();
	dimensionSelector.setupDimensionSelector(dimension);
	return dimensionSelector;
};
oFF.QDimensionSelector.prototype.m_selectorPagingStart = 0;
oFF.QDimensionSelector.prototype.m_selectorPagingEnd = 0;
oFF.QDimensionSelector.prototype.m_selectorMaxResultRecords = 0;
oFF.QDimensionSelector.prototype.m_selectorHierarchyNode = null;
oFF.QDimensionSelector.prototype.m_selectorHierarchyNodeName = null;
oFF.QDimensionSelector.prototype.m_selectorHierarchyNodeSid = null;
oFF.QDimensionSelector.prototype.m_selectorHierarchyNavigations = null;
oFF.QDimensionSelector.prototype.m_selectorHierarchyActive = false;
oFF.QDimensionSelector.prototype.m_selectorRootLevel = 0;
oFF.QDimensionSelector.prototype.m_selectorSorting = null;
oFF.QDimensionSelector.prototype.m_dimension = null;
oFF.QDimensionSelector.prototype.m_isGettingInterval = false;
oFF.QDimensionSelector.prototype.m_parentFilter = null;
oFF.QDimensionSelector.prototype.m_selectorFilterUsage = null;
oFF.QDimensionSelector.prototype.m_useDisplayKey = false;
oFF.QDimensionSelector.prototype.m_isUsingVisibilityFilter = false;
oFF.QDimensionSelector.prototype.m_useQueryDrillOperations = false;
oFF.QDimensionSelector.prototype.m_measureHelpMetadataSelector = null;
oFF.QDimensionSelector.prototype.m_sortType = null;
oFF.QDimensionSelector.prototype.setupDimensionSelector = function(dimension)
{
	this.setupModelComponent(dimension, dimension);
	this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
	this.m_selectorSorting = oFF.XSortDirection.DEFAULT_VALUE;
	this.m_selectorPagingEnd = -1;
	this.m_selectorPagingStart = 0;
	this.m_selectorMaxResultRecords = -1;
	this.m_selectorFilterUsage = oFF.QueryFilterUsage.SELECTOR_FILTER;
	this.m_selectorRootLevel = 0;
	this.m_selectorHierarchyActive = false;
	this.m_useDisplayKey = false;
	this.m_isUsingVisibilityFilter = false;
	this.m_isGettingInterval = false;
};
oFF.QDimensionSelector.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, null);
	var otherDimSelector = other;
	this.m_selectorRootLevel = otherDimSelector.m_selectorRootLevel;
};
oFF.QDimensionSelector.prototype.releaseObject = function()
{
	this.m_parentFilter = oFF.XObjectExt.release(this.m_parentFilter);
	this.m_selectorHierarchyNavigations = oFF.XObjectExt.release(this.m_selectorHierarchyNavigations);
	this.m_selectorSorting = null;
	this.m_selectorHierarchyNode = null;
	this.m_dimension = oFF.XObjectExt.release(this.m_dimension);
	this.m_selectorHierarchyNodeName = null;
	this.m_selectorHierarchyNodeSid = null;
	this.m_selectorFilterUsage = null;
	this.m_measureHelpMetadataSelector = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QDimensionSelector.prototype.createFilterOperation = function(field, lowValue, highValue, comparisonOperator)
{
	var newFilterOperation = oFF.QFactory.createFilterOperationWithOperator(this.getDimension(), field, comparisonOperator);
	newFilterOperation.getLow().setValue(lowValue);
	if (oFF.notNull(highValue))
	{
		newFilterOperation.getHigh().setValue(highValue);
	}
	return newFilterOperation;
};
oFF.QDimensionSelector.prototype.convertCartesianToComplex = function(cartesianProduct)
{
	var newFilterOr = oFF.QFactory.createFilterOr(this.getSelectorContainer());
	newFilterOr.add(cartesianProduct);
	this.getSelectorContainer().setComplexRoot(newFilterOr);
};
oFF.QDimensionSelector.prototype.addComplex = function(field, lowValue, highValue, comparisonOperator)
{
	var newFilterOperation = this.createFilterOperation(field, lowValue, highValue, comparisonOperator);
	if (this.m_selectorHierarchyActive)
	{
		newFilterOperation.setHierarchyName(this.getDimension().getHierarchyName());
	}
	var complexRoot = this.getComplexRoot();
	var finalFilterWrapper;
	if (complexRoot.getOlapComponentType() === oFF.FilterComponentType.AND || this.hasFilterOperationsForDimOnly(complexRoot, newFilterOperation.getDimensionName()))
	{
		finalFilterWrapper = complexRoot;
	}
	else
	{
		finalFilterWrapper = oFF.QFactory.createFilterAnd(complexRoot.getContext());
		finalFilterWrapper.add(complexRoot);
	}
	var filterOperationForTheSameDimension = this.getDirectChildFilterOperationForSameDimension(newFilterOperation, complexRoot.getChildren());
	if (oFF.notNull(filterOperationForTheSameDimension) && finalFilterWrapper.getOlapComponentType() !== oFF.FilterComponentType.OR)
	{
		var newFilterOr = oFF.QFactory.createFilterOr(complexRoot.getContext());
		newFilterOr.add(filterOperationForTheSameDimension);
		newFilterOr.add(newFilterOperation);
		var filterAsCollection = complexRoot;
		filterAsCollection.removeElement(filterOperationForTheSameDimension);
		if (filterAsCollection.hasElements())
		{
			var firstElement = filterAsCollection.getValuesAsReadOnlyList().get(0);
			filterAsCollection.removeElement(firstElement);
			finalFilterWrapper.add(firstElement);
		}
		finalFilterWrapper.add(newFilterOr);
	}
	else
	{
		finalFilterWrapper.add(newFilterOperation);
	}
	this.getSelectorContainer().setComplexRoot(finalFilterWrapper);
	return newFilterOperation;
};
oFF.QDimensionSelector.prototype.hasFilterOperationsForDimOnly = function(filterWrapper, dimName)
{
	var children = filterWrapper.getChildren();
	while (children.hasNext())
	{
		var child = children.next();
		if (child.getOlapComponentType() === oFF.FilterComponentType.OPERATION && !oFF.XString.isEqual(child.getDimension().getName(), dimName))
		{
			return false;
		}
		if (!this.hasFilterOperationsForDimOnly(child, dimName))
		{
			return false;
		}
	}
	return true;
};
oFF.QDimensionSelector.prototype.getDirectChildFilterOperationForSameDimension = function(newFilterOperation, children)
{
	while (children.hasNext())
	{
		var next = children.next();
		var olapComponentType = next.getOlapComponentType();
		if (olapComponentType === oFF.FilterComponentType.OPERATION)
		{
			var filterOperation = next;
			if (oFF.XString.isEqual(filterOperation.getDimensionName(), newFilterOperation.getDimensionName()))
			{
				return filterOperation;
			}
		}
	}
	return null;
};
oFF.QDimensionSelector.prototype.assertValueType2 = function(fieldValueType, valueValueType, isHigh, comparisonOperator)
{
	if (fieldValueType === valueValueType)
	{
		return;
	}
	if (fieldValueType === oFF.XValueType.DOUBLE || fieldValueType === oFF.XValueType.DECIMAL_FLOAT && valueValueType === oFF.XValueType.DOUBLE || valueValueType === oFF.XValueType.DECIMAL_FLOAT)
	{
		return;
	}
	if (valueValueType === oFF.XValueType.STRING && oFF.notNull(comparisonOperator) && (comparisonOperator.isTypeOf(oFF.ComparisonOperator.LIKE) || comparisonOperator.isTypeOf(oFF.ComparisonOperator.MATCH) || comparisonOperator.isTypeOf(oFF.ComparisonOperator.NOT_MATCH) || comparisonOperator.isTypeOf(oFF.ComparisonOperator.FUZZY)))
	{
		return;
	}
	if (isHigh)
	{
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("Value type of highValue and field don't match. Expected: ", fieldValueType.getName()));
	}
	throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("Value type of lowValue and field don't match. Expected: ", fieldValueType.getName()));
};
oFF.QDimensionSelector.prototype.assertComparisonOperator = function(comparisonOperator, field)
{
	var dimension = this.getDimension();
	if (dimension.isMeasureStructure())
	{
		if (comparisonOperator === oFF.ComparisonOperator.FUZZY || comparisonOperator === oFF.ComparisonOperator.MATCH || comparisonOperator === oFF.ComparisonOperator.NOT_MATCH || comparisonOperator === oFF.ComparisonOperator.SEARCH || comparisonOperator === oFF.ComparisonOperator.UNDEFINED || comparisonOperator === oFF.ComparisonOperator.IN)
		{
			throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2(comparisonOperator.getName(), " operator is not supported for ValueHelp if the dimension is a measure structure"));
		}
	}
	else
	{
		var capabilitiesByField = dimension.getFilterCapabilities().getFilterCapabilitiesByField(field);
		if (oFF.notNull(capabilitiesByField) && !capabilitiesByField.getSupportedComparisonOperators(oFF.SetSign.INCLUDING).contains(comparisonOperator))
		{
			throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate3(comparisonOperator.getName(), " operator is not supported for the field ", field.getName()));
		}
	}
};
oFF.QDimensionSelector.prototype.addFilterByField = function(field, lowValue, highValue, comparisonOperator, enforceDynamicContainer)
{
	if (oFF.isNull(field))
	{
		return null;
	}
	this.assertComparisonOperator(comparisonOperator, field);
	var fieldValueType = field.getValueType();
	var lowValueType = lowValue.getValueType();
	var dimension = field.getDimension();
	var replaceValueType = dimension.baseValueTypeOnLowValueType(lowValueType, false);
	if (replaceValueType)
	{
		fieldValueType = dimension.getFlatKeyField().getValueType();
	}
	this.assertValueType2(fieldValueType, lowValueType, false, comparisonOperator);
	if (oFF.notNull(highValue))
	{
		var highValueType = highValue.getValueType();
		this.assertValueType2(fieldValueType, highValueType, true, comparisonOperator);
	}
	var complexSelectionRoot = this.getComplexRoot();
	if (oFF.notNull(complexSelectionRoot))
	{
		return this.addComplex(field, lowValue, highValue, comparisonOperator);
	}
	var filterContainer;
	var filterUsage = this.getSelectorFilterUsage();
	var dim = this.getDimension();
	var qm = dim.getQueryModel();
	if (oFF.notNull(qm) && enforceDynamicContainer && (filterUsage === oFF.QueryFilterUsage.QUERY_FILTER || filterUsage === oFF.QueryFilterUsage.QUERY_FILTER_EFFECTIVE))
	{
		filterContainer = qm.getFilter().getDynamicFilter();
	}
	else
	{
		filterContainer = this.getSelectorContainer();
	}
	var cartesianProduct = filterContainer.getCartesianProductWithDefault();
	var memberSelection = cartesianProduct.getCartesianList(dim);
	if (oFF.isNull(memberSelection))
	{
		memberSelection = cartesianProduct.getCartesianListByField(field);
	}
	if (memberSelection.isEmpty())
	{
		memberSelection.setField(field);
	}
	else
	{
		if (memberSelection.getField() !== field)
		{
			if (filterUsage === oFF.QueryFilterUsage.SELECTOR_FILTER || filterUsage === oFF.QueryFilterUsage.QUERY_FILTER_EFFECTIVE)
			{
				var newFilterOr = oFF.QFactory.createFilterOr(filterContainer);
				for (var i = 0; i < memberSelection.size(); i++)
				{
					var filterOperationAlreadyInCartesianList = memberSelection.removeAt(i);
					if (this.m_selectorHierarchyActive)
					{
						filterOperationAlreadyInCartesianList.setHierarchyName(this.getDimension().getHierarchyName());
					}
					newFilterOr.add(filterOperationAlreadyInCartesianList);
				}
				var newFilterOperation = this.createFilterOperation(field, lowValue, highValue, comparisonOperator);
				if (this.m_selectorHierarchyActive)
				{
					newFilterOperation.setHierarchyName(this.getDimension().getHierarchyName());
				}
				newFilterOr.add(newFilterOperation);
				filterContainer.getModelCapabilities().setSupportsComplexFilter(true);
				var qFilterAnd = this.convertCartesianProductToSimpleAndFilter(cartesianProduct);
				if (oFF.isNull(qFilterAnd))
				{
					filterContainer.setComplexRoot(newFilterOr);
					return newFilterOperation;
				}
				qFilterAnd.add(newFilterOr);
				filterContainer.setComplexRoot(qFilterAnd);
				return newFilterOperation;
			}
			this.convertCartesianToComplex(cartesianProduct);
			return this.addComplex(field, lowValue, highValue, comparisonOperator);
		}
	}
	var element = memberSelection.addNewCartesianElement();
	element.configureDoubleParameterExpression(lowValue, highValue, comparisonOperator);
	if (this.m_selectorHierarchyActive)
	{
		memberSelection.setHierarchyName(dim.getHierarchyName());
	}
	return memberSelection;
};
oFF.QDimensionSelector.prototype.convertCartesianProductToSimpleAndFilter = function(cartesianProduct)
{
	var qFilterAnd = oFF.QFactory.createFilterAnd(cartesianProduct.getContext());
	for (var listIndex = 0; listIndex < cartesianProduct.size(); listIndex++)
	{
		var cartesianList = cartesianProduct.get(listIndex);
		if (cartesianList.hasElements())
		{
			qFilterAnd.add(cartesianList);
		}
	}
	return qFilterAnd.hasElements() ? qFilterAnd : null;
};
oFF.QDimensionSelector.prototype._getFilterField = function(isKeyField)
{
	if (isKeyField)
	{
		return this.m_useDisplayKey ? this.getSelectorDisplayKeyField() : this.getSelectorKeyField();
	}
	return this.getSelectorTextField();
};
oFF.QDimensionSelector.prototype.getSelectorDisplayKeyField = function()
{
	if (this.m_selectorHierarchyActive)
	{
		return this.getDimension().getHierarchyDisplayKeyField();
	}
	return this.getDimension().getFlatDisplayKeyField();
};
oFF.QDimensionSelector.prototype.getSelectorKeyField = function()
{
	if (this.m_selectorHierarchyActive)
	{
		return this.getDimension().getHierarchyKeyField();
	}
	return this.getDimension().getFlatKeyField();
};
oFF.QDimensionSelector.prototype.getSelectorTextField = function()
{
	var dim = this.getDimension();
	if (dim.isSelectorHierarchyActive())
	{
		return dim.getHierarchyTextField();
	}
	return dim.getFlatTextField();
};
oFF.QDimensionSelector.prototype.createXValue = function(value, field, comparisonOperator)
{
	if (oFF.isNull(field))
	{
		return null;
	}
	var keyType;
	var dimension = field.getDimension();
	if (oFF.notNull(comparisonOperator) && (comparisonOperator.isTypeOf(oFF.ComparisonOperator.LIKE) || comparisonOperator.isTypeOf(oFF.ComparisonOperator.MATCH) || comparisonOperator.isTypeOf(oFF.ComparisonOperator.NOT_MATCH) || comparisonOperator.isTypeOf(oFF.ComparisonOperator.FUZZY)))
	{
		keyType = oFF.XValueType.STRING;
	}
	else if (dimension.baseValueTypeOnSearchCriteria(value, dimension, false))
	{
		keyType = dimension.getFlatKeyField().getValueType();
	}
	else
	{
		keyType = field.getValueType();
	}
	return this.createXValuePlain(value, keyType);
};
oFF.QDimensionSelector.prototype.createXValuePlain = function(value, keyType)
{
	return oFF.XValueUtil.getValueFromString(value, keyType);
};
oFF.QDimensionSelector.prototype.setMeasureHelpMetadataSelector = function(measureHelpMetadataSelector)
{
	if (!this.getDimension().isMeasureStructure())
	{
		throw oFF.XException.createIllegalStateException(oFF.XStringUtils.concatenate3("Dimension ", this.getDimension().getName(), " is not a measure structure."));
	}
	this.m_measureHelpMetadataSelector = measureHelpMetadataSelector;
};
oFF.QDimensionSelector.prototype.getMeasureHelpMetadataSelector = function()
{
	return this.m_measureHelpMetadataSelector;
};
oFF.QDimensionSelector.prototype.setSelectorOrder = function(direction)
{
	this.m_selectorSorting = direction;
};
oFF.QDimensionSelector.prototype.getSelectorOrder = function()
{
	return this.m_selectorSorting;
};
oFF.QDimensionSelector.prototype.setSelectorPagingDefault = function()
{
	this.m_selectorPagingStart = 0;
	this.m_selectorPagingEnd = -1;
};
oFF.QDimensionSelector.prototype.setSelectorPaging = function(start, end)
{
	this.m_selectorPagingEnd = end;
	this.m_selectorPagingStart = start;
};
oFF.QDimensionSelector.prototype.getSelectorPagingStart = function()
{
	return this.m_selectorPagingStart;
};
oFF.QDimensionSelector.prototype.setSelectorPagingStart = function(start)
{
	this.m_selectorPagingStart = start;
};
oFF.QDimensionSelector.prototype.getSelectorPagingEnd = function()
{
	return this.m_selectorPagingEnd;
};
oFF.QDimensionSelector.prototype.setSelectorPagingEnd = function(end)
{
	this.m_selectorPagingEnd = end;
};
oFF.QDimensionSelector.prototype.setSelectorMaxResultRecords = function(maxResultRecords)
{
	this.m_selectorMaxResultRecords = maxResultRecords;
};
oFF.QDimensionSelector.prototype.getSelectorMaxResultRecords = function()
{
	return this.m_selectorMaxResultRecords;
};
oFF.QDimensionSelector.prototype.getSelectorFilterUsage = function()
{
	return this.m_selectorFilterUsage;
};
oFF.QDimensionSelector.prototype.setSelectorFilterUsage = function(queryFilterUsage)
{
	this.m_selectorFilterUsage = queryFilterUsage;
};
oFF.QDimensionSelector.prototype.getDimension = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_dimension);
};
oFF.QDimensionSelector.prototype._getSearchOperator = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.isNull(queryModel) || queryModel.getSystemType().isTypeOf(oFF.SystemType.ABAP))
	{
		return oFF.ComparisonOperator.MATCH;
	}
	return oFF.ComparisonOperator.LIKE;
};
oFF.QDimensionSelector.prototype.addSelectorForValuesAndExternalFilter = function(externalFilterName, values, searchMode)
{
	var externalFilterElement = this._getExternalFilterElement(externalFilterName);
	this._addSelectorForValuesAndExternalFilterInternal(externalFilterElement, values, searchMode);
};
oFF.QDimensionSelector.prototype._addSelectorForValuesAndExternalFilterInternal = function(extraFilterElement, values, searchMode)
{
	var queryModel = this.getQueryModel();
	var filter = queryModel.getFilter();
	filter.getValuehelpFilter().setComplexRoot(null);
	filter.getValuehelpFilter().setCartesianProduct(null);
	this.setSelectorFilterUsage(oFF.QueryFilterUsage.SELECTOR_FILTER);
	var filterElements = oFF.XList.create();
	if (oFF.notNull(extraFilterElement))
	{
		filterElements.add(extraFilterElement);
	}
	this._createFilterForMode(searchMode, values, filterElements);
	this._addElementsToSelector(filterElements);
};
oFF.QDimensionSelector.prototype._createFilterForMode = function(searchMode, values, filterElements)
{
	var isSearchForKey = searchMode === oFF.DimensionSearchMode.KEY || searchMode === oFF.DimensionSearchMode.KEY_OR_TEXT || searchMode === oFF.DimensionSearchMode.KEY_OR_RS_TEXT_FIELD;
	var isTextMode = searchMode === oFF.DimensionSearchMode.TEXT || searchMode === oFF.DimensionSearchMode.KEY_OR_TEXT;
	var isRsTextMode = searchMode === oFF.DimensionSearchMode.RS_TEXT_FIELD || searchMode === oFF.DimensionSearchMode.KEY_OR_RS_TEXT_FIELD;
	var isSearchForText = false;
	var isSearchForRsText = false;
	if (this.getQueryModel().getConvenienceCommands().isTypeOfBw())
	{
		isSearchForText = isTextMode;
		isSearchForRsText = !this.getDimension().isStructure() && isRsTextMode;
	}
	else
	{
		isSearchForText = isTextMode || isRsTextMode;
	}
	this._createFilterElements(isSearchForKey, isSearchForText, isSearchForRsText, values, filterElements);
};
oFF.QDimensionSelector.prototype._createFilterElements = function(isSearchForKey, isSearchForText, isSearchForRsText, values, filterElements)
{
	var keyCartList = null;
	if (isSearchForKey)
	{
		var filterKeyField = this._getFilterField(true);
		keyCartList = this._createCartesianListOfValues(values, filterKeyField);
	}
	var textCartList = null;
	if (isSearchForText || isSearchForRsText)
	{
		var filterTextField = null;
		if (isSearchForText)
		{
			filterTextField = this._getFilterField(false);
		}
		if (isSearchForRsText)
		{
			filterTextField = this._getFirstRsTextField();
		}
		textCartList = this._createCartesianListOfValues(values, filterTextField);
	}
	if (isSearchForKey && (isSearchForText || isSearchForRsText))
	{
		var keyOrTextList = oFF.QFactory.createFilterOr(this.getQueryModel());
		keyOrTextList.add(keyCartList);
		keyOrTextList.add(textCartList);
		filterElements.add(keyOrTextList);
	}
	else
	{
		if (oFF.notNull(keyCartList))
		{
			filterElements.add(keyCartList);
		}
		if (oFF.notNull(textCartList))
		{
			filterElements.add(textCartList);
		}
	}
};
oFF.QDimensionSelector.prototype._getFirstRsTextField = function()
{
	var dimension = this.getDimension();
	var mainAttribute = dimension.getMainAttribute();
	var resultSetFields = mainAttribute.getDefaultResultSetFields();
	for (var i = 0; i < resultSetFields.size(); i++)
	{
		var rsField = resultSetFields.get(i);
		if (oFF.PresentationType.isTextPresentation(rsField.getPresentationType()))
		{
			return rsField;
		}
	}
	return dimension.getTextField();
};
oFF.QDimensionSelector.prototype._createCartesianListOfValues = function(values, filterField)
{
	if (oFF.isNull(filterField) || oFF.isNull(values) || !values.hasElements())
	{
		return null;
	}
	var comparisonOperator = this._getSearchOperator();
	this.assertComparisonOperator(comparisonOperator, filterField);
	var queryModel = this.getQueryModel();
	var cartList = oFF.QFactory.createFilterCartesianList(queryModel);
	cartList.setFieldMetadata(filterField.getMetadata());
	cartList.setField(filterField);
	for (var i = 0; i < values.size(); i++)
	{
		var cartElement = cartList.addNewCartesianElement();
		cartElement.setLowString(values.get(i));
		cartElement.setComparisonOperator(comparisonOperator);
	}
	return cartList;
};
oFF.QDimensionSelector.prototype._getExternalFilterElement = function(externalFilterName)
{
	var extraFilterElement = null;
	var queryModel = this.getQueryModel();
	var extraFilter = queryModel.getFilter().getLinkedFilter(externalFilterName);
	if (oFF.notNull(extraFilter))
	{
		if (extraFilter.isCartesianProduct())
		{
			var cartesianProduct = extraFilter.getCartesianProduct();
			extraFilterElement = oFF.QFactory.createFilterCartesianProduct(queryModel);
			extraFilterElement.copyFrom(cartesianProduct, null);
		}
		else if (extraFilter.isComplexFilter())
		{
			var complexRoot = extraFilter.getComplexRoot();
			if (complexRoot.getOlapComponentType() === oFF.FilterComponentType.AND)
			{
				extraFilterElement = oFF.QFactory.createFilterAnd(queryModel);
				extraFilterElement.copyFrom(complexRoot, null);
			}
			else if (complexRoot.getOlapComponentType() === oFF.FilterComponentType.OR)
			{
				extraFilterElement = oFF.QFactory.createFilterOr(queryModel);
				extraFilterElement.copyFrom(complexRoot, null);
			}
		}
	}
	return extraFilterElement;
};
oFF.QDimensionSelector.prototype._addElementsToSelector = function(filterElements)
{
	if (oFF.isNull(filterElements) || !filterElements.hasElements())
	{
		return;
	}
	var queryModel = this.getQueryModel();
	var andFilter = oFF.QFactory.createFilterAnd(queryModel);
	for (var i = 0; i < filterElements.size(); i++)
	{
		var filterElement = filterElements.get(i);
		andFilter.add(filterElement);
	}
	var f4Container = queryModel.getFilter().getValuehelpFilter();
	f4Container.setComplexRoot(andFilter);
};
oFF.QDimensionSelector.prototype.addSearchForKey = function(searchValue)
{
	var comparisonOperator = this._getSearchOperator();
	var filterField = this._getFilterField(true);
	return this.addFilterByField(filterField, this.createXValue(searchValue, filterField, comparisonOperator), null, comparisonOperator, false);
};
oFF.QDimensionSelector.prototype.addSelectorFilterForKey = function(filterValue, comparisonOperator)
{
	var filterField = this._getFilterField(true);
	return this.addFilterByField(filterField, this.createXValue(filterValue, filterField, comparisonOperator), null, comparisonOperator, false);
};
oFF.QDimensionSelector.prototype.addSelectorFilterIntervalForKey = function(lowValue, highValue, comparisonOperator)
{
	var filterField = this._getFilterField(true);
	return this.addFilterByField(filterField, this.createXValue(lowValue, filterField, comparisonOperator), this.createXValue(highValue, filterField, comparisonOperator), comparisonOperator, false);
};
oFF.QDimensionSelector.prototype.addSearchForKeyUsingDynamicFilter = function(searchValue)
{
	this.setSelectorFilterUsage(oFF.QueryFilterUsage.QUERY_FILTER_EFFECTIVE);
	var comparisonOperator = this._getSearchOperator();
	var filterField = this._getFilterField(true);
	return this.addFilterByField(filterField, this.createXValue(searchValue, filterField, comparisonOperator), null, comparisonOperator, true);
};
oFF.QDimensionSelector.prototype.addSearchForTextUsingDynamicFilter = function(searchValue)
{
	this.setSelectorFilterUsage(oFF.QueryFilterUsage.QUERY_FILTER_EFFECTIVE);
	var textField = this._getFilterField(false);
	var comparisonOperator = this._getSearchOperator();
	return this.addFilterByField(textField, this.createXValue(searchValue, textField, comparisonOperator), null, comparisonOperator, true);
};
oFF.QDimensionSelector.prototype.addSearchForText = function(searchValue)
{
	return this.addSelectorFilterForText(searchValue, this._getSearchOperator());
};
oFF.QDimensionSelector.prototype.addSelectorFilterForText = function(filterValue, comparisonOperator)
{
	var filterField = this._getFilterField(false);
	if (oFF.isNull(filterField))
	{
		return null;
	}
	var isValidFilterForBwF4 = this.isValidFilterForBwF4(filterField.getMetadata(), this.getSelectorContainer());
	if (!filterField.isFilterable() && !isValidFilterForBwF4)
	{
		return null;
	}
	return this.addFilterByField(filterField, this.createXValue(filterValue, filterField, comparisonOperator), null, comparisonOperator, false);
};
oFF.QDimensionSelector.prototype.isValidFilterForBwF4 = function(fieldMd, filterExpression)
{
	if (oFF.isNull(fieldMd))
	{
		return false;
	}
	var supportsF4FilterForText = false;
	var supportsSidPresentation = false;
	var capabilities = this.getModelCapabilities();
	if (oFF.notNull(capabilities))
	{
		if (!capabilities.getSystemType().isTypeOf(oFF.SystemType.ABAP))
		{
			return false;
		}
		supportsF4FilterForText = capabilities.supportsF4FilterForTextField();
		supportsSidPresentation = capabilities.supportsSidPresentation();
	}
	var dimension = this.getDimension();
	var isSelectorUsage = oFF.notNull(dimension) && dimension.getSelectorFilterUsage() === oFF.QueryFilterUsage.SELECTOR_FILTER;
	var f4Container = oFF.notNull(filterExpression) && (oFF.XString.isEqual(filterExpression.getName(), oFF.QFilter.VALUEHELP_FILTER_CONTAINER) || oFF.XString.isEqual(filterExpression.getName(), oFF.QFilter.VALUEHELP_VISIBILITY_FILTER_CONTAINER));
	var filterOnHeirNavField = f4Container && isSelectorUsage && oFF.notNull(dimension) && oFF.XObjectExt.areEqual(fieldMd, dimension.getHierarchyNavigationField().getMetadata());
	if (supportsSidPresentation && filterOnHeirNavField)
	{
		return true;
	}
	return supportsF4FilterForText && f4Container && isSelectorUsage && fieldMd.getPresentationType().isTypeOf(oFF.PresentationType.ABSTRACT_TEXT);
};
oFF.QDimensionSelector.prototype.addSelectorFilter = function(filterValue, field, comparisonOperator)
{
	return this.addFilterByField(field, filterValue, null, comparisonOperator, false);
};
oFF.QDimensionSelector.prototype.addSelectorFilterInterval = function(lowValue, highValue, field, comparisonOperator)
{
	return this.addFilterByField(field, lowValue, highValue, comparisonOperator, false);
};
oFF.QDimensionSelector.prototype.clearSelectorFilter = function()
{
	var complexRoot = this.getComplexRoot();
	if (oFF.isNull(complexRoot))
	{
		var cartesianProduct = this.getCartesian();
		if (oFF.notNull(cartesianProduct))
		{
			cartesianProduct.clear();
		}
	}
	else
	{
		complexRoot.clear();
	}
};
oFF.QDimensionSelector.prototype.clearSelectorFilterByDimension = function(dimension)
{
	if (oFF.isNull(dimension))
	{
		return;
	}
	var cartesianProduct = this.getCartesian();
	if (oFF.notNull(cartesianProduct))
	{
		var memberFilter = cartesianProduct.getCartesianList(dimension);
		if (oFF.notNull(memberFilter))
		{
			memberFilter.clear();
		}
	}
};
oFF.QDimensionSelector.prototype.getSelectorContainer = function()
{
	var dim = this.getDimension();
	var queryModel = dim.getQueryModel();
	if (oFF.isNull(queryModel))
	{
		var planningCommand = dim.getContext();
		return planningCommand.getSelector().getValuehelpFilter();
	}
	var filter = queryModel.getFilter();
	if (oFF.QueryFilterUsage.QUERY_FILTER_EFFECTIVE === this.getSelectorFilterUsage())
	{
		return filter.getDynamicFilter();
	}
	return this.m_isUsingVisibilityFilter ? filter.getValuehelpVisibilityFilter() : filter.getValuehelpFilter();
};
oFF.QDimensionSelector.prototype._getFilter = function()
{
	var dim = this.getDimension();
	var queryModel = dim.getQueryModel();
	if (oFF.isNull(queryModel))
	{
		var planningCommand = dim.getContext();
		if (planningCommand.getSelector().isValueHelpFilterInitialized())
		{
			return planningCommand.getSelector().getValuehelpFilter();
		}
		return null;
	}
	var filter = queryModel.getFilter();
	if (oFF.QueryFilterUsage.QUERY_FILTER_EFFECTIVE === this.getSelectorFilterUsage() && filter.isDynamicFilterInitialized())
	{
		return filter.getDynamicFilter();
	}
	else if (this.m_isUsingVisibilityFilter && filter.isValueHelpVisibilityFilterInitialized())
	{
		return filter.getValuehelpVisibilityFilter();
	}
	else if (filter.isValueHelpFilterInitialized())
	{
		return filter.getValuehelpFilter();
	}
	return null;
};
oFF.QDimensionSelector.prototype.getComplexRoot = function()
{
	var selectorContainer = this._getFilter();
	return oFF.isNull(selectorContainer) ? null : selectorContainer.getComplexRoot();
};
oFF.QDimensionSelector.prototype.getCartesian = function()
{
	var selectorContainer = this._getFilter();
	return oFF.isNull(selectorContainer) ? null : selectorContainer.getCartesianProduct();
};
oFF.QDimensionSelector.prototype.removeFilterElement = function(filter)
{
	if (oFF.isNull(filter))
	{
		return;
	}
	var complexRoot = this.getComplexRoot();
	if (oFF.isNull(complexRoot))
	{
		var cartesianProduct = this.getCartesian();
		if (oFF.notNull(cartesianProduct))
		{
			cartesianProduct.removeElement(filter);
		}
	}
	else
	{
		complexRoot.removeElement(filter);
	}
};
oFF.QDimensionSelector.prototype.removeNavigationsWithDisplayLevelGreaterNewParent = function(newParentDisplayLevel)
{
	var idx = 0;
	while (idx < this.m_selectorHierarchyNavigations.size())
	{
		var node = this.m_selectorHierarchyNavigations.get(idx);
		if (node.getDisplayLevel() >= newParentDisplayLevel)
		{
			this.m_selectorHierarchyNavigations.removeElement(node);
		}
		else
		{
			idx++;
		}
	}
};
oFF.QDimensionSelector.prototype.setSelectorHierarchyNode = function(parent)
{
	if (oFF.isNull(this.m_selectorHierarchyNavigations))
	{
		this.m_selectorHierarchyNavigations = oFF.XList.create();
	}
	this.m_selectorHierarchyNode = parent;
	if (oFF.isNull(parent))
	{
		this.m_selectorHierarchyNavigations.clear();
		this.setSelectorHierarchyNodeByName(null);
	}
	else
	{
		this.removeNavigationsWithDisplayLevelGreaterNewParent(parent.getDisplayLevel());
		this.m_selectorHierarchyNavigations.add(parent);
		var filterValue;
		if (this.isSelectorFilteringOnDisplayKey())
		{
			filterValue = parent.getDimensionMember().getFieldValue(this.getSelectorDisplayKeyField()).getString();
		}
		else
		{
			filterValue = parent.getName();
		}
		this.setSelectorHierarchyNodeByName(filterValue);
	}
};
oFF.QDimensionSelector.prototype.getSelectorHierarchyNode = function()
{
	return this.m_selectorHierarchyNode;
};
oFF.QDimensionSelector.prototype.setSelectorUseQueryDrillOperations = function(useQueryDrillOperations)
{
	this.m_useQueryDrillOperations = useQueryDrillOperations;
};
oFF.QDimensionSelector.prototype.isSelectorUseQueryDrillOperations = function()
{
	return this.m_useQueryDrillOperations;
};
oFF.QDimensionSelector.prototype.clearSelectorHierarchyNode = function()
{
	this.setSelectorHierarchyNode(null);
	this.removeFilterElement(this.m_parentFilter);
};
oFF.QDimensionSelector.prototype.setSelectorInitialDrillLevel = function(relativeLevelCount)
{
	if (this.m_selectorRootLevel !== relativeLevelCount)
	{
		var oldValue = this.m_selectorRootLevel;
		this.m_selectorRootLevel = relativeLevelCount;
		this.notifyPropertyIntegerChanged(oFF.QDimensionProperties.QY_SELECTOR_INITIAL_DRILL_LEVEL, oldValue, relativeLevelCount);
	}
};
oFF.QDimensionSelector.prototype.getSelectorRootLevel = function()
{
	return this.m_selectorRootLevel;
};
oFF.QDimensionSelector.prototype.setSelectorHierarchyActive = function(isActive)
{
	this.m_selectorHierarchyActive = isActive;
};
oFF.QDimensionSelector.prototype.isSelectorHierarchyActive = function()
{
	return this.m_selectorHierarchyActive;
};
oFF.QDimensionSelector.prototype.setSelectorFilterOnDisplayKey = function(isUsingDisplayKey)
{
	this.m_useDisplayKey = isUsingDisplayKey;
};
oFF.QDimensionSelector.prototype.setSelectorUseVisibilityFilter = function(isUsingVisibilityFilter)
{
	var modelCapabilities = this.getModelCapabilities();
	this.m_isUsingVisibilityFilter = isUsingVisibilityFilter && oFF.notNull(modelCapabilities) && modelCapabilities.supportsVisibilityFilter();
};
oFF.QDimensionSelector.prototype.isSelectorFilteringOnDisplayKey = function()
{
	return this.m_useDisplayKey;
};
oFF.QDimensionSelector.prototype.setSelectorGettingInterval = function(doGetInterval)
{
	this.m_isGettingInterval = doGetInterval;
	return this.isSelectorGettingInterval();
};
oFF.QDimensionSelector.prototype.isSelectorGettingInterval = function()
{
	return this.m_isGettingInterval && !this.m_selectorHierarchyActive;
};
oFF.QDimensionSelector.prototype.setSelectorHierarchyNodeByName = function(parent)
{
	this.removeFilterElement(this.m_parentFilter);
	this.m_selectorHierarchyNodeName = parent;
	if (oFF.notNull(parent))
	{
		this.m_parentFilter = this.addSelectorFilterForKey(parent, oFF.ComparisonOperator.EQUAL);
	}
};
oFF.QDimensionSelector.prototype.getSelectorHierarchyNodeName = function()
{
	return this.m_selectorHierarchyNodeName;
};
oFF.QDimensionSelector.prototype.setSelectorHierarchyWithNodeSid = function(nodeSid, nodeName)
{
	var qm = this.getQueryModel();
	var capabilities = qm.getModelCapabilities();
	if (oFF.XStringUtils.isNullOrEmpty(nodeSid) || oFF.notNull(capabilities) && !capabilities.supportsSidPresentation())
	{
		this.setSelectorHierarchyNodeByName(nodeName);
	}
	else
	{
		this.removeFilterElement(this.m_parentFilter);
		this.m_selectorHierarchyNodeSid = nodeSid;
		this.m_selectorHierarchyNodeName = nodeName;
		var filterField = this.getDimension().getHierarchyNavigationField();
		if (oFF.notNull(filterField))
		{
			this.m_parentFilter = this.addFilterByField(filterField, this.createXValuePlain(nodeSid, filterField.getValueType()), null, oFF.ComparisonOperator.EQUAL, false);
		}
		else
		{
			throw oFF.XException.createIllegalStateException("Filtering on non existing field");
		}
	}
};
oFF.QDimensionSelector.prototype.getSelectorHierarchyNodeSid = function()
{
	return this.m_selectorHierarchyNodeSid;
};
oFF.QDimensionSelector.prototype.processIsNodeChildOfParent = function(nodeName, parentName, syncType, listener, customIdentifier)
{
	var dim = this.getDimension();
	if (!dim.getModelCapabilities().supportsUniqueHierarchyPath())
	{
		return false;
	}
	if (oFF.XStringUtils.isNullOrEmpty(nodeName) || oFF.XStringUtils.isNullOrEmpty(parentName))
	{
		return false;
	}
	if (!this.m_selectorHierarchyActive)
	{
		return false;
	}
	if (oFF.XString.isEqual(nodeName, parentName))
	{
		return false;
	}
	var pathField = dim.getHierarchyPathField();
	if (oFF.isNull(pathField))
	{
		return false;
	}
	var selectorFields = dim.getSelectorFields();
	var isPathFieldContained = selectorFields.contains(pathField);
	if (!isPathFieldContained)
	{
		selectorFields.add(pathField);
	}
	var pagingStartCache = this.m_selectorPagingStart;
	var pagingEndCache = this.m_selectorPagingEnd;
	this.setSelectorPagingDefault();
	var cartesianDimensionList = this.getSelectorContainer().getCartesianProductWithDefault().getCartesianListWithDefault(dim);
	var childFilter = cartesianDimensionList.addNewCartesianElement();
	childFilter.setField(this.getSelectorKeyField());
	childFilter.setComparisonOperator(oFF.ComparisonOperator.EQUAL);
	childFilter.setLowString(nodeName);
	cartesianDimensionList.setHierarchyName(dim.getHierarchyName());
	var processMemberHelp = dim.processValueHelp(syncType, oFF.ValueHelpListenerDecorator.create(listener), customIdentifier);
	this.m_selectorPagingStart = pagingStartCache;
	this.m_selectorPagingEnd = pagingEndCache;
	cartesianDimensionList.removeElement(childFilter);
	oFF.MessageUtil.checkNoError(processMemberHelp);
	var data = processMemberHelp.getData();
	if (data.isEmpty())
	{
		return false;
	}
	var childNode = null;
	var nodeIterator = data.getIterator();
	while (nodeIterator.hasNext())
	{
		var next = nodeIterator.next();
		if (oFF.XString.isEqual(next.getName(), nodeName))
		{
			childNode = next;
			break;
		}
	}
	oFF.XObjectExt.release(nodeIterator);
	if (oFF.isNull(childNode))
	{
		return false;
	}
	var fieldValue = childNode.getDimensionMember().getFieldValue(pathField);
	var stringValue = fieldValue.getString();
	var parser = oFF.JsonParserFactory.newInstance();
	var hierarchyPathStructure = parser.parse(stringValue);
	oFF.XObjectExt.release(parser);
	var uniqueHierarchyPath = hierarchyPathStructure.getListByKey(oFF.QDimensionSelector.QY_UNIQUE_NAME);
	for (var idx = 0; idx < uniqueHierarchyPath.size(); idx++)
	{
		if (oFF.XString.isEqual(uniqueHierarchyPath.getStringAt(idx), parentName))
		{
			return true;
		}
	}
	return false;
};
oFF.QDimensionSelector.prototype.processMeasureHelp = function()
{
	var dim = this.getDimension();
	var allStructureMembers = dim.getAllStructureMembers();
	var measureList = oFF.XList.create();
	var messageManager = oFF.MessageManager.createMessageManagerExt(this.getSession());
	var selectionContainer;
	var selectorFilterUsage = this.getSelectorFilterUsage();
	if (selectorFilterUsage === oFF.QueryFilterUsage.QUERY_FILTER)
	{
		selectionContainer = dim.getQueryModel().getFilter().getDynamicFilter();
	}
	else if (selectorFilterUsage === oFF.QueryFilterUsage.QUERY_FILTER_EFFECTIVE)
	{
		selectionContainer = dim.getQueryModel().getFilter().getEffectiveFilter();
	}
	else if (selectorFilterUsage === oFF.QueryFilterUsage.SELECTOR_FILTER)
	{
		selectionContainer = this._getFilter();
	}
	else
	{
		messageManager.addWarning(oFF.ErrorCodes.INVALID_OPERATOR, "Filter on other dimensions not supported for measurehelp.");
		selectionContainer = null;
	}
	var cartesianList = null;
	if (oFF.notNull(selectionContainer) && selectionContainer.isCartesianProduct())
	{
		var cartesianProduct = selectionContainer.getCartesianProduct();
		if (oFF.notNull(cartesianProduct))
		{
			cartesianList = cartesianProduct.getCartesianListByDimensionName(dim.getName());
		}
	}
	else
	{
		messageManager.addWarning(oFF.ErrorCodes.INVALID_OPERATOR, "Complex filters are ignored for measurehelp.");
	}
	var measureSize = allStructureMembers.size();
	var measureIdx;
	for (measureIdx = 0; measureIdx < measureSize; measureIdx++)
	{
		var measure = allStructureMembers.get(measureIdx);
		if (this.measureMatchesFilter(measure, cartesianList) && this.measureMatchesSelector(measure))
		{
			measureList.add(oFF.QFactory.createMeasureHelpNode(measure.getName(), measure));
		}
	}
	var end = this.getSelectorPagingEnd();
	if (end < 0 || end > measureSize)
	{
		end = measureSize;
	}
	while (end < measureList.size())
	{
		measureList.removeAt(measureList.size() - 1);
	}
	var start = this.getSelectorPagingStart();
	while (start > 0)
	{
		measureList.removeAt(0);
		start--;
	}
	var selectorOrder = this.getSelectorOrder();
	if (selectorOrder === oFF.XSortDirection.ASCENDING || selectorOrder === oFF.XSortDirection.DESCENDING)
	{
		measureList.sortByDirection(selectorOrder);
	}
	return oFF.ExtResult.create(measureList, messageManager);
};
oFF.QDimensionSelector.prototype.measureMatchesSelector = function(measure)
{
	var match = oFF.isNull(this.m_measureHelpMetadataSelector);
	if (!match)
	{
		match = this.m_measureHelpMetadataSelector.getDataType() === null || measure.getDataType() === this.m_measureHelpMetadataSelector.getDataType();
		match = match && (this.m_measureHelpMetadataSelector.getMeasureType() === null || oFF.XObjectExt.areEqual(measure.getMemberType(), this.m_measureHelpMetadataSelector.getMeasureType()));
		match = match && (this.m_measureHelpMetadataSelector.getNumericPrecision() === null || oFF.XObjectExt.areEqual(measure.getNumericPrecision(), this.m_measureHelpMetadataSelector.getNumericPrecision()));
		match = match && (this.m_measureHelpMetadataSelector.getNumericScale() === null || oFF.XObjectExt.areEqual(measure.getNumericScale(), this.m_measureHelpMetadataSelector.getNumericScale()));
		match = match && (this.m_measureHelpMetadataSelector.getNumericShift() === null || oFF.XObjectExt.areEqual(measure.getNumericShift(), this.m_measureHelpMetadataSelector.getNumericShift()));
		match = match && (this.m_measureHelpMetadataSelector.getNumericPrecision() === null || oFF.XObjectExt.areEqual(measure.getNumericPrecision(), this.m_measureHelpMetadataSelector.getNumericPrecision()));
		match = match && (this.m_measureHelpMetadataSelector.getDataTypeScale() === null || oFF.XObjectExt.areEqual(measure.getDataTypeScale(), this.m_measureHelpMetadataSelector.getDataTypeScale()));
		match = match && (this.m_measureHelpMetadataSelector.getDataTypePrecision() === null || oFF.XObjectExt.areEqual(measure.getDataTypePrecision(), this.m_measureHelpMetadataSelector.getDataTypePrecision()));
		match = match && (this.m_measureHelpMetadataSelector.getRateType() === null || measure.getRateType() === this.m_measureHelpMetadataSelector.getRateType());
		match = match && (this.m_measureHelpMetadataSelector.getUnitDimensionName() === null || oFF.XString.isEqual(measure.getUnitDimensionName(), this.m_measureHelpMetadataSelector.getUnitDimensionName()));
		match = match && (this.m_measureHelpMetadataSelector.getUnitDimensionProperty() === null || oFF.XString.isEqual(measure.getUnitDimensionProperty(), this.m_measureHelpMetadataSelector.getUnitDimensionProperty()));
		match = match && (this.m_measureHelpMetadataSelector.getUnitFixed() === null || oFF.XString.isEqual(measure.getUnitFixed(), this.m_measureHelpMetadataSelector.getUnitFixed()));
		match = match && (this.m_measureHelpMetadataSelector.getUnitName() === null || oFF.XString.isEqual(measure.getUnitName(), this.m_measureHelpMetadataSelector.getUnitName()));
		match = match && (this.m_measureHelpMetadataSelector.getUnitTextName() === null || oFF.XString.isEqual(measure.getUnitTextName(), this.m_measureHelpMetadataSelector.getUnitTextName()));
		match = match && (this.m_measureHelpMetadataSelector.getUnitType() === null || measure.getUnitType() === this.m_measureHelpMetadataSelector.getUnitType());
		match = match && (this.m_measureHelpMetadataSelector.getDataTypeInternal() === null || measure.getDataTypeInternal() === this.m_measureHelpMetadataSelector.getDataTypeInternal());
	}
	return match;
};
oFF.QDimensionSelector.prototype.measureMatchesLike = function(op, isIncluding, text)
{
	var searchPattern = op.getLow().getString();
	var startsWithWildcard = oFF.XString.startsWith(searchPattern, oFF.QDimensionSelector.m_wildcard);
	var endsWithWildcard = oFF.XString.endsWith(searchPattern, oFF.QDimensionSelector.m_wildcard);
	var start = 0;
	if (startsWithWildcard)
	{
		start = 1;
	}
	var end = oFF.XString.size(searchPattern);
	if (endsWithWildcard)
	{
		end = oFF.XString.size(searchPattern) - 1;
	}
	if (startsWithWildcard || endsWithWildcard)
	{
		searchPattern = oFF.XString.substring(searchPattern, start, end);
	}
	var measureNameContained = oFF.XString.containsString(text, searchPattern);
	if (measureNameContained && isIncluding)
	{
		return true;
	}
	return !measureNameContained && !isIncluding;
};
oFF.QDimensionSelector.prototype.measureMatchesFilter = function(measure, cartesianList)
{
	if (oFF.isNull(cartesianList))
	{
		return true;
	}
	for (var filterIdx = 0; filterIdx < cartesianList.size(); filterIdx++)
	{
		var op = cartesianList.getOp(filterIdx);
		var comparisonOperator = op.getComparisonOperator();
		var text;
		if (oFF.XString.isEqual(op.getField().getName(), this.getSelectorKeyField().getName()))
		{
			text = measure.getName();
		}
		else
		{
			text = measure.getText();
		}
		var measureNameCompare = oFF.XString.compare(text, op.getLow().getString());
		var isIncluding = op.getSetSign() === oFF.SetSign.INCLUDING;
		if (comparisonOperator === oFF.ComparisonOperator.EQUAL)
		{
			if (measureNameCompare === 0 && isIncluding)
			{
				return true;
			}
			if (measureNameCompare !== 0 && !isIncluding)
			{
				return true;
			}
		}
		else if (comparisonOperator === oFF.ComparisonOperator.NOT_EQUAL)
		{
			if (measureNameCompare !== 0 && isIncluding)
			{
				return true;
			}
			if (measureNameCompare === 0 && !isIncluding)
			{
				return true;
			}
		}
		else if (comparisonOperator === oFF.ComparisonOperator.LIKE)
		{
			return this.measureMatchesLike(op, isIncluding, text);
		}
		else if (comparisonOperator === oFF.ComparisonOperator.LESS_THAN)
		{
			if (measureNameCompare < 0 && isIncluding)
			{
				return true;
			}
			if (measureNameCompare >= 0 && !isIncluding)
			{
				return true;
			}
		}
		else if (comparisonOperator === oFF.ComparisonOperator.LESS_EQUAL)
		{
			if (measureNameCompare <= 0 && isIncluding)
			{
				return true;
			}
			if (measureNameCompare > 0 && !isIncluding)
			{
				return true;
			}
		}
		else if (comparisonOperator === oFF.ComparisonOperator.GREATER_THAN)
		{
			if (measureNameCompare > 0 && isIncluding)
			{
				return true;
			}
			if (measureNameCompare <= 0 && !isIncluding)
			{
				return true;
			}
		}
		else if (comparisonOperator === oFF.ComparisonOperator.GREATER_EQUAL)
		{
			if (measureNameCompare >= 0 && isIncluding)
			{
				return true;
			}
			if (measureNameCompare < 0 && !isIncluding)
			{
				return true;
			}
		}
		else if (comparisonOperator === oFF.ComparisonOperator.BETWEEN)
		{
			var measureNameCompareBetween = oFF.XString.compare(text, op.getHigh().getString());
			if (measureNameCompare >= 0 && measureNameCompareBetween <= 0 && isIncluding)
			{
				return true;
			}
			if ((measureNameCompare < 0 || measureNameCompareBetween > 0) && !isIncluding)
			{
				return true;
			}
		}
		else if (comparisonOperator === oFF.ComparisonOperator.BETWEEN_EXCLUDING)
		{
			var measureNameCompareBetweenExcluding = oFF.XString.compare(text, op.getHigh().getString());
			if (measureNameCompare > 0 && measureNameCompareBetweenExcluding < 0 && isIncluding)
			{
				return true;
			}
			if ((measureNameCompare <= 0 || measureNameCompareBetweenExcluding >= 0) && !isIncluding)
			{
				return true;
			}
		}
	}
	return false;
};
oFF.QDimensionSelector.prototype.setSelectorComplexSelectionRoot = function(complexSelection)
{
	this.getSelectorContainer().setComplexRoot(complexSelection);
};
oFF.QDimensionSelector.prototype.getNavigationNodes = function()
{
	return this.m_selectorHierarchyNavigations;
};
oFF.QDimensionSelector.prototype.mergeDeepRecursive = function(settings, other)
{
	var otherSel = other;
	this.m_selectorHierarchyActive = otherSel.isSelectorHierarchyActive();
};
oFF.QDimensionSelector.prototype.setSelectorSortType = function(sortType)
{
	this.m_sortType = sortType;
};
oFF.QDimensionSelector.prototype.getSelectorSortType = function()
{
	return this.m_sortType;
};

oFF.QFormulaCalcDimProperties = function() {};
oFF.QFormulaCalcDimProperties.prototype = new oFF.QModelComponent();
oFF.QFormulaCalcDimProperties.prototype._ff_c = "QFormulaCalcDimProperties";

oFF.QFormulaCalcDimProperties._createFormulaCalcDimProperties = function(context, parent)
{
	var properties = new oFF.QFormulaCalcDimProperties();
	properties.setContext(context);
	properties.setParent(parent);
	properties._setupFormulaCalcDimProperties(context);
	return properties;
};
oFF.QFormulaCalcDimProperties.prototype.m_formulaCalcFields = null;
oFF.QFormulaCalcDimProperties.prototype.m_aggregationFieldNames = null;
oFF.QFormulaCalcDimProperties.prototype.m_aggregationDimensions = null;
oFF.QFormulaCalcDimProperties.prototype.m_filterContext = null;
oFF.QFormulaCalcDimProperties.prototype.m_isApplyAdditionalFilterContext = false;
oFF.QFormulaCalcDimProperties.prototype.m_filterIdsToApply = null;
oFF.QFormulaCalcDimProperties.prototype._setupFormulaCalcDimProperties = function(context)
{
	this.m_formulaCalcFields = oFF.QFieldList.createFieldList(this.getParent(), "FormulaCalcFields");
	this.m_aggregationFieldNames = oFF.XListOfString.create();
	this.m_filterContext = oFF.QFactory.createFilterExpression(context, this);
	this.m_aggregationDimensions = oFF.XList.create();
	this.m_isApplyAdditionalFilterContext = false;
	this.m_filterIdsToApply = oFF.XListOfString.create();
};
oFF.QFormulaCalcDimProperties.prototype.copyFromInternal = function(other, flags)
{
	var otherObj = other;
	this.m_formulaCalcFields.clear();
	var fieldsIter = otherObj.m_formulaCalcFields.getIterator();
	var context = this.getContext();
	var parentDimension = this.getParent();
	while (fieldsIter.hasNext())
	{
		var origField = fieldsIter.next();
		var cloneField = oFF.QFieldFormulaCalc._createFormulaCalcField(context, parentDimension, origField.getPresentationType(), origField.getName());
		cloneField.copyFrom(origField, flags);
		this.m_formulaCalcFields.add(cloneField);
	}
	this.m_aggregationFieldNames = otherObj.m_aggregationFieldNames.createListOfStringCopy();
	this.m_filterContext.copyFrom(otherObj.m_filterContext, flags);
	this.m_aggregationDimensions.clear();
	var aggregationDimensionsIter = otherObj.m_aggregationDimensions.getIterator();
	while (aggregationDimensionsIter.hasNext())
	{
		var aggregationDimension = aggregationDimensionsIter.next();
		this.addAdditionalAggregationDimension(aggregationDimension.getDimensionName(), aggregationDimension.getHierarchyName(), aggregationDimension.activateHierarchy());
	}
	this.m_isApplyAdditionalFilterContext = otherObj.m_isApplyAdditionalFilterContext;
	this.m_filterIdsToApply = otherObj.m_filterIdsToApply.createListOfStringCopy();
};
oFF.QFormulaCalcDimProperties.prototype.releaseObject = function()
{
	this.m_formulaCalcFields = oFF.XObjectExt.release(this.m_formulaCalcFields);
	this.m_aggregationFieldNames = oFF.XObjectExt.release(this.m_aggregationFieldNames);
	this.m_aggregationDimensions = oFF.XObjectExt.release(this.m_aggregationDimensions);
	this.m_filterContext = oFF.XObjectExt.release(this.m_filterContext);
	this.m_filterIdsToApply = oFF.XObjectExt.release(this.m_filterIdsToApply);
};
oFF.QFormulaCalcDimProperties.prototype.reset = function()
{
	this.m_aggregationFieldNames.clear();
	this.m_aggregationDimensions.clear();
	if (this.m_filterContext.isCartesianProduct())
	{
		this.m_filterContext.getCartesianProduct().clear();
	}
	else if (this.m_filterContext.isComplexFilter())
	{
		this.m_filterContext.setComplexRoot(null);
	}
	this.m_formulaCalcFields.clear();
	this.m_isApplyAdditionalFilterContext = false;
	this.m_filterIdsToApply.clear();
	this.notifyNodeChanged();
};
oFF.QFormulaCalcDimProperties.prototype.addNewFormulaCalcField = function(presentationType, name)
{
	var field = oFF.QFieldFormulaCalc._createFormulaCalcField(this.getContext(), this.getParent(), presentationType, name);
	this.m_formulaCalcFields.add(field);
	field.addSecondaryParent(this);
	this.notifyNodeChanged();
	return field;
};
oFF.QFormulaCalcDimProperties.prototype.removeFormulaCalcFieldByName = function(name)
{
	var field = this.m_formulaCalcFields.getFieldByName(name);
	this.m_formulaCalcFields.removeElement(field);
	this.notifyNodeChanged();
};
oFF.QFormulaCalcDimProperties.prototype.getFilterContext = function()
{
	return this.m_filterContext;
};
oFF.QFormulaCalcDimProperties.prototype.getAggregationFieldNames = function()
{
	return this.m_aggregationFieldNames;
};
oFF.QFormulaCalcDimProperties.prototype.addAggregationFieldName = function(fieldName)
{
	this.m_aggregationFieldNames.add(fieldName);
	this.notifyNodeChanged();
};
oFF.QFormulaCalcDimProperties.prototype.removeAggregationFieldName = function(fieldName)
{
	this.m_aggregationFieldNames.removeElement(fieldName);
	this.notifyNodeChanged();
};
oFF.QFormulaCalcDimProperties.prototype.getAdditionalAggregationDimensions = function()
{
	return this.m_aggregationDimensions;
};
oFF.QFormulaCalcDimProperties.prototype.addAdditionalAggregationDimension = function(dimensionName, hierarchyName, activateHierarchy)
{
	this.m_aggregationDimensions.add(oFF.QAggregationDimension.createAggregationDimension(dimensionName, hierarchyName, activateHierarchy));
	this.notifyNodeChanged();
};
oFF.QFormulaCalcDimProperties.prototype.removeAdditionalAggregationDimensionByName = function(dimensionName)
{
	var index = -1;
	for (var i = 0; i < this.m_aggregationDimensions.size(); i++)
	{
		if (oFF.XString.isEqual(this.m_aggregationDimensions.get(i).getDimensionName(), dimensionName))
		{
			index = i;
			break;
		}
	}
	if (index > -1)
	{
		this.m_aggregationDimensions.removeAt(index);
		this.notifyNodeChanged();
	}
};
oFF.QFormulaCalcDimProperties.prototype.getFormulaCalcFields = function()
{
	return this.m_formulaCalcFields;
};
oFF.QFormulaCalcDimProperties.prototype.isApplyAdditionalFilterContext = function()
{
	return this.m_isApplyAdditionalFilterContext;
};
oFF.QFormulaCalcDimProperties.prototype.setIsApplyAdditionalFilterContext = function(isApplyAdditionalFilterContext)
{
	this.m_isApplyAdditionalFilterContext = isApplyAdditionalFilterContext;
};
oFF.QFormulaCalcDimProperties.prototype.getFilterIdsToApply = function()
{
	return this.m_filterIdsToApply;
};
oFF.QFormulaCalcDimProperties.prototype.addFilterIdsToApply = function(filterId)
{
	if (!this.m_filterIdsToApply.contains(filterId))
	{
		this.m_filterIdsToApply.add(filterId);
	}
};

oFF.QSelectValue = function() {};
oFF.QSelectValue.prototype = new oFF.QModelComponent();
oFF.QSelectValue.prototype._ff_c = "QSelectValue";

oFF.QSelectValue._createDimensionElement2 = function(context, selectField, hierarchyName, value)
{
	var newObject = new oFF.QSelectValue();
	newObject.setupSelectElement(context, selectField, hierarchyName, value);
	return newObject;
};
oFF.QSelectValue.prototype.m_selectValue = null;
oFF.QSelectValue.prototype.m_selectField = null;
oFF.QSelectValue.prototype.m_selectHierarchyName = null;
oFF.QSelectValue.prototype.setupSelectElement = function(context, selectField, hierarchyName, value)
{
	this.setupModelComponent(context, null);
	this.m_selectField = oFF.XWeakReferenceUtil.getWeakRef(selectField);
	this.m_selectHierarchyName = hierarchyName;
	this.m_selectValue = value;
};
oFF.QSelectValue.prototype.releaseObject = function()
{
	this.m_selectField = oFF.XObjectExt.release(this.m_selectField);
	this.m_selectHierarchyName = null;
	this.m_selectValue = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QSelectValue.prototype.getSelectValue = function()
{
	return this.m_selectValue;
};
oFF.QSelectValue.prototype.getSelectField = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_selectField);
};
oFF.QSelectValue.prototype.getSelectHierarchyName = function()
{
	return this.m_selectHierarchyName;
};
oFF.QSelectValue.prototype.getDimension = function()
{
	return this.getSelectField().getDimension();
};
oFF.QSelectValue.prototype.getType = function()
{
	return this.getMemberType();
};
oFF.QSelectValue.prototype.getMemberType = function()
{
	return oFF.MemberType.SELECT_VALUE;
};
oFF.QSelectValue.prototype.getSelectableElement = function()
{
	return this;
};
oFF.QSelectValue.prototype.isNode = function()
{
	return this.getMemberType().isNode();
};

oFF.QDrillManager = function() {};
oFF.QDrillManager.prototype = new oFF.QModelComponent();
oFF.QDrillManager.prototype._ff_c = "QDrillManager";

oFF.QDrillManager.REST_NODE = "!REST_H";
oFF.QDrillManager.create = function(context, queryModel)
{
	var object = new oFF.QDrillManager();
	object.setupDrillManager(context, queryModel);
	return object;
};
oFF.QDrillManager.matchDimensionNames = function(dimension01, dimension02)
{
	return dimension01 === dimension02 || oFF.notNull(dimension01) && oFF.notNull(dimension02) && oFF.XString.isEqual(dimension01.getName(), dimension02.getName());
};
oFF.QDrillManager.prototype.m_drillOperations = null;
oFF.QDrillManager.prototype.m_drillOperationsMap = null;
oFF.QDrillManager.prototype.m_stickyMembersByDimension = null;
oFF.QDrillManager.prototype.m_stackDrillOperations = null;
oFF.QDrillManager.prototype.m_zoomOperationsByDimension = null;
oFF.QDrillManager.prototype.m_zoomDrillStack = null;
oFF.QDrillManager.prototype.m_rootNodeCache = null;
oFF.QDrillManager.prototype.m_drillCounter = 0;
oFF.QDrillManager.prototype.m_explicitDrillOnFilteredNodes = null;
oFF.QDrillManager.prototype.m_supportsDrillCounter = false;
oFF.QDrillManager.prototype.m_validatesContextFree = false;
oFF.QDrillManager.prototype.m_transientExplicitDrillOperations = null;
oFF.QDrillManager.prototype.copyDrillManager = function(origin)
{
	oFF.QModelComponent.prototype.copyFrom.call( this , origin, null);
	this.m_stickyMembersByDimension.clear();
	this.m_transientExplicitDrillOperations.clear();
	this.m_stackDrillOperations.clear();
	this.m_zoomDrillStack.clear();
	this.m_rootNodeCache.clear();
	this.m_zoomOperationsByDimension.clear();
	this.m_explicitDrillOnFilteredNodes.clear();
	var size = origin.m_drillOperations.size();
	var queryModel = this.getQueryModel();
	for (var i = 0; i < size; i++)
	{
		var origDrillOp = origin.m_drillOperations.get(i);
		var cloneDrillOp = oFF.QDrillOperation.create(this.getContext(), this, origDrillOp.getType(), null, origDrillOp.getDrillState(), origDrillOp.getRelativeLevelCount(), origDrillOp.getRelativeLevelOffset(), origDrillOp.getDrillPath(), origDrillOp.getModCounter(), -1);
		var targetDimension = origDrillOp.getTargetDimension();
		if (oFF.notNull(targetDimension))
		{
			cloneDrillOp.setTargetDimension(queryModel.getDimensionByNameFromExistingMetadata(targetDimension.getName()));
		}
		this.addOperationInternal(cloneDrillOp);
	}
	for (var j = 0; j < origin.m_zoomDrillStack.size(); j++)
	{
		var cloneStackElement = oFF.XList.create();
		var originStackElement = origin.m_zoomDrillStack.get(j);
		if (!oFF.XCollectionUtils.hasElements(originStackElement))
		{
			continue;
		}
		var targDim = originStackElement.get(0).getTargetDimension();
		if (oFF.isNull(targDim))
		{
			continue;
		}
		var targDimName = targDim.getName();
		this.m_zoomOperationsByDimension.put(targDimName, cloneStackElement);
		this.m_zoomDrillStack.add(cloneStackElement);
		for (var k = 0; k < originStackElement.size(); k++)
		{
			var origOperation = originStackElement.get(k);
			var cloneOp = oFF.QDrillOperation.create(this.getContext(), this, origOperation.getType(), null, origOperation.getDrillState(), origOperation.getRelativeLevelCount(), origOperation.getRelativeLevelOffset(), origOperation.getDrillPath(), origOperation.getModCounter(), j);
			cloneOp.setTargetDimension(queryModel.getDimensionByNameFromExistingMetadata(targDimName));
			cloneStackElement.add(cloneOp);
			this.m_stackDrillOperations.add(cloneOp);
		}
	}
	this.m_drillCounter = origin.m_drillCounter;
	this.m_supportsDrillCounter = origin.m_supportsDrillCounter;
	this.m_validatesContextFree = origin.m_validatesContextFree;
	this.m_explicitDrillOnFilteredNodes = origin.m_explicitDrillOnFilteredNodes.createSetCopy();
	var stickyDimensions = origin.m_stickyMembersByDimension.getKeysAsIteratorOfString();
	while (stickyDimensions.hasNext())
	{
		var stickyDimension = stickyDimensions.next();
		this.m_stickyMembersByDimension.put(stickyDimension, origin.m_stickyMembersByDimension.getByKey(stickyDimension).createSetCopy());
	}
	this.copyRootNodesFrom(origin);
};
oFF.QDrillManager.prototype.setupDrillManager = function(context, queryModel)
{
	this.setupModelComponent(context, queryModel);
	this.m_drillOperations = oFF.QModelComponentList.createModelComponentList(context, this, true, "Drill Operations");
	this.m_transientExplicitDrillOperations = oFF.QModelComponentList.createModelComponentList(context, null, true, "Drill Operations on explicitly filtered Nodes");
	this.m_stackDrillOperations = oFF.QModelComponentList.createModelComponentList(context, this, true, "Drill Operations put on zoom drill stack");
	this.m_drillOperationsMap = oFF.XHashMapByString.create();
	this.m_zoomDrillStack = oFF.XList.create();
	this.m_zoomOperationsByDimension = oFF.XHashMapByString.create();
	this.m_explicitDrillOnFilteredNodes = oFF.XHashSetOfString.create();
	this.m_validatesContextFree = true;
	this.m_stickyMembersByDimension = oFF.XHashMapByString.create();
	this.m_rootNodeCache = oFF.XHashMapByString.create();
};
oFF.QDrillManager.prototype.releaseObject = function()
{
	this.m_drillOperations = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_drillOperations);
	this.m_stackDrillOperations = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_stackDrillOperations);
	this.m_transientExplicitDrillOperations = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_transientExplicitDrillOperations);
	this.m_drillOperationsMap = oFF.XObjectExt.release(this.m_drillOperationsMap);
	this.m_zoomOperationsByDimension = oFF.XObjectExt.release(this.m_zoomOperationsByDimension);
	this.m_zoomDrillStack = oFF.XObjectExt.release(this.m_zoomDrillStack);
	this.m_explicitDrillOnFilteredNodes = oFF.XObjectExt.release(this.m_explicitDrillOnFilteredNodes);
	this.m_stickyMembersByDimension = oFF.XObjectExt.release(this.m_stickyMembersByDimension);
	this.m_rootNodeCache = oFF.XObjectExt.release(this.m_rootNodeCache);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QDrillManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.DRILL_MANAGER;
};
oFF.QDrillManager.prototype.getDrillOperations = function()
{
	return this.m_drillOperations;
};
oFF.QDrillManager.prototype.addDimensionZoomFilter = function(dimension, dimZoomOperations, globalTupleFilter)
{
	var visList = null;
	var orFilter = null;
	if (this.getModelCapabilities().supportsVisibilityFilter())
	{
		visList = this.getCartesianVisibilityListForDimension(dimension);
		visList.clear();
	}
	else
	{
		visList = this.getCartesianDisplayListForDimension(dimension);
		visList.clear();
		if (oFF.notNull(globalTupleFilter))
		{
			var drillPathSize = dimZoomOperations.get(0).getDrillPath().size();
			if (drillPathSize === 0)
			{
				return;
			}
			else if (drillPathSize === 1)
			{
				orFilter = oFF.QFactory.createFilterCartesianList(this.getQueryModel());
			}
			else
			{
				orFilter = oFF.QFactory.createFilterOr(this.getQueryModel());
			}
			globalTupleFilter.add(orFilter);
		}
	}
	visList.setHierarchyName(dimension.getHierarchyName());
	for (var i = 0; i < dimZoomOperations.size(); i++)
	{
		var operation = dimZoomOperations.get(i);
		var drillPath = operation.getDrillPath();
		var lastDrillElement = drillPath.get(operation.getDrillPath().size() - 1);
		var cartEl = visList.addNewCartesianElement();
		cartEl.setComparisonOperator(oFF.ComparisonOperator.EQUAL);
		var field = dimension.getFieldByName(lastDrillElement.getFieldName());
		visList.setField(field);
		cartEl.setField(field);
		cartEl.setLowString(lastDrillElement.getName());
		if (!oFF.XCollectionUtils.hasElements(this.m_stickyMembersByDimension.getByKey(dimension.getName())) || !this.m_stickyMembersByDimension.getByKey(dimension.getName()).contains(lastDrillElement.getName()))
		{
			cartEl.setLevelOffset(operation.getRelativeLevelOffset());
		}
		if (this.getModelCapabilities().supportsHierarchyTrapezoidFilter())
		{
			cartEl.setDepth(-1);
		}
		var pathSize = drillPath.size();
		if (oFF.notNull(orFilter))
		{
			var algebraFilter = null;
			if (pathSize === 0)
			{
				continue;
			}
			if (pathSize === 1)
			{
				algebraFilter = orFilter;
			}
			else
			{
				algebraFilter = oFF.QFactory.createFilterAnd(this.getQueryModel());
				orFilter.add(algebraFilter);
			}
			for (var j = 0; j < pathSize; j++)
			{
				var filterOperation = oFF.QFactory.createFilterOperation(this.getQueryModel(), drillPath.get(j).getSelectField());
				filterOperation.setConvertToFlatFilter(true);
				filterOperation.setHierarchyName(drillPath.get(j).getSelectHierarchyName());
				filterOperation.setLowString(drillPath.get(j).getName());
				algebraFilter.add(filterOperation);
			}
		}
	}
};
oFF.QDrillManager.prototype.getZoomDataFilterRoot = function()
{
	return this.getQueryModel().getFilter().getZoomDataFilter();
};
oFF.QDrillManager.prototype.getCartesianVisibilityListForDimension = function(dimension)
{
	return this.getQueryModel().getFilter().getTransientZoomVisibilityFilter().getCartesianListWithDefault(dimension);
};
oFF.QDrillManager.prototype.getCartesianDisplayListForDimension = function(dimension)
{
	return this.getQueryModel().getFilter().getTransientZoomDisplayFilter().getCartesianListWithDefault(dimension);
};
oFF.QDrillManager.prototype.getCartesianListForDimension = function(dimension, dynamicFilter, tmpFilter, externalFilters)
{
	var list = this.getListForDimension(dynamicFilter, dimension);
	if (oFF.isNull(list))
	{
		list = this.getListForDimension(tmpFilter, dimension);
	}
	if (oFF.isNull(list))
	{
		var keyIterator = externalFilters.getKeysAsIteratorOfString();
		while (oFF.isNull(list) && keyIterator.hasNext())
		{
			var key = keyIterator.next();
			list = this.getListForDimension(externalFilters.getByKey(key), dimension);
		}
	}
	return list;
};
oFF.QDrillManager.prototype.getListForDimension = function(filterExpression, dimension)
{
	if (oFF.isNull(filterExpression) || filterExpression.getFilterRootElement() === null)
	{
		return null;
	}
	var children = filterExpression.getFilterRootElement().getChildrenIterator();
	while (children.hasNext())
	{
		var component = children.next();
		var isList = component.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST);
		if (isList && oFF.XString.isEqual(component.getDimensionName(), dimension.getName()))
		{
			var cartesianList = component;
			var globalFlat = cartesianList.isConvertToFlatFilter();
			var globalNoHierarchy = oFF.XStringUtils.isNullOrEmpty(cartesianList.getHierarchyName());
			if (!globalFlat)
			{
				for (var i = 0; i < cartesianList.size(); i++)
				{
					var curElement = cartesianList.getCartesianElement(i);
					var localFlat = curElement.isConvertToFlatFilter() || globalNoHierarchy && oFF.XStringUtils.isNullOrEmpty(curElement.getHierarchyName());
					if (curElement.getSetSign() === oFF.SetSign.INCLUDING && !localFlat)
					{
						return cartesianList;
					}
				}
			}
		}
	}
	return null;
};
oFF.QDrillManager.prototype.getDrillOperationsForInARepo = function()
{
	var resultList = oFF.XList.create();
	resultList.addAll(this.m_drillOperations);
	for (var i = 0; i < this.m_zoomDrillStack.size(); i++)
	{
		resultList.addAll(this.m_zoomDrillStack.get(i));
	}
	return resultList;
};
oFF.QDrillManager.prototype.getDrillOperationsForInAData = function()
{
	this.getQueryModel().getFilter().resetTransientZoomFilters();
	var resultList = oFF.XList.create();
	resultList.addAll(this.m_drillOperations);
	if (oFF.XCollectionUtils.hasElements(this.m_zoomOperationsByDimension))
	{
		var zoomDimensionsIterator = this.m_zoomOperationsByDimension.getKeysAsIteratorOfString();
		var globalTupleFilter = this.getZoomDataFilterRoot();
		while (zoomDimensionsIterator.hasNext())
		{
			var zoomDim = zoomDimensionsIterator.next();
			var zoomDimension = this.getQueryModel().getDimensionByName(zoomDim);
			if (this.isHierarchyActiveForDimensionExt(zoomDimension))
			{
				var zoomOpList = this.m_zoomOperationsByDimension.getByKey(zoomDim);
				if (oFF.XCollectionUtils.hasElements(zoomOpList))
				{
					if (!this.getModelCapabilities().supportsUniversalDisplayHierarchies())
					{
						resultList.addAll(zoomOpList);
					}
					else
					{
						resultList.addAll(oFF.XStream.of(zoomOpList).filter( function(zo){
							return !this.conflictsWithUdh(zo);
						}.bind(this)).collect(oFF.XStreamCollector.toList()));
					}
					this.addDimensionZoomFilter(zoomDimension, zoomOpList, globalTupleFilter);
					if (this.m_stickyMembersByDimension.containsKey(zoomDim))
					{
						this.drillStickyMembersOnDimension(zoomDimension, this.m_stickyMembersByDimension.getByKey(zoomDim), resultList);
					}
				}
			}
		}
	}
	var dimension;
	var dim;
	var stickyDimensions = this.m_stickyMembersByDimension.getKeysAsIteratorOfString();
	while (stickyDimensions.hasNext())
	{
		dim = stickyDimensions.next();
		dimension = this.getQueryModel().getDimensionByName(dim);
		if (oFF.notNull(dimension) && dimension.isHierarchyActive() && oFF.XStringUtils.isNotNullAndNotEmpty(dimension.getHierarchyName()))
		{
			if (dimension.getInitialDrillLevel() === 0)
			{
				if (!oFF.XCollectionUtils.hasElements(this.m_zoomOperationsByDimension.getByKey(dim)) && !this.m_explicitDrillOnFilteredNodes.contains(dim))
				{
					this.drillOnFiltersInternal(dimension, resultList);
				}
			}
			else
			{
				var stickyMembers = this.m_stickyMembersByDimension.getByKey(dim);
				if (!oFF.XCollectionUtils.hasElements(this.m_zoomOperationsByDimension.getByKey(dim)) && oFF.XCollectionUtils.hasElements(stickyMembers))
				{
					dimension = this.getQueryModel().getDimensionByName(dim);
					this.drillStickyMembersOnDimension(dimension, stickyMembers, resultList);
				}
			}
		}
	}
	var explicitDimensions = this.m_explicitDrillOnFilteredNodes.getIterator();
	while (explicitDimensions.hasNext())
	{
		dim = explicitDimensions.next();
		dimension = this.getQueryModel().getDimensionByName(dim);
		if (oFF.notNull(dimension) && dimension.isHierarchyActive() && oFF.XStringUtils.isNotNullAndNotEmpty(dimension.getHierarchyName()))
		{
			if (!oFF.XCollectionUtils.hasElements(this.m_zoomOperationsByDimension.getByKey(dim)))
			{
				dimension = this.getQueryModel().getDimensionByName(dim);
				if (dimension.getInitialDrillLevel() === 0)
				{
					this.drillOnFiltersInternal(dimension, resultList);
				}
			}
		}
	}
	this.applyRootNavigationOffset();
	return resultList;
};
oFF.QDrillManager.prototype.isHierarchyActiveForDimensionExt = function(dimension)
{
	return oFF.notNull(dimension) && (dimension.isHierarchyActive() && oFF.XStringUtils.isNotNullAndNotEmpty(dimension.getHierarchyName()) || this.getQueryManagerBase().isAutoVariableSubmitActive() && dimension.useHierarchyNameVariable() && oFF.XStringUtils.isNotNullAndNotEmpty(dimension.getHierarchyNameVariableName()) && this.getQueryModel().getVariable(dimension.getHierarchyNameVariableName()) !== null && !this.getQueryModel().getVariable(dimension.getHierarchyNameVariableName()).isEmpty());
};
oFF.QDrillManager.prototype.conflictsWithUdh = function(zo)
{
	var conflict = false;
	if (oFF.notNull(zo) && this.getModelCapabilities().supportsUniversalDisplayHierarchies())
	{
		var udhs = this.getQueryModel().getUniversalDisplayHierarchies();
		var targetDimension = zo.getTargetDimension();
		if (oFF.notNull(udhs) && oFF.notNull(targetDimension))
		{
			var axisType = targetDimension.getAxisType();
			var udh = udhs.getByAxisType(axisType);
			if (oFF.notNull(udh) && udh.isActive())
			{
				conflict = true;
			}
			if (!conflict && this.getQueryManager().isHierarchyToUDHConversionEnabledForCurrentRs())
			{
				var axis = this.getQueryModel().getAxis(axisType);
				conflict = oFF.XCollectionUtils.contains(axis,  function(d){
					return d.isHierarchyActive() && d.getLeveledHierarchy(d.getHierarchyName()) !== null;
				}.bind(this));
			}
		}
	}
	return conflict;
};
oFF.QDrillManager.prototype.checkRootNodeFetching = function()
{
	var origFilter = this.getQueryModel().getFilter();
	var dimensionsToCheck = oFF.XList.create();
	var j;
	for (j = 0; j < this.m_drillOperations.size(); j++)
	{
		var curDrillOp = this.m_drillOperations.get(j);
		var targetDim = curDrillOp.getTargetDimension();
		if (oFF.isNull(targetDim) || !targetDim.isHierarchyActive() || oFF.XStringUtils.isNullOrEmpty(targetDim.getHierarchyName()))
		{
			continue;
		}
		var stickyMembers = this.m_stickyMembersByDimension.getByKey(targetDim.getName());
		if (curDrillOp.getType() === oFF.DrillOperationType.ROOT && (curDrillOp.getRelativeLevelOffset() > 0 || curDrillOp.getRelativeLevelOffset() === -1 || oFF.XCollectionUtils.hasElements(stickyMembers)))
		{
			if ((!oFF.XCollectionUtils.hasElements(stickyMembers) && !this.m_explicitDrillOnFilteredNodes.contains(targetDim.getName()) || targetDim.getInitialDrillLevel() !== 0) && !this.m_zoomOperationsByDimension.containsKey(targetDim.getName()))
			{
				var cartListOrig = this.getCartesianListForDimension(targetDim, origFilter.getDynamicFilter(), origFilter.getTmpFilter(), origFilter.getLinkedFilters());
				if ((!oFF.XCollectionUtils.hasElements(cartListOrig) || oFF.XStringUtils.isNullOrEmpty(cartListOrig.getHierarchyName()) || cartListOrig.isConvertToFlatFilter()) && !oFF.XCollectionUtils.hasElements(this.m_rootNodeCache.getByKey(this.getUniqueHierarchyIdentifier(targetDim))))
				{
					dimensionsToCheck.add(targetDim);
				}
			}
		}
	}
	var nodeNameList;
	var success = true;
	for (j = 0; j < dimensionsToCheck.size(); j++)
	{
		var newRootNode = dimensionsToCheck.get(j).getVirtualRootNodeName();
		if (oFF.XStringUtils.isNotNullAndNotEmpty(newRootNode))
		{
			nodeNameList = oFF.XListOfString.create();
			nodeNameList.add(newRootNode);
			this.m_rootNodeCache.put(this.getUniqueHierarchyIdentifier(dimensionsToCheck.get(j)), nodeNameList);
		}
		else
		{
			success = false;
		}
	}
	if (!success)
	{
		var qm = this.getQueryManager();
		var systemName = qm.getSystemName();
		var isBatchModeEnabled = qm.getApplication().getConnectionPool().isBatchModeEnabled(systemName);
		var syncType = isBatchModeEnabled ? oFF.SyncType.NON_BLOCKING : oFF.SyncType.BLOCKING;
		var dimensionsToResetSelectorHierarchyActive = oFF.XList.create();
		var variableProcessorState = qm.getVariableProcessorState();
		if (!qm.isDirectVariableTransferEnabled() && !qm.isShallow() && (qm.supportsAndAllowsEmptyExtendedVarDefinition() || qm.hasVariables()) && !qm.isSubmitted() && variableProcessorState !== oFF.VariableProcessorState.SUBMIT_FAILED && variableProcessorState !== oFF.VariableProcessorState.PROCESSING_AUTO_SUBMIT && variableProcessorState !== oFF.VariableProcessorState.PROCESSING_AUTO_SUBMIT_AFTER_REINIT)
		{
			qm.getVariableProcessor().submitVariables(syncType, null, null);
			if (isBatchModeEnabled)
			{
				qm.getApplication().getConnectionPool().executeBatchQueue(oFF.SyncType.BLOCKING, systemName);
			}
		}
		for (j = 0; j < dimensionsToCheck.size(); j++)
		{
			var dimensionToCheck = dimensionsToCheck.get(j);
			var hierarchyIdentifier = this.getUniqueHierarchyIdentifier(dimensionToCheck);
			if (!oFF.XCollectionUtils.hasElements(this.m_rootNodeCache.getByKey(hierarchyIdentifier)))
			{
				if (!dimensionToCheck.isSelectorHierarchyActive())
				{
					dimensionsToResetSelectorHierarchyActive.add(dimensionToCheck);
					dimensionToCheck.setSelectorHierarchyActive(true);
				}
				dimensionToCheck.processValueHelp(syncType, this, oFF.XStringValue.create(hierarchyIdentifier));
			}
		}
		if (isBatchModeEnabled)
		{
			qm.getApplication().getConnectionPool().executeBatchQueue(oFF.SyncType.BLOCKING, systemName);
		}
		for (j = 0; j < dimensionsToResetSelectorHierarchyActive.size(); j++)
		{
			dimensionsToResetSelectorHierarchyActive.get(j).setSelectorHierarchyActive(false);
		}
	}
};
oFF.QDrillManager.prototype.copyRootNodesFrom = function(origin)
{
	var origRootNodeCache = origin.m_rootNodeCache;
	if (oFF.XCollectionUtils.hasElements(origRootNodeCache))
	{
		var rootKeyIt = origRootNodeCache.getKeysAsIteratorOfString();
		while (rootKeyIt.hasNext())
		{
			var rootKey = rootKeyIt.next();
			var nodeNameList = origRootNodeCache.getByKey(rootKey);
			if (oFF.XCollectionUtils.hasElements(nodeNameList))
			{
				var newNodeNames = oFF.XListOfString.create();
				newNodeNames.addAll(nodeNameList);
				this.m_rootNodeCache.put(rootKey, newNodeNames);
			}
		}
	}
};
oFF.QDrillManager.prototype.getUniqueHierarchyIdentifier = function(targetDim)
{
	var hierarchyUniqueName = targetDim.getHierarchyUniqueName(targetDim.getHierarchyName());
	var hVersion = targetDim.getHierarchyVersion();
	var hDueDate = targetDim.getHierarchyDueDate();
	return oFF.XStringUtils.concatenate2(hierarchyUniqueName, oFF.XStringUtils.concatenate5(".[", oFF.isNull(hVersion) ? "" : hVersion, "].[", oFF.isNull(hDueDate) ? "" : hDueDate.toIsoFormat(), "]"));
};
oFF.QDrillManager.prototype.applyRootNavigationOffset = function()
{
	var newElement;
	var origFilter = this.getQueryModel().getFilter();
	for (var j = 0; j < this.m_drillOperations.size(); j++)
	{
		var curDrillOp = this.m_drillOperations.get(j);
		var targetDim = curDrillOp.getTargetDimension();
		if (oFF.isNull(targetDim))
		{
			continue;
		}
		if (!targetDim.isHierarchyActive() || oFF.XStringUtils.isNullOrEmpty(targetDim.getHierarchyName()))
		{
			continue;
		}
		var stickyMembers = this.m_stickyMembersByDimension.getByKey(targetDim.getName());
		if (curDrillOp.getType() === oFF.DrillOperationType.ROOT && (curDrillOp.getRelativeLevelOffset() > 0 || curDrillOp.getRelativeLevelOffset() === -1 || oFF.XCollectionUtils.hasElements(stickyMembers)))
		{
			var levelOffset = curDrillOp.getRelativeLevelOffset() === -1 ? oFF.XMath.max(0, targetDim.getInitialDrillLevel()) : curDrillOp.getRelativeLevelOffset();
			if ((!oFF.XCollectionUtils.hasElements(stickyMembers) && !this.m_explicitDrillOnFilteredNodes.contains(targetDim.getName()) || targetDim.getInitialDrillLevel() !== 0) && !this.m_zoomOperationsByDimension.containsKey(targetDim.getName()))
			{
				var cartListOrig = this.getCartesianListForDimension(targetDim, origFilter.getDynamicFilter(), origFilter.getTmpFilter(), origFilter.getLinkedFilters());
				var hierarchyIdentifier = this.getUniqueHierarchyIdentifier(targetDim);
				var nodeNameList = this.m_rootNodeCache.getByKey(hierarchyIdentifier);
				var nni = 0;
				var nniSize = oFF.isNull(nodeNameList) ? 0 : nodeNameList.size();
				if (this.getModelCapabilities().supportsVisibilityFilter())
				{
					var visFilterOrig = this.getCartesianListForDimension(targetDim, origFilter.getVisibilityFilter(), origFilter.getTmpVisibilityFilter(), origFilter.getLinkedVisibilityFilters());
					if (oFF.XCollectionUtils.hasElements(visFilterOrig))
					{
						cartListOrig = visFilterOrig;
					}
					var visList = this.getCartesianVisibilityListForDimension(targetDim);
					visList.clear();
					visList.setHierarchyName(targetDim.getHierarchyName());
					visList.setConvertToFlatFilter(false);
					if (oFF.XCollectionUtils.hasElements(cartListOrig) && oFF.XStringUtils.isNotNullAndNotEmpty(cartListOrig.getHierarchyName()) && !cartListOrig.isConvertToFlatFilter())
					{
						visList.setField(targetDim.getFieldByName(cartListOrig.getFieldMetadata().getName()));
						for (var k = 0; k < cartListOrig.size(); k++)
						{
							var oldElement = cartListOrig.getCartesianElement(k);
							if (oldElement.getSetSign() === oFF.SetSign.INCLUDING && !oldElement.isConvertToFlatFilter())
							{
								newElement = visList.addNewCartesianElement();
								newElement.copyFrom(oldElement, null);
								if (!oFF.XCollectionUtils.hasElements(stickyMembers) || !stickyMembers.contains(newElement.getLow().getString()))
								{
									newElement.setLevelOffset(levelOffset);
								}
								if (this.getModelCapabilities().supportsHierarchyTrapezoidFilter())
								{
									if (oldElement.hasDepth())
									{
										newElement.setDepth(oldElement.getDepth());
									}
									else
									{
										newElement.setDepth(-1);
									}
								}
							}
						}
					}
					else if (oFF.XCollectionUtils.hasElements(nodeNameList))
					{
						visList.setField(targetDim.getFieldByPresentationType(oFF.PresentationType.HIERARCHY_KEY));
						for (nni = 0; nni < nniSize; nni++)
						{
							if (oFF.XStringUtils.isNotNullAndNotEmpty(nodeNameList.get(nni)))
							{
								var virtualRootElement = visList.addNewCartesianElement();
								virtualRootElement.setComparisonOperator(oFF.ComparisonOperator.EQUAL);
								virtualRootElement.setLowString(nodeNameList.get(nni));
								virtualRootElement.setHierarchyName(targetDim.getHierarchyName());
								virtualRootElement.setLevelOffset(levelOffset);
								if (this.getModelCapabilities().supportsHierarchyTrapezoidFilter())
								{
									virtualRootElement.setDepth(-1);
								}
							}
						}
					}
				}
				else
				{
					var cartListForManipulation = this.getCartesianDisplayListForDimension(targetDim);
					cartListForManipulation.clear();
					cartListForManipulation.setHierarchyName(targetDim.getHierarchyName());
					if (oFF.XCollectionUtils.hasElements(cartListOrig) && oFF.XStringUtils.isNotNullAndNotEmpty(cartListOrig.getHierarchyName()) && !cartListOrig.isConvertToFlatFilter())
					{
						for (var l = 0; l < cartListOrig.size(); l++)
						{
							var curElement = cartListOrig.getCartesianElement(l);
							if (!curElement.isConvertToFlatFilter() && curElement.getSetSign() === oFF.SetSign.INCLUDING)
							{
								if (oFF.XString.indexOf(curElement.getLow().getString(), oFF.QDrillManager.REST_NODE) === -1 || levelOffset < 2)
								{
									newElement = cartListForManipulation.addNewCartesianElement();
									newElement.copyFrom(curElement, null);
									newElement.setLevelOffset(levelOffset);
								}
							}
						}
					}
					else if (oFF.XCollectionUtils.hasElements(nodeNameList))
					{
						for (nni = 0; nni < nniSize; nni++)
						{
							if (oFF.XStringUtils.isNotNullAndNotEmpty(nodeNameList.get(nni)))
							{
								if (oFF.XString.indexOf(nodeNameList.get(nni), oFF.QDrillManager.REST_NODE) === -1 || levelOffset < 2)
								{
									var virRootElement = cartListForManipulation.addNewCartesianElement();
									virRootElement.setComparisonOperator(oFF.ComparisonOperator.EQUAL);
									virRootElement.setLowString(nodeNameList.get(nni));
									virRootElement.setHierarchyName(targetDim.getHierarchyName());
									virRootElement.setLevelOffset(levelOffset);
								}
							}
						}
					}
					else
					{
						this.log2("ROOTNODE error for hierarchy: ", targetDim.getHierarchyName());
					}
				}
			}
		}
	}
};
oFF.QDrillManager.prototype.drillStickyMembersOnDimension = function(dimension, stickyMembers, resultList)
{
	if (this.getModelCapabilities().supportsVisibilityFilter())
	{
		var visList = this.getCartesianVisibilityListForDimension(dimension);
		var stickyIterator = stickyMembers.getIterator();
		while (stickyIterator.hasNext())
		{
			var memberName = stickyIterator.next();
			var dpe = oFF.QFactory.createDrillPathElement(dimension, memberName, dimension);
			var elementField = dimension.getKeyField();
			dpe.setFieldName(elementField.getName());
			var path = oFF.XList.create();
			path.add(dpe);
			var newOperation = oFF.QDrillOperation.create(this.getContext(), this, oFF.DrillOperationType.CONTEXT, dimension, oFF.DrillState.EXPANDED, 1, 0, path, this.m_drillCounter, -2);
			this.m_transientExplicitDrillOperations.add(newOperation);
			resultList.add(newOperation);
			var visElement = visList.addNewCartesianElement();
			visElement.setField(elementField);
			visElement.setComparisonOperator(oFF.ComparisonOperator.EQUAL);
			visElement.setLowString(memberName);
			visElement.setLevelOffset(0);
			visElement.setDepth(0);
		}
	}
};
oFF.QDrillManager.prototype.drillOnFiltersInternal = function(dimension, resultList)
{
	var origFilter = this.getQueryModel().getFilter();
	var cartList = this.getCartesianListForDimension(dimension, origFilter.getDynamicFilter(), origFilter.getTmpFilter(), origFilter.getLinkedFilters());
	if (this.getModelCapabilities().supportsVisibilityFilter() && oFF.XCollectionUtils.hasElements(cartList) && oFF.XStringUtils.isNotNullAndNotEmpty(cartList.getHierarchyName()) && !cartList.isConvertToFlatFilter())
	{
		var visList = this.getCartesianVisibilityListForDimension(dimension);
		visList.clear();
		visList.setHierarchyName(dimension.getHierarchyName());
		for (var i = 0; i < cartList.size(); i++)
		{
			var element = cartList.get(i);
			if (element.getComparisonOperator() !== oFF.ComparisonOperator.EQUAL)
			{
				continue;
			}
			var lowString = element.getLow().getString();
			var path = oFF.XList.create();
			var dpe = oFF.QFactory.createDrillPathElement(dimension, lowString, dimension);
			var elementFieldName = element.getFieldMetadata().getName();
			if (oFF.XStringUtils.isNullOrEmpty(elementFieldName))
			{
				elementFieldName = cartList.getFieldMetadata().getName();
			}
			dpe.setFieldName(elementFieldName);
			path.add(dpe);
			var newOperation = oFF.QDrillOperation.create(this.getContext(), this, oFF.DrillOperationType.CONTEXT, dimension, oFF.DrillState.EXPANDED, 1, 0, path, this.m_drillCounter, -2);
			this.m_transientExplicitDrillOperations.add(newOperation);
			resultList.add(newOperation);
			var field = dimension.getFieldByName(elementFieldName);
			visList.setField(field);
			if (!this.isZoomDrillActiveOn(dimension, lowString))
			{
				var cartEl = visList.addNewCartesianElement();
				cartEl.setComparisonOperator(oFF.ComparisonOperator.EQUAL);
				cartEl.setLowString(lowString);
				cartEl.setField(field);
				if (this.getModelCapabilities().supportsHierarchyTrapezoidFilter())
				{
					cartEl.setDepth(0);
				}
			}
		}
	}
};
oFF.QDrillManager.prototype.isZoomDrillActiveOn = function(dimension, lowString)
{
	var zoomOperations = this.m_zoomOperationsByDimension.getByKey(dimension.getName());
	if (oFF.XCollectionUtils.hasElements(zoomOperations))
	{
		for (var k = 0; k < zoomOperations.size(); k++)
		{
			var drillPath = zoomOperations.get(k).getDrillPath();
			for (var l = 0; l < drillPath.size(); l++)
			{
				var drillPathElement = drillPath.get(l);
				if (oFF.XString.isEqual(drillPathElement.getName(), lowString))
				{
					return true;
				}
			}
		}
	}
	return false;
};
oFF.QDrillManager.prototype.setDrillState = function(drillPath, drillState)
{
	var newOperation = oFF.QDrillOperation.create(this.getContext(), this, oFF.DrillOperationType.CONTEXT, null, drillState, 1, 0, drillPath, this.m_drillCounter, -1);
	return this.addOperationInternal(newOperation);
};
oFF.QDrillManager.prototype.setDrillStateElement = function(drillElement, drillState)
{
	var drillPath = oFF.XList.create();
	drillPath.add(drillElement);
	var newOperation = oFF.QDrillOperation.create(this.getContext(), this, oFF.DrillOperationType.CONTEXT, null, drillState, 1, 0, drillPath, this.m_drillCounter, -1);
	return this.addOperationInternal(newOperation);
};
oFF.QDrillManager.prototype.supportsComplexZoomDrill = function()
{
	return this.getModelCapabilities().supportsVisibilityFilter() || this.getModelCapabilities().supportsComplexTupleFilter();
};
oFF.QDrillManager.prototype.addZoomDrillPath = function(drillPath, hideRoots)
{
	if (!oFF.XCollectionUtils.hasElements(drillPath))
	{
		return null;
	}
	var dimension = drillPath.get(drillPath.size() - 1).getDimension();
	if (oFF.isNull(dimension))
	{
		return null;
	}
	var dimensionName = dimension.getName();
	if (this.m_zoomOperationsByDimension.getByKey(dimensionName) === null)
	{
		var newList = oFF.XList.create();
		this.m_zoomOperationsByDimension.put(dimensionName, newList);
		this.m_zoomDrillStack.add(newList);
	}
	var result = this.addZoomDrillInternal(drillPath, hideRoots, this.m_zoomDrillStack.size());
	this.m_zoomOperationsByDimension.getByKey(dimensionName).add(result);
	return result;
};
oFF.QDrillManager.prototype.addZoomDrillPathElement = function(drillPathElement, hideRoots)
{
	var drillPath = oFF.XList.create();
	drillPath.add(drillPathElement);
	return this.addZoomDrillPath(drillPath, hideRoots);
};
oFF.QDrillManager.prototype.removeZoomDrillOperation = function(zoomDrillOperation)
{
	if (oFF.isNull(zoomDrillOperation) || zoomDrillOperation.getTargetDimension() === null || this.m_zoomOperationsByDimension.getByKey(zoomDrillOperation.getTargetDimension().getName()) === null)
	{
		return false;
	}
	var drillList = this.m_zoomOperationsByDimension.getByKey(zoomDrillOperation.getTargetDimension().getName());
	for (var i = 0; i < drillList.size(); i++)
	{
		var foundZoomDrillOperation = drillList.get(i);
		if (oFF.XString.isEqual(foundZoomDrillOperation.getPathUniqueName(), zoomDrillOperation.getPathUniqueName()))
		{
			this.m_stackDrillOperations.removeElement(foundZoomDrillOperation);
			drillList.removeAt(i);
			return true;
		}
	}
	return false;
};
oFF.QDrillManager.prototype.pushZoomDrill = function(drillPaths, hideRoots)
{
	var result = this.pushZoomDrillOperation(drillPaths, hideRoots);
	this.m_zoomDrillStack.add(result);
	return result;
};
oFF.QDrillManager.prototype.pushEmptyZoomDrillForDimension = function(dimension)
{
	var dimensionName = dimension.getName();
	if (this.m_zoomOperationsByDimension.getByKey(dimensionName) === null || oFF.XCollectionUtils.hasElements(this.m_zoomOperationsByDimension.getByKey(dimensionName)))
	{
		var drillList = oFF.XList.create();
		this.m_zoomOperationsByDimension.put(dimensionName, drillList);
		this.m_zoomDrillStack.add(drillList);
	}
};
oFF.QDrillManager.prototype.pushZoomDrillOperation = function(drillPaths, hideRoots)
{
	var dimensionName = null;
	var fieldName = null;
	var drillList = oFF.XList.create();
	var stackPosition = this.m_zoomDrillStack.size() + 1;
	for (var i = 0; i < drillPaths.size(); i++)
	{
		var element = drillPaths.get(i);
		if (!oFF.XCollectionUtils.hasElements(element))
		{
			throw oFF.XException.createIllegalArgumentException("invallid drill paths: empty element");
		}
		if (i === 0)
		{
			var dim = element.get(element.size() - 1).getDimension();
			dimensionName = dim.getName();
			fieldName = element.get(element.size() - 1).getFieldName();
		}
		if (!oFF.XString.isEqual(element.get(element.size() - 1).getDimension().getName(), dimensionName))
		{
			throw oFF.XException.createIllegalArgumentException("inconsistent compound drill: paths have to yield same dimension");
		}
		if (!oFF.XString.isEqual(element.get(element.size() - 1).getFieldName(), fieldName))
		{
			throw oFF.XException.createIllegalArgumentException("inconsistent compound drill: paths have to yield same field name");
		}
		drillList.add(this.addZoomDrillInternal(element, hideRoots, stackPosition));
	}
	this.m_zoomOperationsByDimension.put(dimensionName, drillList);
	return drillList;
};
oFF.QDrillManager.prototype.addZoomDrillInternal = function(element, hideRoots, stackPosition)
{
	var newOperation = oFF.QDrillOperation.create(this.getContext(), this, oFF.DrillOperationType.CONTEXT, null, oFF.DrillState.EXPANDED, 1, hideRoots ? 1 : 0, element, this.m_drillCounter, stackPosition);
	return this.addZoomDrillOperationInternal(newOperation);
};
oFF.QDrillManager.prototype.hasZoomDrill = function(dimension)
{
	if (oFF.isNull(dimension))
	{
		return oFF.XCollectionUtils.hasElements(this.m_zoomOperationsByDimension);
	}
	return oFF.XCollectionUtils.hasElements(this.m_zoomOperationsByDimension.getByKey(dimension.getName()));
};
oFF.QDrillManager.prototype.popZoomDrill = function(dimension)
{
	return this.removeZoomDrillInternal(dimension, false);
};
oFF.QDrillManager.prototype.removeZoomDrillInternal = function(dimension, all)
{
	var curElement;
	var dimensionName = null;
	var i = this.m_zoomDrillStack.size() - 1;
	for (; i > -1; i--)
	{
		var popElements = this.m_zoomDrillStack.get(i);
		if (!oFF.XCollectionUtils.hasElements(popElements))
		{
			this.m_zoomDrillStack.removeAt(i);
			continue;
		}
		curElement = popElements.get(0);
		dimensionName = curElement.getTargetDimension().getName();
		if (oFF.isNull(dimension) || oFF.XString.isEqual(dimension.getName(), dimensionName))
		{
			this.m_zoomDrillStack.removeAt(i);
			for (var j = 0; j < popElements.size(); j++)
			{
				this.m_stackDrillOperations.removeElement(popElements.get(j));
			}
			if (this.m_zoomOperationsByDimension.containsKey(dimensionName))
			{
				this.m_zoomOperationsByDimension.remove(dimensionName);
			}
			if (!all)
			{
				break;
			}
		}
	}
	if (oFF.isNull(dimensionName))
	{
		return false;
	}
	i--;
	for (; i > -1; i--)
	{
		var pushElements = this.m_zoomDrillStack.get(i);
		if (!oFF.XCollectionUtils.hasElements(pushElements))
		{
			this.m_zoomDrillStack.removeAt(i);
			continue;
		}
		curElement = pushElements.get(0);
		if (oFF.XString.isEqual(dimensionName, curElement.getTargetDimension().getName()))
		{
			this.m_zoomOperationsByDimension.put(dimensionName, pushElements);
			break;
		}
	}
	this.notifyNodeChanged();
	return true;
};
oFF.QDrillManager.prototype.removeAllZoomDrillOperations = function()
{
	this.removeZoomDrillInternal(null, true);
};
oFF.QDrillManager.prototype.removeZoomDrillOperationsByDimension = function(dimension)
{
	this.removeZoomDrillInternal(dimension, true);
};
oFF.QDrillManager.prototype.setRootExpandingLevels = function(dimension, relativeLevelCount)
{
	var oldOperation = this.getRootExpandingLevels(dimension);
	var offset = 0;
	if (oFF.notNull(oldOperation))
	{
		offset = oldOperation.getRelativeLevelOffset();
	}
	var newOperation = oFF.QDrillOperation.create(this.getContext(), this, oFF.DrillOperationType.ROOT, dimension, oFF.DrillState.EXPANDED, relativeLevelCount, offset, null, this.m_drillCounter, -1);
	return this.addOperationInternal(newOperation);
};
oFF.QDrillManager.prototype.setRootOffsetLevels = function(dimension, relativeLevelOffset)
{
	var oldOperation = this.getRootExpandingLevels(dimension);
	if (oFF.notNull(oldOperation))
	{
		oldOperation.setRelativeLevelOffset(relativeLevelOffset);
		this.notifyNodeChanged();
		return oldOperation;
	}
	var newOperation = oFF.QDrillOperation.create(this.getContext(), this, oFF.DrillOperationType.ROOT, dimension, oFF.DrillState.EXPANDED, -1, relativeLevelOffset, null, this.m_drillCounter, -1);
	return this.addOperationInternal(newOperation);
};
oFF.QDrillManager.prototype.addOperationInternal = function(newOperation)
{
	this.m_drillCounter++;
	var uniqueName = newOperation.getPathUniqueName();
	this.removeElementByKey(uniqueName);
	this.m_drillOperations.add(newOperation);
	this.m_drillOperationsMap.put(uniqueName, newOperation);
	this.notifyNodeChanged();
	return newOperation;
};
oFF.QDrillManager.prototype.addZoomDrillOperationInternal = function(newOperation)
{
	this.m_drillCounter++;
	this.m_stackDrillOperations.add(newOperation);
	this.notifyNodeChanged();
	return newOperation;
};
oFF.QDrillManager.prototype.processDeltaDrill = function(drillPath, syncType, listener, customIdentifier)
{
	var drillOperation = this.setDrillState(drillPath, oFF.DrillState.EXPANDED);
	var targetDimension = drillOperation.getTargetDimension();
	if (oFF.isNull(targetDimension))
	{
		return oFF.ExtResult.createWithErrorMessage("TargetDimension of DrillOperation is null!");
	}
	targetDimension.getHierarchyManagerBase().setHierarchyNavigationDeltaMode(true);
	var queryExecution = this.getQueryModel().getQueryManager().processQueryExecution(syncType, listener, customIdentifier);
	targetDimension.getHierarchyManagerBase().setHierarchyNavigationDeltaMode(false);
	this.notifyNodeChanged();
	return queryExecution;
};
oFF.QDrillManager.prototype.removeElementByKey = function(uniqueName)
{
	var oldOperation = this.m_drillOperationsMap.getByKey(uniqueName);
	if (oFF.notNull(oldOperation))
	{
		this.m_drillOperations.removeElement(oldOperation);
		this.m_drillOperationsMap.remove(uniqueName);
	}
};
oFF.QDrillManager.prototype.getRootExpandingLevels = function(dimension)
{
	var size = this.m_drillOperations.size();
	for (var i = 0; i < size; i++)
	{
		var drillOperation = this.m_drillOperations.get(i);
		if (drillOperation.getType() === oFF.DrillOperationType.ROOT && oFF.QDrillManager.matchDimensionNames(drillOperation.getTargetDimension(), dimension))
		{
			return drillOperation;
		}
	}
	return null;
};
oFF.QDrillManager.prototype.removeInvalidDrillOperations = function(changedNode)
{
	this.removeInvalidDrillOperationsInternal(changedNode, this.m_drillOperations, false);
	var zoomedDimensionNames = this.m_zoomOperationsByDimension.getKeysAsReadOnlyListOfString();
	for (var zoomedDimensionIndex = 0; zoomedDimensionIndex < zoomedDimensionNames.size(); zoomedDimensionIndex++)
	{
		var dimensionName = zoomedDimensionNames.get(zoomedDimensionIndex);
		var zoomOperations = this.m_zoomOperationsByDimension.getByKey(dimensionName);
		var removed = this.removeInvalidDrillOperationsInternal(changedNode, zoomOperations, true);
		if (removed)
		{
			this.removeZoomDrillOperationsByDimension(this.getQueryModel().getDimensionByName(dimensionName));
		}
	}
};
oFF.QDrillManager.prototype.removeInvalidDrillOperationsInternal = function(changedNode, drillOperations, isZoomOperation)
{
	for (var idxDrillOperation = 0; idxDrillOperation < drillOperations.size(); )
	{
		var doRemove = false;
		var drillOperation = drillOperations.get(idxDrillOperation);
		if (drillOperation.getType().isEqualTo(oFF.DrillOperationType.CONTEXT))
		{
			var drillPath = drillOperation.getDrillPath();
			for (var idxDrillPath = 0; idxDrillPath < drillPath.size(); idxDrillPath++)
			{
				var drillPathElement = drillPath.get(idxDrillPath);
				var dimension = drillPathElement.getDimension();
				if (oFF.isNull(dimension))
				{
					if (!drillOperation.getDrillState().isOnlyForUdh())
					{
						doRemove = true;
					}
					break;
				}
				var udh = this.getQueryModel().getUniversalDisplayHierarchies().getByName(dimension.getName());
				if (oFF.notNull(udh))
				{
					if (!udh.isActive() || changedNode === udh || this.udhDimensionsChanged(udh))
					{
						doRemove = true;
					}
					break;
				}
				if (dimension.getAxisType() === oFF.AxisType.FREE)
				{
					doRemove = true;
					break;
				}
				if (!this.isValidatingContextFreeNavigations() && drillPath.size() < 2)
				{
					break;
				}
				if (dimension.getIndexOnAxis() !== idxDrillPath)
				{
					doRemove = true;
					break;
				}
				var selectedHierarchyName = drillPathElement.getSelectHierarchyName();
				var hierarchyName = dimension.getHierarchyName();
				if (!oFF.XString.isEqual(hierarchyName, selectedHierarchyName))
				{
					doRemove = true;
					break;
				}
			}
		}
		if (doRemove)
		{
			if (isZoomOperation)
			{
				return true;
			}
			else
			{
				this.removeElementByKey(drillOperation.getPathUniqueName());
			}
		}
		else
		{
			idxDrillOperation++;
		}
	}
	return false;
};
oFF.QDrillManager.prototype.udhDimensionsChanged = function(udh)
{
	if (this.getModelCapabilities().supportsUniversalDisplayHierarchiesCustomDimensions())
	{
		return false;
	}
	var udhDimensions = udh.getDimensionNames();
	var queryModel = this.getQueryModel();
	var rowsAxis = queryModel.getRowsAxis();
	var columnsAxis = queryModel.getColumnsAxis();
	return !rowsAxis.getDimensionNames().isEqualTo(udhDimensions) && !columnsAxis.getDimensionNames().isEqualTo(udhDimensions);
};
oFF.QDrillManager.prototype.removeDrillOperationsByDimension = function(dimension)
{
	var removedOperation = false;
	var idxDrillOperation = 0;
	while (idxDrillOperation < this.m_drillOperations.size())
	{
		var drillOperation = this.m_drillOperations.get(idxDrillOperation);
		if (drillOperation.getType().isEqualTo(oFF.DrillOperationType.CONTEXT))
		{
			var drillPath = drillOperation.getDrillPath();
			var isPartOfDrillPath = false;
			var idxDrillPathElement = 0;
			var drillPathSize = drillPath.size();
			while (idxDrillPathElement < drillPathSize)
			{
				if (drillPath.get(idxDrillPathElement).getDimension().isEqualTo(dimension))
				{
					isPartOfDrillPath = true;
					break;
				}
				idxDrillPathElement++;
			}
			if (isPartOfDrillPath)
			{
				removedOperation = true;
				this.removeElementByKey(drillOperation.getPathUniqueName());
			}
			else
			{
				idxDrillOperation++;
			}
		}
		else
		{
			idxDrillOperation++;
		}
	}
	if (removedOperation)
	{
		this.notifyNodeChanged();
	}
};
oFF.QDrillManager.prototype.removeAllContextDrillOperations = function()
{
	for (var drillIdx = 0; drillIdx < this.m_drillOperations.size(); drillIdx++)
	{
		var iqDrillOperation = this.m_drillOperations.get(drillIdx);
		if (iqDrillOperation.getType().isEqualTo(oFF.DrillOperationType.CONTEXT))
		{
			this.removeElementByKey(iqDrillOperation.getPathUniqueName());
			drillIdx--;
		}
	}
};
oFF.QDrillManager.prototype.supportsDrillCounter = function()
{
	return this.m_supportsDrillCounter;
};
oFF.QDrillManager.prototype.setSupportsDrillCounter = function(supportsDrillCounter)
{
	this.m_supportsDrillCounter = supportsDrillCounter;
};
oFF.QDrillManager.prototype.isValidatingContextFreeNavigations = function()
{
	return this.m_validatesContextFree;
};
oFF.QDrillManager.prototype.setValidateContextFreeNavigations = function(isValidating)
{
	this.m_validatesContextFree = isValidating;
};
oFF.QDrillManager.prototype.getAllDrillOperations = function()
{
	var resultList = oFF.XList.create();
	for (var i = 0; i < this.m_drillOperations.size(); i++)
	{
		var curOp = this.m_drillOperations.get(i);
		if (curOp.getType() === oFF.DrillOperationType.CONTEXT)
		{
			resultList.add(curOp);
		}
	}
	return resultList;
};
oFF.QDrillManager.prototype.getDrillOperationsByDrillState = function(drillState)
{
	var resultList = oFF.XList.create();
	for (var i = 0; i < this.m_drillOperations.size(); i++)
	{
		var curOp = this.m_drillOperations.get(i);
		if (curOp.getType() === oFF.DrillOperationType.CONTEXT && curOp.getDrillState() === drillState)
		{
			resultList.add(curOp);
		}
	}
	return resultList;
};
oFF.QDrillManager.prototype.getDrillOperationsByDimension = function(dimension)
{
	var resultList = oFF.XList.create();
	for (var i = 0; i < this.m_drillOperations.size(); i++)
	{
		var curOp = this.m_drillOperations.get(i);
		if (curOp.getType() === oFF.DrillOperationType.CONTEXT && oFF.XString.isEqual(curOp.getTargetDimension().getName(), dimension.getName()))
		{
			resultList.add(curOp);
		}
	}
	return resultList;
};
oFF.QDrillManager.prototype.getDrillOperationsByDimensionAndType = function(dimension, drillState)
{
	var resultList = oFF.XList.create();
	for (var i = 0; i < this.m_drillOperations.size(); i++)
	{
		var curOp = this.m_drillOperations.get(i);
		if (curOp.getType() === oFF.DrillOperationType.CONTEXT && curOp.getDrillState() === drillState && oFF.XString.isEqual(curOp.getTargetDimension().getName(), dimension.getName()))
		{
			resultList.add(curOp);
		}
	}
	return resultList;
};
oFF.QDrillManager.prototype.setExplicitDrillOnFilteredNodes = function(dimension, explicit)
{
	if (explicit === this.isExplicitDrillOnFilteredNodes(dimension))
	{
		return;
	}
	if (explicit)
	{
		this.m_explicitDrillOnFilteredNodes.add(dimension.getName());
	}
	else
	{
		this.m_explicitDrillOnFilteredNodes.removeElement(dimension.getName());
	}
	this.notifyNodeChanged();
};
oFF.QDrillManager.prototype.isExplicitDrillOnFilteredNodes = function(dimension)
{
	return this.m_explicitDrillOnFilteredNodes.contains(dimension.getName());
};
oFF.QDrillManager.prototype.getIndexedChildren = function()
{
	return oFF.XIteratorWrapper.create(this.m_drillOperations.getIterator());
};
oFF.QDrillManager.prototype.isDrillStateValid = function(tupleElement, drillState)
{
	var currentDrillState = tupleElement.getDrillState();
	if (currentDrillState === oFF.DrillState.LEAF)
	{
		return false;
	}
	else if (currentDrillState === oFF.DrillState.LEAF_UDH)
	{
		return drillState === oFF.DrillState.COLLAPSED;
	}
	if (drillState === oFF.DrillState.DRILLED)
	{
		if (currentDrillState === oFF.DrillState.LEAF_UDH_EXPAND_ALLOWED)
		{
			return false;
		}
		return tupleElement.getDimension().isUniversalDisplayHierarchyDimension();
	}
	else if (drillState === oFF.DrillState.EXPANDED)
	{
		return currentDrillState !== oFF.DrillState.LEAF_DRILLDOWN_ALLOWED;
	}
	return true;
};
oFF.QDrillManager.prototype.addStickyMemberForDimension = function(dimension, memberName)
{
	var dimName = dimension.getName();
	if (!this.m_stickyMembersByDimension.containsKey(dimName))
	{
		this.m_stickyMembersByDimension.put(dimName, oFF.XHashSetOfString.create());
	}
	var stickyMembers = this.m_stickyMembersByDimension.getByKey(dimName);
	if (!stickyMembers.contains(memberName))
	{
		stickyMembers.add(memberName);
		this.notifyNodeChanged();
	}
};
oFF.QDrillManager.prototype.removeStickyMemberForDimension = function(dimension, memberName)
{
	var dimName = dimension.getName();
	if (this.m_stickyMembersByDimension.containsKey(dimName))
	{
		this.m_stickyMembersByDimension.getByKey(dimName).removeElement(memberName);
	}
};
oFF.QDrillManager.prototype.clearStickyMembersForDimension = function(dimension)
{
	var dimName = dimension.getName();
	if (this.m_stickyMembersByDimension.containsKey(dimName))
	{
		this.m_stickyMembersByDimension.remove(dimName);
	}
};
oFF.QDrillManager.prototype.clearStickyMembers = function()
{
	this.m_stickyMembersByDimension.clear();
};
oFF.QDrillManager.prototype.hasStickyMembers = function()
{
	return oFF.XCollectionUtils.hasElements(this.m_stickyMembersByDimension);
};
oFF.QDrillManager.prototype.hasStickyMembersByDimension = function(dimension)
{
	return oFF.XCollectionUtils.hasElements(this.m_stickyMembersByDimension.getByKey(dimension.getName()));
};
oFF.QDrillManager.prototype.hasStickyMemberByDimension = function(dimension, memberName)
{
	var dimName = dimension.getName();
	return oFF.XCollectionUtils.hasElements(this.m_stickyMembersByDimension.getByKey(dimName)) && this.m_stickyMembersByDimension.getByKey(dimName).contains(memberName);
};
oFF.QDrillManager.prototype.getStickyMembersByDimension = function(dimension)
{
	var dimName = dimension.getName();
	return !oFF.XCollectionUtils.hasElements(this.m_stickyMembersByDimension.getByKey(dimName)) ? null : this.m_stickyMembersByDimension.getByKey(dimName).getValuesAsReadOnlyListOfString();
};
oFF.QDrillManager.prototype.onValuehelpExecuted = function(extResult, resultSetContainer, customIdentifier)
{
	if (!extResult.hasErrors())
	{
		var data = extResult.getData();
		var nodeNameList = oFF.XListOfString.create();
		for (var i = 0; i < data.size(); i++)
		{
			if (data.get(i).getParentNode() === null)
			{
				var nodeValue = data.get(i).getDimensionMember().getValueAsString();
				if (oFF.XStringUtils.isNotNullAndNotEmpty(nodeValue))
				{
					nodeNameList.add(nodeValue);
				}
			}
		}
		if (oFF.XCollectionUtils.hasElements(nodeNameList))
		{
			this.m_rootNodeCache.put(customIdentifier.getString(), nodeNameList);
		}
	}
};
oFF.QDrillManager.prototype.getTopMostZoomDrillOperationsForDimension = function(dimension)
{
	if (oFF.isNull(dimension) || !oFF.XCollectionUtils.hasElements(this.m_zoomOperationsByDimension) || !this.m_zoomOperationsByDimension.containsKey(dimension.getName()))
	{
		return oFF.XList.create();
	}
	return this.m_zoomOperationsByDimension.getByKey(dimension.getName());
};
oFF.QDrillManager.prototype.getAllZoomDrillOperationsForDimension = function(dimension)
{
	var result = oFF.XList.create();
	if (oFF.isNull(dimension) || !oFF.XCollectionUtils.hasElements(this.m_zoomOperationsByDimension))
	{
		return result;
	}
	var dimensionName = dimension.getName();
	for (var i = 0; i < this.m_stackDrillOperations.size(); i++)
	{
		var curDO = this.m_stackDrillOperations.get(i);
		if (curDO.getTargetDimension() !== null && oFF.XString.isEqual(dimensionName, curDO.getTargetDimension().getName()))
		{
			result.add(curDO);
		}
	}
	return result;
};
oFF.QDrillManager.prototype.getZoomDrillOperations = function()
{
	return this.m_stackDrillOperations;
};
oFF.QDrillManager.prototype.getZoomAwareDrillOperationsForDimension = function(dimension)
{
	var initialDrillOperationList = this.getDrillOperationsForInAData();
	var resultList = oFF.XList.create();
	for (var i = 0; i < initialDrillOperationList.size(); i++)
	{
		var currentDrillOperation = initialDrillOperationList.get(i);
		if (currentDrillOperation.getType() === oFF.DrillOperationType.CONTEXT && currentDrillOperation.getTargetDimension() === dimension)
		{
			resultList.add(currentDrillOperation);
		}
	}
	return resultList;
};
oFF.QDrillManager.prototype.getTimeDimensionLowestDrillLevelType = function(timeDimension)
{
	var visibleLevelTypeCandidates = oFF.XSetOfNameObject.create();
	var hierarchy = timeDimension.getLeveledHierarchy(timeDimension.getHierarchyName());
	visibleLevelTypeCandidates.add(hierarchy.getLevel(0).getLevelType());
	visibleLevelTypeCandidates.addAll(this.getVisibleLevelTypeCandidatesFromDataFilters(timeDimension));
	visibleLevelTypeCandidates.addAll(this.getVisibleLevelTypeCandidatesFromInitialDrillLevel(hierarchy, timeDimension.getInitialDrillLevel(), visibleLevelTypeCandidates));
	visibleLevelTypeCandidates.addAll(this.getVisibleLevelTypeCandidatesFromDrill(this.getQueryModel(), timeDimension));
	var effectiveVisibilityFilter = this.getQueryModel().getFilter().getEffectiveVisibilityFilter();
	var zoomVisibilityFilter = this.getQueryModel().getFilter().getTransientZoomVisibilityFilter();
	var visibleLevelTypes = visibleLevelTypeCandidates;
	if (this.getQueryModel().getModelCapabilities().supportsVisibilityFilter())
	{
		visibleLevelTypes = this.filterNonVisibleLevelTypes(this.getQueryModel(), timeDimension, effectiveVisibilityFilter, zoomVisibilityFilter, visibleLevelTypeCandidates);
	}
	return this.getLowestLevel(visibleLevelTypes);
};
oFF.QDrillManager.prototype.getVisibleLevelTypeCandidatesFromDataFilters = function(timeDimension)
{
	var visibleLevelTypeCandidates = oFF.XSetOfNameObject.create();
	var filter = this.getQueryModel().getFilter();
	var zoomDataFilter = filter.getTransientZoomDisplayFilter();
	if (oFF.XCollectionUtils.hasElements(filter.getTransientZoomDisplayFilter()))
	{
		var expression = oFF.QFactory.createFilterExpression(zoomDataFilter.getContext(), zoomDataFilter.getParent());
		expression.setComplexRoot(zoomDataFilter);
		var drillFilterTimeCartesianLists = oFF.QFilterUtil.collectAllTimeCartesianLists(expression, timeDimension);
		visibleLevelTypeCandidates.addAll(this.getAvailableLevelTypesFromTimeCartesianLists(this.getQueryModel(), timeDimension, drillFilterTimeCartesianLists, false));
	}
	if (filter.isDynamicFilterInitialized() && filter.getEffectiveFilter().getFilterRootElement() !== null)
	{
		var dynamicFilterTimeCartesianLists = oFF.QFilterUtil.collectAllTimeCartesianLists(filter.getEffectiveFilter().getFilterRootElement(), timeDimension);
		visibleLevelTypeCandidates.addAll(this.getAvailableLevelTypesFromTimeCartesianLists(this.getQueryModel(), timeDimension, dynamicFilterTimeCartesianLists, false));
	}
	if (filter.isFixedFilterInitialized() && filter.getFixedFilter().getFilterRootElement() !== null)
	{
		var fixedFilterTimeCartesianLists = oFF.QFilterUtil.collectAllTimeCartesianLists(filter.getFixedFilter().getFilterRootElement(), timeDimension);
		visibleLevelTypeCandidates.addAll(this.getAvailableLevelTypesFromTimeCartesianLists(this.getQueryModel(), timeDimension, fixedFilterTimeCartesianLists, false));
	}
	return visibleLevelTypeCandidates;
};
oFF.QDrillManager.prototype.getVisibleLevelTypeCandidatesFromInitialDrillLevel = function(timeHierarchy, initialDrillLevel, initialVisibleLevelTypes)
{
	var allHierarchyLevels = timeHierarchy.getAllLevel();
	var expandedLevelTypes = oFF.XSetOfNameObject.create();
	if (initialDrillLevel === -1)
	{
		for (var i = 0; i < allHierarchyLevels.size(); i++)
		{
			expandedLevelTypes.add(allHierarchyLevels.get(i).getLevelType());
		}
	}
	else if (initialDrillLevel > 0)
	{
		for (var initialVisibleLevelTypesIterator = initialVisibleLevelTypes.getIterator(); initialVisibleLevelTypesIterator.hasNext(); )
		{
			var visibleLevelTypeCandidate = initialVisibleLevelTypesIterator.next();
			for (var allLevelTypesIterator = allHierarchyLevels.getIterator(); allLevelTypesIterator.hasNext(); )
			{
				var hierarchyLevel = allLevelTypesIterator.next();
				var visibleHierarchyLevelCandidate = timeHierarchy.getLevelByType(visibleLevelTypeCandidate);
				if (hierarchyLevel.getLevelNumber() > visibleHierarchyLevelCandidate.getLevelNumber() && hierarchyLevel.getLevelNumber() <= visibleHierarchyLevelCandidate.getLevelNumber() + initialDrillLevel)
				{
					expandedLevelTypes.add(hierarchyLevel.getLevelType());
				}
			}
		}
	}
	return expandedLevelTypes;
};
oFF.QDrillManager.prototype.getVisibleLevelTypeCandidatesFromDrill = function(queryModel, timeDimension)
{
	var expandedLevelTypes = oFF.XSetOfNameObject.create();
	var timeHierarchy = timeDimension.getLeveledHierarchy(timeDimension.getHierarchyName());
	var drillOperations = this.getZoomAwareDrillOperationsForDimension(timeDimension);
	var drillValueToDrillState = this.createDrillValueToDrillStateMap(drillOperations, timeDimension);
	for (var drillOperationIdx = 0; drillOperationIdx < drillOperations.size(); ++drillOperationIdx)
	{
		var drillOperation = drillOperations.get(drillOperationIdx);
		var drillPath = drillOperation.getDrillPath();
		for (var drillPathIdx = 0; drillPathIdx < drillPath.size(); ++drillPathIdx)
		{
			var drillPathElement = drillPath.get(drillPathIdx);
			if (oFF.XString.isEqual(drillPathElement.getDimension().getName(), timeDimension.getName()))
			{
				var drillValue = drillPathElement.getName();
				if (this.doesDrillValueAffectLowestDrill(queryModel, timeDimension, drillValueToDrillState, drillValue))
				{
					var drillValueLevelType = oFF.QCanonicalDateUtil.getHierarchyLevelTypeFromEntityValue(queryModel, timeDimension, timeDimension.getHierarchyName(), drillValue);
					var drillValueLevelTypeWithOffset = this.getHierarchyLevelTypeWithOffset(timeHierarchy, drillValueLevelType, 1);
					if (oFF.notNull(drillValueLevelTypeWithOffset))
					{
						expandedLevelTypes.add(drillValueLevelTypeWithOffset);
					}
					else
					{
						expandedLevelTypes.add(drillValueLevelType);
					}
				}
			}
		}
	}
	return expandedLevelTypes;
};
oFF.QDrillManager.prototype.createDrillValueToDrillStateMap = function(drillOperations, timeDimension)
{
	var drillValueToDrillState = oFF.XHashMapByString.create();
	for (var drillOperationIdx = 0; drillOperationIdx < drillOperations.size(); drillOperationIdx++)
	{
		var drillOperation = drillOperations.get(drillOperationIdx);
		var drillPath = drillOperation.getDrillPath();
		for (var drillPathIdx = 0; drillPathIdx < drillPath.size(); drillPathIdx++)
		{
			var drillPathElement = drillPath.get(drillPathIdx);
			if (oFF.XString.isEqual(drillPathElement.getDimension().getName(), timeDimension.getName()))
			{
				drillValueToDrillState.putIfNotNull(drillPathElement.getName(), drillOperation.getDrillState());
			}
		}
	}
	return drillValueToDrillState;
};
oFF.QDrillManager.prototype.doesDrillValueAffectLowestDrill = function(queryModel, timeDimension, drillValueToDrillState, drillValue)
{
	if (drillValueToDrillState.getByKey(drillValue) === oFF.DrillState.COLLAPSED)
	{
		return false;
	}
	var timeHierarchy = timeDimension.getLeveledHierarchy(timeDimension.getHierarchyName());
	var drillValueHierarchyLevelType = oFF.QCanonicalDateUtil.getHierarchyLevelTypeFromEntityValue(queryModel, timeDimension, timeDimension.getHierarchyName(), drillValue);
	if (drillValueHierarchyLevelType === oFF.HierarchyLevelType.ALL)
	{
		return true;
	}
	var drillValueCanonicalDate = oFF.QCanonicalDateUtil.createCanonicalDateFromEntityValue(queryModel, timeDimension, timeDimension.getHierarchyName(), drillValue);
	var drillValueParentHierarchyLevelType = this.getHierarchyLevelTypeWithOffset(timeHierarchy, drillValueHierarchyLevelType, -1);
	while (oFF.notNull(drillValueParentHierarchyLevelType))
	{
		var drillValueParentEntityValue;
		if (drillValueParentHierarchyLevelType === oFF.HierarchyLevelType.ALL)
		{
			drillValueParentEntityValue = this.getDrillValueWithLevelTypeAll(queryModel, timeDimension, timeDimension.getHierarchyName(), drillValueToDrillState);
		}
		else
		{
			var drillValueParentCanonicalDate = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, timeDimension.getHierarchyName(), drillValueCanonicalDate, drillValueParentHierarchyLevelType, false);
			drillValueParentEntityValue = oFF.QCanonicalDateUtil.createEntityValueFromCanonicalDate(queryModel, timeDimension, timeDimension.getHierarchyName(), drillValueParentCanonicalDate);
		}
		if (oFF.notNull(drillValueParentEntityValue) && drillValueToDrillState.getByKey(drillValueParentEntityValue) === oFF.DrillState.COLLAPSED)
		{
			return false;
		}
		drillValueParentHierarchyLevelType = this.getHierarchyLevelTypeWithOffset(timeHierarchy, drillValueParentHierarchyLevelType, -1);
	}
	return true;
};
oFF.QDrillManager.prototype.getDrillValueWithLevelTypeAll = function(queryModel, timeDimension, hierarchyName, drillValueToDrillState)
{
	for (var iterator = drillValueToDrillState.getKeysAsIteratorOfString(); iterator.hasNext(); )
	{
		var drillValue = iterator.next();
		var drillValueLevelType = oFF.QCanonicalDateUtil.getHierarchyLevelTypeFromEntityValue(queryModel, timeDimension, hierarchyName, drillValue);
		if (drillValueLevelType === oFF.HierarchyLevelType.ALL)
		{
			return drillValue;
		}
	}
	return null;
};
oFF.QDrillManager.prototype.filterNonVisibleLevelTypes = function(queryModel, timeDimension, filterRootElement, zoomVisibilityFilter, visibleLevelTypeCandidates)
{
	var visibilityFilterTimeCartesianLists = oFF.QFilterUtil.collectAllTimeCartesianLists(filterRootElement, timeDimension);
	var zoomExpression = oFF.QFactory.createFilterExpression(zoomVisibilityFilter.getContext(), zoomVisibilityFilter.getParent());
	zoomExpression.setComplexRoot(zoomVisibilityFilter);
	visibilityFilterTimeCartesianLists.addAll(oFF.QFilterUtil.collectAllTimeCartesianLists(zoomExpression, timeDimension));
	var visibilityFilterLevelTypes = this.getAvailableLevelTypesFromTimeCartesianLists(queryModel, timeDimension, visibilityFilterTimeCartesianLists, true);
	if (visibilityFilterLevelTypes.isEmpty())
	{
		return visibleLevelTypeCandidates;
	}
	var visibleLevelTypes = oFF.XSetOfNameObject.create();
	for (var visibleLevelTypeCandidatesIterator = visibleLevelTypeCandidates.getIterator(); visibleLevelTypeCandidatesIterator.hasNext(); )
	{
		var visibleLevelTypeCandidate = visibleLevelTypeCandidatesIterator.next();
		if (visibilityFilterLevelTypes.contains(visibleLevelTypeCandidate))
		{
			visibleLevelTypes.add(visibleLevelTypeCandidate);
		}
	}
	return visibleLevelTypes;
};
oFF.QDrillManager.prototype.getAvailableLevelTypesFromTimeCartesianElement = function(queryModel, timeDimension, cartesianListHierarchyName, timeCartesianElement, shouldRespectDepth)
{
	var availableLevelTypes = oFF.XSetOfNameObject.create();
	var timeHierarchy = timeDimension.getLeveledHierarchy(cartesianListHierarchyName);
	var levelOffset;
	if (timeCartesianElement.hasLevelOffset())
	{
		levelOffset = timeCartesianElement.getLevelOffset();
	}
	else
	{
		levelOffset = 0;
	}
	var selectedValueLevelType = oFF.QCanonicalDateUtil.getHierarchyLevelTypeFromEntityValue(queryModel, timeDimension, cartesianListHierarchyName, timeCartesianElement.getLow().getString());
	var selectedValueLevelTypeWithOffset = this.getHierarchyLevelTypeWithOffset(timeHierarchy, selectedValueLevelType, levelOffset);
	if (oFF.notNull(selectedValueLevelTypeWithOffset))
	{
		availableLevelTypes.add(selectedValueLevelTypeWithOffset);
	}
	if (shouldRespectDepth && queryModel.getModelCapabilities().supportsHierarchyTrapezoidFilter())
	{
		var depth = timeCartesianElement.getDepth();
		if (depth === -1)
		{
			depth = timeHierarchy.getAllLevel().size();
		}
		for (var start = 1; start <= depth && oFF.notNull(selectedValueLevelTypeWithOffset); start++)
		{
			selectedValueLevelTypeWithOffset = this.getHierarchyLevelTypeWithOffset(timeHierarchy, selectedValueLevelType, timeCartesianElement.getLevelOffset() + start);
			if (oFF.notNull(selectedValueLevelTypeWithOffset))
			{
				availableLevelTypes.add(selectedValueLevelTypeWithOffset);
			}
		}
	}
	return availableLevelTypes;
};
oFF.QDrillManager.prototype.getLowestLevel = function(levels)
{
	if (oFF.isNull(levels) || levels.size() === 0)
	{
		throw oFF.XException.createIllegalArgumentException("levels cannot be empty or null");
	}
	var lowestLevel = null;
	for (var iterator = levels.getIterator(); iterator.hasNext(); )
	{
		var level = iterator.next();
		if (oFF.isNull(lowestLevel) || level.getLevelIndex() > lowestLevel.getLevelIndex())
		{
			lowestLevel = level;
		}
	}
	return lowestLevel;
};
oFF.QDrillManager.prototype.getHierarchyLevelTypeWithOffset = function(hierarchy, startHierarchyLevelType, offset)
{
	var level = hierarchy.getLevel(hierarchy.getLevelByType(startHierarchyLevelType).getLevelNumber() + offset);
	if (oFF.isNull(level))
	{
		return null;
	}
	return level.getLevelType();
};
oFF.QDrillManager.prototype.getAvailableLevelTypesFromTimeCartesianLists = function(queryModel, timeDimension, timeCartesianLists, shouldRespectDepth)
{
	var availableLevelTypes = oFF.XSetOfNameObject.create();
	for (var idxCartesianList = 0; idxCartesianList < timeCartesianLists.size(); idxCartesianList++)
	{
		var timeCartesianList = timeCartesianLists.get(idxCartesianList);
		if (oFF.notNull(timeCartesianList) && this.doesFilterAffectDrill(timeCartesianList))
		{
			for (var idxCartesianElement = 0; idxCartesianElement < timeCartesianList.size(); idxCartesianElement++)
			{
				var timeCartesianElement = timeCartesianList.getCartesianElement(idxCartesianElement);
				if (this.isIncludeCartesianElement(timeCartesianElement) && !timeCartesianElement.isConvertToFlatFilter())
				{
					availableLevelTypes.addAll(this.getAvailableLevelTypesFromTimeCartesianElement(queryModel, timeDimension, timeCartesianList.getHierarchyName(), timeCartesianElement, shouldRespectDepth));
				}
			}
		}
	}
	return availableLevelTypes;
};
oFF.QDrillManager.prototype.doesFilterAffectDrill = function(filterContext)
{
	return !filterContext.isConvertToFlatFilter() && filterContext.getHierarchyName() !== null;
};
oFF.QDrillManager.prototype.isIncludeCartesianElement = function(cartesianElement)
{
	return cartesianElement.getSetSign() === oFF.SetSign.INCLUDING && (cartesianElement.getComparisonOperator() === oFF.ComparisonOperator.IN || cartesianElement.getComparisonOperator() === oFF.ComparisonOperator.BETWEEN || cartesianElement.getComparisonOperator() === oFF.ComparisonOperator.EQUAL);
};

oFF.QDrillOperation = function() {};
oFF.QDrillOperation.prototype = new oFF.QModelComponent();
oFF.QDrillOperation.prototype._ff_c = "QDrillOperation";

oFF.QDrillOperation.create = function(context, parent, type, targetDimension, drillState, expandLevels, offsetLevels, drillPath, drillCounter, zoomStackPosition)
{
	var object = new oFF.QDrillOperation();
	object.setupDrillOperation(context, parent, type, targetDimension, drillState, expandLevels, offsetLevels, drillPath, drillCounter, zoomStackPosition);
	return object;
};
oFF.QDrillOperation.prototype.m_drillPath = null;
oFF.QDrillOperation.prototype.m_elementPath = null;
oFF.QDrillOperation.prototype.m_drillState = null;
oFF.QDrillOperation.prototype.m_targetDimension = null;
oFF.QDrillOperation.prototype.m_type = null;
oFF.QDrillOperation.prototype.m_expandLevels = 0;
oFF.QDrillOperation.prototype.m_offsetLevels = 0;
oFF.QDrillOperation.prototype.m_drillCounter = 0;
oFF.QDrillOperation.prototype.m_zoomStackPosition = 0;
oFF.QDrillOperation.prototype.cloneOlapComponent = function(context, parent)
{
	var targetDimName = this.getTargetDimension().getName();
	var targetDim = context.getDimensionAccessor().getDimensionByNameFromExistingMetadata(targetDimName);
	var clone = oFF.QDrillOperation.create(context, null, this.m_type, targetDim, this.m_drillState, this.m_expandLevels, this.m_offsetLevels, this.m_drillPath, this.m_drillCounter, this.m_zoomStackPosition);
	clone.copyFrom(this, null);
	clone.m_elementPath = this.m_elementPath.createListCopy();
	return clone;
};
oFF.QDrillOperation.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.DRILL_OPERATION;
};
oFF.QDrillOperation.prototype.setupDrillOperation = function(context, parent, type, targetDimension, drillState, expandLevels, offsetLevels, drillPath, drillCounter, zoomStackPosition)
{
	this.setupModelComponent(context, parent);
	this.m_type = type;
	this.m_expandLevels = expandLevels;
	this.m_offsetLevels = offsetLevels;
	this.m_drillPath = drillPath;
	this.m_drillState = drillState;
	this.m_targetDimension = oFF.XWeakReferenceUtil.getWeakRef(targetDimension);
	this.m_drillCounter = drillCounter;
	this.m_zoomStackPosition = zoomStackPosition;
	if (oFF.notNull(drillPath))
	{
		this.m_elementPath = oFF.XList.create();
		var size = drillPath.size();
		for (var i = 0; i < size; i++)
		{
			var dimensionElement = drillPath.get(i);
			var dimensionElementCopy = oFF.QFactory.createDimensionElementWithContext(context, dimensionElement.getSelectField(), dimensionElement.getSelectHierarchyName(), dimensionElement.getSelectValue());
			this.m_elementPath.add(dimensionElementCopy);
		}
		if (oFF.isNull(targetDimension) && size > 0)
		{
			this.m_targetDimension = oFF.XWeakReferenceUtil.getWeakRef(drillPath.get(size - 1).getDimension());
		}
	}
};
oFF.QDrillOperation.prototype.releaseObject = function()
{
	this.m_elementPath = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_elementPath);
	this.m_drillPath = null;
	this.m_drillState = null;
	this.m_targetDimension = null;
	this.m_type = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QDrillOperation.prototype.getDrillPath = function()
{
	return this.m_drillPath;
};
oFF.QDrillOperation.prototype.getElementPath = function()
{
	return this.m_elementPath;
};
oFF.QDrillOperation.prototype.getDrillState = function()
{
	return this.m_drillState;
};
oFF.QDrillOperation.prototype.setDrillState = function(drillState)
{
	if (this.m_drillState !== drillState)
	{
		var oldValue = this.m_drillState;
		this.m_drillState = drillState;
		this.notifyPropertyConstantChanged(oFF.QDrillProperties.QY_DRILL_STATE, oldValue, drillState);
	}
};
oFF.QDrillOperation.prototype.getTargetDimension = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_targetDimension);
};
oFF.QDrillOperation.prototype.setTargetDimension = function(targetDimension)
{
	this.m_targetDimension = oFF.XWeakReferenceUtil.getWeakRef(targetDimension);
};
oFF.QDrillOperation.prototype.getType = function()
{
	return this.m_type;
};
oFF.QDrillOperation.prototype.getRelativeLevelCount = function()
{
	return this.m_expandLevels;
};
oFF.QDrillOperation.prototype.getRelativeLevelOffset = function()
{
	return this.m_offsetLevels;
};
oFF.QDrillOperation.prototype.setRelativeLevelOffset = function(relativeLevelOffset)
{
	if (this.m_offsetLevels !== relativeLevelOffset)
	{
		var oldValue = this.m_offsetLevels;
		this.m_offsetLevels = relativeLevelOffset;
		this.notifyPropertyIntegerChanged(oFF.QDrillProperties.QY_INITIAL_DRILL_OFFSET, oldValue, relativeLevelOffset);
	}
};
oFF.QDrillOperation.prototype.getDrillCounter = function()
{
	return this.m_drillCounter;
};
oFF.QDrillOperation.prototype.getZoomStackPosition = function()
{
	return this.m_zoomStackPosition;
};
oFF.QDrillOperation.prototype.getUniqueName = function()
{
	var buffer = oFF.XStringBuffer.create();
	buffer.append("[");
	buffer.append(this.m_type.getName());
	buffer.append(":");
	if (oFF.notNull(this.m_targetDimension))
	{
		buffer.append(this.getTargetDimension().getName());
	}
	buffer.append("]");
	if (oFF.notNull(this.m_drillPath))
	{
		var size = this.m_drillPath.size();
		for (var i = 0; i < size; i++)
		{
			if (i > 0)
			{
				buffer.append("/");
			}
			var element = this.m_drillPath.get(i);
			buffer.append("[");
			var dimension = element.getDimension();
			if (oFF.notNull(dimension))
			{
				buffer.append(dimension.getName());
			}
			buffer.append("]");
			if (element.getName() !== null)
			{
				buffer.append("{ ");
				buffer.append(element.getName());
				buffer.append("} ");
			}
		}
	}
	return buffer.toString();
};
oFF.QDrillOperation.prototype.getPathUniqueName = function()
{
	return this.getUniqueName();
};
oFF.QDrillOperation.prototype.setRelativeLevelCount = function(level)
{
	if (this.m_expandLevels !== level)
	{
		var oldValue = this.m_expandLevels;
		this.m_expandLevels = level;
		this.notifyPropertyIntegerChanged(oFF.QDrillProperties.QY_DRILL_LEVEL, oldValue, level);
	}
};
oFF.QDrillOperation.prototype.getDrillManager = function()
{
	var result = this.getParent().getParent();
	if (oFF.isNull(result))
	{
		var queryModel = this.getQueryModel();
		if (oFF.notNull(queryModel))
		{
			result = queryModel.getDrillManager();
		}
	}
	return result;
};
oFF.QDrillOperation.prototype.supportsDrillCounter = function()
{
	var drillManager = this.getDrillManager();
	if (oFF.isNull(drillManager))
	{
		return false;
	}
	return drillManager.supportsDrillCounter();
};
oFF.QDrillOperation.prototype.toString = function()
{
	return this.getPathUniqueName();
};

oFF.QDrillPathElement = function() {};
oFF.QDrillPathElement.prototype = new oFF.QModelComponent();
oFF.QDrillPathElement.prototype._ff_c = "QDrillPathElement";

oFF.QDrillPathElement._create = function(context)
{
	var object = new oFF.QDrillPathElement();
	object.setupModelComponent(context, null);
	return object;
};
oFF.QDrillPathElement.prototype.m_dimension = null;
oFF.QDrillPathElement.prototype.m_hierarchyName = null;
oFF.QDrillPathElement.prototype.m_fieldName = null;
oFF.QDrillPathElement.prototype.cloneOlapComponent = function(context, parent)
{
	var clone = oFF.QDrillPathElement._create(context);
	clone.copyFrom(this, null);
	clone.m_dimension = this.m_dimension;
	clone.m_hierarchyName = this.m_hierarchyName;
	clone.m_fieldName = this.m_fieldName;
	return clone;
};
oFF.QDrillPathElement.prototype.releaseObject = function()
{
	this.m_dimension = oFF.XObjectExt.release(this.m_dimension);
	this.m_hierarchyName = null;
	this.m_fieldName = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QDrillPathElement.prototype.getOlapComponentType = function()
{
	return this.getMemberType();
};
oFF.QDrillPathElement.prototype.getType = function()
{
	return this.getMemberType();
};
oFF.QDrillPathElement.prototype.getMemberType = function()
{
	return oFF.MemberType.DRILL_PATH_ELEMENT;
};
oFF.QDrillPathElement.prototype.getDimension = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_dimension);
};
oFF.QDrillPathElement.prototype.setDimension = function(dimension)
{
	this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
	if (oFF.notNull(dimension))
	{
		this.m_hierarchyName = dimension.getHierarchyName();
		if (this.getFieldName() === null && dimension.getKeyField() !== null)
		{
			this.setFieldName(dimension.getKeyField().getName());
		}
	}
};
oFF.QDrillPathElement.prototype.getFieldName = function()
{
	return this.m_fieldName;
};
oFF.QDrillPathElement.prototype.setFieldName = function(fieldName)
{
	this.m_fieldName = fieldName;
};
oFF.QDrillPathElement.prototype.getSelectValue = function()
{
	return this.getName();
};
oFF.QDrillPathElement.prototype.getSelectField = function()
{
	if (oFF.isNull(this.m_dimension))
	{
		return null;
	}
	return this.getDimension().getFieldByName(this.m_fieldName);
};
oFF.QDrillPathElement.prototype.getSelectHierarchyName = function()
{
	return this.m_hierarchyName;
};
oFF.QDrillPathElement.prototype.getSelectableElement = function()
{
	return this;
};
oFF.QDrillPathElement.prototype.isNode = function()
{
	return this.getMemberType().isNode();
};
oFF.QDrillPathElement.prototype.getNameForInAExport = function()
{
	var name = this.getName();
	var dimension = this.getDimension();
	if (oFF.notNull(name) && oFF.notNull(dimension) && oFF.notNull(this.m_fieldName) && dimension.getModelCapabilities().supportsSapDate())
	{
		var field = dimension.getFieldByName(this.m_fieldName);
		if (oFF.notNull(field))
		{
			var valueType = field.getValueType();
			var dateTimeExport = null;
			if (valueType === oFF.XValueType.DATE)
			{
				dateTimeExport = oFF.XDate.createDateSafe(name);
			}
			else if (valueType === oFF.XValueType.TIME)
			{
				dateTimeExport = oFF.XTime.createTimeSafe(name);
			}
			else if (valueType === oFF.XValueType.DATE_TIME)
			{
				dateTimeExport = oFF.XDateTime.createDateTimeSafe(name);
			}
			if (oFF.notNull(dateTimeExport))
			{
				return dateTimeExport.toSAPFormat();
			}
		}
	}
	return name;
};

oFF.QAbstractThresholdEvaluateList = function() {};
oFF.QAbstractThresholdEvaluateList.prototype = new oFF.QModelComponent();
oFF.QAbstractThresholdEvaluateList.prototype._ff_c = "QAbstractThresholdEvaluateList";

oFF.QAbstractThresholdEvaluateList.prototype.m_evaluates = null;
oFF.QAbstractThresholdEvaluateList.prototype.m_thresholds = null;
oFF.QAbstractThresholdEvaluateList.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originObj = other;
	var i;
	var size;
	if (oFF.XCollectionUtils.hasElements(originObj.m_thresholds))
	{
		this.removeAllThresholds();
		size = originObj.m_thresholds.size();
		for (i = 0; i < size; i++)
		{
			var originThreshold = originObj.m_thresholds.get(i);
			var cloneThreshold = this._addNewThresholdInternal(0, originThreshold.getAlertLevel());
			cloneThreshold.copyThreshold(originThreshold);
		}
		this.m_thresholds.copyFrom(originObj.m_thresholds, flags);
	}
	var queryModel = this.getQueryModel();
	if (oFF.notNull(originObj.m_evaluates))
	{
		this.removeAllEvaluates();
		size = originObj.m_evaluates.size();
		for (i = 0; i < size; i++)
		{
			var originEvaluate = originObj.m_evaluates.get(i);
			var dimension = queryModel.getDimensionByNameFromExistingMetadata(originEvaluate.getDimension().getName());
			var originLowValue = originEvaluate.getLowValue();
			var cloneEvaluate = oFF.QEvaluate.createEvaluate(dimension, oFF.notNull(originLowValue) && originLowValue.getValue() !== null ? originLowValue.getValue().clone() : null, this);
			cloneEvaluate.copyEvaluate(originEvaluate);
			this.addEvaluate(cloneEvaluate);
		}
		this.m_evaluates.copyFrom(originObj.m_evaluates, flags);
	}
};
oFF.QAbstractThresholdEvaluateList.prototype.setupThresholdEvaluateList = function(context)
{
	this.m_thresholds = oFF.QModelComponentList.createModelComponentList(context, this, true, "Thresholds");
	this.m_evaluates = oFF.QModelComponentList.createModelComponentList(context, this, true, "Evaluates");
};
oFF.QAbstractThresholdEvaluateList.prototype.releaseObject = function()
{
	this.m_thresholds = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_thresholds);
	this.m_evaluates = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_evaluates);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QAbstractThresholdEvaluateList.prototype.addEvaluate = function(evaluate)
{
	this.insertEvaluate(this.m_evaluates.size(), evaluate);
};
oFF.QAbstractThresholdEvaluateList.prototype.addNewEvaluate = function(dimension, lowValue)
{
	var evaluate = this.newEvaluate(dimension, lowValue);
	this.insertEvaluate(this.m_evaluates.size(), evaluate);
	return evaluate;
};
oFF.QAbstractThresholdEvaluateList.prototype.addNewEvaluateWithField = function(field, lowValue)
{
	var evaluate = this.newEvaluateWithField(field, lowValue);
	this.insertEvaluate(this.m_evaluates.size(), evaluate);
	return evaluate;
};
oFF.QAbstractThresholdEvaluateList.prototype._addNewEvaluateWithFieldInternal = function(field, lowValue)
{
	var evaluate = this.newEvaluateWithField(field, lowValue);
	this.m_evaluates.addInternal(evaluate);
	return evaluate;
};
oFF.QAbstractThresholdEvaluateList.prototype.removeEvaluateAt = function(index)
{
	this.m_evaluates.removeAt(index);
};
oFF.QAbstractThresholdEvaluateList.prototype.removeAllEvaluates = function()
{
	this.m_evaluates.clear();
};
oFF.QAbstractThresholdEvaluateList.prototype._addNewThresholdInternal = function(lowValue, alertLevel)
{
	var threshold = this.newThreshold(lowValue, alertLevel);
	this.m_thresholds.addInternal(threshold);
	return threshold;
};
oFF.QAbstractThresholdEvaluateList.prototype._addNewThresholdWithStringInternal = function(lowValue, alertLevel)
{
	var threshold = this.newThresholdWithString(lowValue, alertLevel);
	this.m_thresholds.addInternal(threshold);
	return threshold;
};
oFF.QAbstractThresholdEvaluateList.prototype.addNewThreshold = function(lowValue, alertLevel)
{
	var threshold = this.newThreshold(lowValue, alertLevel);
	this.insertThreshold(this.m_thresholds.size(), threshold);
	return threshold;
};
oFF.QAbstractThresholdEvaluateList.prototype.addNewThresholdWithString = function(lowValue, alertLevel)
{
	var threshold = this.newThresholdWithString(lowValue, alertLevel);
	this.insertThreshold(this.m_thresholds.size(), threshold);
	return threshold;
};
oFF.QAbstractThresholdEvaluateList.prototype.addThreshold = function(threshold)
{
	this.insertThreshold(this.m_thresholds.size(), threshold);
};
oFF.QAbstractThresholdEvaluateList.prototype.removeThresholdAt = function(index)
{
	this.m_thresholds.removeAt(index);
};
oFF.QAbstractThresholdEvaluateList.prototype.removeAllThresholds = function()
{
	this.m_thresholds.clear();
};
oFF.QAbstractThresholdEvaluateList.prototype.getEvaluates = function()
{
	if (oFF.isNull(this.m_evaluates))
	{
		return oFF.XList.create();
	}
	return this.m_evaluates;
};
oFF.QAbstractThresholdEvaluateList.prototype.getThresholds = function()
{
	return this.m_thresholds;
};
oFF.QAbstractThresholdEvaluateList.prototype.insertEvaluate = function(index, evaluate)
{
	this.assertIsChangeable();
	oFF.XObjectExt.assertNotNullExt(evaluate, "The evaluate is null.");
	if (evaluate.getException() !== this)
	{
		throw oFF.XException.createIllegalArgumentException("The evaluate was created by another exception and can't be bound to this one.");
	}
	if (index >= this.m_evaluates.size())
	{
		this.m_evaluates.add(evaluate);
	}
	else if (index >= 0)
	{
		this.m_evaluates.set(index, evaluate);
	}
	else
	{
		this.m_evaluates.insert(0, evaluate);
	}
};
oFF.QAbstractThresholdEvaluateList.prototype.insertThreshold = function(index, threshold)
{
	this.assertIsChangeable();
	oFF.XObjectExt.assertNotNullExt(threshold, "The threshold is null.");
	if (threshold.getException() !== this)
	{
		throw oFF.XException.createIllegalArgumentException("The threshold was created by another exception and can't be bound to this one.");
	}
	if (index >= this.m_thresholds.size())
	{
		this.m_thresholds.add(threshold);
	}
	else if (index >= 0)
	{
		this.m_thresholds.set(index, threshold);
	}
	else
	{
		this.m_thresholds.insert(0, threshold);
	}
};
oFF.QAbstractThresholdEvaluateList.prototype.newEvaluate = function(dimension, lowValue)
{
	oFF.XObjectExt.assertNotNullExt(dimension, "The dimension is null.");
	var lowValueActual = oFF.isNull(lowValue) ? null : oFF.XValueUtil.convertValueStrict(lowValue, dimension.getKeyField().getValueType());
	return oFF.QEvaluate.createEvaluate(dimension, lowValueActual, this);
};
oFF.QAbstractThresholdEvaluateList.prototype.newEvaluateWithField = function(field, lowValue)
{
	oFF.XObjectExt.assertNotNullExt(field, "The field is null.");
	var lowValueActual = oFF.isNull(lowValue) ? null : oFF.XValueUtil.convertValueStrict(lowValue, field.getValueType());
	return oFF.QEvaluate.createEvaluateWithField(field, lowValueActual, this);
};
oFF.QAbstractThresholdEvaluateList.prototype.newThreshold = function(lowValue, alertLevel)
{
	return oFF.QThreshold.createThreshold(this.getContext(), lowValue, alertLevel, this);
};
oFF.QAbstractThresholdEvaluateList.prototype.newThresholdWithString = function(lowValue, alertLevel)
{
	return oFF.QThreshold.createThresholdWithString(this.getContext(), lowValue, alertLevel, this);
};

oFF.QEvaluate = function() {};
oFF.QEvaluate.prototype = new oFF.QModelComponent();
oFF.QEvaluate.prototype._ff_c = "QEvaluate";

oFF.QEvaluate.createEvaluate = function(dimension, lowValue, exception)
{
	if (oFF.isNull(dimension) || oFF.isNull(exception))
	{
		return null;
	}
	var evaluate = new oFF.QEvaluate();
	evaluate.setupModelComponent(exception.getContext(), exception.getEvaluates());
	evaluate.setField(dimension.getKeyField());
	evaluate.setupEvaluate(lowValue, exception);
	return evaluate;
};
oFF.QEvaluate.createEvaluateWithField = function(field, lowValue, exception)
{
	if (oFF.isNull(field) || oFF.isNull(exception))
	{
		return null;
	}
	var evaluate = new oFF.QEvaluate();
	evaluate.setupModelComponent(exception.getContext(), exception.getEvaluates());
	evaluate.setField(field);
	evaluate.setupEvaluate(lowValue, exception);
	return evaluate;
};
oFF.QEvaluate.prototype.m_field = null;
oFF.QEvaluate.prototype.m_operator = null;
oFF.QEvaluate.prototype.m_lowValue = null;
oFF.QEvaluate.prototype.m_highValue = null;
oFF.QEvaluate.prototype.m_evaluate = null;
oFF.QEvaluate.prototype.copyEvaluate = function(origin)
{
	oFF.QModelComponent.prototype.copyFrom.call( this , origin, null);
	this.setField(this.getField().getDimension().getFieldByName(origin.getField().getName()));
	this.m_operator = origin.m_operator;
	this.m_evaluate = origin.m_evaluate;
	if (oFF.notNull(origin.m_highValue) && origin.m_highValue.getValue() !== null)
	{
		this.setHighValue(origin.m_highValue.getValue().clone());
	}
};
oFF.QEvaluate.prototype.setupEvaluate = function(lowValue, exception)
{
	this.m_operator = oFF.ComparisonOperator.EQUAL;
	this.m_lowValue = oFF.XValueAccess.create();
	this.setLowValue(lowValue);
	this.m_evaluate = oFF.QExceptionEvalType.ALL;
};
oFF.QEvaluate.prototype.releaseObject = function()
{
	this.m_operator = null;
	this.m_lowValue = oFF.XObjectExt.release(this.m_lowValue);
	this.m_highValue = oFF.XObjectExt.release(this.m_highValue);
	this.m_evaluate = null;
	this.m_field = oFF.XObjectExt.release(this.m_field);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QEvaluate.prototype.getField = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_field);
};
oFF.QEvaluate.prototype.setField = function(field)
{
	this.assertExceptionChangeable();
	oFF.XObjectExt.assertNotNullExt(field, "The field is null.");
	this.m_field = oFF.XWeakReferenceUtil.getWeakRef(field);
	this.notifyNodeChanged();
};
oFF.QEvaluate.prototype.getException = function()
{
	return this.getParent();
};
oFF.QEvaluate.prototype.assertExceptionChangeable = function()
{
	if (this.getSession().hasFeature(oFF.FeatureToggleOlap.INA_REPOSITORY_DELTA))
	{
		this.getException().assertIsChangeable();
	}
};
oFF.QEvaluate.prototype.getOperator = function()
{
	return this.m_operator;
};
oFF.QEvaluate.prototype.setOperator = function(comparisonOperator)
{
	this.assertExceptionChangeable();
	if (this.m_operator !== comparisonOperator)
	{
		this.m_operator = comparisonOperator;
		this.notifyNodeChanged();
	}
};
oFF.QEvaluate.prototype.getLowValue = function()
{
	return this.m_lowValue;
};
oFF.QEvaluate.prototype.setLowValue = function(lowValue)
{
	this.setXValue(oFF.XValueUtil.convertValueStrict(lowValue, this.getValueType()), this.m_lowValue);
};
oFF.QEvaluate.prototype.getHighValue = function()
{
	if (oFF.isNull(this.m_highValue))
	{
		this.m_highValue = oFF.XValueAccess.create();
	}
	return this.m_highValue;
};
oFF.QEvaluate.prototype.setHighValue = function(highValue)
{
	this.setXValue(highValue, this.getHighValue());
};
oFF.QEvaluate.prototype.setXValue = function(valueOrigin, mValueAccess)
{
	if (oFF.isNull(valueOrigin))
	{
		return;
	}
	this.assertExceptionChangeable();
	var valueType = this.getValueType();
	var value = oFF.XValueUtil.convertValueStrict(valueOrigin, valueType);
	if (valueType === oFF.XValueType.INTEGER)
	{
		mValueAccess.setInteger(value.getInteger());
	}
	else if (valueType === oFF.XValueType.STRING)
	{
		mValueAccess.setString(value.getString());
	}
	else if (valueType === oFF.XValueType.DOUBLE)
	{
		mValueAccess.setDouble(value.getDouble());
	}
	else if (valueType === oFF.XValueType.DECIMAL_FLOAT)
	{
		mValueAccess.setDecFloat(value);
	}
	else if (valueType === oFF.XValueType.BOOLEAN)
	{
		mValueAccess.setBoolean(value.getBoolean());
	}
	else if (valueType === oFF.XValueType.DATE)
	{
		mValueAccess.setDate(value);
	}
	else if (valueType === oFF.XValueType.TIME)
	{
		mValueAccess.setTime(value);
	}
	else if (valueType === oFF.XValueType.DATE_TIME)
	{
		mValueAccess.setDateTime(value);
	}
	else if (valueType === oFF.XValueType.TIMESPAN)
	{
		mValueAccess.setTimeSpan(value);
	}
	else if (valueType === oFF.XValueType.LONG)
	{
		mValueAccess.setLong(value.getLong());
	}
	else
	{
		var message = oFF.XStringBuffer.create();
		message.append("Value type of Evaluate is not supported. Expected '").append(valueType.getName()).append("'!");
		throw oFF.XException.createIllegalArgumentException(message.toString());
	}
	this.notifyNodeChanged();
};
oFF.QEvaluate.prototype.setIntervall = function(lowValue, highValue)
{
	if (!lowValue.getValueType().isEqualTo(highValue.getValueType()))
	{
		throw oFF.XException.createIllegalArgumentException("Value type of low value and high value differ.");
	}
	this.queueEventing();
	this.setLowValue(lowValue);
	this.setHighValue(highValue);
	this.resumeEventing();
};
oFF.QEvaluate.prototype.getValueType = function()
{
	return this.getField().getValueType();
};
oFF.QEvaluate.prototype.getEvaluate = function()
{
	return this.m_evaluate;
};
oFF.QEvaluate.prototype.setEvaluate = function(evaluate)
{
	this.assertExceptionChangeable();
	this.m_evaluate = evaluate;
	this.notifyNodeChanged();
};
oFF.QEvaluate.prototype.getDimension = function()
{
	return this.getField().getDimension();
};
oFF.QEvaluate.prototype.setDimension = function(dimension)
{
	oFF.XObjectExt.assertNotNullExt(dimension, "The dimension is null.");
	this.setField(dimension.getKeyField());
};
oFF.QEvaluate.prototype.getParent = function()
{
	var listOfEvaluates = oFF.QModelComponent.prototype.getParent.call( this );
	return oFF.notNull(listOfEvaluates) ? listOfEvaluates.getParent() : null;
};

oFF.QSettings = function() {};
oFF.QSettings.prototype = new oFF.QModelComponent();
oFF.QSettings.prototype._ff_c = "QSettings";

oFF.QSettings.createSetting = function(context, name, priority, threshold)
{
	if (oFF.isNull(threshold) || !threshold.getModelCapabilities().supportsExceptionSettings())
	{
		return null;
	}
	var setting = new oFF.QSettings();
	setting.setName(name);
	setting.setupSetting(context, priority, threshold);
	return setting;
};
oFF.QSettings.createSettingWithConstant = function(context, exceptionSetting, priority, threshold)
{
	if (oFF.isNull(threshold))
	{
		return null;
	}
	var setting = new oFF.QSettings();
	setting.setName(exceptionSetting.getName());
	setting.setupSetting(context, priority, threshold);
	return setting;
};
oFF.QSettings.prototype.m_value = null;
oFF.QSettings.prototype.m_setting = null;
oFF.QSettings.prototype.m_priority = 0;
oFF.QSettings.prototype.setupSetting = function(context, priority, threshold)
{
	this.setupModelComponent(context, threshold);
	this.m_priority = priority;
};
oFF.QSettings.prototype.releaseObject = function()
{
	this.m_setting = null;
	this.m_value = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QSettings.prototype.setValue = function(value)
{
	this.m_value = value;
	this.notifyNodeChanged();
};
oFF.QSettings.prototype.getValue = function()
{
	return this.m_value;
};
oFF.QSettings.prototype.setPriority = function(priority)
{
	if (this.m_priority !== priority)
	{
		var oldValue = this.m_priority;
		this.m_priority = priority;
		this.notifyPropertyIntegerChanged(oFF.QExceptionProperties.QY_PRIORITY, oldValue, priority);
	}
};
oFF.QSettings.prototype.getPriority = function()
{
	return this.m_priority;
};
oFF.QSettings.prototype.toString = function()
{
	var sb = oFF.XStringBuffer.create();
	sb.append(this.getName());
	sb.append(": ");
	sb.append(this.getValue());
	sb.append(" Prio: ");
	sb.appendInt(this.getPriority());
	return sb.toString();
};
oFF.QSettings.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherSetting = other;
	if (!oFF.XString.isEqual(this.getName(), otherSetting.getName()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getValue(), otherSetting.getValue()))
	{
		return false;
	}
	if (this.getPriority() !== otherSetting.getPriority())
	{
		return false;
	}
	return true;
};
oFF.QSettings.prototype.compareTo = function(objectToCompare)
{
	if (oFF.isNull(objectToCompare))
	{
		return 1;
	}
	var otherSetting = objectToCompare;
	if (!oFF.XString.isEqual(this.getName(), otherSetting.getName()))
	{
		return oFF.XString.compare(this.getName(), otherSetting.getName());
	}
	if (!oFF.XString.isEqual(this.getValue(), otherSetting.getValue()))
	{
		return oFF.XString.compare(this.getValue(), otherSetting.getValue());
	}
	if (this.getPriority() !== otherSetting.getPriority())
	{
		return this.getPriority() - otherSetting.getPriority();
	}
	return 0;
};
oFF.QSettings.prototype.setSetting = function(setting)
{
	oFF.XObjectExt.assertNotNullExt(setting, "The ExceptionSetting must not be null.");
	this.m_setting = setting;
	this.setName(setting.getName());
	this.notifyNodeChanged();
};
oFF.QSettings.prototype.getSetting = function()
{
	return this.m_setting;
};

oFF.QExceptionAggregation = function() {};
oFF.QExceptionAggregation.prototype = new oFF.QModelComponent();
oFF.QExceptionAggregation.prototype._ff_c = "QExceptionAggregation";

oFF.QExceptionAggregation._create = function(excepAggrMgr)
{
	var object = new oFF.QExceptionAggregation();
	object._setupExceptionAggregation(excepAggrMgr);
	return object;
};
oFF.QExceptionAggregation.prototype.m_exceptionAggregationGroup = null;
oFF.QExceptionAggregation.prototype.m_aggregationType = null;
oFF.QExceptionAggregation.prototype.m_usedDimensionNames = null;
oFF.QExceptionAggregation.prototype._setupExceptionAggregation = function(excepAggrMgr)
{
	this.setupModelComponent(excepAggrMgr, excepAggrMgr);
	this.m_usedDimensionNames = oFF.XListOfString.create();
};
oFF.QExceptionAggregation.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originExceptionAggregation = other;
	this.m_aggregationType = originExceptionAggregation.m_aggregationType;
	this.m_usedDimensionNames.clear();
	this.m_usedDimensionNames.addAll(originExceptionAggregation.m_usedDimensionNames);
	if (oFF.isNull(originExceptionAggregation.m_exceptionAggregationGroup))
	{
		this.m_exceptionAggregationGroup = null;
	}
	else
	{
		if (oFF.isNull(this.m_exceptionAggregationGroup))
		{
			this.m_exceptionAggregationGroup = oFF.QExceptionAggregationGroup._createForClone(this.getParent());
		}
		this.m_exceptionAggregationGroup.copyFrom(originExceptionAggregation.m_exceptionAggregationGroup, flags);
	}
};
oFF.QExceptionAggregation.prototype.releaseObject = function()
{
	this.m_exceptionAggregationGroup = oFF.XObjectExt.release(this.m_exceptionAggregationGroup);
	this.m_usedDimensionNames = oFF.XObjectExt.release(this.m_usedDimensionNames);
	this.m_aggregationType = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QExceptionAggregation.prototype._getAggregationType = function()
{
	return this.m_aggregationType;
};
oFF.QExceptionAggregation.prototype._getUsedDimensionNames = function()
{
	return this.m_usedDimensionNames;
};
oFF.QExceptionAggregation.prototype._removeDimension = function(dimName)
{
	this.m_usedDimensionNames.removeElement(dimName);
	this.notifyNodeChanged();
};
oFF.QExceptionAggregation.prototype._clearUsedDimensions = function()
{
	this.m_usedDimensionNames.clear();
	this.notifyNodeChanged();
};
oFF.QExceptionAggregation.prototype._isUsedDimension = function(dimName)
{
	return this.m_usedDimensionNames.contains(dimName);
};
oFF.QExceptionAggregation.prototype._isUsable = function(dimName)
{
	if (oFF.isNull(this.m_exceptionAggregationGroup))
	{
		return true;
	}
	var dimensionsMaxSize = this.m_exceptionAggregationGroup._getNumberOfAllowedDimensions();
	return dimensionsMaxSize === -1 || this.m_exceptionAggregationGroup._supportsDimension(dimName) && this.m_usedDimensionNames.size() < dimensionsMaxSize;
};
oFF.QExceptionAggregation.prototype._addDimension = function(dimName)
{
	if (this._isUsable(dimName) && !this._isUsedDimension(dimName))
	{
		this.m_usedDimensionNames.add(dimName);
		this.notifyNodeChanged();
	}
};
oFF.QExceptionAggregation.prototype._setAggregationType = function(memberType, aggrType)
{
	if (oFF.notNull(aggrType))
	{
		var validationCode = this._setAggregationGroupAndValidate(memberType, aggrType);
		if (validationCode === 2)
		{
			throw oFF.XException.createIllegalArgumentException("Maximum number of allowed dimensions is exceeded!");
		}
		else if (validationCode === 3)
		{
			throw oFF.XException.createIllegalArgumentException("Invalid use of dimensions with the aggregation type!");
		}
		if (validationCode === 1 && this.m_aggregationType !== aggrType)
		{
			this.m_aggregationType = aggrType;
			this.notifyNodeChanged();
		}
	}
	else if (this.m_aggregationType !== aggrType)
	{
		this.m_aggregationType = null;
		this.m_exceptionAggregationGroup = null;
		this.notifyNodeChanged();
	}
};
oFF.QExceptionAggregation.prototype._setAggregationGroupAndValidate = function(memberType, aggrType)
{
	var excepAggrMgr = this.getParent();
	if (oFF.isNull(this.m_exceptionAggregationGroup))
	{
		this.m_exceptionAggregationGroup = oFF.QExceptionAggregationGroup._createForClone(excepAggrMgr);
	}
	var exceptionAggregationGroup = excepAggrMgr._getExceptionAggregationGroup(memberType, aggrType);
	if (oFF.notNull(exceptionAggregationGroup))
	{
		this.m_exceptionAggregationGroup.copyFrom(exceptionAggregationGroup, null);
	}
	else
	{
		this._clearUsedDimensions();
		return 4;
	}
	if (oFF.isNull(this.m_exceptionAggregationGroup))
	{
		throw oFF.XException.createIllegalArgumentException("Aggregation or Member type is not supported for exception aggregation!");
	}
	return this._validateUsedDimensions();
};
oFF.QExceptionAggregation.prototype._validateUsedDimensions = function()
{
	var valid = 1;
	var limitExceeded = 2;
	var invalidDim = 3;
	var maxDimSize = this.m_exceptionAggregationGroup._getNumberOfAllowedDimensions();
	if (maxDimSize === -1)
	{
		return valid;
	}
	if (oFF.XCollectionUtils.hasElements(this.m_usedDimensionNames))
	{
		var dimSize = this.m_usedDimensionNames.size();
		if (dimSize > maxDimSize)
		{
			return limitExceeded;
		}
		for (var i = 0; i < dimSize; i++)
		{
			var dimName = this.m_usedDimensionNames.get(i);
			if (!this.m_exceptionAggregationGroup._supportsDimension(dimName))
			{
				return invalidDim;
			}
		}
	}
	return valid;
};

oFF.QExceptionAggregationGroup = function() {};
oFF.QExceptionAggregationGroup.prototype = new oFF.QModelComponent();
oFF.QExceptionAggregationGroup.prototype._ff_c = "QExceptionAggregationGroup";

oFF.QExceptionAggregationGroup._create = function(excpAggrManager, groupName, membersCode, maxNumOfDim, dimensionsSetName, supportedAggregations)
{
	var object = new oFF.QExceptionAggregationGroup();
	object._initialSetup(excpAggrManager);
	object._setupGroupMembers(groupName, membersCode, maxNumOfDim, dimensionsSetName, supportedAggregations);
	return object;
};
oFF.QExceptionAggregationGroup._createForClone = function(excpAggrManager)
{
	var object = new oFF.QExceptionAggregationGroup();
	object._initialSetup(excpAggrManager);
	return object;
};
oFF.QExceptionAggregationGroup.prototype.m_membersCode = 0;
oFF.QExceptionAggregationGroup.prototype.m_maxNumberOfDimensions = 0;
oFF.QExceptionAggregationGroup.prototype.m_dimensionsSetName = null;
oFF.QExceptionAggregationGroup.prototype.m_aggregationNames = null;
oFF.QExceptionAggregationGroup.prototype._initialSetup = function(excpAggrManager)
{
	this.setupModelComponent(excpAggrManager, excpAggrManager);
	this.m_aggregationNames = oFF.XListOfString.create();
};
oFF.QExceptionAggregationGroup.prototype._setupGroupMembers = function(groupName, membersCode, maxNumOfDim, dimensionsSetName, supportedAggregations)
{
	this.setName(groupName);
	this.m_membersCode = membersCode;
	this.m_maxNumberOfDimensions = maxNumOfDim;
	this.m_dimensionsSetName = dimensionsSetName;
	this._addAllStrings(supportedAggregations, this.m_aggregationNames);
};
oFF.QExceptionAggregationGroup.prototype._addAllStrings = function(source, target)
{
	if (oFF.notNull(source) && source !== target)
	{
		var list = source.getValuesAsReadOnlyListOfString();
		var size = list.size();
		for (var i = 0; i < size; i++)
		{
			target.add(list.get(i));
		}
	}
};
oFF.QExceptionAggregationGroup.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originExceptionAggregationGroup = other;
	this.m_membersCode = originExceptionAggregationGroup.m_membersCode;
	this.m_maxNumberOfDimensions = originExceptionAggregationGroup.m_maxNumberOfDimensions;
	this.m_dimensionsSetName = originExceptionAggregationGroup.m_dimensionsSetName;
	this.m_aggregationNames.clear();
	this._addAllStrings(originExceptionAggregationGroup.m_aggregationNames, this.m_aggregationNames);
};
oFF.QExceptionAggregationGroup.prototype.releaseObject = function()
{
	this.m_dimensionsSetName = null;
	this.m_aggregationNames = oFF.XObjectExt.release(this.m_aggregationNames);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QExceptionAggregationGroup.prototype._getMembersCode = function()
{
	return this.m_membersCode;
};
oFF.QExceptionAggregationGroup.prototype._getNumberOfAllowedDimensions = function()
{
	return this.m_maxNumberOfDimensions;
};
oFF.QExceptionAggregationGroup.prototype._getSupportedDimensionSetName = function()
{
	return this.m_dimensionsSetName;
};
oFF.QExceptionAggregationGroup.prototype._getSupportedAggregationTypeNames = function()
{
	return this.m_aggregationNames;
};
oFF.QExceptionAggregationGroup.prototype._supportsDimension = function(dimName)
{
	return this.m_maxNumberOfDimensions === -1 || oFF.XStringUtils.isNullOrEmpty(this.m_dimensionsSetName) || this.getParent()._getSupportedDimensions(this.m_dimensionsSetName).contains(dimName);
};
oFF.QExceptionAggregationGroup.prototype._supportsAggregationType = function(aggrType)
{
	return oFF.notNull(aggrType) && this.m_aggregationNames.contains(aggrType.getName());
};
oFF.QExceptionAggregationGroup.prototype._supportsMember = function(memberType)
{
	return oFF.notNull(memberType) && this._getSupportedMembers().contains(memberType);
};
oFF.QExceptionAggregationGroup.prototype._getSupportedMembers = function()
{
	return oFF.MemberType.getSupportedMembersForCode(this.m_membersCode);
};

oFF.QExceptionAggregationManager = function() {};
oFF.QExceptionAggregationManager.prototype = new oFF.QModelComponent();
oFF.QExceptionAggregationManager.prototype._ff_c = "QExceptionAggregationManager";

oFF.QExceptionAggregationManager._create = function(queryModel)
{
	var object = new oFF.QExceptionAggregationManager();
	object._setupExceptionAggregationManager(queryModel);
	return object;
};
oFF.QExceptionAggregationManager.prototype.m_defaultMembersCode = 0;
oFF.QExceptionAggregationManager.prototype.m_dimensionSets = null;
oFF.QExceptionAggregationManager.prototype.m_exceptionAggregationGroups = null;
oFF.QExceptionAggregationManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.EXCEPTION_AGGREGATION_MANAGER;
};
oFF.QExceptionAggregationManager.prototype._setupExceptionAggregationManager = function(queryModel)
{
	this.setupModelComponent(queryModel, queryModel);
	this.m_dimensionSets = oFF.XHashMapByString.create();
	this.m_exceptionAggregationGroups = oFF.XLinkedMap.createLinkedMap();
	this.m_defaultMembersCode = oFF.MemberType.FORMULA_CODE + oFF.MemberType.RESTRICTED_MEASURE_CODE + oFF.MemberType.BASIC_MEASURE_CODE;
};
oFF.QExceptionAggregationManager.prototype._setupDefaultConfigurations = function()
{
	this._loadBasicMeasureDefaults();
	this._loadRestrictedMeasureDefaults();
	this._loadFormulaDefaults();
};
oFF.QExceptionAggregationManager.prototype._loadBasicMeasureDefaults = function()
{
	var allAggregationNames = oFF.XListOfString.create();
	allAggregationNames.addAll(oFF.AggregationType.getAll().getKeysAsReadOnlyListOfString());
	if (!this.getModelCapabilities().supportsAverageCountNullZero())
	{
		allAggregationNames.removeElement(oFF.AggregationType.AVERAGE_NULL.getName());
		allAggregationNames.removeElement(oFF.AggregationType.AVERAGE_NULL_ZERO.getName());
		allAggregationNames.removeElement(oFF.AggregationType.COUNT_NULL.getName());
		allAggregationNames.removeElement(oFF.AggregationType.COUNT_NULL_ZERO.getName());
	}
	if (!this.getQueryModel().getModelCapabilities().supportsStatisticalAggregations())
	{
		this._removeStatisticalAggregations(allAggregationNames);
	}
	this._addExceptionAggregationGroup(oFF.QExceptionAggregationGroup._create(this, oFF.MemberType.BASIC_MEASURE.getName(), oFF.MemberType.BASIC_MEASURE_CODE, -1, "", allAggregationNames));
};
oFF.QExceptionAggregationManager.prototype._loadRestrictedMeasureDefaults = function()
{
	var allAggregationNames = oFF.XListOfString.create();
	allAggregationNames.addAll(oFF.AggregationType.getAll().getKeysAsReadOnlyListOfString());
	var qm = this.getQueryModel();
	var capabilities = qm.getModelCapabilities();
	if (!capabilities.supportsExceptionAggregationAvgNullSelectionMember() || !capabilities.supportsAverageCountNullZero())
	{
		allAggregationNames.removeElement(oFF.AggregationType.AVERAGE_NULL.getName());
		allAggregationNames.removeElement(oFF.AggregationType.AVERAGE_NULL_ZERO.getName());
	}
	if (!capabilities.supportsExceptionAggregationCountNullSelectionMember() || !capabilities.supportsAverageCountNullZero())
	{
		allAggregationNames.removeElement(oFF.AggregationType.COUNT_NULL.getName());
		allAggregationNames.removeElement(oFF.AggregationType.COUNT_NULL_ZERO.getName());
	}
	if (!capabilities.supportsExceptionAggregationFirstLastSelectionMember())
	{
		allAggregationNames.removeElement(oFF.AggregationType.FIRST.getName());
		allAggregationNames.removeElement(oFF.AggregationType.LAST.getName());
	}
	if (!capabilities.supportsStatisticalAggregations())
	{
		this._removeStatisticalAggregations(allAggregationNames);
	}
	this._addExceptionAggregationGroup(oFF.QExceptionAggregationGroup._create(this, oFF.MemberType.RESTRICTED_MEASURE.getName(), oFF.MemberType.RESTRICTED_MEASURE_CODE, -1, "", allAggregationNames));
};
oFF.QExceptionAggregationManager.prototype._loadFormulaDefaults = function()
{
	var allAggregationNames = oFF.XListOfString.create();
	allAggregationNames.addAll(oFF.AggregationType.getAll().getKeysAsReadOnlyListOfString());
	var qm = this.getQueryModel();
	var capabilities = qm.getModelCapabilities();
	if (!capabilities.supportsAverageCountNullZero())
	{
		allAggregationNames.removeElement(oFF.AggregationType.AVERAGE_NULL.getName());
		allAggregationNames.removeElement(oFF.AggregationType.AVERAGE_NULL_ZERO.getName());
		allAggregationNames.removeElement(oFF.AggregationType.COUNT_NULL.getName());
		allAggregationNames.removeElement(oFF.AggregationType.COUNT_NULL_ZERO.getName());
	}
	if (!capabilities.supportsStatisticalAggregations())
	{
		this._removeStatisticalAggregations(allAggregationNames);
	}
	this._addExceptionAggregationGroup(oFF.QExceptionAggregationGroup._create(this, oFF.MemberType.FORMULA.getName(), oFF.MemberType.FORMULA_CODE, -1, "", allAggregationNames));
};
oFF.QExceptionAggregationManager.prototype._removeStatisticalAggregations = function(supportedAggregationTypes)
{
	supportedAggregationTypes.removeElement(oFF.AggregationType.MEDIAN.getName());
	supportedAggregationTypes.removeElement(oFF.AggregationType.MEDIAN_NULL.getName());
	supportedAggregationTypes.removeElement(oFF.AggregationType.MEDIAN_NULL_ZERO.getName());
	supportedAggregationTypes.removeElement(oFF.AggregationType.FIRST_QUARTILE.getName());
	supportedAggregationTypes.removeElement(oFF.AggregationType.FIRST_QUARTILE_NULL.getName());
	supportedAggregationTypes.removeElement(oFF.AggregationType.FIRST_QUARTILE_NULL_ZERO.getName());
	supportedAggregationTypes.removeElement(oFF.AggregationType.THIRD_QUARTILE.getName());
	supportedAggregationTypes.removeElement(oFF.AggregationType.THIRD_QUARTILE_NULL.getName());
	supportedAggregationTypes.removeElement(oFF.AggregationType.THIRD_QUARTILE_NULL_ZERO.getName());
	supportedAggregationTypes.removeElement(oFF.AggregationType.OUTLIERS.getName());
	supportedAggregationTypes.removeElement(oFF.AggregationType.OUTLIERS_NULL.getName());
	supportedAggregationTypes.removeElement(oFF.AggregationType.OUTLIERS_NULL_ZERO.getName());
};
oFF.QExceptionAggregationManager.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originExceptionManager = other;
	this._clear();
	this._copyDimensionSets(originExceptionManager.m_dimensionSets);
	this._copyExceptionAggregationGroups(originExceptionManager.m_exceptionAggregationGroups);
};
oFF.QExceptionAggregationManager.prototype._copyDimensionSets = function(originDimensionSets)
{
	if (oFF.notNull(originDimensionSets))
	{
		var keys = originDimensionSets.getKeysAsReadOnlyListOfString();
		var keysSize = keys.size();
		for (var k = 0; k < keysSize; k++)
		{
			var dimSetName = keys.get(k);
			var dimensions = oFF.XListOfString.create();
			dimensions.addAll(originDimensionSets.getByKey(dimSetName));
			this._addDimensionSet(dimSetName, dimensions);
		}
	}
};
oFF.QExceptionAggregationManager.prototype._copyExceptionAggregationGroups = function(originGroups)
{
	if (oFF.notNull(originGroups))
	{
		var groupSize = originGroups.size();
		for (var i = 0; i < groupSize; i++)
		{
			var clonedGroup = oFF.QExceptionAggregationGroup._createForClone(this);
			clonedGroup.copyFrom(originGroups.get(i), null);
			this._addExceptionAggregationGroup(clonedGroup);
		}
	}
};
oFF.QExceptionAggregationManager.prototype.mergeDeepRecursive = function(settings, other)
{
	this.copyFrom(other, null);
};
oFF.QExceptionAggregationManager.prototype.releaseObject = function()
{
	this.m_dimensionSets = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_dimensionSets);
	this.m_exceptionAggregationGroups = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_exceptionAggregationGroups);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QExceptionAggregationManager.prototype._clear = function()
{
	this.m_dimensionSets.clear();
	this.m_exceptionAggregationGroups.clear();
};
oFF.QExceptionAggregationManager.prototype._getExceptionAggregationGroups = function()
{
	return this.m_exceptionAggregationGroups;
};
oFF.QExceptionAggregationManager.prototype._supportsAggregationType = function(aggrType)
{
	var groupsSize = this.m_exceptionAggregationGroups.size();
	var aggrTypeList = oFF.XListOfString.create();
	for (var i = 0; i < groupsSize; i++)
	{
		var excepAggrGroup = this.m_exceptionAggregationGroups.get(i);
		aggrTypeList.addAll(excepAggrGroup._getSupportedAggregationTypeNames());
	}
	return oFF.notNull(aggrType) && aggrTypeList.contains(aggrType.getName());
};
oFF.QExceptionAggregationManager.prototype._getSupportedAggregationTypesForMember = function(memberType)
{
	var groupsSize = this.m_exceptionAggregationGroups.size();
	var aggrTypeList = oFF.XListOfString.create();
	for (var i = 0; i < groupsSize; i++)
	{
		var excepAggrGroup = this.m_exceptionAggregationGroups.get(i);
		if (excepAggrGroup._supportsMember(memberType))
		{
			aggrTypeList.addAll(excepAggrGroup._getSupportedAggregationTypeNames());
		}
	}
	return aggrTypeList;
};
oFF.QExceptionAggregationManager.prototype._getDimensionSets = function()
{
	return this.m_dimensionSets;
};
oFF.QExceptionAggregationManager.prototype._getSupportedDimensions = function(dimensionSetName)
{
	return oFF.XStringUtils.isNullOrEmpty(dimensionSetName) ? oFF.XListOfString.create() : this.m_dimensionSets.getByKey(dimensionSetName);
};
oFF.QExceptionAggregationManager.prototype._getMaxNumberOfAllowedDimensions = function(memberType, aggrType)
{
	if (oFF.isNull(aggrType) || oFF.isNull(memberType) || !this._getSupportedAggregationTypesForMember(memberType).contains(aggrType.getName()))
	{
		return 0;
	}
	var excepAggrGroup = this._getExceptionAggregationGroup(memberType, aggrType);
	return oFF.isNull(excepAggrGroup) ? 0 : excepAggrGroup._getNumberOfAllowedDimensions();
};
oFF.QExceptionAggregationManager.prototype._getSupportedDimensionsForMemberAndAggregation = function(memberType, aggrType)
{
	var excepAggrGroup = this._getExceptionAggregationGroup(memberType, aggrType);
	return oFF.isNull(memberType) || oFF.isNull(excepAggrGroup) ? oFF.XListOfString.create() : this._getSupportedDimensions(excepAggrGroup._getSupportedDimensionSetName());
};
oFF.QExceptionAggregationManager.prototype._getSupportedMembersForAggregationType = function(aggrType)
{
	var excepAggrGroup = this._getExceptionAggregationGroup(null, aggrType);
	return oFF.isNull(excepAggrGroup) ? oFF.XList.create() : oFF.MemberType.getSupportedMembersForCode(excepAggrGroup._getMembersCode());
};
oFF.QExceptionAggregationManager.prototype._getExceptionAggregationGroup = function(memberType, aggrType)
{
	if (oFF.notNull(aggrType))
	{
		if (oFF.XCollectionUtils.hasElements(this.m_exceptionAggregationGroups))
		{
			var groupsSize = this.m_exceptionAggregationGroups.size();
			for (var i = 0; i < groupsSize; i++)
			{
				var excepAggrGroup = this.m_exceptionAggregationGroups.get(i);
				if (excepAggrGroup._supportsAggregationType(aggrType) && (oFF.isNull(memberType) || excepAggrGroup._supportsMember(memberType)))
				{
					return excepAggrGroup;
				}
			}
		}
	}
	return null;
};
oFF.QExceptionAggregationManager.prototype._getDefaultMembersCode = function()
{
	return this.m_defaultMembersCode;
};
oFF.QExceptionAggregationManager.prototype._addDimensionSet = function(dimSetName, supportedDimensions)
{
	this.m_dimensionSets.put(dimSetName, supportedDimensions);
};
oFF.QExceptionAggregationManager.prototype._addExceptionAggregationGroup = function(excepAggrGroup)
{
	this.m_exceptionAggregationGroups.add(excepAggrGroup);
};

oFF.QField = function() {};
oFF.QField.prototype = new oFF.QModelComponent();
oFF.QField.prototype._ff_c = "QField";

oFF.QField._createField = function(context, dimension, type)
{
	var attribute = new oFF.QField();
	attribute.setupField(context, dimension, type);
	return attribute;
};
oFF.QField.prototype.m_metadata = null;
oFF.QField.prototype.m_attributeName = null;
oFF.QField.prototype.m_obtainability = null;
oFF.QField.prototype.m_textTransformationType = null;
oFF.QField.prototype.m_alwaysRequested = false;
oFF.QField.prototype.m_displayFormat = null;
oFF.QField.prototype.cloneOlapComponent = function(context, parent)
{
	var clone = oFF.QField._createField(context, null, this.getPresentationType());
	clone.copyFrom(this, null);
	return clone;
};
oFF.QField.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originField = other;
	this.m_attributeName = originField.m_attributeName;
	this.m_obtainability = originField.m_obtainability;
	this.m_textTransformationType = originField.m_textTransformationType;
	this.m_alwaysRequested = originField.m_alwaysRequested;
	this.m_displayFormat = originField.m_displayFormat;
	if (originField.getDimension().getDimensionType().isTypeOf(oFF.DimensionType.CALCULATED_DIMENSION))
	{
		this.getMetadataBase().setValueType(originField.getValueType());
	}
	else
	{
		var metadata = originField.getMetadata();
		if (oFF.notNull(metadata))
		{
			this.m_metadata = oFF.XWeakReferenceUtil.getWeakRef(this.getOlapEnv().getFieldMetadataByKey(metadata.getCacheKey()));
		}
	}
};
oFF.QField.prototype.setupField = function(context, dimension, type)
{
	this.setupModelComponent(context, dimension);
	if (type === oFF.PresentationType.KEY)
	{
		this.setText("Key");
		this.setName("KEY");
	}
};
oFF.QField.prototype.releaseObject = function()
{
	var metadata = this.getMetadata();
	if (oFF.notNull(metadata))
	{
		var olapEnv = this.getOlapEnv();
		if (oFF.notNull(olapEnv))
		{
			var cacheKey = metadata.getCacheKey();
			olapEnv.releaseFieldMetadataByKey(cacheKey);
		}
	}
	this.m_metadata = oFF.XObjectExt.release(this.m_metadata);
	this.m_obtainability = null;
	this.m_attributeName = null;
	this.m_textTransformationType = null;
	this.m_displayFormat = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QField.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FIELD;
};
oFF.QField.prototype.setDimension = function(dimension)
{
	this.setParent(dimension);
};
oFF.QField.prototype.getDimension = function()
{
	return this.getParentComponent();
};
oFF.QField.prototype.getDimensionBase = function()
{
	return this.getParentComponent();
};
oFF.QField.prototype.getResultSetSorting = function()
{
	var sorting = null;
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var sortManager = queryModel.getSortingManager();
		sorting = sortManager.getFieldSorting(this, true);
	}
	return sorting;
};
oFF.QField.prototype.supportsSorting = function()
{
	var supportsSorting = false;
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var modelCapabilities = queryModel.getModelCapabilities();
		supportsSorting = modelCapabilities.supportsFieldSorting(this);
	}
	return supportsSorting;
};
oFF.QField.prototype.hasSorting = function()
{
	var hasSorting = false;
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var sortManager = queryModel.getSortingManager();
		var fieldSorting = sortManager.getFieldSorting(this, false);
		hasSorting = oFF.notNull(fieldSorting);
	}
	return hasSorting;
};
oFF.QField.prototype.createFieldLiteralValue = function()
{
	return oFF.QFieldValue.createLiteral(this.getContext(), this);
};
oFF.QField.prototype.getAttribute = function()
{
	var dimension = this.getDimension();
	var universalDisplayHierarchy = dimension.getUniversalDisplayHierarchy();
	if (oFF.notNull(universalDisplayHierarchy))
	{
		var originalField = universalDisplayHierarchy.mapFieldToOriginalDimension(this);
		if (oFF.notNull(originalField) && originalField !== this)
		{
			return originalField.getAttribute();
		}
	}
	return dimension.getAttributeByName(this.m_attributeName);
};
oFF.QField.prototype.setAttribute = function(attribute)
{
	this.m_attributeName = attribute.getName();
};
oFF.QField.prototype.isAlwaysRequested = function()
{
	return this.m_alwaysRequested;
};
oFF.QField.prototype.setAlwaysRequested = function(alwaysRequested)
{
	this.m_alwaysRequested = alwaysRequested;
};
oFF.QField.prototype.setTextTransformation = function(textTransformationType)
{
	if (textTransformationType.isTypeOf(oFF.TextTransformationType.SPATIAL_TRANSFORMATION) && !this.getModelCapabilities().supportsSpatialTransformation())
	{
		this.m_textTransformationType = null;
	}
	else
	{
		this.m_textTransformationType = textTransformationType;
	}
};
oFF.QField.prototype.getTextTransformation = function()
{
	return this.m_textTransformationType;
};
oFF.QField.prototype.isHierarchyNavigationField = function()
{
	var isHierarchyNavigationField;
	if (this.getModelCapabilities().supportsSidPresentation())
	{
		isHierarchyNavigationField = this.getMetadata().isHierarchyNavigationField();
	}
	else
	{
		isHierarchyNavigationField = this.isHierarchyKeyField();
	}
	return isHierarchyNavigationField;
};
oFF.QField.prototype.setDisplayFormat = function(displayFormat)
{
	this.m_displayFormat = displayFormat;
};
oFF.QField.prototype.getDisplayFormat = function()
{
	return this.m_displayFormat;
};
oFF.QField.prototype.setObtainability = function(obtainability)
{
	if (this.m_obtainability !== obtainability)
	{
		this.m_obtainability = obtainability;
		if (this.getDimension().getResultSetFields().contains(this))
		{
			this.notifyNodeChanged();
		}
	}
};
oFF.QField.prototype.getObtainability = function()
{
	return this.m_obtainability;
};
oFF.QField.prototype.getFixedLength = function()
{
	return this.getMetadata().getFixedLength();
};
oFF.QField.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var xOther = other;
	if (this.getAttribute() !== xOther.getAttribute())
	{
		return false;
	}
	if (this.getDimension() !== xOther.getDimension())
	{
		return false;
	}
	return oFF.XString.isEqual(this.getName(), xOther.getName());
};
oFF.QField.prototype.setMetadata = function(metadata)
{
	this.m_metadata = oFF.XWeakReferenceUtil.getWeakRef(metadata);
};
oFF.QField.prototype.getMetadata = function()
{
	return this.getMetadataBase();
};
oFF.QField.prototype.getMetadataBase = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_metadata);
};
oFF.QField.prototype.getMimeType = function()
{
	return this.getMetadata().getMimeType();
};
oFF.QField.prototype.isHierarchyPathField = function()
{
	return this.getMetadata().isHierarchyPathField();
};
oFF.QField.prototype.isCubeBlendingPropertiesField = function()
{
	return this.getMetadata().isCubeBlendingPropertiesField();
};
oFF.QField.prototype.getMappedColumnName = function()
{
	return this.getMetadata().getMappedColumnName();
};
oFF.QField.prototype.getNavigationalAttributeDescription = function()
{
	return this.getMetadata().getNavigationalAttributeDescription();
};
oFF.QField.prototype.getAttributeType = function()
{
	return this.getMetadata().getAttributeType();
};
oFF.QField.prototype.isFilterable = function()
{
	return this.getMetadata().isFilterable();
};
oFF.QField.prototype.isVirtualDescription = function()
{
	return this.getMetadata().isVirtualDescription();
};
oFF.QField.prototype.getSqlType = function()
{
	return this.getMetadata().getSqlType();
};
oFF.QField.prototype.getSemanticType = function()
{
	return this.getMetadata().getSemanticType();
};
oFF.QField.prototype.getValueType = function()
{
	return this.getMetadata().getValueType();
};
oFF.QField.prototype.setValueType = oFF.noSupport;
oFF.QField.prototype.isKeyField = function()
{
	return this.getMetadata().isKeyField();
};
oFF.QField.prototype.isHierarchyKeyField = function()
{
	return this.getMetadata().isHierarchyKeyField();
};
oFF.QField.prototype.isFlatKeyField = function()
{
	return this.getMetadata().isFlatKeyField();
};
oFF.QField.prototype.getDimensionMetadata = function()
{
	return this.getMetadata().getDimensionMetadata();
};
oFF.QField.prototype.isDefaultTextField = function()
{
	return this.getMetadata().isDefaultTextField();
};
oFF.QField.prototype.getUpperBound = function()
{
	return this.getMetadata().getUpperBound();
};
oFF.QField.prototype.getLowerBound = function()
{
	return this.getMetadata().getLowerBound();
};
oFF.QField.prototype.getDecimals = function()
{
	return this.getMetadata().getDecimals();
};
oFF.QField.prototype.getPrecision = function()
{
	return this.getMetadata().getPrecision();
};
oFF.QField.prototype.getIsLowerCaseEnabled = function()
{
	return this.isLowerCaseEnabled();
};
oFF.QField.prototype.isLowerCaseEnabled = function()
{
	return this.getMetadata().isLowerCaseEnabled();
};
oFF.QField.prototype.getConversionRoutine = function()
{
	return this.getMetadata().getConversionRoutine();
};
oFF.QField.prototype.getInitialValue = function()
{
	return this.getMetadata().getInitialValue();
};
oFF.QField.prototype.getLength = function()
{
	return this.getMetadata().getLength();
};
oFF.QField.prototype.getInfoObjectType = function()
{
	return this.getMetadata().getInfoObjectType();
};
oFF.QField.prototype.getVisibilityType = function()
{
	return this.getMetadata().getVisibilityType();
};
oFF.QField.prototype.getDependencyFields = function()
{
	return this.getMetadata().getDependencyFields();
};
oFF.QField.prototype.getAliasName = function()
{
	return this.getMetadata().getAliasName();
};
oFF.QField.prototype.isDisplayAttributeField = function()
{
	return this.getMetadata().isDisplayAttributeField();
};
oFF.QField.prototype.getUsageType = function()
{
	return this.getMetadata().getUsageType();
};
oFF.QField.prototype.getPresentationType = function()
{
	var pt = oFF.PresentationType.UNDEFINED;
	var metadata = this.getMetadata();
	if (oFF.notNull(metadata))
	{
		pt = metadata.getPresentationType();
	}
	return pt;
};

oFF.QFieldContainer = function() {};
oFF.QFieldContainer.prototype = new oFF.QModelComponent();
oFF.QFieldContainer.prototype._ff_c = "QFieldContainer";

oFF.QFieldContainer.create = function(context, dimension)
{
	var object = new oFF.QFieldContainer();
	object.setupFieldContainer(context, dimension);
	return object;
};
oFF.QFieldContainer.prototype.m_defaultResultSetFields = null;
oFF.QFieldContainer.prototype.m_hasFixedResultSetFields = false;
oFF.QFieldContainer.prototype.m_resultSetFields = null;
oFF.QFieldContainer.prototype.m_selectorFields = null;
oFF.QFieldContainer.prototype.m_allFields = null;
oFF.QFieldContainer.prototype.m_flatFieldMapByType = null;
oFF.QFieldContainer.prototype.m_hierarchyFieldMapByType = null;
oFF.QFieldContainer.prototype.m_flatKeyField = null;
oFF.QFieldContainer.prototype.m_flatTextField = null;
oFF.QFieldContainer.prototype.m_flatDisplayKeyField = null;
oFF.QFieldContainer.prototype.m_clientDefaultTextField = null;
oFF.QFieldContainer.prototype.m_hierarchyKeyField = null;
oFF.QFieldContainer.prototype.m_hierarchyTextField = null;
oFF.QFieldContainer.prototype.m_hierarchyDisplayKeyField = null;
oFF.QFieldContainer.prototype.m_hierarchyPathField = null;
oFF.QFieldContainer.prototype.m_hierarchyNavigationField = null;
oFF.QFieldContainer.prototype.m_geoShapeField = null;
oFF.QFieldContainer.prototype.m_geoPointField = null;
oFF.QFieldContainer.prototype.m_geoLevelField = null;
oFF.QFieldContainer.prototype.m_geoAreaNameField = null;
oFF.QFieldContainer.prototype.m_cubeBlendingPropertiesField = null;
oFF.QFieldContainer.prototype.getFieldFromDimensionIfNull = function(fieldName)
{
	var fieldByName = this.m_allFields.getByKey(fieldName);
	if (oFF.isNull(fieldByName))
	{
		fieldByName = this.getDimension().getFieldByName(fieldName);
	}
	return fieldByName;
};
oFF.QFieldContainer.prototype.copyFromInternal = function(other, flags)
{
	this.copyFieldContainer(other, true);
};
oFF.QFieldContainer.prototype.copyFieldContainer = function(origin, createNewFields)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , origin, null);
	this.m_hasFixedResultSetFields = origin.m_hasFixedResultSetFields;
	var dimension = this.getDimension();
	var i;
	var size;
	if (createNewFields)
	{
		var context = this.getContext();
		size = origin.m_allFields.size();
		for (i = 0; i < size; i++)
		{
			var origField = origin.m_allFields.get(i);
			var cloneField = oFF.QFactory.createFieldFromType(context, dimension, origField.getPresentationType(), origField.getName());
			cloneField.copyFrom(origField, null);
			this.m_allFields.addInternal(cloneField);
			this.addToFieldMaps(cloneField);
		}
	}
	this.m_allFields.copyFrom(origin.m_allFields, null);
	size = origin.m_resultSetFields.size();
	for (i = 0; i < size; i++)
	{
		var origRsFieldName = origin.m_resultSetFields.get(i).getName();
		var rsField = this.m_allFields.getByKey(origRsFieldName);
		if (oFF.isNull(rsField))
		{
			rsField = this.getDimension().getFieldByName(origRsFieldName);
		}
		this.m_resultSetFields.addInternal(rsField);
	}
	this.m_resultSetFields.copyFrom(origin.m_resultSetFields, null);
	size = origin.m_defaultResultSetFields.size();
	for (i = 0; i < size; i++)
	{
		var byKey = this.m_allFields.getByKey(origin.m_defaultResultSetFields.get(i).getName());
		this.m_defaultResultSetFields.add(byKey);
		this.m_selectorFields.addInternal(byKey);
	}
	this.m_selectorFields.copyFrom(origin.m_selectorFields, null);
	if (oFF.notNull(origin.m_flatKeyField))
	{
		this.setFlatKeyField(this.getFieldFromDimensionIfNull(origin.getFlatKeyField().getName()));
	}
	if (oFF.notNull(origin.m_flatTextField))
	{
		this.setFlatTextField(this.getFieldFromDimensionIfNull(origin.getFlatTextField().getName()));
	}
	if (oFF.notNull(origin.m_clientDefaultTextField))
	{
		this.setClientDefaultTextField(this.getFieldFromDimensionIfNull(origin.getClientDefaultTextField().getName()));
	}
	if (oFF.notNull(origin.m_flatDisplayKeyField))
	{
		this.setFlatDisplayKeyField(this.getFieldFromDimensionIfNull(origin.getFlatDisplayKeyField().getName()));
	}
	if (oFF.notNull(origin.m_hierarchyKeyField))
	{
		this.setHierachyKeyField(this.getFieldFromDimensionIfNull(origin.getHierarchyKeyField().getName()));
	}
	if (oFF.notNull(origin.m_hierarchyTextField))
	{
		this.setHierarchyTextField(this.getFieldFromDimensionIfNull(origin.getHierarchyTextField().getName()));
	}
	if (oFF.notNull(origin.m_hierarchyDisplayKeyField))
	{
		this.setHierarchyDisplayKeyField(this.getFieldFromDimensionIfNull(origin.getHierarchyDisplayKeyField().getName()));
	}
	if (oFF.notNull(origin.m_hierarchyPathField))
	{
		this.setHierarchyPathField(this.getFieldFromDimensionIfNull(origin.getHierarchyPathField().getName()));
	}
	if (oFF.notNull(origin.m_hierarchyNavigationField))
	{
		this.setHierachyNavigationField(this.getFieldFromDimensionIfNull(origin.getHierarchyNavigationField().getName()));
	}
	if (oFF.notNull(origin.m_geoShapeField))
	{
		this.setGeoShapeField(this.getFieldFromDimensionIfNull(origin.getGeoShapeField().getName()));
	}
	if (oFF.notNull(origin.m_geoPointField))
	{
		this.setGeoPointField(this.getFieldFromDimensionIfNull(origin.getGeoPointField().getName()));
	}
	if (oFF.notNull(origin.m_geoLevelField))
	{
		this.setGeoLevelField(this.getFieldFromDimensionIfNull(origin.getGeoLevelField().getName()));
	}
	if (oFF.notNull(origin.m_geoAreaNameField))
	{
		this.setGeoAreaNameField(this.getFieldFromDimensionIfNull(origin.getGeoAreaNameField().getName()));
	}
	if (oFF.notNull(origin.m_cubeBlendingPropertiesField))
	{
		this.setCubeBlendingPropertiesField(this.getFieldFromDimensionIfNull(origin.getCubeBlendingPropertiesField().getName()));
	}
};
oFF.QFieldContainer.prototype.addToFieldMaps = function(cloneField)
{
	var usageType = cloneField.getUsageType();
	var presentationName = cloneField.getPresentationType().getName();
	if (usageType !== oFF.FieldUsageType.FLAT)
	{
		if (!this.m_hierarchyFieldMapByType.containsKey(presentationName))
		{
			this.m_hierarchyFieldMapByType.put(presentationName, cloneField);
		}
	}
	if (!this.m_flatFieldMapByType.containsKey(presentationName))
	{
		this.m_flatFieldMapByType.put(presentationName, cloneField);
	}
};
oFF.QFieldContainer.prototype.setupFieldContainer = function(context, dimension)
{
	this.setupModelComponentWithName(context, dimension, "Fields");
	this.m_defaultResultSetFields = oFF.XListWeakRef.create();
	this.m_resultSetFields = oFF.QFieldList.createFieldList(this, "Result Set Fields");
	this.m_selectorFields = oFF.QFieldList.createFieldList(this, "Selector Fields");
	this.m_allFields = oFF.QFieldList.createFieldList(this, "All Fields");
	this.m_flatFieldMapByType = oFF.XWeakMap.create();
	this.m_hierarchyFieldMapByType = oFF.XWeakMap.create();
	this.m_clientDefaultTextField = null;
};
oFF.QFieldContainer.prototype.releaseObject = function()
{
	this.m_defaultResultSetFields = oFF.XObjectExt.release(this.m_defaultResultSetFields);
	this.m_resultSetFields = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_resultSetFields);
	this.m_selectorFields = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_selectorFields);
	this.m_allFields = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_allFields);
	this.m_flatFieldMapByType = oFF.XObjectExt.release(this.m_flatFieldMapByType);
	this.m_hierarchyFieldMapByType = oFF.XObjectExt.release(this.m_hierarchyFieldMapByType);
	this.m_flatKeyField = null;
	this.m_flatTextField = null;
	this.m_flatDisplayKeyField = null;
	this.m_clientDefaultTextField = null;
	this.m_hierarchyKeyField = null;
	this.m_hierarchyTextField = null;
	this.m_hierarchyDisplayKeyField = null;
	this.m_hierarchyPathField = null;
	this.m_hierarchyNavigationField = null;
	this.m_geoShapeField = null;
	this.m_geoPointField = null;
	this.m_geoLevelField = null;
	this.m_geoAreaNameField = null;
	this.m_cubeBlendingPropertiesField = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QFieldContainer.prototype.reinit = function(origin)
{
	this.m_defaultResultSetFields.clear();
	oFF.XCollectionUtils.releaseEntriesFromCollection(this.m_resultSetFields);
	this.m_resultSetFields.clear();
	oFF.XCollectionUtils.releaseEntriesFromCollection(this.m_selectorFields);
	this.m_selectorFields.clear();
	oFF.XCollectionUtils.releaseEntriesFromCollection(this.m_allFields);
	this.m_allFields.clear();
	this.m_flatFieldMapByType.clear();
	this.m_hierarchyFieldMapByType.clear();
	this.m_flatKeyField = null;
	this.m_flatTextField = null;
	this.m_flatDisplayKeyField = null;
	this.m_hierarchyKeyField = null;
	this.m_hierarchyTextField = null;
	this.m_hierarchyDisplayKeyField = null;
	this.m_hierarchyPathField = null;
	this.m_hierarchyNavigationField = null;
	this.m_geoShapeField = null;
	this.m_geoPointField = null;
	this.m_geoLevelField = null;
	this.m_geoAreaNameField = null;
	this.m_cubeBlendingPropertiesField = null;
	this.copyFrom(origin, null);
};
oFF.QFieldContainer.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FIELD_CONTAINER;
};
oFF.QFieldContainer.prototype.getFields = function()
{
	return this.m_allFields;
};
oFF.QFieldContainer.prototype.getFieldByName = function(name)
{
	return this.m_allFields.getByKey(name);
};
oFF.QFieldContainer.prototype.getFieldByNameOrAlias = function(name)
{
	return this.m_allFields.getFieldByNameOrAlias(name);
};
oFF.QFieldContainer.prototype.getFirstFieldByType = function(type)
{
	return this.m_allFields.getFirstFieldByType(type);
};
oFF.QFieldContainer.prototype.getResultSetFields = function()
{
	return this.m_resultSetFields;
};
oFF.QFieldContainer.prototype.getSelectorFields = function()
{
	return this.m_selectorFields;
};
oFF.QFieldContainer.prototype.getFieldByPresentationType = function(presentationType)
{
	var field = null;
	if (oFF.notNull(presentationType))
	{
		if (presentationType === oFF.PresentationType.ACTIVE_KEY)
		{
			field = this.getKeyField();
		}
		else if (presentationType === oFF.PresentationType.ACTIVE_DISPLAY_KEY)
		{
			field = this.getDisplayKeyField();
		}
		else if (presentationType === oFF.PresentationType.ACTIVE_TEXT)
		{
			field = this.getTextField();
		}
		else
		{
			if (this.getDimension().isHierarchyActive())
			{
				field = this.m_hierarchyFieldMapByType.getByKey(presentationType.getName());
			}
			else
			{
				field = this.m_flatFieldMapByType.getByKey(presentationType.getName());
			}
		}
	}
	return field;
};
oFF.QFieldContainer.prototype.getKeyField = function()
{
	var field;
	if (this.getDimension().isHierarchyActive())
	{
		field = this.getHierarchyKeyField();
	}
	else
	{
		field = this.getFlatKeyField();
	}
	return field;
};
oFF.QFieldContainer.prototype.getKeyFieldExt = function(context)
{
	if (context === oFF.QContextType.RESULT_SET)
	{
		if (this.getDimension().isHierarchyActive())
		{
			return this.getHierarchyKeyField();
		}
		return this.getFlatKeyField();
	}
	if (this.getDimension().isSelectorHierarchyActive())
	{
		return this.getHierarchyKeyField();
	}
	return this.getFlatKeyField();
};
oFF.QFieldContainer.prototype.getTextField = function()
{
	if (this.getDimension().isHierarchyActive())
	{
		return this.getHierarchyTextField();
	}
	return this.getFlatTextField();
};
oFF.QFieldContainer.prototype.getDisplayKeyField = function()
{
	if (this.getDimension().isHierarchyActive())
	{
		return this.getHierarchyDisplayKeyField();
	}
	return this.getFlatDisplayKeyField();
};
oFF.QFieldContainer.prototype.getFlatKeyField = function()
{
	if (oFF.isNull(this.m_flatKeyField))
	{
		var size = this.m_allFields.size();
		for (var i = 0; i < size; i++)
		{
			var field = this.m_allFields.get(i);
			if (field.isFlatKeyField())
			{
				this.m_flatKeyField = oFF.XWeakReferenceUtil.getWeakRef(field);
				break;
			}
		}
		if (oFF.isNull(this.m_flatKeyField))
		{
			var field2 = this.getFirstFieldByType(oFF.PresentationType.KEY);
			this.m_flatKeyField = oFF.XWeakReferenceUtil.getWeakRef(field2);
		}
	}
	return oFF.XWeakReferenceUtil.getHardRef(this.m_flatKeyField);
};
oFF.QFieldContainer.prototype.getFlatTextField = function()
{
	if (oFF.isNull(this.m_flatTextField))
	{
		var size = this.m_allFields.size();
		for (var i = 0; i < size; i++)
		{
			var field = this.m_allFields.get(i);
			if (field.isDefaultTextField())
			{
				this.m_flatTextField = oFF.XWeakReferenceUtil.getWeakRef(field);
				break;
			}
		}
		if (this.getDimension().getDimensionType().isTypeOf(oFF.DimensionType.ABSTRACT_STRUCTURE) && oFF.isNull(this.m_flatTextField))
		{
			this.m_flatTextField = oFF.XWeakReferenceUtil.getWeakRef(this.getFirstFieldByType(oFF.PresentationType.TEXT));
		}
	}
	return oFF.XWeakReferenceUtil.getHardRef(this.m_flatTextField);
};
oFF.QFieldContainer.prototype.getFlatDisplayKeyField = function()
{
	if (oFF.isNull(this.m_flatDisplayKeyField))
	{
		this.m_flatDisplayKeyField = oFF.XWeakReferenceUtil.getWeakRef(this.getFirstFieldByType(oFF.PresentationType.DISPLAY_KEY));
		if (oFF.isNull(this.m_flatDisplayKeyField))
		{
			this.m_flatDisplayKeyField = oFF.XWeakReferenceUtil.getWeakRef(this.getFlatKeyField());
		}
	}
	return oFF.XWeakReferenceUtil.getHardRef(this.m_flatDisplayKeyField);
};
oFF.QFieldContainer.prototype.setFlatKeyField = function(field)
{
	this.m_flatKeyField = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldContainer.prototype.setFlatTextField = function(field)
{
	this.m_flatTextField = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldContainer.prototype.setFlatDisplayKeyField = function(field)
{
	this.m_flatDisplayKeyField = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldContainer.prototype.getHierarchyKeyField = function()
{
	if (oFF.isNull(this.m_hierarchyKeyField))
	{
		this.m_hierarchyKeyField = oFF.XWeakReferenceUtil.getWeakRef(this.getFirstFieldByType(oFF.PresentationType.HIERARCHY_KEY));
		if (oFF.isNull(this.m_hierarchyKeyField))
		{
			this.m_hierarchyKeyField = oFF.XWeakReferenceUtil.getWeakRef(this.getFlatKeyField());
		}
	}
	return oFF.XWeakReferenceUtil.getHardRef(this.m_hierarchyKeyField);
};
oFF.QFieldContainer.prototype.getHierarchyTextField = function()
{
	if (oFF.isNull(this.m_hierarchyTextField))
	{
		this.m_hierarchyTextField = oFF.XWeakReferenceUtil.getWeakRef(this.getFirstFieldByType(oFF.PresentationType.HIERARCHY_TEXT));
		if (oFF.isNull(this.m_hierarchyTextField))
		{
			this.m_hierarchyTextField = oFF.XWeakReferenceUtil.getWeakRef(this.getFlatTextField());
		}
	}
	return oFF.XWeakReferenceUtil.getHardRef(this.m_hierarchyTextField);
};
oFF.QFieldContainer.prototype.getHierarchyDisplayKeyField = function()
{
	if (oFF.isNull(this.m_hierarchyDisplayKeyField))
	{
		this.m_hierarchyDisplayKeyField = oFF.XWeakReferenceUtil.getWeakRef(this.getFirstFieldByType(oFF.PresentationType.HIERARCHY_DISPLAY_KEY));
		if (oFF.isNull(this.m_hierarchyDisplayKeyField))
		{
			this.m_hierarchyDisplayKeyField = oFF.XWeakReferenceUtil.getWeakRef(this.getFlatDisplayKeyField());
		}
	}
	return oFF.XWeakReferenceUtil.getHardRef(this.m_hierarchyDisplayKeyField);
};
oFF.QFieldContainer.prototype.setHierachyKeyField = function(field)
{
	this.m_hierarchyKeyField = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldContainer.prototype.setHierarchyTextField = function(field)
{
	this.m_hierarchyTextField = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldContainer.prototype.setHierarchyDisplayKeyField = function(field)
{
	this.m_hierarchyDisplayKeyField = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldContainer.prototype.addField = function(field)
{
	this.addFieldInternal(field);
	this.notifyNodeChanged();
};
oFF.QFieldContainer.prototype.addFieldInternal = function(field)
{
	this.m_allFields.addInternal(field);
	this.addToFieldMaps(field);
};
oFF.QFieldContainer.prototype.addNewField = function(type, name, text)
{
	var dimension = this.getDimension();
	var field = oFF.QFactory.createFieldFromType(this.getContext(), dimension, type, name);
	field.setName(name);
	field.setText(text);
	this.addField(field);
	return field;
};
oFF.QFieldContainer.prototype.getDimension = function()
{
	return this.getParentComponent();
};
oFF.QFieldContainer.prototype.notifyChildChanged = function(changedNodes)
{
	this.queueEventing();
	oFF.QModelComponent.prototype.notifyChildChanged.call( this , changedNodes);
	var dimension = this.getDimension();
	var fieldLayoutType = this.getFieldLayoutType();
	var size = changedNodes.size();
	for (var i = 0; i < size; i++)
	{
		var next = changedNodes.get(i);
		if (next === this.m_selectorFields)
		{
			dimension.setSelectorFieldLayoutType(fieldLayoutType);
		}
		else if (next === this.m_resultSetFields)
		{
			dimension.setFieldLayoutType(fieldLayoutType);
		}
	}
	this.resumeEventing();
};
oFF.QFieldContainer.prototype.getFieldLayoutType = function()
{
	return oFF.FieldLayoutType.FIELD_BASED;
};
oFF.QFieldContainer.prototype.isComponentNode = function()
{
	return true;
};
oFF.QFieldContainer.prototype.getIndexedChildren = function()
{
	var children = oFF.XList.create();
	children.add(this.m_allFields);
	children.add(this.m_resultSetFields);
	children.add(this.m_selectorFields);
	return children.getIterator();
};
oFF.QFieldContainer.prototype.getFieldIterator = function()
{
	return this.m_allFields.getIterator();
};
oFF.QFieldContainer.prototype.getFlatFieldsList = function()
{
	return this.getFieldsList(oFF.FieldUsageType.FLAT);
};
oFF.QFieldContainer.prototype.getHierarchyFieldsList = function()
{
	return this.getFieldsList(oFF.FieldUsageType.HIERARCHY);
};
oFF.QFieldContainer.prototype.getFieldsList = function(usageType)
{
	var fields = oFF.XListOfNameObject.create();
	var size = this.m_allFields.size();
	for (var i = 0; i < size; i++)
	{
		var field = this.m_allFields.get(i);
		var currentUsageType = field.getUsageType();
		if (field.isAlwaysRequested() || currentUsageType === oFF.FieldUsageType.ALL || currentUsageType === usageType)
		{
			fields.add(field);
		}
	}
	return fields;
};
oFF.QFieldContainer.prototype.getHierarchyPathField = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_hierarchyPathField);
};
oFF.QFieldContainer.prototype.setHierarchyPathField = function(field)
{
	this.m_hierarchyPathField = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldContainer.prototype.getDefaultResultSetFields = function()
{
	return this.m_defaultResultSetFields;
};
oFF.QFieldContainer.prototype.addDefaultResultSetField = function(field)
{
	if (!this.m_defaultResultSetFields.contains(field))
	{
		this.m_defaultResultSetFields.add(field);
	}
};
oFF.QFieldContainer.prototype.clearDefaultResultSetFields = function()
{
	this.m_defaultResultSetFields.clear();
};
oFF.QFieldContainer.prototype.hasFixedResultSetFields = function()
{
	return this.m_hasFixedResultSetFields;
};
oFF.QFieldContainer.prototype.setHasFixedResultSetFields = function(hasFixedResultSetFields)
{
	if (this.m_hasFixedResultSetFields !== hasFixedResultSetFields)
	{
		this.m_hasFixedResultSetFields = hasFixedResultSetFields;
		this.notifyPropertyBooleanChanged(oFF.QFieldProperties.QY_RS_FIXED_ATTRIBUTES, !hasFixedResultSetFields, hasFixedResultSetFields);
	}
};
oFF.QFieldContainer.prototype.getFieldsExt = function(context)
{
	if (context === oFF.QContextType.RESULT_SET)
	{
		return this.m_resultSetFields;
	}
	return this.m_selectorFields;
};
oFF.QFieldContainer.prototype.getFieldsListByActiveUsageType = oFF.noSupport;
oFF.QFieldContainer.prototype.getFieldsListByActiveUsageTypeExt = oFF.noSupport;
oFF.QFieldContainer.prototype.setCubeBlendingPropertiesField = function(blendingPropertiesField)
{
	this.m_cubeBlendingPropertiesField = oFF.XWeakReferenceUtil.getWeakRef(blendingPropertiesField);
};
oFF.QFieldContainer.prototype.getCubeBlendingPropertiesField = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_cubeBlendingPropertiesField);
};
oFF.QFieldContainer.prototype.mergeDeepRecursive = function(settings, other)
{
	var otherAttribute = other;
	var otherFields = otherAttribute.getResultSetFields();
	this.m_resultSetFields.clear();
	for (var i = 0; i < otherFields.size(); i++)
	{
		var otherField = otherFields.get(i);
		var name = otherField.getName();
		var field = this.getFieldByName(name);
		if (oFF.notNull(field))
		{
			this.m_resultSetFields.add(field);
		}
	}
};
oFF.QFieldContainer.prototype.clearAllFields = function()
{
	this.queueEventing();
	this.m_defaultResultSetFields.clear();
	this.m_allFields.clear();
	this.m_resultSetFields.clear();
	this.m_selectorFields.clear();
	this.m_flatFieldMapByType.clear();
	this.m_hierarchyFieldMapByType.clear();
	this.m_flatKeyField = null;
	this.m_flatTextField = null;
	this.m_flatDisplayKeyField = null;
	this.m_hierarchyKeyField = null;
	this.m_hierarchyTextField = null;
	this.m_hierarchyDisplayKeyField = null;
	this.m_hierarchyPathField = null;
	this.m_hierarchyNavigationField = null;
	this.m_geoShapeField = null;
	this.m_geoPointField = null;
	this.m_geoLevelField = null;
	this.m_geoAreaNameField = null;
	this.m_cubeBlendingPropertiesField = null;
	this.resumeEventing();
};
oFF.QFieldContainer.prototype.removeFieldByName = function(fieldName)
{
	var fieldToRemove = this.m_allFields.getFieldByName(fieldName);
	if (oFF.notNull(fieldToRemove))
	{
		this.m_defaultResultSetFields.removeAt(this.m_allFields.getIndex(fieldToRemove));
		this.m_allFields.removeElement(fieldToRemove);
		this.m_resultSetFields.removeElement(fieldToRemove);
		this.m_selectorFields.removeElement(fieldToRemove);
		this.m_flatFieldMapByType.remove(fieldName);
		if (this.getFlatKeyField() === fieldToRemove)
		{
			this.m_flatKeyField = null;
		}
	}
};
oFF.QFieldContainer.prototype.getHierarchyNavigationField = function()
{
	if (oFF.isNull(this.m_hierarchyNavigationField))
	{
		this.m_hierarchyNavigationField = oFF.XWeakReferenceUtil.getWeakRef(this.getHierarchyKeyField());
	}
	return oFF.XWeakReferenceUtil.getHardRef(this.m_hierarchyNavigationField);
};
oFF.QFieldContainer.prototype.setHierachyNavigationField = function(field)
{
	this.m_hierarchyNavigationField = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldContainer.prototype.getGeoShapeField = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_geoShapeField);
};
oFF.QFieldContainer.prototype.getGeoPointField = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_geoPointField);
};
oFF.QFieldContainer.prototype.getGeoLevelField = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_geoLevelField);
};
oFF.QFieldContainer.prototype.getGeoAreaNameField = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_geoAreaNameField);
};
oFF.QFieldContainer.prototype.setGeoShapeField = function(field)
{
	this.m_geoShapeField = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldContainer.prototype.setGeoPointField = function(field)
{
	this.m_geoPointField = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldContainer.prototype.setGeoLevelField = function(field)
{
	this.m_geoLevelField = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldContainer.prototype.setGeoAreaNameField = function(field)
{
	this.m_geoAreaNameField = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldContainer.prototype.setClientDefaultTextField = function(field)
{
	this.m_clientDefaultTextField = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldContainer.prototype.getClientDefaultTextField = function()
{
	return oFF.isNull(this.m_clientDefaultTextField) ? this.getTextField() : oFF.XWeakReferenceUtil.getHardRef(this.m_clientDefaultTextField);
};
oFF.QFieldContainer.prototype.isUseServerDefaultTextField = function()
{
	return oFF.isNull(this.m_clientDefaultTextField);
};

oFF.QFilterCapability = function() {};
oFF.QFilterCapability.prototype = new oFF.QModelComponent();
oFF.QFilterCapability.prototype._ff_c = "QFilterCapability";

oFF.QFilterCapability._createFilterCapability = function(context, parentContext, field)
{
	return oFF.QFilterCapability._createFilterCapabilityWithName(context, parentContext, oFF.isNull(field) ? null : field.getName());
};
oFF.QFilterCapability._createFilterCapabilityWithName = function(context, parentContext, fieldName)
{
	var selectionCapabilities = new oFF.QFilterCapability();
	selectionCapabilities.setupFilterCapabilities(context, parentContext, fieldName);
	return selectionCapabilities;
};
oFF.QFilterCapability.prototype.m_fieldName = null;
oFF.QFilterCapability.prototype.m_supportedSetSigns = null;
oFF.QFilterCapability.prototype.m_supportedComparisionOperators = null;
oFF.QFilterCapability.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originFilterCapability = other;
	this.m_supportedSetSigns.addAll(originFilterCapability.m_supportedSetSigns);
	this.m_supportedComparisionOperators = originFilterCapability.m_supportedComparisionOperators.createMapByStringCopy();
	this.m_fieldName = originFilterCapability.m_fieldName;
};
oFF.QFilterCapability.prototype.setupFilterCapabilities = function(context, parentContext, fieldName)
{
	this.setupModelComponent(context, parentContext);
	this.m_fieldName = fieldName;
	this.m_supportedSetSigns = oFF.XListOfNameObject.create();
	this.m_supportedComparisionOperators = oFF.XHashMapByString.create();
};
oFF.QFilterCapability.prototype.releaseObject = function()
{
	this.m_fieldName = null;
	this.m_supportedSetSigns = oFF.XObjectExt.release(this.m_supportedSetSigns);
	this.m_supportedComparisionOperators = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_supportedComparisionOperators);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QFilterCapability.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FILTER_CAPABILITY;
};
oFF.QFilterCapability.prototype.getFieldName = function()
{
	return this.m_fieldName;
};
oFF.QFilterCapability.prototype.getSupportedSetSign = function()
{
	return this.m_supportedSetSigns;
};
oFF.QFilterCapability.prototype.addSupportedSetSign = function(setSign)
{
	if (this.m_supportedSetSigns.contains(setSign))
	{
		return;
	}
	this.m_supportedSetSigns.add(setSign);
	var operatorForSign = oFF.XListOfNameObject.create();
	this.m_supportedComparisionOperators.put(setSign.getName(), operatorForSign);
};
oFF.QFilterCapability.prototype.getModifiableSupportedComparisonOperators = function(setSign)
{
	return this.m_supportedComparisionOperators.getByKey(setSign.getName());
};
oFF.QFilterCapability.prototype.getSupportedComparisonOperators = function(setSign)
{
	return this.getModifiableSupportedComparisonOperators(setSign);
};
oFF.QFilterCapability.prototype.supportsSetSign = function(setSign)
{
	return this.m_supportedSetSigns.contains(setSign);
};
oFF.QFilterCapability.prototype.isFilterCapabilityGroup = function()
{
	return false;
};

oFF.QFilterCapabilityList = function() {};
oFF.QFilterCapabilityList.prototype = new oFF.QModelComponent();
oFF.QFilterCapabilityList.prototype._ff_c = "QFilterCapabilityList";

oFF.QFilterCapabilityList.createFilterCapabilitiesForDimension = function()
{
	var capabilities = new oFF.QFilterCapabilityList();
	capabilities.setupFilterCapabilities(null, null);
	return capabilities;
};
oFF.QFilterCapabilityList.createFilterCapabilitiesForVariable = function(context, variable)
{
	var selectionSignedSetCapabilities = new oFF.QFilterCapabilityList();
	selectionSignedSetCapabilities.setupFilterCapabilities(context, variable);
	return selectionSignedSetCapabilities;
};
oFF.QFilterCapabilityList.prototype.m_filterCapabilities = null;
oFF.QFilterCapabilityList.prototype.m_filterableFields = null;
oFF.QFilterCapabilityList.prototype.m_supportsMultipleValues = false;
oFF.QFilterCapabilityList.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originFilterCapabilityList = other;
	this.m_filterableFields = originFilterCapabilityList.m_filterableFields.createListOfStringCopy();
	this.m_supportsMultipleValues = originFilterCapabilityList.m_supportsMultipleValues;
	this.m_filterCapabilities = originFilterCapabilityList.m_filterCapabilities.clone();
};
oFF.QFilterCapabilityList.prototype.setupFilterCapabilities = function(context, deltaNode)
{
	this.setupModelComponent(context, deltaNode);
	this.m_filterCapabilities = oFF.XHashMapByString.create();
	this.m_filterableFields = oFF.XListOfString.create();
};
oFF.QFilterCapabilityList.prototype.releaseObject = function()
{
	this.m_filterCapabilities = oFF.XObjectExt.release(this.m_filterCapabilities);
	this.m_filterableFields = oFF.XObjectExt.release(this.m_filterableFields);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QFilterCapabilityList.prototype.getFilterCapabilitiesByField = function(field)
{
	return this.m_filterCapabilities.getByKey(field.getName());
};
oFF.QFilterCapabilityList.prototype.getFilterCapabilitiesByFieldName = function(fieldName)
{
	return this.m_filterCapabilities.getByKey(fieldName);
};
oFF.QFilterCapabilityList.prototype.getSelectableFieldNames = function()
{
	return this.m_filterableFields;
};
oFF.QFilterCapabilityList.prototype.supportsMultipleValues = function()
{
	return this.m_supportsMultipleValues;
};
oFF.QFilterCapabilityList.prototype.setSupportsMultipleValues = function(supportsMultipleValues)
{
	this.m_supportsMultipleValues = supportsMultipleValues;
};
oFF.QFilterCapabilityList.prototype.createAndAddFilterCapabilitiesForFieldName = function(fieldName)
{
	if (this.m_filterCapabilities.containsKey(fieldName))
	{
		return this.m_filterCapabilities.getByKey(fieldName);
	}
	var selectionCapabilities = oFF.QFilterCapability._createFilterCapabilityWithName(this.getContext(), this, fieldName);
	this.addFilterCapability(selectionCapabilities);
	return selectionCapabilities;
};
oFF.QFilterCapabilityList.prototype.addFilterCapability = function(capability)
{
	var fieldName = capability.getFieldName();
	if (!this.m_filterCapabilities.containsKey(fieldName))
	{
		this.m_filterableFields.add(fieldName);
	}
	this.m_filterCapabilities.put(fieldName, capability);
};

oFF.QFilterElement = function() {};
oFF.QFilterElement.prototype = new oFF.QModelComponent();
oFF.QFilterElement.prototype._ff_c = "QFilterElement";

oFF.QFilterElement.prototype.m_filterContainer = null;
oFF.QFilterElement.prototype.m_uniqueId = null;
oFF.QFilterElement.prototype.setupFilterElement = function(context, filterContainer, parentNode)
{
	this.setupModelComponent(context, parentNode);
	this.m_filterContainer = oFF.XWeakReferenceUtil.getWeakRef(filterContainer);
	this.m_uniqueId = oFF.XGuid.getGuid();
};
oFF.QFilterElement.prototype.releaseObject = function()
{
	this.m_filterContainer = oFF.XObjectExt.release(this.m_filterContainer);
	this.m_uniqueId = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QFilterElement.prototype.setParent = function(parent)
{
	var currentParent = this.getParent();
	if (oFF.notNull(currentParent))
	{
		var filterExpression = null;
		if (currentParent.getComponentType() === oFF.OlapComponentType.FILTER_EXPRESSION)
		{
			filterExpression = currentParent;
		}
		else if (currentParent.getComponentType().isTypeOf(oFF.OlapComponentType.FILTER_ELEMENT))
		{
			var filterParent = currentParent;
			filterExpression = filterParent.getFilterExpression();
		}
		if (oFF.notNull(filterExpression))
		{
			var filterExpressionParent = filterExpression.getParent();
			if (oFF.notNull(filterExpressionParent) && filterExpressionParent.getComponentType() === oFF.OlapComponentType.OLAP_FILTER_MANAGER)
			{
				return;
			}
		}
	}
	oFF.QModelComponent.prototype.setParent.call( this , parent);
};
oFF.QFilterElement.prototype.getFilterExpression = function()
{
	var filterExpression = oFF.XWeakReferenceUtil.getHardRef(this.m_filterContainer);
	if (oFF.notNull(filterExpression))
	{
		return filterExpression;
	}
	var context = this.getContext();
	if (oFF.isNull(context) || context.getComponentType() !== oFF.OlapComponentType.FILTER_EXPRESSION)
	{
		return null;
	}
	return context;
};
oFF.QFilterElement.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FILTER_ELEMENT;
};
oFF.QFilterElement.prototype.getUniqueId = function()
{
	return this.m_uniqueId;
};
oFF.QFilterElement.prototype.setUniqueId = function(uniqueId)
{
	this.m_uniqueId = uniqueId;
};
oFF.QFilterElement.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originFilterElement = other;
	this.m_uniqueId = originFilterElement.m_uniqueId;
};
oFF.QFilterElement.prototype.getMemberNamesFromFilter = function(dimName)
{
	return oFF.QFilterUtil.getMemberNamesFromFilter(this, dimName);
};

oFF.QLayeredFilter = function() {};
oFF.QLayeredFilter.prototype = new oFF.QModelComponent();
oFF.QLayeredFilter.prototype._ff_c = "QLayeredFilter";

oFF.QLayeredFilter.create = function(context, parent)
{
	var layeredFilter = new oFF.QLayeredFilter();
	layeredFilter.setupLayer(context, parent);
	return layeredFilter;
};
oFF.QLayeredFilter.prototype.m_layeredFilters = null;
oFF.QLayeredFilter.prototype.setupLayer = function(context, parent)
{
	this.setupModelComponentWithName(context, parent, "LayeredFilter");
	this.m_layeredFilters = oFF.XLinkedHashMapByString.create();
};
oFF.QLayeredFilter.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originLayeredFilter = other;
	var iterator = originLayeredFilter.m_layeredFilters.getKeysAsIteratorOfString();
	while (iterator.hasNext())
	{
		var layerName = iterator.next();
		this.putLayer(layerName, originLayeredFilter.m_layeredFilters.getByKey(layerName));
	}
};
oFF.QLayeredFilter.prototype.releaseObject = function()
{
	oFF.QModelComponent.prototype.releaseObject.call( this );
	var layeredFilters = this.m_layeredFilters.getIterator();
	while (layeredFilters.hasNext())
	{
		this.freeAsSecondaryParent(layeredFilters.next());
	}
	this.m_layeredFilters = oFF.XObjectExt.release(this.m_layeredFilters);
};
oFF.QLayeredFilter.prototype.copy = function(layeredFilter)
{
	if (oFF.notNull(layeredFilter))
	{
		var iterator = layeredFilter.getKeysAsIteratorOfString();
		while (iterator.hasNext())
		{
			var layerName = iterator.next();
			var layer = layeredFilter.getByKey(layerName);
			this.m_layeredFilters.put(layerName, layer);
			this.becomeSecondaryParent(layer);
		}
		this.notifyNodeChanged();
	}
};
oFF.QLayeredFilter.prototype.clear = function()
{
	var iterator = this.m_layeredFilters.getIterator();
	while (iterator.hasNext())
	{
		var filterLayer = iterator.next();
		this.freeAsSecondaryParent(filterLayer);
	}
	this.m_layeredFilters.clear();
	this.notifyNodeChanged();
};
oFF.QLayeredFilter.prototype.putLayer = function(name, layer)
{
	var curFilterLayer = this.m_layeredFilters.getByKey(name);
	if (curFilterLayer === layer)
	{
		return;
	}
	if (oFF.notNull(curFilterLayer))
	{
		this.freeAsSecondaryParent(curFilterLayer);
	}
	if (oFF.isNull(layer))
	{
		this.m_layeredFilters.remove(name);
	}
	else
	{
		this.m_layeredFilters.put(name, layer);
		this.becomeSecondaryParent(layer);
	}
	this.notifyNodeChanged();
};
oFF.QLayeredFilter.prototype.becomeSecondaryParent = function(filterExpression)
{
	filterExpression.addSecondaryParent(this.getParentComponent());
	filterExpression.registerChangedListener(this.getParentComponent(), null);
};
oFF.QLayeredFilter.prototype.freeAsSecondaryParent = function(filterExpression)
{
	filterExpression.unregisterChangedListener(this.getParentComponent());
	filterExpression.removeSecondaryParent(this.getParentComponent());
};
oFF.QLayeredFilter.prototype.getLayer = function(name)
{
	return this.m_layeredFilters.getByKey(name);
};
oFF.QLayeredFilter.prototype.toReadOnly = function()
{
	var layeredFilters = oFF.XHashMapByString.create();
	var filterLayer = this.m_layeredFilters.getKeysAsIteratorOfString();
	while (filterLayer.hasNext())
	{
		var layerName = filterLayer.next();
		layeredFilters.put(layerName, this.m_layeredFilters.getByKey(layerName));
	}
	return layeredFilters;
};
oFF.QLayeredFilter.prototype.getIterator = function()
{
	return this.m_layeredFilters.getIterator();
};
oFF.QLayeredFilter.prototype.contains = function(layer)
{
	return this.m_layeredFilters.contains(layer);
};

oFF.QBlendableFormulaItem = function() {};
oFF.QBlendableFormulaItem.prototype = new oFF.QModelComponent();
oFF.QBlendableFormulaItem.prototype._ff_c = "QBlendableFormulaItem";

oFF.QBlendableFormulaItem.prototype.m_dimensionContext = null;
oFF.QBlendableFormulaItem.prototype.releaseObject = function()
{
	this.m_dimensionContext = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QBlendableFormulaItem.prototype.copyBlendingFormulaItem = function(other)
{
	this.setDimensionContext(other.getDimensionContext());
};
oFF.QBlendableFormulaItem.prototype.getDimensionContext = function()
{
	return this.m_dimensionContext;
};
oFF.QBlendableFormulaItem.prototype.setDimensionContext = function(dimension)
{
	if (oFF.notNull(dimension))
	{
		if (dimension.getQueryModel() !== null && dimension.getQueryModel().getDatasetId() !== null)
		{
			this.m_dimensionContext = dimension;
		}
		else
		{
			throw oFF.XException.createIllegalArgumentException("dimension context query model context containing dataset Id.");
		}
	}
};

oFF.QFormulaItemConstant = function() {};
oFF.QFormulaItemConstant.prototype = new oFF.QModelComponent();
oFF.QFormulaItemConstant.prototype._ff_c = "QFormulaItemConstant";

oFF.QFormulaItemConstant._createConstant = function(context, parentNode)
{
	var formula = new oFF.QFormulaItemConstant();
	formula.setupFormula(context, parentNode);
	return formula;
};
oFF.QFormulaItemConstant.prototype.m_constantValue = null;
oFF.QFormulaItemConstant.prototype.m_variableValue = null;
oFF.QFormulaItemConstant.prototype.m_variable = null;
oFF.QFormulaItemConstant.prototype.m_currency = null;
oFF.QFormulaItemConstant.prototype.m_unit = null;
oFF.QFormulaItemConstant.prototype.cloneOlapComponent = function(context, parent)
{
	var newItem = oFF.QFormulaItemConstant._createConstant(context, parent);
	newItem.copyFormulaItemConstant(this);
	return newItem;
};
oFF.QFormulaItemConstant.prototype.copyFromInternal = function(other, flags)
{
	this.copyFormulaItemConstant(other);
};
oFF.QFormulaItemConstant.prototype.copyFormulaItemConstant = function(origin)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , origin, null);
	this.m_currency = origin.m_currency;
	this.m_unit = origin.m_unit;
	this.m_constantValue.copyFrom(origin, null);
	if (origin.getValueType() === oFF.XValueType.VARIABLE)
	{
		var variableContainer = this.getContext().getVariableContainer();
		var origVar = origin.getVariable();
		if (oFF.notNull(origVar))
		{
			this.setVariable(variableContainer.getVariables().getByKey(origVar.getName()));
		}
		else
		{
			var origVarVal = origin.getVariableValue();
			this.setVariableValue(oFF.QFactory.createVariableValue(variableContainer.getVariables().getByKey(origVarVal.getVariable().getName())));
		}
	}
	else
	{
		var originValue = origin.m_constantValue.getValue();
		if (oFF.notNull(originValue))
		{
			this.m_constantValue.copyFrom(origin.m_constantValue, null);
		}
		else
		{
			oFF.XObjectExt.release(this.m_constantValue);
			this.m_constantValue = oFF.XValueAccess.createWithType(origin.m_constantValue.getValueType());
		}
	}
};
oFF.QFormulaItemConstant.prototype.setupFormula = function(context, parentNode)
{
	this.setupModelComponent(context, parentNode);
	this.m_constantValue = oFF.XValueAccess.create();
};
oFF.QFormulaItemConstant.prototype.releaseObject = function()
{
	this.m_constantValue = oFF.XObjectExt.release(this.m_constantValue);
	this.m_variableValue = null;
	this.m_variable = null;
	this.m_currency = null;
	this.m_unit = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QFormulaItemConstant.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var xOther = other;
	if (!this.getValue().isEqualTo(xOther.getValue()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getCurrency(), xOther.getCurrency()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getUnit(), xOther.getUnit()))
	{
		return false;
	}
	return true;
};
oFF.QFormulaItemConstant.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FORMULA_CONSTANT;
};
oFF.QFormulaItemConstant.prototype.getValueType = function()
{
	if (oFF.notNull(this.m_variable))
	{
		return oFF.XValueType.VARIABLE;
	}
	return this.m_constantValue.getValueType();
};
oFF.QFormulaItemConstant.prototype.getValue = function()
{
	return this.m_constantValue.getValue();
};
oFF.QFormulaItemConstant.prototype.getGeometry = function()
{
	var value = this.getValue();
	return value;
};
oFF.QFormulaItemConstant.prototype.getPolygon = function()
{
	return this.m_constantValue.getPolygon();
};
oFF.QFormulaItemConstant.prototype.setPolygon = function(value)
{
	this.m_constantValue.setPolygon(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getPoint = function()
{
	return this.m_constantValue.getPoint();
};
oFF.QFormulaItemConstant.prototype.setPoint = function(value)
{
	this.m_constantValue.setPoint(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getString = function()
{
	return this.m_constantValue.getString();
};
oFF.QFormulaItemConstant.prototype.setString = function(value)
{
	this.m_constantValue.setString(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getBoolean = function()
{
	return this.m_constantValue.getBoolean();
};
oFF.QFormulaItemConstant.prototype.setBoolean = function(value)
{
	this.m_constantValue.setBoolean(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getDate = function()
{
	return this.m_constantValue.getDate();
};
oFF.QFormulaItemConstant.prototype.setDate = function(value)
{
	this.m_constantValue.setDate(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getTime = function()
{
	return this.m_constantValue.getTime();
};
oFF.QFormulaItemConstant.prototype.setTime = function(value)
{
	this.m_constantValue.setTime(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getTimeSpan = function()
{
	return this.m_constantValue.getTimeSpan();
};
oFF.QFormulaItemConstant.prototype.setTimeSpan = function(value)
{
	this.m_constantValue.setTimeSpan(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.setDateTime = function(value)
{
	this.m_constantValue.setDateTime(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getDateTime = function()
{
	return this.m_constantValue.getDateTime();
};
oFF.QFormulaItemConstant.prototype.setInteger = function(value)
{
	this.m_constantValue.setInteger(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getInteger = function()
{
	return this.m_constantValue.getInteger();
};
oFF.QFormulaItemConstant.prototype.setLong = function(value)
{
	this.m_constantValue.setLong(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getLong = function()
{
	return this.m_constantValue.getLong();
};
oFF.QFormulaItemConstant.prototype.setDouble = function(value)
{
	this.m_constantValue.setDouble(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getDecFloat = function()
{
	return this.m_constantValue.getDecFloat();
};
oFF.QFormulaItemConstant.prototype.setDecFloat = function(value)
{
	this.m_constantValue.setDecFloat(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getDouble = function()
{
	return this.m_constantValue.getDouble();
};
oFF.QFormulaItemConstant.prototype.setMultiPolygon = function(value)
{
	this.m_constantValue.setMultiPolygon(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getMultiPolygon = function()
{
	return this.m_constantValue.getMultiPolygon();
};
oFF.QFormulaItemConstant.prototype.setLineString = function(value)
{
	this.m_constantValue.setLineString(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getLineString = function()
{
	return this.m_constantValue.getLineString();
};
oFF.QFormulaItemConstant.prototype.setMultiLineString = function(value)
{
	this.m_constantValue.setMultiLineString(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getMultiLineString = function()
{
	return this.m_constantValue.getMultiLineString();
};
oFF.QFormulaItemConstant.prototype.getUnit = function()
{
	return this.m_unit;
};
oFF.QFormulaItemConstant.prototype.setUnit = function(unit)
{
	this.m_unit = unit;
	this.m_currency = null;
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getCurrency = function()
{
	return this.m_currency;
};
oFF.QFormulaItemConstant.prototype.setCurrency = function(currency)
{
	this.m_currency = currency;
	this.m_unit = null;
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.setVariableValue = function(variableValue)
{
	this.m_variableValue = oFF.XWeakReferenceUtil.getWeakRef(variableValue);
	if (oFF.notNull(this.m_variableValue))
	{
		this.setVariable(variableValue.getVariable());
	}
	else
	{
		this.m_variable = null;
	}
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getVariableValue = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_variableValue);
};
oFF.QFormulaItemConstant.prototype.getNull = function()
{
	return this.m_constantValue.getNull();
};
oFF.QFormulaItemConstant.prototype.setNullByType = function(nullValueType)
{
	this.m_constantValue.setNullByType(nullValueType);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.setVariable = function(variable)
{
	this.m_variable = oFF.XWeakReferenceUtil.getWeakRef(variable);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getVariable = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_variable);
};
oFF.QFormulaItemConstant.prototype.setMultiPoint = function(value)
{
	this.m_constantValue.setMultiPoint(value);
	this.notifyNodeChanged();
};
oFF.QFormulaItemConstant.prototype.getMultiPoint = function()
{
	return this.m_constantValue.getMultiPoint();
};
oFF.QFormulaItemConstant.prototype.hasValue = function()
{
	if (oFF.isNull(this.m_variable))
	{
		return this.m_constantValue.hasValue();
	}
	try
	{
		return this.getVariable().getValueByString() !== null;
	}
	catch (unExpectedValue)
	{
		return false;
	}
};
oFF.QFormulaItemConstant.prototype.parseString = function(value)
{
	if (oFF.notNull(this.m_variable))
	{
		oFF.noSupport();
	}
	return this.m_constantValue.parseString(value);
};
oFF.QFormulaItemConstant.prototype.setXValue = function(value)
{
	oFF.XObjectExt.release(this.m_constantValue);
	this.m_constantValue = oFF.XValueAccess.createWithValue(value);
};
oFF.QFormulaItemConstant.prototype.getFormattedValue = function()
{
	return this.getString();
};

oFF.QFormulaItemOperation = function() {};
oFF.QFormulaItemOperation.prototype = new oFF.QModelComponent();
oFF.QFormulaItemOperation.prototype._ff_c = "QFormulaItemOperation";

oFF.QFormulaItemOperation._createOperation = function(context, parentNode)
{
	var formula = new oFF.QFormulaItemOperation();
	formula.setupModelComponent(context, parentNode);
	return formula;
};
oFF.QFormulaItemOperation.prototype.m_operator = null;
oFF.QFormulaItemOperation.prototype.m_leftSide = null;
oFF.QFormulaItemOperation.prototype.m_rightSide = null;
oFF.QFormulaItemOperation.prototype.cloneOlapComponent = function(context, parent)
{
	var newItem = oFF.QFormulaItemOperation._createOperation(context, parent);
	newItem.copyFormulaItemOperation(this);
	return newItem;
};
oFF.QFormulaItemOperation.prototype.copyFormulaItemOperation = function(origin)
{
	this.copyFrom(origin, null);
	this.m_operator = origin.m_operator;
	if (oFF.notNull(origin.m_leftSide))
	{
		this.m_leftSide = this.copySide(origin.m_leftSide);
	}
	if (oFF.notNull(origin.m_rightSide))
	{
		this.m_rightSide = this.copySide(origin.m_rightSide);
	}
};
oFF.QFormulaItemOperation.prototype.copySide = function(originItem)
{
	var cloneItem = originItem.cloneOlapComponent(this, this);
	return cloneItem;
};
oFF.QFormulaItemOperation.prototype.releaseObject = function()
{
	this.m_leftSide = oFF.XObjectExt.release(this.m_leftSide);
	this.m_rightSide = oFF.XObjectExt.release(this.m_rightSide);
	this.m_operator = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QFormulaItemOperation.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FORMULA_OPERATION;
};
oFF.QFormulaItemOperation.prototype.getOperator = function()
{
	return this.m_operator;
};
oFF.QFormulaItemOperation.prototype.setOperator = function(theOperator)
{
	this.m_operator = theOperator;
	this.notifyNodeChanged();
};
oFF.QFormulaItemOperation.prototype.getLeftSide = function()
{
	return this.m_leftSide;
};
oFF.QFormulaItemOperation.prototype.setLeftSide = function(item)
{
	this.m_leftSide = item;
	this.notifyNodeChanged();
};
oFF.QFormulaItemOperation.prototype.getRightSide = function()
{
	return this.m_rightSide;
};
oFF.QFormulaItemOperation.prototype.setRightSide = function(item)
{
	this.m_rightSide = item;
	this.notifyNodeChanged();
};

oFF.QFormulaIteration = function() {};
oFF.QFormulaIteration.prototype = new oFF.QModelComponent();
oFF.QFormulaIteration.prototype._ff_c = "QFormulaIteration";

oFF.QFormulaIteration._createFormulaIteration = function(context, parentNode)
{
	var iteration = new oFF.QFormulaIteration();
	iteration.setupModelComponent(context, parentNode);
	iteration.m_iterationDimensions = oFF.XList.create();
	return iteration;
};
oFF.QFormulaIteration.prototype.m_memberName = null;
oFF.QFormulaIteration.prototype.m_iterationDimensions = null;
oFF.QFormulaIteration.prototype.cloneOlapComponent = function(context, parent)
{
	var newItem = oFF.QFormulaIteration._createFormulaIteration(context, parent);
	newItem.copyFrom(this, null);
	return newItem;
};
oFF.QFormulaIteration.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	if (other.getOlapComponentType() === oFF.OlapComponentType.FORMULA_ITERATOR)
	{
		var origin = other;
		var size = origin.m_iterationDimensions.size();
		for (var i = 0; i < size; i++)
		{
			var newIter = oFF.QFormulaIterationDimension._createFormulaIterationDimension(this.getContext(), this);
			newIter.copyFrom(origin.m_iterationDimensions.get(i), null);
			this.m_iterationDimensions.add(newIter);
		}
		this.m_memberName = origin.m_memberName;
	}
};
oFF.QFormulaIteration.prototype.releaseObject = function()
{
	this.m_memberName = null;
	this.m_iterationDimensions = oFF.XObjectExt.release(this.m_iterationDimensions);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QFormulaIteration.prototype.addIterationDimension = function(iterationDimension)
{
	iterationDimension.setParent(this);
	this.m_iterationDimensions.add(iterationDimension);
	this.notifyNodeChanged();
};
oFF.QFormulaIteration.prototype.clearIterationDimensions = function()
{
	this.m_iterationDimensions.clear();
	this.notifyNodeChanged();
};
oFF.QFormulaIteration.prototype.getIterationDimensions = function()
{
	return this.m_iterationDimensions;
};
oFF.QFormulaIteration.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FORMULA_ITERATOR;
};
oFF.QFormulaIteration.prototype.setStartValueMember = function(member)
{
	this.setStartValueMemberName(member.getName());
};
oFF.QFormulaIteration.prototype.setStartValueMemberName = function(name)
{
	if (!oFF.XString.isEqual(this.m_memberName, name))
	{
		this.m_memberName = name;
		this.notifyNodeChanged();
	}
};
oFF.QFormulaIteration.prototype.getStartValueMemberName = function()
{
	return this.m_memberName;
};

oFF.QFormulaIterationDimension = function() {};
oFF.QFormulaIterationDimension.prototype = new oFF.QModelComponent();
oFF.QFormulaIterationDimension.prototype._ff_c = "QFormulaIterationDimension";

oFF.QFormulaIterationDimension._createFormulaIterationDimension = function(context, parentNode)
{
	var iterationDimension = new oFF.QFormulaIterationDimension();
	iterationDimension.setupModelComponent(context, parentNode);
	return iterationDimension;
};
oFF.QFormulaIterationDimension.prototype.m_dimensionName = null;
oFF.QFormulaIterationDimension.prototype.m_partitionLevelName = null;
oFF.QFormulaIterationDimension.prototype.cloneOlapComponent = function(context, parent)
{
	var newItem = oFF.QFormulaIterationDimension._createFormulaIterationDimension(context, parent);
	newItem.copyFrom(this, null);
	return newItem;
};
oFF.QFormulaIterationDimension.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	if (other.getOlapComponentType() === oFF.OlapComponentType.FORMULA_ITERATION_DIMENSION)
	{
		var origin = other;
		this.m_dimensionName = origin.m_dimensionName;
		this.m_partitionLevelName = origin.m_partitionLevelName;
	}
};
oFF.QFormulaIterationDimension.prototype.releaseObject = function()
{
	this.m_dimensionName = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QFormulaIterationDimension.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FORMULA_ITERATION_DIMENSION;
};
oFF.QFormulaIterationDimension.prototype.setDimension = function(dimension)
{
	this.setDimensionName(dimension.getName());
};
oFF.QFormulaIterationDimension.prototype.setDimensionName = function(name)
{
	if (!oFF.XString.isEqual(this.m_dimensionName, name))
	{
		this.m_dimensionName = name;
		this.notifyNodeChanged();
	}
};
oFF.QFormulaIterationDimension.prototype.getDimensionName = function()
{
	return this.m_dimensionName;
};
oFF.QFormulaIterationDimension.prototype.setPartitionLevel = function(hierarchyLevel)
{
	this.setPartitionLevelName(hierarchyLevel.getLevelName());
};
oFF.QFormulaIterationDimension.prototype.setPartitionLevelName = function(name)
{
	if (!oFF.XString.isEqual(this.m_partitionLevelName, name))
	{
		this.m_partitionLevelName = name;
		this.notifyNodeChanged();
	}
};
oFF.QFormulaIterationDimension.prototype.getPartitionLevelName = function()
{
	return this.m_partitionLevelName;
};

oFF.QCustomHierarchyDefinition = function() {};
oFF.QCustomHierarchyDefinition.prototype = new oFF.QModelComponent();
oFF.QCustomHierarchyDefinition.prototype._ff_c = "QCustomHierarchyDefinition";

oFF.QCustomHierarchyDefinition.create = function(dimension, description)
{
	var object = new oFF.QCustomHierarchyDefinition();
	var queryManager = dimension.getQueryManager();
	object.setupHierarchyDefinition(queryManager.getSystemName(), dimension.getDataSource().getName(), dimension.getName(), description, queryManager.getSystemType().isTypeOf(oFF.SystemType.ABAP));
	return object;
};
oFF.QCustomHierarchyDefinition.createByData = function(system, dataSource, dimensionName, description, ignoreDatasource)
{
	var object = new oFF.QCustomHierarchyDefinition();
	object.setupHierarchyDefinition(system, dataSource, dimensionName, description, ignoreDatasource);
	return object;
};
oFF.QCustomHierarchyDefinition.prototype.m_system = null;
oFF.QCustomHierarchyDefinition.prototype.m_dataSource = null;
oFF.QCustomHierarchyDefinition.prototype.m_dimension = null;
oFF.QCustomHierarchyDefinition.prototype.m_description = null;
oFF.QCustomHierarchyDefinition.prototype.m_nodes = null;
oFF.QCustomHierarchyDefinition.prototype.setupHierarchyDefinition = function(system, dataSource, dimension, description, ignoreDatasource)
{
	this.m_system = system;
	this.m_dataSource = ignoreDatasource ? null : dataSource;
	this.m_dimension = dimension;
	this.m_description = description;
	this.m_nodes = oFF.XList.create();
};
oFF.QCustomHierarchyDefinition.prototype.releaseObject = function()
{
	this.m_system = null;
	this.m_dataSource = null;
	this.m_description = null;
	this.m_dimension = null;
	this.m_nodes = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_nodes);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QCustomHierarchyDefinition.prototype.addTextNode = function(text)
{
	var textNode = oFF.CustomHierarchyTextElement.create(text);
	this.m_nodes.add(textNode);
	return textNode;
};
oFF.QCustomHierarchyDefinition.prototype.addMemberNode = function(memberName)
{
	var memberNode = oFF.CustomHierarchyMemberElement.create(memberName);
	this.m_nodes.add(memberNode);
	return memberNode;
};
oFF.QCustomHierarchyDefinition.prototype.getChildNodes = function()
{
	return this.m_nodes;
};
oFF.QCustomHierarchyDefinition.prototype.removeChildNode = function(childNode)
{
	this.m_nodes.removeElement(childNode);
};
oFF.QCustomHierarchyDefinition.prototype.clearChildNodes = function()
{
	this.m_nodes.clear();
};
oFF.QCustomHierarchyDefinition.prototype.isMemberElement = function()
{
	return false;
};
oFF.QCustomHierarchyDefinition.prototype.copyFromInternal = function(other, flags)
{
	var originCustomHierarchyDefinition = other;
	this.setName(originCustomHierarchyDefinition.getName());
	this.m_system = originCustomHierarchyDefinition.getSystemName();
	this.m_dataSource = originCustomHierarchyDefinition.getDataSourceName();
	this.m_dimension = originCustomHierarchyDefinition.getDimensionName();
	this.m_description = originCustomHierarchyDefinition.getDescription();
	this.m_nodes = oFF.XCollectionUtils.createListOfClones(originCustomHierarchyDefinition.getChildNodes());
};
oFF.QCustomHierarchyDefinition.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherDef = other;
	if (!oFF.XString.isEqual(this.getDescription(), otherDef.getDescription()) || !oFF.XString.isEqual(this.m_system, otherDef.getSystemName()) || !oFF.XString.isEqual(this.m_dataSource, otherDef.getDataSourceName()) || !oFF.XString.isEqual(this.m_dimension, otherDef.getDimensionName()) || !oFF.XString.isEqual(this.getName(), otherDef.getName()))
	{
		return false;
	}
	return oFF.XObjectExt.areEqual(this.m_nodes, otherDef.getChildNodes());
};
oFF.QCustomHierarchyDefinition.prototype.getSystemName = function()
{
	return this.m_system;
};
oFF.QCustomHierarchyDefinition.prototype.getDataSourceName = function()
{
	return this.m_dataSource;
};
oFF.QCustomHierarchyDefinition.prototype.getDimensionName = function()
{
	return this.m_dimension;
};
oFF.QCustomHierarchyDefinition.prototype.getDescription = function()
{
	return this.m_description;
};
oFF.QCustomHierarchyDefinition.prototype.setDescription = function(description)
{
	this.m_description = description;
};
oFF.QCustomHierarchyDefinition.prototype.toString = function()
{
	var sb = oFF.XStringBuffer.create();
	sb.append("QCustomHierarchyDefinition [");
	sb.append("System:").append(this.m_system);
	sb.append(", DataSource:").append(this.m_dataSource);
	sb.append(", Dimension:").append(this.m_dimension);
	if (this.getName() !== null)
	{
		sb.append(", Name:").append(this.getName());
	}
	sb.append("]");
	return sb.toString();
};

oFF.QHierarchy = function() {};
oFF.QHierarchy.prototype = new oFF.QModelComponent();
oFF.QHierarchy.prototype._ff_c = "QHierarchy";

oFF.QHierarchy.create = function(context, dimension, name)
{
	var object = new oFF.QHierarchy();
	object.setupModelComponentWithName(context, dimension, name);
	object.m_isCustomHierarchy = false;
	return object;
};
oFF.QHierarchy.createCustomHierarchy = function(context, dimension, name, description)
{
	var object = new oFF.QHierarchy();
	object.setupModelComponentWithName(context, dimension, name);
	object.m_isCustomHierarchy = true;
	object.m_hierarchyDescription = description;
	return object;
};
oFF.QHierarchy.prototype.m_uniqueName = null;
oFF.QHierarchy.prototype.m_hierarchyDescription = null;
oFF.QHierarchy.prototype.m_version = null;
oFF.QHierarchy.prototype.m_versionDescription = null;
oFF.QHierarchy.prototype.m_dateTo = null;
oFF.QHierarchy.prototype.m_dateFrom = null;
oFF.QHierarchy.prototype.m_dueDate = null;
oFF.QHierarchy.prototype.m_owner = null;
oFF.QHierarchy.prototype.m_hierId = null;
oFF.QHierarchy.prototype.m_hierType = null;
oFF.QHierarchy.prototype.m_objectVersion = null;
oFF.QHierarchy.prototype.m_isRemote = false;
oFF.QHierarchy.prototype.m_isModeled = false;
oFF.QHierarchy.prototype.m_isCustomHierarchy = false;
oFF.QHierarchy.prototype.m_hierarchyType = null;
oFF.QHierarchy.prototype.copyHierarchy = function(origin)
{
	this.copyFrom(origin, null);
	this.m_uniqueName = origin.m_uniqueName;
	this.m_hierarchyDescription = origin.m_hierarchyDescription;
	this.m_version = origin.m_version;
	this.m_versionDescription = origin.m_versionDescription;
	this.m_dateTo = oFF.XObjectExt.cloneIfNotNull(origin.m_dateTo);
	this.m_dateFrom = oFF.XObjectExt.cloneIfNotNull(origin.m_dateFrom);
	this.m_dueDate = oFF.XObjectExt.cloneIfNotNull(origin.m_dueDate);
	this.m_hierarchyType = origin.m_hierarchyType;
	this.m_owner = origin.m_owner;
	this.m_hierId = origin.m_hierId;
	this.m_hierType = origin.m_hierType;
	this.m_objectVersion = origin.m_objectVersion;
	this.m_isRemote = origin.m_isRemote;
	this.m_isModeled = origin.m_isModeled;
	this.m_isCustomHierarchy = origin.m_isCustomHierarchy;
};
oFF.QHierarchy.prototype.releaseObject = function()
{
	this.m_dateTo = oFF.XObjectExt.release(this.m_dateTo);
	this.m_dateFrom = oFF.XObjectExt.release(this.m_dateFrom);
	this.m_dueDate = oFF.XObjectExt.release(this.m_dueDate);
	this.m_uniqueName = null;
	this.m_hierarchyDescription = null;
	this.m_version = null;
	this.m_versionDescription = null;
	this.m_owner = null;
	this.m_hierId = null;
	this.m_hierType = null;
	this.m_objectVersion = null;
	this.m_hierarchyType = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QHierarchy.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherHierarchy = other;
	if (!oFF.XString.isEqual(this.getHierarchyDescription(), otherHierarchy.getHierarchyDescription()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getHierarchyName(), otherHierarchy.getHierarchyName()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getHierarchyVersion(), otherHierarchy.getHierarchyVersion()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getVersionDescription(), otherHierarchy.getVersionDescription()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getOwner(), otherHierarchy.getOwner()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getHierId(), otherHierarchy.getHierId()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getHierType(), otherHierarchy.getHierType()))
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getObjectVersion(), otherHierarchy.getObjectVersion()))
	{
		return false;
	}
	if (this.isRemote() !== otherHierarchy.isRemote())
	{
		return false;
	}
	if (this.isModeled() !== otherHierarchy.isModeled())
	{
		return false;
	}
	if (!oFF.XObjectExt.areEqual(this.getDateFrom(), otherHierarchy.getDateFrom()))
	{
		return false;
	}
	if (!oFF.XObjectExt.areEqual(this.getHierarchyDueDate(), otherHierarchy.getHierarchyDueDate()))
	{
		return false;
	}
	if (!oFF.XObjectExt.areEqual(this.getDateTo(), otherHierarchy.getDateTo()))
	{
		return false;
	}
	if (this.isCustomHierarchy() !== otherHierarchy.isCustomHierarchy())
	{
		return false;
	}
	return true;
};
oFF.QHierarchy.prototype.getHierarchyName = function()
{
	return this.getName();
};
oFF.QHierarchy.prototype.getHierarchyDescription = function()
{
	return this.m_hierarchyDescription;
};
oFF.QHierarchy.prototype.setHierarchyDescription = function(hierarchyDescription)
{
	this.m_hierarchyDescription = hierarchyDescription;
};
oFF.QHierarchy.prototype.setVersionDescription = function(versionDescription)
{
	this.m_versionDescription = versionDescription;
};
oFF.QHierarchy.prototype.getVersionDescription = function()
{
	return this.m_versionDescription;
};
oFF.QHierarchy.prototype.getHierarchyVersion = function()
{
	return this.m_version;
};
oFF.QHierarchy.prototype.getVersion = function()
{
	return this.getHierarchyVersion();
};
oFF.QHierarchy.prototype.setHierarchyVersion = function(version)
{
	this.m_version = version;
};
oFF.QHierarchy.prototype.getDateTo = function()
{
	return this.m_dateTo;
};
oFF.QHierarchy.prototype.setDateTo = function(dateTo)
{
	this.m_dateTo = dateTo;
};
oFF.QHierarchy.prototype.getDimension = function()
{
	return this.getParentComponent();
};
oFF.QHierarchy.prototype.getDateFrom = function()
{
	return this.m_dateFrom;
};
oFF.QHierarchy.prototype.getOwner = function()
{
	return this.m_owner;
};
oFF.QHierarchy.prototype.getHierId = function()
{
	return this.m_hierId;
};
oFF.QHierarchy.prototype.getHierType = function()
{
	return this.m_hierType;
};
oFF.QHierarchy.prototype.setHierType = function(hierType)
{
	this.m_hierType = hierType;
};
oFF.QHierarchy.prototype.getObjectVersion = function()
{
	return this.m_objectVersion;
};
oFF.QHierarchy.prototype.setDateFrom = function(dateFrom)
{
	this.m_dateFrom = dateFrom;
};
oFF.QHierarchy.prototype.setOwner = function(owner)
{
	this.m_owner = owner;
};
oFF.QHierarchy.prototype.setHierId = function(hierId)
{
	this.m_hierId = hierId;
};
oFF.QHierarchy.prototype.setObjectVersion = function(objectVersion)
{
	this.m_objectVersion = objectVersion;
};
oFF.QHierarchy.prototype.isRemote = function()
{
	return this.m_isRemote;
};
oFF.QHierarchy.prototype.setIsRemote = function(isRemote)
{
	this.m_isRemote = isRemote;
};
oFF.QHierarchy.prototype.isModeled = function()
{
	return this.m_isModeled;
};
oFF.QHierarchy.prototype.setIsModeled = function(isModeled)
{
	if (this.m_isModeled !== isModeled)
	{
		this.m_isModeled = isModeled;
		this.notifyPropertyBooleanChanged(oFF.QHierarchyProperties.QY_IS_MODELED, !isModeled, isModeled);
	}
};
oFF.QHierarchy.prototype.isCustomHierarchy = function()
{
	return this.m_isCustomHierarchy;
};
oFF.QHierarchy.prototype.getHierarchyDueDate = function()
{
	return this.m_dueDate;
};
oFF.QHierarchy.prototype.getDueDate = function()
{
	return this.m_dueDate;
};
oFF.QHierarchy.prototype.setHierarchyDueDate = function(dueDate)
{
	this.m_dueDate = dueDate;
};
oFF.QHierarchy.prototype.getHierarchyUniqueName = function()
{
	return this.m_uniqueName;
};
oFF.QHierarchy.prototype.setHierarchyUniqueName = function(uniqueName)
{
	this.m_uniqueName = uniqueName;
};
oFF.QHierarchy.prototype.setHierarchyName = function(name)
{
	this.setName(name);
};
oFF.QHierarchy.prototype.getHierarchyType = function()
{
	return this.m_hierarchyType;
};
oFF.QHierarchy.prototype.setHierarchyType = function(hierarchyType)
{
	this.m_hierarchyType = hierarchyType;
};

oFF.QHierarchyManager = function() {};
oFF.QHierarchyManager.prototype = new oFF.QModelComponent();
oFF.QHierarchyManager.prototype._ff_c = "QHierarchyManager";

oFF.QHierarchyManager.create = function(context, parentNode)
{
	var object = new oFF.QHierarchyManager();
	object.setupHierarchy(context, parentNode);
	return object;
};
oFF.QHierarchyManager.isStringSimilar = function(first, second)
{
	if (oFF.XString.isEqual(first, second))
	{
		return true;
	}
	if (oFF.isNull(first) && oFF.XString.isEqual(second, ""))
	{
		return true;
	}
	return oFF.isNull(second) && oFF.XString.isEqual(first, "");
};
oFF.QHierarchyManager.prototype.m_displayHierarchyFixInFilter = false;
oFF.QHierarchyManager.prototype.m_supportsHierarchy = false;
oFF.QHierarchyManager.prototype.m_numberOfHierarchies = 0;
oFF.QHierarchyManager.prototype.m_defaultHierarchyName = null;
oFF.QHierarchyManager.prototype.m_hierarchySelectionName = null;
oFF.QHierarchyManager.prototype.m_hierarchySelectionVersion = null;
oFF.QHierarchyManager.prototype.m_hierarchySelectionDueDate = null;
oFF.QHierarchyManager.prototype.m_isHierarchyActive = false;
oFF.QHierarchyManager.prototype.m_lowerLevelNodeAlignment = null;
oFF.QHierarchyManager.prototype.m_memberOfPostedNodeVisibility = null;
oFF.QHierarchyManager.prototype.m_hierarchyNodeCondensation = false;
oFF.QHierarchyManager.prototype.m_hierarchyNameVariableName = null;
oFF.QHierarchyManager.prototype.m_useHierarchyNameVariable = false;
oFF.QHierarchyManager.prototype.m_hierarchyDueDateVariableName = null;
oFF.QHierarchyManager.prototype.m_useHierarchyDueDateVariable = false;
oFF.QHierarchyManager.prototype.m_hierarchyVersionVariableName = null;
oFF.QHierarchyManager.prototype.m_useHierarchyVersionVariable = false;
oFF.QHierarchyManager.prototype.m_useDefaultDrillLevelOnChange = false;
oFF.QHierarchyManager.prototype.m_assignedHierarchy = null;
oFF.QHierarchyManager.prototype.m_hierarchyNavigationDeltaMode = false;
oFF.QHierarchyManager.prototype.m_customHierarchyDefinition = null;
oFF.QHierarchyManager.prototype.m_customHierarchies = null;
oFF.QHierarchyManager.prototype.m_geoHierarchies = null;
oFF.QHierarchyManager.prototype.m_assignedHierarchyModCount = 0;
oFF.QHierarchyManager.prototype.m_hierarchySelectionModCount = 0;
oFF.QHierarchyManager.prototype.m_hierarchyHelp = null;
oFF.QHierarchyManager.prototype.m_hierarchies = null;
oFF.QHierarchyManager.prototype.m_hierarchyCatalogManager = null;
oFF.QHierarchyManager.prototype.m_hierarchyCatalogResultListeners = null;
oFF.QHierarchyManager.prototype.m_hierarchyCatalogFetched = false;
oFF.QHierarchyManager.prototype.m_includeCustomHierarchies = false;
oFF.QHierarchyManager.prototype.setupHierarchy = function(context, parentNode)
{
	oFF.QModelComponent.prototype.setupModelComponent.call( this , context, parentNode);
	this.m_supportsHierarchy = true;
	this.m_lowerLevelNodeAlignment = oFF.Alignment.DEFAULT_VALUE;
	this.m_memberOfPostedNodeVisibility = oFF.ResultVisibility.VISIBLE;
	this.m_hierarchies = null;
	this.m_geoHierarchies = oFF.XList.create();
	this.m_hierarchyCatalogResultListeners = oFF.XList.create();
	this.m_hierarchyCatalogFetched = false;
	this.m_includeCustomHierarchies = false;
};
oFF.QHierarchyManager.prototype.releaseObject = function()
{
	this.m_hierarchySelectionName = null;
	this.m_hierarchySelectionVersion = null;
	this.m_hierarchySelectionDueDate = null;
	this.m_lowerLevelNodeAlignment = null;
	this.m_memberOfPostedNodeVisibility = null;
	this.m_hierarchyNameVariableName = null;
	this.m_hierarchyDueDateVariableName = null;
	this.m_hierarchyVersionVariableName = null;
	this.m_hierarchies = oFF.XObjectExt.release(this.m_hierarchies);
	this.m_assignedHierarchy = oFF.XObjectExt.release(this.m_assignedHierarchy);
	this.m_hierarchyHelp = oFF.XObjectExt.release(this.m_hierarchyHelp);
	this.m_defaultHierarchyName = null;
	this.m_customHierarchyDefinition = oFF.XObjectExt.release(this.m_customHierarchyDefinition);
	this.m_customHierarchies = oFF.XObjectExt.release(this.m_customHierarchies);
	this.m_hierarchyCatalogManager = oFF.XObjectExt.release(this.m_hierarchyCatalogManager);
	this.m_hierarchyCatalogResultListeners = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_hierarchyCatalogResultListeners);
	this.m_hierarchyCatalogFetched = false;
	this.m_includeCustomHierarchies = false;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QHierarchyManager.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originHierarchy = other;
	this.m_supportsHierarchy = originHierarchy.supportsHierarchy();
	this.m_hierarchySelectionName = originHierarchy.getHierarchyName();
	this.m_hierarchySelectionVersion = originHierarchy.getHierarchyVersion();
	this.m_hierarchySelectionDueDate = oFF.XObjectExt.cloneIfNotNull(originHierarchy.getHierarchyDueDate());
	this.m_lowerLevelNodeAlignment = originHierarchy.getLowerLevelNodeAlignment();
	this.m_memberOfPostedNodeVisibility = originHierarchy.getMemberOfPostedNodeVisibility();
	this.m_hierarchyNodeCondensation = originHierarchy.hasNodeCondensation();
	this.m_hierarchyNameVariableName = originHierarchy.getHierarchyNameVariableName();
	this.m_useHierarchyNameVariable = originHierarchy.useHierarchyNameVariable();
	this.m_hierarchyDueDateVariableName = originHierarchy.getHierarchyDueDateVariableName();
	this.m_useHierarchyDueDateVariable = originHierarchy.useHierarchyDueDateVariable();
	this.m_hierarchyVersionVariableName = originHierarchy.getHierarchyVersionVariableName();
	this.m_useHierarchyVersionVariable = originHierarchy.useHierarchyVersionVariable();
	this.m_useDefaultDrillLevelOnChange = originHierarchy.useDefaultDrillLevelOnChange();
	this.m_isHierarchyActive = originHierarchy.isHierarchyActive();
	var otherHierarchy = originHierarchy.getHierarchy();
	if (oFF.notNull(otherHierarchy))
	{
		this.m_assignedHierarchy = oFF.QHierarchy.create(this.getContext(), this.getDimension(), otherHierarchy.getName());
		this.m_assignedHierarchy.copyHierarchy(otherHierarchy);
	}
	this.m_hierarchies = oFF.XObjectExt.cloneIfNotNull(originHierarchy.getHierarchies());
	this.m_defaultHierarchyName = originHierarchy.getDefaultHierarchyName();
	this.m_numberOfHierarchies = originHierarchy.getNumberOfHierarchies();
	var otherCustomHierarchyDefinition = originHierarchy.getCustomHierarchyDefinition();
	if (oFF.notNull(otherCustomHierarchyDefinition))
	{
		this.m_customHierarchyDefinition = oFF.QFactory.createCustomHierarchyDefinition(this.getDimensionAccessor().getDimensionByName(otherCustomHierarchyDefinition.getDimensionName()), otherCustomHierarchyDefinition.getDescription());
		this.m_customHierarchyDefinition.copyFrom(otherCustomHierarchyDefinition, flags);
	}
	this.m_displayHierarchyFixInFilter = originHierarchy.isDisplayHierarchyFixInFilter();
	var iterator = originHierarchy.getGeoShapeHierarchies().getIterator();
	while (iterator.hasNext())
	{
		var element = iterator.next();
		var cloneObj = element.cloneOlapComponent(null, null);
		this.getGeoShapeHierarchiesBase().add(cloneObj);
	}
	oFF.XObjectExt.release(iterator);
	this.m_hierarchyNavigationDeltaMode = originHierarchy.isHierarchyNavigationDeltaMode();
	this.m_includeCustomHierarchies = originHierarchy.customHierarchiesIncluded();
};
oFF.QHierarchyManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.HIERARCHY_MANAGER;
};
oFF.QHierarchyManager.prototype.setCustomHierarchyDefinition = function(customHierarchyDefinition)
{
	if (this.getModelCapabilities().supportsCustomHierarchy())
	{
		if (oFF.isNull(customHierarchyDefinition))
		{
			if (this.getCustomHierarchyDefinition() !== null)
			{
				this.setHierarchy(null);
				this.m_customHierarchyDefinition = null;
				this.m_hierarchySelectionName = null;
				this.m_isHierarchyActive = false;
			}
		}
		else if (customHierarchyDefinition.getName() === null)
		{
			this.setHierarchy(null);
			this.m_customHierarchyDefinition = customHierarchyDefinition;
			this.m_hierarchySelectionName = null;
			this.m_isHierarchyActive = true;
		}
		else if (!oFF.XString.isEqual(customHierarchyDefinition.getName(), this.m_hierarchySelectionName))
		{
			this.setHierarchy(null);
			this.m_hierarchySelectionName = customHierarchyDefinition.getName();
			this.m_isHierarchyActive = true;
			this.getOlapEnv().getCustomHierarchyRepository().addCustomHierarchy(customHierarchyDefinition);
		}
	}
};
oFF.QHierarchyManager.prototype.getCustomHierarchyDefinition = function()
{
	if (oFF.notNull(this.m_customHierarchyDefinition))
	{
		if (this.m_customHierarchyDefinition.getName() === null)
		{
			return this.m_customHierarchyDefinition;
		}
		this.m_hierarchySelectionName = this.m_customHierarchyDefinition.getName();
		this.m_customHierarchyDefinition = null;
	}
	return this.getOlapEnv().getCustomHierarchyRepository().getCustomHierarchyDefinitionByName(this.m_hierarchySelectionName);
};
oFF.QHierarchyManager.prototype.addCustomHierarchy = function(customHierarchy)
{
	if (oFF.isNull(this.m_customHierarchies))
	{
		this.m_customHierarchies = oFF.XList.create();
	}
	for (var i = this.m_customHierarchies.size() - 1; i >= 0; i--)
	{
		if (oFF.XString.isEqual(this.m_customHierarchies.get(i).getName(), customHierarchy.getName()))
		{
			this.m_customHierarchies.removeAt(i);
		}
	}
	this.m_customHierarchies.add(customHierarchy);
};
oFF.QHierarchyManager.prototype.getCustomHierarchies = function()
{
	return this.m_customHierarchies;
};
oFF.QHierarchyManager.prototype.getHierarchyObjects = function()
{
	var hierarchies = this.getHierarchies();
	if (oFF.isNull(hierarchies))
	{
		return oFF.XList.create();
	}
	var hierarchyObjects = hierarchies.getObjects();
	if (oFF.isNull(hierarchyObjects))
	{
		return oFF.XList.create();
	}
	return hierarchyObjects;
};
oFF.QHierarchyManager.prototype.getVirtualRootNodeName = function()
{
	var hierarchyObjects = this.getHierarchyObjects();
	var size = hierarchyObjects.size();
	for (var i = 0; i < size; i++)
	{
		var hierarchyCatalogItem = hierarchyObjects.get(i);
		if (oFF.XString.isEqual(hierarchyCatalogItem.getHierarchyName(), this.getHierarchyName()))
		{
			return hierarchyCatalogItem.getVirtualRootNode();
		}
	}
	return null;
};
oFF.QHierarchyManager.prototype.getRestNodeName = function()
{
	var hierarchyObjects = this.getHierarchyObjects();
	var size = hierarchyObjects.size();
	for (var i = 0; i < size; i++)
	{
		var hierarchyCatalogItem = hierarchyObjects.get(i);
		if (oFF.XString.isEqual(hierarchyCatalogItem.getHierarchyName(), this.getHierarchyName()))
		{
			return hierarchyCatalogItem.getRestNode();
		}
	}
	return null;
};
oFF.QHierarchyManager.prototype.getHierarchyValueHelp = function(syncType)
{
	if (oFF.isNull(this.m_hierarchyHelp))
	{
		this.m_hierarchyHelp = oFF.QHierarchyValueHelp.createModelComponent(this.getContext(), this.getDimension(), "Available Hierarchies", syncType);
	}
	return this.m_hierarchyHelp;
};
oFF.QHierarchyManager.prototype.isHierarchyAssigned = function()
{
	if (this.supportsHierarchy())
	{
		return this.getHierarchy() !== null;
	}
	return false;
};
oFF.QHierarchyManager.prototype.setHierarchy = function(hierarchy)
{
	this.assertSupportsHierarchyChange();
	if (!this.isHierarchyAssigned() || !this.getHierarchy().isEqualTo(hierarchy))
	{
		this.m_isHierarchyActive = oFF.notNull(hierarchy);
		if (oFF.isNull(hierarchy))
		{
			this.setHierarchySelection(null, null);
			this.setHierarchyDueDate(null);
			this.m_customHierarchyDefinition = null;
		}
		else
		{
			this.m_hierarchySelectionName = hierarchy.getName();
			this.m_hierarchySelectionVersion = hierarchy.getHierarchyVersion();
			var dueDate = hierarchy.getHierarchyDueDate();
			if (oFF.isNull(dueDate))
			{
				dueDate = hierarchy.getDateFrom();
			}
			this.m_hierarchySelectionDueDate = dueDate;
			if (oFF.notNull(this.m_customHierarchyDefinition) && !oFF.XString.isEqual(this.m_customHierarchyDefinition.getName(), hierarchy.getName()))
			{
				this.m_customHierarchyDefinition = null;
			}
		}
		this.m_hierarchySelectionModCount++;
		this.m_assignedHierarchyModCount = this.m_hierarchySelectionModCount;
		this.m_assignedHierarchy = hierarchy;
		this.notifyNodeChanged();
	}
};
oFF.QHierarchyManager.prototype.getHierarchy = function()
{
	return this.supportsHierarchy() ? this.m_assignedHierarchy : null;
};
oFF.QHierarchyManager.prototype.supportsHierarchy = function()
{
	return this.m_supportsHierarchy;
};
oFF.QHierarchyManager.prototype.setSupportsHierarchy = function(supportsHierarchy)
{
	this.m_supportsHierarchy = supportsHierarchy;
};
oFF.QHierarchyManager.prototype.setHierarchyVersion = function(version)
{
	this.assertSupportsHierarchyChange();
	if (!oFF.XString.isEqual(version, this.getHierarchyVersion()))
	{
		this.m_hierarchySelectionVersion = version;
		this.m_hierarchySelectionModCount++;
	}
	this.reevaluateHierarchySelection();
};
oFF.QHierarchyManager.prototype.getHierarchyVersion = function()
{
	return this.supportsHierarchy() ? this.m_hierarchySelectionVersion : null;
};
oFF.QHierarchyManager.prototype.setHierarchyDueDate = function(dueDate)
{
	this.assertSupportsHierarchyChange();
	if (dueDate !== this.getHierarchyDueDate())
	{
		this.m_hierarchySelectionDueDate = dueDate;
		this.m_hierarchySelectionModCount++;
	}
	this.reevaluateHierarchySelection();
};
oFF.QHierarchyManager.prototype.getHierarchyDueDate = function()
{
	return this.supportsHierarchy() ? this.m_hierarchySelectionDueDate : null;
};
oFF.QHierarchyManager.prototype.getLowerLevelNodeAlignment = function()
{
	return this.m_lowerLevelNodeAlignment;
};
oFF.QHierarchyManager.prototype.hasDefaultLowerLevelNodeAlignment = function()
{
	return this.m_lowerLevelNodeAlignment === oFF.Alignment.DEFAULT_VALUE;
};
oFF.QHierarchyManager.prototype.setLowerLevelNodeAlignment = function(alignment)
{
	this.m_lowerLevelNodeAlignment = alignment;
	this.notifyNodeChanged();
};
oFF.QHierarchyManager.prototype.getMemberOfPostedNodeVisibility = function()
{
	return this.m_memberOfPostedNodeVisibility;
};
oFF.QHierarchyManager.prototype.setMemberOfPostedNodeVisibility = function(visibility)
{
	this.m_memberOfPostedNodeVisibility = visibility;
	this.notifyNodeChanged();
};
oFF.QHierarchyManager.prototype.hasNodeCondensation = function()
{
	return this.m_hierarchyNodeCondensation;
};
oFF.QHierarchyManager.prototype.setHasNodeCondensation = function(condense)
{
	if (this.m_hierarchyNodeCondensation !== condense)
	{
		this.m_hierarchyNodeCondensation = condense;
		this.notifyPropertyBooleanChanged(oFF.QHierarchyProperties.QY_NODE_CONDENSATION, !condense, condense);
	}
};
oFF.QHierarchyManager.prototype.getHierarchyNameVariableName = function()
{
	return this.m_hierarchyNameVariableName;
};
oFF.QHierarchyManager.prototype.setHierarchyNameVariableName = function(name)
{
	if (this.getQueryManagerBase().getModelCapabilities().supportsAutoVariableSubmit() && oFF.XStringUtils.isNullOrEmpty(this.m_hierarchyNameVariableName) && this.getQueryManager().getVariableProcessorState() === oFF.VariableProcessorState.CHANGEABLE_STARTUP)
	{
		this.m_hierarchyNameVariableName = name;
	}
};
oFF.QHierarchyManager.prototype.useHierarchyNameVariable = function()
{
	return this.m_useHierarchyNameVariable;
};
oFF.QHierarchyManager.prototype.setUseHierarchyNameVariable = function(useVariable)
{
	this.m_useHierarchyNameVariable = useVariable;
	this.notifyNodeChanged();
};
oFF.QHierarchyManager.prototype.getHierarchyDueDateVariableName = function()
{
	return this.m_hierarchyDueDateVariableName;
};
oFF.QHierarchyManager.prototype.setHierarchyDueDateVariableName = function(name)
{
	var queryManager = this.getQueryManagerBase();
	if (!queryManager.getModelCapabilities().supportsAutoVariableSubmit())
	{
		this.m_hierarchyDueDateVariableName = name;
	}
	else
	{
		if (oFF.XStringUtils.isNullOrEmpty(this.m_hierarchyDueDateVariableName) && queryManager.getVariableProcessorState() === oFF.VariableProcessorState.CHANGEABLE_STARTUP)
		{
			this.m_hierarchyDueDateVariableName = name;
		}
	}
};
oFF.QHierarchyManager.prototype.useHierarchyDueDateVariable = function()
{
	return this.m_useHierarchyDueDateVariable;
};
oFF.QHierarchyManager.prototype.setUseHierarchyDueDateVariable = function(useVariable)
{
	this.m_useHierarchyDueDateVariable = useVariable;
	this.notifyNodeChanged();
};
oFF.QHierarchyManager.prototype.getHierarchyVersionVariableName = function()
{
	return this.m_hierarchyVersionVariableName;
};
oFF.QHierarchyManager.prototype.setHierarchyVersionVariableName = function(name)
{
	if (this.getQueryManagerBase().getModelCapabilities().supportsAutoVariableSubmit() && oFF.XStringUtils.isNullOrEmpty(this.m_hierarchyVersionVariableName) && this.getQueryManager().getVariableProcessorState() === oFF.VariableProcessorState.CHANGEABLE_STARTUP)
	{
		this.m_hierarchyVersionVariableName = name;
	}
};
oFF.QHierarchyManager.prototype.useHierarchyVersionVariable = function()
{
	return this.m_useHierarchyVersionVariable;
};
oFF.QHierarchyManager.prototype.setUseHierarchyVersionVariable = function(useVariable)
{
	this.m_useHierarchyVersionVariable = useVariable;
	this.notifyNodeChanged();
};
oFF.QHierarchyManager.prototype.getHierarchyName = function()
{
	return this.supportsHierarchy() ? this.m_hierarchySelectionName : null;
};
oFF.QHierarchyManager.prototype.setHierarchyName = function(name)
{
	this.assertSupportsHierarchyChange();
	if (!oFF.XString.isEqual(name, this.getHierarchyName()))
	{
		var dimension = this.getDimension();
		var queryModel = this.getQueryModel();
		if (oFF.notNull(queryModel))
		{
			var cmds = queryModel.getConvenienceCommands();
			cmds.clearFiltersByDimension(dimension);
			cmds.clearVisibilityFiltersByDimension(dimension);
		}
		dimension.clearSelectorFilterByDimension(dimension);
		var selectorHierarchyNode = dimension.getSelectorHierarchyNode();
		if (oFF.notNull(selectorHierarchyNode) && selectorHierarchyNode.getDimension() === dimension)
		{
			dimension.clearSelectorHierarchyNode();
		}
		var currentHierarchy = this.getHierarchy();
		if (oFF.notNull(currentHierarchy) && currentHierarchy.isCustomHierarchy() && !oFF.XString.isEqual(currentHierarchy.getName(), name))
		{
			this.m_assignedHierarchy = null;
		}
		if (oFF.notNull(this.m_customHierarchyDefinition) && !oFF.XString.isEqual(this.m_customHierarchyDefinition.getName(), name))
		{
			this.m_customHierarchyDefinition = null;
		}
		this.m_hierarchySelectionName = name;
		this.m_hierarchySelectionModCount++;
	}
	this.reevaluateHierarchySelection();
};
oFF.QHierarchyManager.prototype.getDimension = function()
{
	return this.getParent();
};
oFF.QHierarchyManager.prototype.useDefaultDrillLevelOnChange = function()
{
	return this.m_useDefaultDrillLevelOnChange;
};
oFF.QHierarchyManager.prototype.setUseDefaultDrillLevelOnChange = function(useDefaultDrillLevelOnChange)
{
	if (this.getQueryManagerBase().isAutoVariableSubmitActive() && this.m_useDefaultDrillLevelOnChange !== useDefaultDrillLevelOnChange)
	{
		this.m_useDefaultDrillLevelOnChange = useDefaultDrillLevelOnChange;
		this.notifyNodeChanged();
	}
};
oFF.QHierarchyManager.prototype.setInitialDrillLevel = function(relativeLevelCount)
{
	if (this.getDrillManager() === null)
	{
		return;
	}
	var rootOperation = this.getRootDrillOperation();
	if (oFF.isNull(rootOperation) || rootOperation.getRelativeLevelCount() !== relativeLevelCount)
	{
		this.getDrillManager().setRootExpandingLevels(this.getDimension(), relativeLevelCount);
	}
};
oFF.QHierarchyManager.prototype.setInitialDrillOffset = function(relativeLevelOffset)
{
	if (this.getDrillManager() === null)
	{
		return;
	}
	var rootOperation = this.getRootDrillOperation();
	if (oFF.isNull(rootOperation) || rootOperation.getRelativeLevelOffset() !== relativeLevelOffset)
	{
		this.getDrillManager().setRootOffsetLevels(this.getDimension(), relativeLevelOffset);
	}
};
oFF.QHierarchyManager.prototype.getInitialDrillOffset = function()
{
	if (this.getDrillManager() === null)
	{
		return 0;
	}
	var rootOperation = this.getRootDrillOperation();
	return oFF.isNull(rootOperation) ? 0 : rootOperation.getRelativeLevelOffset();
};
oFF.QHierarchyManager.prototype.setExplicitDrillOnFilteredNodes = function(drillOnFilteredNodes)
{
	if (this.getDrillManager() === null)
	{
		return;
	}
	this.getDrillManager().setExplicitDrillOnFilteredNodes(this.getDimension(), drillOnFilteredNodes);
};
oFF.QHierarchyManager.prototype.isExplicitDrillOnFilteredNodes = function()
{
	if (this.getDrillManager() === null)
	{
		return false;
	}
	return this.getDrillManager().isExplicitDrillOnFilteredNodes(this.getDimension());
};
oFF.QHierarchyManager.prototype.hasStickyMember = function(memberName)
{
	if (this.getDrillManager() === null)
	{
		return false;
	}
	return this.getDrillManager().hasStickyMemberByDimension(this.getDimension(), memberName);
};
oFF.QHierarchyManager.prototype.hasStickyMembers = function()
{
	if (this.getDrillManager() === null)
	{
		return false;
	}
	return this.getDrillManager().hasStickyMembersByDimension(this.getDimension());
};
oFF.QHierarchyManager.prototype.clearStickyMembers = function()
{
	if (this.getDrillManager() === null)
	{
		return;
	}
	this.getDrillManager().clearStickyMembersForDimension(this.getDimension());
};
oFF.QHierarchyManager.prototype.removeStickyMember = function(memberName)
{
	if (this.getDrillManager() === null)
	{
		return;
	}
	this.getDrillManager().removeStickyMemberForDimension(this.getDimension(), memberName);
};
oFF.QHierarchyManager.prototype.addStickyMember = function(memberName)
{
	if (this.getDrillManager() === null)
	{
		return;
	}
	this.getDrillManager().addStickyMemberForDimension(this.getDimension(), memberName);
};
oFF.QHierarchyManager.prototype.getStickyMembers = function()
{
	if (this.getDrillManager() === null)
	{
		return null;
	}
	return this.getDrillManager().getStickyMembersByDimension(this.getDimension());
};
oFF.QHierarchyManager.prototype.hasZoomDrill = function()
{
	if (this.getDrillManager() === null)
	{
		return false;
	}
	return this.getDrillManager().hasZoomDrill(this.getDimension());
};
oFF.QHierarchyManager.prototype.getInitialDrillLevel = function()
{
	if (this.getDrillManager() === null)
	{
		return 0;
	}
	var rootOperation = this.getRootDrillOperation();
	return oFF.isNull(rootOperation) ? 0 : rootOperation.getRelativeLevelCount();
};
oFF.QHierarchyManager.prototype.getRootDrillOperation = function()
{
	var drillManager = this.getDrillManager();
	var dimension = this.getDimension();
	return drillManager.getRootExpandingLevels(dimension);
};
oFF.QHierarchyManager.prototype.isHierarchyActive = function()
{
	return this.supportsHierarchy() && this.m_isHierarchyActive;
};
oFF.QHierarchyManager.prototype.setHierarchyActive = function(active)
{
	this.assertSupportsHierarchyChange();
	var isChanged = false;
	if (active)
	{
		if (!this.isHierarchyAssigned() && this.getCustomHierarchyDefinition() !== null)
		{
			this.m_isHierarchyActive = true;
			this.m_hierarchySelectionModCount++;
			this.notifyPropertyBooleanChanged(oFF.QHierarchyProperties.QY_HIERARCHY_ACTIVE, false, true);
		}
		else if (this.isHierarchyAssigned() || this.m_hierarchySelectionModCount !== this.m_assignedHierarchyModCount)
		{
			if (this.getHierarchyName() === null)
			{
				throw oFF.XException.createIllegalArgumentException("No hierarchy name is given");
			}
			var currentHierarchy = this.getHierarchy();
			var hierarchy;
			if (oFF.notNull(currentHierarchy) && currentHierarchy.isCustomHierarchy())
			{
				hierarchy = oFF.QHierarchy.createCustomHierarchy(this.getContext(), this.getDimension(), this.getHierarchyName(), currentHierarchy.getHierarchyDescription());
			}
			else
			{
				hierarchy = oFF.QHierarchy.create(this.getContext(), this.getDimension(), this.getHierarchyName());
			}
			hierarchy.setHierarchyVersion(this.getHierarchyVersion());
			hierarchy.setHierarchyDueDate(this.getHierarchyDueDate());
			if (!hierarchy.isEqualTo(currentHierarchy))
			{
				var oldHierarchyUniqueName = this.getHierarchyUniqueName(this.getHierarchyName());
				this.getQueryModel().assertHierarchyUniqueName(oldHierarchyUniqueName, false);
				this.setHierarchy(hierarchy);
				isChanged = true;
			}
			if (!this.isHierarchyActive())
			{
				isChanged = true;
				this.m_hierarchySelectionModCount++;
			}
		}
	}
	else
	{
		if (this.isHierarchyActive())
		{
			isChanged = true;
			this.m_hierarchySelectionModCount++;
		}
	}
	if (isChanged)
	{
		var newHierarchyUniqueName = this.getHierarchyUniqueName(this.getHierarchyName());
		this.getQueryModel().assertHierarchyUniqueName(newHierarchyUniqueName, active);
		this.m_isHierarchyActive = active;
		this.notifyPropertyBooleanChanged(oFF.QHierarchyProperties.QY_HIERARCHY_ACTIVE, !active, active);
	}
	return isChanged;
};
oFF.QHierarchyManager.prototype.reevaluateHierarchySelection = function()
{
	this.assertSupportsHierarchyChange();
	if (this.m_hierarchySelectionModCount !== this.m_assignedHierarchyModCount)
	{
		if (!this.setHierarchyActive(this.isHierarchyActive()))
		{
			this.notifyNodeChanged();
		}
	}
};
oFF.QHierarchyManager.prototype.assertSupportsHierarchyChange = function()
{
	if (!this.supportsHierarchy())
	{
		throw oFF.XException.createIllegalStateException(oFF.XStringUtils.concatenate2("Hierarchies are not supported on the dimension ", this.getName()));
	}
	if (this.isDisplayHierarchyFixInFilter())
	{
		throw oFF.XException.createIllegalStateException(oFF.XStringUtils.concatenate2("Hierarchy selections are supported only by setting a dimension name variable on the dimension ", this.getName()));
	}
};
oFF.QHierarchyManager.prototype.getHierarchyUniqueName = function(hierarchyName)
{
	return oFF.XStringUtils.concatenate5("[", this.getDimension().getName(), "].[", hierarchyName, "]");
};
oFF.QHierarchyManager.prototype.setHierarchySelection = function(name, version)
{
	this.assertSupportsHierarchyChange();
	this.setHierarchyName(name);
	this.setHierarchyVersion(version);
	this.reevaluateHierarchySelection();
};
oFF.QHierarchyManager.prototype.getHierarchies = function()
{
	return this.m_hierarchies;
};
oFF.QHierarchyManager.prototype.setHierarchies = function(hierarchies)
{
	this.m_hierarchies = hierarchies;
};
oFF.QHierarchyManager.prototype.activateHierarchy = function(name, version, dueDate)
{
	this.assertSupportsHierarchyChange();
	this.setHierarchySelection(name, version);
	this.setHierarchyDueDate(dueDate);
	this.setHierarchyActive(true);
};
oFF.QHierarchyManager.prototype.isHierarchyAssignedAndActive = function()
{
	if (this.supportsHierarchy())
	{
		return this.isHierarchyAssigned() && this.isHierarchyActive();
	}
	return false;
};
oFF.QHierarchyManager.prototype.mergeDeepRecursive = function(settings, other)
{
	var fixedInFilter = this.isDisplayHierarchyFixInFilter();
	this.setDisplayHierarchyFixInFilter(false);
	var otherObj = other;
	if (this.supportsHierarchy())
	{
		if (!otherObj.isHierarchyActive())
		{
			this.setHierarchyActive(false);
		}
		else
		{
			var hierarchyName = otherObj.getHierarchyName();
			var otherDueDate = otherObj.getHierarchyDueDate();
			var hierarchyVersion = otherObj.getHierarchyVersion();
			var useHierarchyNameVariable = otherObj.useHierarchyNameVariable();
			var useHierarchyDueDateVariable = otherObj.useHierarchyDueDateVariable();
			var useHierarchyVersionVariable = otherObj.useHierarchyVersionVariable();
			var delta = !this.isHierarchyActive();
			if (!delta)
			{
				delta = !oFF.QHierarchyManager.isStringSimilar(hierarchyName, this.getHierarchyName());
				if (!delta)
				{
					delta = !oFF.QHierarchyManager.isStringSimilar(hierarchyVersion, this.getHierarchyVersion());
					if (!delta)
					{
						var myDueDate = this.getHierarchyDueDate();
						if (oFF.isNull(myDueDate) && oFF.isNull(otherDueDate))
						{
							delta = false;
						}
						else if (oFF.notNull(myDueDate) && oFF.notNull(otherDueDate))
						{
							delta = !oFF.XString.isEqual(otherDueDate.toIsoFormat(), myDueDate.toIsoFormat());
						}
						else
						{
							delta = true;
						}
					}
				}
			}
			if (settings.isInitialBWMerge() || delta)
			{
				this.activateHierarchy(hierarchyName, hierarchyVersion, otherDueDate);
				this.setUseHierarchyDueDateVariable(useHierarchyDueDateVariable);
				if (useHierarchyDueDateVariable)
				{
					this.setHierarchyDueDateVariableName(otherObj.getHierarchyDueDateVariableName());
				}
				var queryManager = this.getQueryManagerBase();
				if (oFF.notNull(queryManager) && queryManager.isAutoVariableSubmitActive())
				{
					this.setUseHierarchyNameVariable(useHierarchyNameVariable);
					if (useHierarchyNameVariable)
					{
						this.setHierarchyNameVariableName(otherObj.getHierarchyNameVariableName());
					}
					this.setUseHierarchyVersionVariable(useHierarchyVersionVariable);
					if (useHierarchyVersionVariable)
					{
						this.setHierarchyVersionVariableName(otherObj.getHierarchyVersionVariableName());
					}
				}
				this.setInitialDrillLevel(otherObj.getInitialDrillLevel());
				this.setLowerLevelNodeAlignment(otherObj.getLowerLevelNodeAlignment());
				this.setHasNodeCondensation(otherObj.hasNodeCondensation());
			}
		}
	}
	this.setDisplayHierarchyFixInFilter(fixedInFilter);
};
oFF.QHierarchyManager.prototype.getDefaultHierarchyName = function()
{
	return this.m_defaultHierarchyName;
};
oFF.QHierarchyManager.prototype.setDefaultHierarchyName = function(defaultHierarchyName)
{
	this.m_defaultHierarchyName = defaultHierarchyName;
};
oFF.QHierarchyManager.prototype.setNumberOfHierarchies = function(numberOfHierarchies)
{
	this.m_numberOfHierarchies = numberOfHierarchies;
};
oFF.QHierarchyManager.prototype.setDisplayHierarchyFixInFilter = function(displayHierarchyFixInFilter)
{
	if (this.getModelCapabilities() !== null && this.getModelCapabilities().supportsDisplayHierarchyFixInFilter())
	{
		this.m_displayHierarchyFixInFilter = displayHierarchyFixInFilter;
	}
};
oFF.QHierarchyManager.prototype.getNumberOfHierarchies = function()
{
	return this.m_numberOfHierarchies;
};
oFF.QHierarchyManager.prototype.isDisplayHierarchyFixInFilter = function()
{
	return this.m_displayHierarchyFixInFilter;
};
oFF.QHierarchyManager.prototype.getLeveledHierarchies = function()
{
	return this.getQueryManager().getMetadataModel().getLeveledHierarchiesByDimension(this.getDimension());
};
oFF.QHierarchyManager.prototype.getLeveledHierarchy = function(name)
{
	var leveledHierarchies = this.getLeveledHierarchies();
	if (oFF.notNull(leveledHierarchies))
	{
		var size = leveledHierarchies.size();
		for (var i = 0; i < size; i++)
		{
			var leveledHierarchy = leveledHierarchies.get(i);
			if (oFF.XString.isEqual(leveledHierarchy.getName(), name))
			{
				return leveledHierarchy;
			}
		}
	}
	return null;
};
oFF.QHierarchyManager.prototype.getGeoShapeHierarchiesBase = function()
{
	return this.m_geoHierarchies;
};
oFF.QHierarchyManager.prototype.getGeoShapeHierarchies = function()
{
	if (oFF.isNull(this.m_geoHierarchies))
	{
		return null;
	}
	var geoHierarchies = oFF.XList.create();
	oFF.XCollectionUtils.addAll(geoHierarchies, this.m_geoHierarchies);
	return geoHierarchies;
};
oFF.QHierarchyManager.prototype.setHierarchyNavigationDeltaMode = function(isDeltaMode)
{
	var capabilities = this.getModelCapabilities();
	if (isDeltaMode && !capabilities.supportsHierarchyNavigationDeltaMode())
	{
		oFF.noSupport();
	}
	this.m_hierarchyNavigationDeltaMode = isDeltaMode;
};
oFF.QHierarchyManager.prototype.isHierarchyNavigationDeltaMode = function()
{
	return this.m_hierarchyNavigationDeltaMode;
};
oFF.QHierarchyManager.prototype.getHierarchyCatalog = function(syncType, customIdentifier)
{
	if (oFF.isNull(this.m_hierarchyCatalogManager))
	{
		var serviceConfig = oFF.OlapApiModule.SERVICE_TYPE_HIERARCHY_CATALOG.createServiceConfig(this.getApplication());
		var systemName = this.getQueryManager().getSystemName();
		serviceConfig.setSystemName(systemName);
		serviceConfig.setDataSourceName(this.getQueryManager().getDataSource().getFullQualifiedName());
		serviceConfig.setDimension(this.getDimension());
		var processHierarchyCatalogManagerCreation;
		if (syncType === oFF.SyncType.BLOCKING)
		{
			processHierarchyCatalogManagerCreation = serviceConfig.processHierarchyCatalogManagerCreation(syncType, null, customIdentifier);
			if (!processHierarchyCatalogManagerCreation.hasErrors() && !processHierarchyCatalogManagerCreation.containsCode(oFF.Severity.WARNING, oFF.ErrorCodes.INVALID_DIMENSION))
			{
				this.m_hierarchyCatalogManager = processHierarchyCatalogManagerCreation.getData();
			}
			else
			{
				this.processHierarchyCatalogManagerError(processHierarchyCatalogManagerCreation);
				return oFF.ExtResult.createWithErrorMessage("failed to create hierarchy catalog manager");
			}
		}
		else
		{
			processHierarchyCatalogManagerCreation = serviceConfig.processHierarchyCatalogManagerCreation(syncType, this, customIdentifier);
			return oFF.ExtResult.create(null, oFF.MessageManager.createMessageManagerExt(this.getSession()));
		}
	}
	this.setHierarchiesKeyDate(this.m_hierarchyCatalogManager);
	this.m_hierarchyCatalogManager.setIncludeCustomHierarchies(this.customHierarchiesIncluded());
	return this.m_hierarchyCatalogManager.processGetResult(syncType, this, customIdentifier);
};
oFF.QHierarchyManager.prototype.setHierarchiesKeyDate = function(hierarchyCatalogManager)
{
	var hierarchy = this.getDimension().getHierarchy();
	var newKeyDate = null;
	if (oFF.notNull(hierarchy))
	{
		newKeyDate = hierarchy.getHierarchyDueDate();
	}
	if (oFF.isNull(newKeyDate) && this.getQueryModel().getCubeInfo() !== null)
	{
		newKeyDate = this.getQueryModel().getCubeInfo().getDueDate();
	}
	var bValidNewKeyDate = oFF.notNull(newKeyDate) && newKeyDate.getDayOfMonth() > 0 && newKeyDate.getMonthOfYear() > 0 && newKeyDate.getMonthOfYear() > 0;
	if (oFF.notNull(newKeyDate))
	{
		if (oFF.notNull(hierarchyCatalogManager))
		{
			var oldKeyDate = hierarchyCatalogManager.getFilterHierarchyDate();
			if (bValidNewKeyDate && !newKeyDate.isEqualTo(oldKeyDate))
			{
				hierarchyCatalogManager.setFilterHierarchyDate(newKeyDate, true);
			}
		}
	}
};
oFF.QHierarchyManager.prototype.fetchHierarchyCatalog = function(syncType, listener, customIdentifier)
{
	if (syncType !== oFF.SyncType.BLOCKING && syncType !== oFF.SyncType.NON_BLOCKING)
	{
		throw oFF.XException.createIllegalArgumentException("This API only supports SyncType.BLOCKING and SyncType.NON_BLOCKING.");
	}
	var application = this.getApplication();
	if (!this.getDimension().isStructure() && !this.m_hierarchyCatalogFetched && this.supportsHierarchy() && (this.getQueryManager().getSystemType() === oFF.SystemType.BW || !this.getModelCapabilities().supportsHierarchyLevelMetadata()) && oFF.HierarchyCatalogUtil.supportsHierarchyCatalog2(application, this.getQueryManager().getSystemDescription()))
	{
		var isRequestPending = syncType === oFF.SyncType.NON_BLOCKING && this.m_hierarchyCatalogResultListeners.size() > 0;
		if (oFF.notNull(listener))
		{
			this.m_hierarchyCatalogResultListeners.add(oFF.XPair.create(listener, customIdentifier));
		}
		if (isRequestPending)
		{
			var extError = oFF.ExtResult.create(null, oFF.MessageManager.createMessageManagerExt(this.getSession()));
			this.processHierarchyResultListeners(extError, null);
			return extError;
		}
		return this.getHierarchyCatalog(syncType, customIdentifier);
	}
	else
	{
		var extResult = oFF.ExtResult.create(this.m_hierarchies, oFF.MessageManager.createMessageManagerExt(this.getSession()));
		if (oFF.notNull(listener))
		{
			listener.onHierarchyCatalogResult(extResult, this.m_hierarchies, customIdentifier);
		}
		return extResult;
	}
};
oFF.QHierarchyManager.prototype.onHierarchyCatalogManagerCreated = function(extResult, hierarchyCatalogManager, customIdentifier)
{
	if (!extResult.hasErrors())
	{
		this.m_hierarchyCatalogManager = hierarchyCatalogManager;
		this.setHierarchiesKeyDate(hierarchyCatalogManager);
		this.m_hierarchyCatalogManager.setIncludeCustomHierarchies(this.customHierarchiesIncluded());
		hierarchyCatalogManager.processGetResult(oFF.SyncType.NON_BLOCKING, this, customIdentifier);
	}
	else
	{
		this.processHierarchyCatalogManagerError(extResult);
	}
};
oFF.QHierarchyManager.prototype.processHierarchyCatalogManagerError = function(extResult)
{
	for (var i = this.m_hierarchyCatalogResultListeners.size() - 1; i >= 0; i--)
	{
		var listenerPair = this.m_hierarchyCatalogResultListeners.removeAt(i);
		var listener = listenerPair.getFirstObject();
		listener.onHierarchyCatalogResult(oFF.ExtResult.createWithErrorMessage("failed to create hierarchy catalog manager"), null, listenerPair.getSecondObject());
	}
};
oFF.QHierarchyManager.prototype.onHierarchyCatalogResult = function(extResult, result, customIdentifier)
{
	this.m_hierarchyCatalogFetched = true;
	if (!extResult.hasErrors())
	{
		this.m_hierarchies = result;
		this.notifyNodeChanged();
	}
	this.processHierarchyResultListeners(extResult, result);
};
oFF.QHierarchyManager.prototype.processHierarchyResultListeners = function(extResult, result)
{
	for (var i = this.m_hierarchyCatalogResultListeners.size() - 1; i >= 0; i--)
	{
		var listenerPair = this.m_hierarchyCatalogResultListeners.removeAt(i);
		var listener = listenerPair.getFirstObject();
		listener.onHierarchyCatalogResult(extResult, result, listenerPair.getSecondObject());
	}
};
oFF.QHierarchyManager.prototype.setIncludeCustomHierarchies = function(includeCustomHierarchies)
{
	this.m_includeCustomHierarchies = includeCustomHierarchies;
};
oFF.QHierarchyManager.prototype.customHierarchiesIncluded = function()
{
	return this.m_includeCustomHierarchies;
};

oFF.QHierarchyValueHelp = function() {};
oFF.QHierarchyValueHelp.prototype = new oFF.QModelComponent();
oFF.QHierarchyValueHelp.prototype._ff_c = "QHierarchyValueHelp";

oFF.QHierarchyValueHelp.createModelComponent = function(context, dimensionBase, name, syncType)
{
	var object = new oFF.QHierarchyValueHelp();
	object.setupHierarchyValueHelp(context, dimensionBase, null, "A", name, syncType);
	return object;
};
oFF.QHierarchyValueHelp.create = function(context, dimension, objectVersion, name, syncType)
{
	var object = new oFF.QHierarchyValueHelp();
	object.setupHierarchyValueHelp(context, null, dimension, objectVersion, name, syncType);
	return object;
};
oFF.QHierarchyValueHelp.prototype.m_dimension = null;
oFF.QHierarchyValueHelp.prototype.m_queryModelHierarchyHelp = null;
oFF.QHierarchyValueHelp.prototype.m_objectVersion = null;
oFF.QHierarchyValueHelp.prototype.m_hierarchies = null;
oFF.QHierarchyValueHelp.prototype.m_isInitialized = false;
oFF.QHierarchyValueHelp.prototype.m_syncType = null;
oFF.QHierarchyValueHelp.prototype.setupHierarchyValueHelp = function(context, dimensionBase, dimension, objectVersion, name, syncType)
{
	oFF.QModelComponent.prototype.setupModelComponentWithName.call( this , context, dimensionBase, name);
	if (oFF.notNull(dimensionBase))
	{
		this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimensionBase);
	}
	else if (oFF.notNull(dimension))
	{
		this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
	}
	this.m_objectVersion = objectVersion;
	this.m_isInitialized = false;
	this.m_syncType = syncType;
	if (oFF.isNull(this.m_syncType))
	{
		this.m_syncType = oFF.SyncType.NON_BLOCKING;
	}
	this.initializeHierarchyValueHelp();
};
oFF.QHierarchyValueHelp.prototype.releaseObject = function()
{
	this.m_hierarchies = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_hierarchies);
	this.m_dimension = null;
	this.m_objectVersion = null;
	this.m_queryModelHierarchyHelp = null;
	this.m_syncType = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QHierarchyValueHelp.prototype.initializeHierarchyValueHelp = function()
{
	if (oFF.isNull(this.m_dimension) || this.m_isInitialized)
	{
		return;
	}
	this.m_isInitialized = true;
	var dimension = this.m_dimension.getReference();
	var application = dimension.getApplication();
	var systemName = dimension.getQueryModel().getDataSource().getSystemName();
	if (oFF.isNull(systemName) && application.getSystemLandscape().getSystemNames().size() === 1)
	{
		systemName = application.getSystemLandscape().getSystemNames().get(0);
	}
	var systemDescription = application.getSystemLandscape().getSystemDescription(systemName);
	oFF.XObjectExt.assertNotNullExt(systemDescription, oFF.XStringUtils.concatenate2("System Description not found. System Name: ", systemName));
	oFF.XBooleanUtils.checkTrue(oFF.HierarchyCatalogUtil.supportsHierarchyCatalog2(application, systemDescription), "Hierarchy Catalog Service is not supported");
	var serviceConfig = oFF.OlapApiModule.SERVICE_TYPE_HIERARCHY_CATALOG.createServiceConfig(application);
	serviceConfig.setSystemName(systemName);
	var dataSource = dimension.getQueryModel().getDataSource().getFullQualifiedName();
	serviceConfig.setDataSourceName(dataSource);
	serviceConfig.setDimension(dimension);
	serviceConfig.processHierarchyCatalogManagerCreation(oFF.SyncType.BLOCKING, this, null);
};
oFF.QHierarchyValueHelp.prototype.getHierarchies = function()
{
	return this.m_hierarchies;
};
oFF.QHierarchyValueHelp.prototype.getQueryModel = function()
{
	return this.m_queryModelHierarchyHelp;
};
oFF.QHierarchyValueHelp.prototype.getDimension = function()
{
	return this.m_dimension.getReference();
};
oFF.QHierarchyValueHelp.prototype.onHierarchyCatalogManagerCreated = function(extResult, hierarchyCatalogManager, customIdentifier)
{
	if (extResult.hasErrors() || oFF.isNull(hierarchyCatalogManager))
	{
		throw oFF.XException.createRuntimeException(extResult.getSummary());
	}
	this.m_queryModelHierarchyHelp = oFF.XWeakReferenceUtil.getWeakRef(hierarchyCatalogManager.getQueryManager().getQueryModel());
	hierarchyCatalogManager.setFilterHierarchyObjectVersion(this.m_objectVersion, true);
	hierarchyCatalogManager.processGetResult(this.m_syncType, this, null);
};
oFF.QHierarchyValueHelp.prototype.onHierarchyCatalogResult = function(extResult, result, customIdentifier)
{
	this.processHierarchyCatalogResult(result);
};
oFF.QHierarchyValueHelp.prototype.processHierarchyCatalogResult = function(hierarchyCatalogResult)
{
	if (oFF.isNull(hierarchyCatalogResult))
	{
		return;
	}
	var catalogItems = oFF.HierarchyCatalogUtil.getHierarchyItems(hierarchyCatalogResult);
	if (catalogItems.hasElements())
	{
		var dimension = this.m_dimension.getReference();
		this.m_hierarchies = oFF.XList.create();
		var changedNodes = oFF.XList.create();
		for (var i = 0; i < catalogItems.size(); i++)
		{
			var catalogItem = catalogItems.get(i);
			var dimensionName = catalogItem.getDimensionName();
			oFF.XBooleanUtils.checkTrue(oFF.XString.isEqual(dimension.getName(), dimensionName), oFF.XStringUtils.concatenate4("Hierarchy Catalog: different dimension names. (1)", dimension.getName(), " (2) ", dimensionName));
			var hierarchy = oFF.QHierarchy.create(dimension.getContext(), dimension, catalogItem.getHierarchyName());
			hierarchy.setHierarchyDescription(catalogItem.getHierarchyDescription());
			hierarchy.setHierarchyVersion(catalogItem.getVersionName());
			hierarchy.setVersionDescription(catalogItem.getVersionDescription());
			hierarchy.setDateTo(catalogItem.getDateTo());
			hierarchy.setDateFrom(catalogItem.getDateFrom());
			hierarchy.setOwner(catalogItem.getOwner());
			hierarchy.setHierId(catalogItem.getHierId());
			hierarchy.setHierType(catalogItem.getHierType());
			hierarchy.setObjectVersion(catalogItem.getObjectVersion());
			hierarchy.setIsRemote(catalogItem.isRemote());
			this.m_hierarchies.add(hierarchy);
			changedNodes.add(this.m_hierarchies.get(i));
		}
		this.notifyNodeChanged();
	}
	else
	{
		this.m_hierarchies = null;
	}
};
oFF.QHierarchyValueHelp.prototype.isComponentNode = function()
{
	return true;
};
oFF.QHierarchyValueHelp.prototype.getIndexedChildren = function()
{
	var children = oFF.XList.create();
	if (oFF.notNull(this.m_hierarchies))
	{
		oFF.XCollectionUtils.addAll(children, this.m_hierarchies);
	}
	else if (!this.m_isInitialized)
	{
		this.initializeHierarchyValueHelp();
		children.add(oFF.QModelComponentNode.createLeave(this.getContext(), "Loading..."));
	}
	return children.getIterator();
};
oFF.QHierarchyValueHelp.prototype.toString = function()
{
	if (oFF.notNull(this.m_hierarchies))
	{
		return this.m_hierarchies.toString();
	}
	return "[]";
};

oFF.QFieldLink = function() {};
oFF.QFieldLink.prototype = new oFF.QModelComponent();
oFF.QFieldLink.prototype._ff_c = "QFieldLink";

oFF.QFieldLink.createFieldLink = function(context, parent, first, second)
{
	var newLink = new oFF.QFieldLink();
	newLink.setupModelComponent(context, parent);
	newLink.m_first = first;
	newLink.m_second = second;
	return newLink;
};
oFF.QFieldLink.prototype.m_first = null;
oFF.QFieldLink.prototype.m_second = null;
oFF.QFieldLink.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (other === this)
	{
		return true;
	}
	var xOther = other;
	return this.getFirstPart().isEqualTo(xOther.getFirstPart()) && this.getSecondPart().isEqualTo(xOther.getSecondPart()) || this.getFirstPart().isEqualTo(xOther.getSecondPart()) && this.getSecondPart().isEqualTo(xOther.getFirstPart());
};
oFF.QFieldLink.prototype.cloneOlapComponent = function(context, parent)
{
	return oFF.QFieldLink.createFieldLink(context, parent, this.getFirstPart(), this.getSecondPart());
};
oFF.QFieldLink.prototype.releaseObject = function()
{
	this.m_first = oFF.XObjectExt.release(this.m_first);
	this.m_second = oFF.XObjectExt.release(this.m_second);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QFieldLink.prototype.getFirstPart = function()
{
	return this.m_first;
};
oFF.QFieldLink.prototype.getSecondPart = function()
{
	return this.m_second;
};
oFF.QFieldLink.prototype.doesEitherLinkPartMatchKey = function(dimensionOrFieldKey)
{
	return this.getFirstPart().isSameDimensionOrField(dimensionOrFieldKey) || this.getSecondPart().isSameDimensionOrField(dimensionOrFieldKey);
};

oFF.QFieldLinkPart = function() {};
oFF.QFieldLinkPart.prototype = new oFF.QModelComponent();
oFF.QFieldLinkPart.prototype._ff_c = "QFieldLinkPart";

oFF.QFieldLinkPart.prototype.m_systemName = null;
oFF.QFieldLinkPart.prototype.m_cubeName = null;
oFF.QFieldLinkPart.prototype.m_dimensionName = null;
oFF.QFieldLinkPart.prototype.m_fieldName = null;
oFF.QFieldLinkPart.prototype.m_fieldKey = null;
oFF.QFieldLinkPart.prototype.m_includeHierarchyNodeChildren = false;
oFF.QFieldLinkPart.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var otherPart = other;
	this.m_systemName = otherPart.m_systemName;
	this.m_cubeName = otherPart.m_cubeName;
	this.m_dimensionName = otherPart.m_dimensionName;
	this.m_fieldName = otherPart.m_fieldName;
	this.m_fieldKey = oFF.XObjectExt.cloneIfNotNull(this.m_fieldKey);
	this.m_includeHierarchyNodeChildren = otherPart.m_includeHierarchyNodeChildren;
};
oFF.QFieldLinkPart.prototype.releaseObject = function()
{
	this.m_systemName = null;
	this.m_cubeName = null;
	this.m_dimensionName = null;
	this.m_fieldName = null;
	this.m_fieldKey = oFF.XObjectExt.release(this.m_fieldKey);
};
oFF.QFieldLinkPart.prototype.getSystemName = function()
{
	return this.m_systemName;
};
oFF.QFieldLinkPart.prototype.getCubeName = function()
{
	return this.m_cubeName;
};
oFF.QFieldLinkPart.prototype.getDataSourceHashKey = function()
{
	return oFF.notNull(this.m_fieldKey) ? this.m_fieldKey.getDataSourceHashKey() : null;
};
oFF.QFieldLinkPart.prototype.getDimensionName = function()
{
	return this.m_dimensionName;
};
oFF.QFieldLinkPart.prototype.getFieldName = function()
{
	return this.m_fieldName;
};
oFF.QFieldLinkPart.prototype.getFieldKey = function()
{
	return this.m_fieldKey;
};
oFF.QFieldLinkPart.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (other === this)
	{
		return true;
	}
	var xOther = other;
	return this.m_includeHierarchyNodeChildren === xOther.isIncludeHierarchyNodeChildren() && oFF.XString.isEqual(this.getSystemName(), xOther.getSystemName()) && oFF.XString.isEqual(this.getCubeName(), xOther.getCubeName()) && oFF.XString.isEqual(this.getDimensionName(), xOther.getDimensionName()) && oFF.XString.isEqual(this.getFieldName(), xOther.getFieldName());
};
oFF.QFieldLinkPart.prototype.isSameDimensionOrField = function(dimensionOrFieldKey)
{
	if (!oFF.XString.isEqual(this.getSystemName(), dimensionOrFieldKey.getSystemName()) || !oFF.XString.isEqual(this.getDataSourceHashKey(), dimensionOrFieldKey.getDataSourceHashKey()) || this.m_fieldKey.getValidationHash() !== null && !oFF.XString.isEqual(this.m_fieldKey.getValidationHash(), dimensionOrFieldKey.getValidationHash()))
	{
		return false;
	}
	if (dimensionOrFieldKey.getKey2() === null)
	{
		return oFF.XString.isEqual(this.getDimensionName(), dimensionOrFieldKey.getKey1());
	}
	else
	{
		return oFF.XString.isEqual(this.getDimensionName(), dimensionOrFieldKey.getKey2()) && oFF.XString.isEqual(this.getFieldName(), dimensionOrFieldKey.getKey1());
	}
};
oFF.QFieldLinkPart.prototype.isIncludeHierarchyNodeChildren = function()
{
	return this.m_includeHierarchyNodeChildren;
};
oFF.QFieldLinkPart.prototype.setIncludeHierarchyNodeChildren = function(includeHierarchyNodeChildren)
{
	this.m_includeHierarchyNodeChildren = includeHierarchyNodeChildren;
};

oFF.QExplainQueryContext = function() {};
oFF.QExplainQueryContext.prototype = new oFF.QModelComponent();
oFF.QExplainQueryContext.prototype._ff_c = "QExplainQueryContext";

oFF.QExplainQueryContext.create = function(context, queryModel)
{
	var instance = new oFF.QExplainQueryContext();
	instance.setRowIndex(-1);
	instance.setColumnIndex(-1);
	instance.setupModelComponent(context, queryModel);
	return instance;
};
oFF.QExplainQueryContext.prototype.m_rowIndex = 0;
oFF.QExplainQueryContext.prototype.m_columnIndex = 0;
oFF.QExplainQueryContext.prototype.isSet = function()
{
	return this.m_rowIndex !== -1 || this.m_columnIndex !== -1;
};
oFF.QExplainQueryContext.prototype.reset = function()
{
	this.m_rowIndex = -1;
	this.m_columnIndex = -1;
};
oFF.QExplainQueryContext.prototype.setColumnIndex = function(columnIndex)
{
	if (columnIndex !== this.m_columnIndex)
	{
		this.m_columnIndex = columnIndex;
		this.notifyNodeChanged();
	}
};
oFF.QExplainQueryContext.prototype.setRowIndex = function(rowIndex)
{
	if (rowIndex !== this.m_rowIndex)
	{
		this.m_rowIndex = rowIndex;
		this.notifyNodeChanged();
	}
};
oFF.QExplainQueryContext.prototype.getRowIndex = function()
{
	return this.m_rowIndex;
};
oFF.QExplainQueryContext.prototype.getColumnIndex = function()
{
	return this.m_columnIndex;
};

oFF.QInfoProvider = function() {};
oFF.QInfoProvider.prototype = new oFF.QModelComponent();
oFF.QInfoProvider.prototype._ff_c = "QInfoProvider";

oFF.QInfoProvider.createInfoProvider = function(queryModel, name, text, baseInfoProvider)
{
	var infoProvider = new oFF.QInfoProvider();
	infoProvider.setupInfoProvider(queryModel, name, text, baseInfoProvider);
	return infoProvider;
};
oFF.QInfoProvider.prototype.m_baseInfoProvider = null;
oFF.QInfoProvider.prototype.setupInfoProvider = function(queryModel, name, text, baseInfoProvider)
{
	oFF.QModelComponent.prototype.setupModelComponentWithName.call( this , queryModel, queryModel, name);
	this.setText(text);
	this.m_baseInfoProvider = baseInfoProvider;
};
oFF.QInfoProvider.prototype.releaseObject = function()
{
	this.m_baseInfoProvider = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QInfoProvider.prototype.getBaseInfoProvider = function()
{
	return this.m_baseInfoProvider;
};

oFF.QResultStructureItem = function() {};
oFF.QResultStructureItem.prototype = new oFF.QModelComponent();
oFF.QResultStructureItem.prototype._ff_c = "QResultStructureItem";

oFF.QResultStructureItem.createResultStructureItem = function(context, parent, element, visibility)
{
	var item = new oFF.QResultStructureItem();
	item.setupResultStructureItem(context, parent, element, visibility);
	return item;
};
oFF.QResultStructureItem.prototype.m_element = null;
oFF.QResultStructureItem.prototype.m_visibility = null;
oFF.QResultStructureItem.prototype.setupResultStructureItem = function(context, parent, element, visibility)
{
	oFF.QModelComponent.prototype.setupModelComponent.call( this , context, parent);
	this.m_element = element;
	this.m_visibility = visibility;
};
oFF.QResultStructureItem.prototype.releaseObject = function()
{
	this.m_element = null;
	this.m_visibility = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QResultStructureItem.prototype.setResultStructureElement = function(element)
{
	if (this.m_element !== element)
	{
		this.m_element = element;
		this.notifyNodeChanged();
	}
};
oFF.QResultStructureItem.prototype.getResultStructureElement = function()
{
	return this.m_element;
};
oFF.QResultStructureItem.prototype.setResultVisibility = function(visibility)
{
	if (this.m_visibility !== visibility)
	{
		this.m_visibility = visibility;
		this.notifyNodeChanged();
	}
};
oFF.QResultStructureItem.prototype.getResultVisibility = function()
{
	return this.m_visibility;
};
oFF.QResultStructureItem.prototype.toString = function()
{
	if (oFF.notNull(this.m_element) && oFF.notNull(this.m_visibility))
	{
		return oFF.XStringUtils.concatenate3(this.m_element.getName(), ": ", this.m_visibility.getName());
	}
	return oFF.QModelComponent.prototype.toString.call( this );
};

oFF.QGenericSorting = function() {};
oFF.QGenericSorting.prototype = new oFF.QModelComponent();
oFF.QGenericSorting.prototype._ff_c = "QGenericSorting";

oFF.QGenericSorting.prototype.m_direction = null;
oFF.QGenericSorting.prototype.m_preserveGroups = false;
oFF.QGenericSorting.prototype.m_caseSensitive = false;
oFF.QGenericSorting.prototype.m_icuLocale = null;
oFF.QGenericSorting.prototype.m_customOrder = null;
oFF.QGenericSorting.prototype.m_customSortPosition = null;
oFF.QGenericSorting.prototype.setupGenericSorting = function(parentNode)
{
	this.setupModelComponent(parentNode.getContext(), parentNode);
	this.m_direction = oFF.XSortDirection.DEFAULT_VALUE;
	this.m_preserveGroups = true;
};
oFF.QGenericSorting.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originGenericSorting = other;
	this.m_direction = originGenericSorting.m_direction;
	this.m_preserveGroups = originGenericSorting.m_preserveGroups;
	this.m_caseSensitive = originGenericSorting.m_caseSensitive;
	this.m_icuLocale = originGenericSorting.m_icuLocale;
	if (oFF.notNull(originGenericSorting.m_customOrder))
	{
		this.m_customOrder = originGenericSorting.m_customOrder.createListOfStringCopy();
	}
	this.m_customSortPosition = originGenericSorting.m_customSortPosition;
};
oFF.QGenericSorting.prototype.releaseObject = function()
{
	this.m_direction = null;
	this.m_icuLocale = null;
	this.m_customOrder = oFF.XObjectExt.release(this.m_customOrder);
	this.m_customSortPosition = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QGenericSorting.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.GENERIC_SORTING;
};
oFF.QGenericSorting.prototype.getDirection = function()
{
	return this.m_direction;
};
oFF.QGenericSorting.prototype.setDirection = function(direction)
{
	if (this.m_direction !== direction)
	{
		this.m_direction = direction;
		this.notifyNodeChanged();
	}
};
oFF.QGenericSorting.prototype.getSortingManager = function()
{
	return this.getQueryModel().getSortingManager();
};
oFF.QGenericSorting.prototype.setBreakGrouping = function(breaking)
{
	this.setPreserveGrouping(!breaking);
};
oFF.QGenericSorting.prototype.setPreserveGrouping = function(preserve)
{
	if (this.m_preserveGroups !== preserve)
	{
		if (preserve)
		{
			oFF.XBooleanUtils.checkTrue(this.supportsPreserveGrouping(), "Group preserving is not supported");
		}
		else
		{
			oFF.XBooleanUtils.checkTrue(this.supportsBreakGrouping(), "Group breaking is not supported");
		}
		this.m_preserveGroups = preserve;
		this.notifyPropertyBooleanChanged(oFF.QSortProperties.QY_PRESERVE_GROUPING, !preserve, preserve);
	}
};
oFF.QGenericSorting.prototype.isBreakGroupingEnabled = function()
{
	return !this.m_preserveGroups;
};
oFF.QGenericSorting.prototype.isPreserveGroupingEnabled = function()
{
	return this.m_preserveGroups;
};
oFF.QGenericSorting.prototype.supportsPreserveGrouping = function()
{
	var modelCapabilities = this.getModelCapabilities();
	return modelCapabilities.supportsPreserveGrouping(this.getSortingType());
};
oFF.QGenericSorting.prototype.supportsBreakGrouping = function()
{
	var modelCapabilities = this.getModelCapabilities();
	return modelCapabilities.supportsBreakGrouping(this.getSortingType());
};
oFF.QGenericSorting.prototype.toString = function()
{
	var buffer = oFF.XStringBuffer.create();
	buffer.append(this.getOlapComponentType().getName());
	buffer.append(" - Dir: ");
	buffer.append(this.getDirection().getName());
	if (this.supportsBreakGrouping())
	{
		if (this.isBreakGroupingEnabled())
		{
			buffer.append(" - break grouping");
		}
	}
	return buffer.toString();
};
oFF.QGenericSorting.prototype.supportsDimension = function()
{
	return false;
};
oFF.QGenericSorting.prototype.setDimension = oFF.noSupport;
oFF.QGenericSorting.prototype.getDimension = oFF.noSupport;
oFF.QGenericSorting.prototype.setLocale = function(icuLocale)
{
	if (this.getModelCapabilities().supportsLocaleSorting())
	{
		this.m_icuLocale = icuLocale;
	}
};
oFF.QGenericSorting.prototype.getLocale = function()
{
	return this.m_icuLocale;
};
oFF.QGenericSorting.prototype.setIsCaseSensitive = function(isCaseSensitive)
{
	if (this.m_caseSensitive !== isCaseSensitive && this.getModelCapabilities().supportsLocaleSorting())
	{
		this.m_caseSensitive = isCaseSensitive;
		this.notifyPropertyBooleanChanged(oFF.QSortProperties.QY_CASE_SENSITIVE, !isCaseSensitive, isCaseSensitive);
	}
};
oFF.QGenericSorting.prototype.isCaseSensitive = function()
{
	return this.m_caseSensitive;
};
oFF.QGenericSorting.prototype.getCustomSort = function()
{
	return this.m_customOrder;
};
oFF.QGenericSorting.prototype.setCustomSort = function(customOrder)
{
	if (oFF.XCollectionUtils.hasElements(customOrder) && (this.fieldSorting() || this.dimensionSorting()))
	{
		this.m_customOrder = customOrder.createListOfStringCopy();
		this.notifyNodeChanged();
	}
};
oFF.QGenericSorting.prototype.dimensionSorting = function()
{
	var capabilities = this.getModelCapabilities();
	return oFF.OlapComponentType.DIMENSION_SORTING === this.getOlapComponentType() && (capabilities.supportsCustomMeasureSortOrder() && this.getDimension().isMeasureStructure() || capabilities.supportsCustomMemberKeySortOrder() && !this.getDimension().isMeasureStructure());
};
oFF.QGenericSorting.prototype.fieldSorting = function()
{
	return oFF.OlapComponentType.FIELD_SORTING === this.getOlapComponentType() && this.getModelCapabilities().supportsCustomSort();
};
oFF.QGenericSorting.prototype.setCustomSortPosition = function(customSortPosition)
{
	if (this.fieldSorting() || this.dimensionSorting())
	{
		this.m_customSortPosition = customSortPosition;
		this.notifyNodeChanged();
	}
};
oFF.QGenericSorting.prototype.getCustomSortPosition = function()
{
	return this.m_customSortPosition;
};

oFF.QSortingManager = function() {};
oFF.QSortingManager.prototype = new oFF.QModelComponent();
oFF.QSortingManager.prototype._ff_c = "QSortingManager";

oFF.QSortingManager.create = function(queryModel)
{
	var object = new oFF.QSortingManager();
	object.setupSortManager(queryModel);
	return object;
};
oFF.QSortingManager.prototype.m_sortOperations = null;
oFF.QSortingManager.prototype.setupSortManager = function(queryModel)
{
	this.setupModelComponent(queryModel, queryModel);
	this.m_sortOperations = oFF.QModelComponentList.createModelComponentList(queryModel, this, true, "SortOperations");
};
oFF.QSortingManager.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var capabilities = this.getModelCapabilities();
	var originSortingManager = other;
	this.m_sortOperations.clear();
	var queryModel = this.getQueryModel();
	var size = originSortingManager.m_sortOperations.size();
	for (var i = 0; i < size; i++)
	{
		var originSorting = originSortingManager.m_sortOperations.get(i);
		var originType = originSorting.getSortingType();
		var cloneSorting = null;
		if (originType === oFF.SortType.FIELD)
		{
			cloneSorting = this.newFieldSorting(queryModel.getFieldByName(originSorting.getField().getName()));
		}
		else if (originType === oFF.SortType.MEASURE)
		{
			var structureMember = queryModel.getMeasureDimension().getStructureMember(originSorting.getMeasure().getName());
			if (oFF.notNull(structureMember))
			{
				cloneSorting = this.newMeasureSorting(structureMember);
			}
		}
		else if (originSorting.getOlapComponentType() === oFF.OlapComponentType.DIMENSION_SORTING)
		{
			if (capabilities.supportsDimensionSorting(originSorting.getDimension(), originSorting.getSortingType()))
			{
				cloneSorting = this.newDimensionSorting(queryModel.getDimensionByNameFromExistingMetadata(originSorting.getDimension().getName()));
			}
		}
		else if (originType === oFF.SortType.DATA_CELL_VALUE)
		{
			cloneSorting = this.newDataCellSorting(null);
		}
		else if (originType === oFF.SortType.COMPLEX)
		{
			cloneSorting = oFF.QComplexSorting.create(this, null);
		}
		if (oFF.notNull(cloneSorting))
		{
			cloneSorting.copyFrom(originSorting, flags);
			this.m_sortOperations.addInternal(cloneSorting);
		}
	}
};
oFF.QSortingManager.prototype.releaseObject = function()
{
	this.m_sortOperations = oFF.XObjectExt.release(this.m_sortOperations);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QSortingManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.SORT_MANAGER;
};
oFF.QSortingManager.prototype.getSortingOperations = function()
{
	return this.m_sortOperations;
};
oFF.QSortingManager.prototype.newDimensionSorting = function(dimension)
{
	if (oFF.isNull(dimension))
	{
		return null;
	}
	var capabilities = this.getModelCapabilities();
	if (capabilities.supportsDimensionSorting(dimension, null))
	{
		var dimBase = dimension;
		return oFF.QDimensionSorting.create(this, dimBase);
	}
	throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("Dimension sorting not allowed on dimension ", dimension.getName()));
};
oFF.QSortingManager.prototype.newFieldSorting = function(field)
{
	var capabilities = this.getModelCapabilities();
	if (capabilities.supportsFieldSorting(field))
	{
		var fieldBase = field;
		return oFF.QFieldSorting.create(this, fieldBase);
	}
	throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("Field sorting not allowed on field ", field.getName()));
};
oFF.QSortingManager.prototype.newDataCellSorting = function(path)
{
	var capabilities = this.getModelCapabilities();
	if (capabilities.supportsDataCellSorting())
	{
		return oFF.QDataCellSorting.create(this, path);
	}
	throw oFF.XException.createIllegalArgumentException("Tuple sorting not allowed");
};
oFF.QSortingManager.prototype.newComplexSorting = function(path)
{
	var capabilities = this.getModelCapabilities();
	if (capabilities.supportsComplexSorting())
	{
		return oFF.QComplexSorting.create(this, path);
	}
	throw oFF.XException.createIllegalArgumentException("Complex sorting not allowed");
};
oFF.QSortingManager.prototype.newMeasureSorting = function(member)
{
	var capabilities = this.getModelCapabilities();
	if (capabilities.supportsMeasureSorting())
	{
		var structureMember = member;
		return oFF.QMeasureSorting.create(this, structureMember);
	}
	throw oFF.XException.createIllegalArgumentException("Structure member sorting not allowed");
};
oFF.QSortingManager.prototype.getDimensionSorting = function(dimension, createIfNotExist)
{
	var result = null;
	if (oFF.notNull(dimension))
	{
		var size = this.m_sortOperations.size();
		for (var i = 0; i < size; i++)
		{
			var sortOperation = this.m_sortOperations.get(i);
			var componentType = sortOperation.getComponentType();
			if (componentType === oFF.OlapComponentType.DIMENSION_SORTING)
			{
				var dimSorting = sortOperation;
				if (dimSorting.getDimension() === dimension)
				{
					result = dimSorting;
					break;
				}
			}
		}
		if (oFF.isNull(result) && createIfNotExist)
		{
			result = this.newDimensionSorting(dimension);
			this.addSortOperation(result);
		}
	}
	return result;
};
oFF.QSortingManager.prototype.removeDimensionSorting = function(dimension)
{
	var size = this.m_sortOperations.size();
	var i = 0;
	while (i < size)
	{
		var sortOperation = this.m_sortOperations.get(i);
		var componentType = sortOperation.getComponentType();
		if (componentType === oFF.OlapComponentType.DIMENSION_SORTING)
		{
			var dimSorting = sortOperation;
			if (dimSorting.getDimension() === dimension)
			{
				this.m_sortOperations.removeAt(i);
				size = this.m_sortOperations.size();
				continue;
			}
		}
		i++;
	}
};
oFF.QSortingManager.prototype.getFieldSorting = function(field, createIfNotExist)
{
	var result = null;
	var size = this.m_sortOperations.size();
	for (var i = 0; i < size; i++)
	{
		var sortOperation = this.m_sortOperations.get(i);
		var componentType = sortOperation.getComponentType();
		if (componentType === oFF.OlapComponentType.FIELD_SORTING)
		{
			var fieldSorting = sortOperation;
			if (fieldSorting.getField() === field)
			{
				result = fieldSorting;
				break;
			}
		}
	}
	if (oFF.isNull(result) && createIfNotExist)
	{
		result = this.newFieldSorting(field);
		this.addSortOperation(result);
	}
	return result;
};
oFF.QSortingManager.prototype.getDataCellSorting = function(path, createIfNotExist)
{
	var result = null;
	var uniqueName = oFF.QComplexAndDataCellSorting.createPathUniqueName(path);
	var size = this.m_sortOperations.size();
	for (var i = 0; i < size; i++)
	{
		var sortOperation = this.m_sortOperations.get(i);
		var componentType = sortOperation.getComponentType();
		if (componentType === oFF.OlapComponentType.DATA_CELL_SORTING)
		{
			var tupleSorting = sortOperation;
			var tsUniqueName = tupleSorting.getPathUniqueName();
			if (oFF.XString.isEqual(tsUniqueName, uniqueName))
			{
				result = tupleSorting;
				break;
			}
		}
	}
	if (oFF.isNull(result) && createIfNotExist)
	{
		result = this.newDataCellSorting(path);
		this.addSortOperation(result);
	}
	return result;
};
oFF.QSortingManager.prototype.getComplexSorting = function(path, createIfNotExist)
{
	var result = null;
	var uniqueName = oFF.QComplexAndDataCellSorting.createPathUniqueName(path);
	var size = this.m_sortOperations.size();
	for (var i = 0; i < size; i++)
	{
		var sortOperation = this.m_sortOperations.get(i);
		var componentType = sortOperation.getComponentType();
		if (componentType === oFF.OlapComponentType.COMPLEX_SORTING)
		{
			var tupleSorting = sortOperation;
			var tsUniqueName = tupleSorting.getPathUniqueName();
			if (oFF.XString.isEqual(tsUniqueName, uniqueName))
			{
				result = tupleSorting;
				break;
			}
		}
	}
	if (oFF.isNull(result) && createIfNotExist)
	{
		result = this.newComplexSorting(path);
		this.addSortOperation(result);
	}
	return result;
};
oFF.QSortingManager.prototype.getMeasureSorting = function(member, createIfNotExist)
{
	var structure = this.getQueryModel().getNonMeasureDimension();
	if (oFF.isNull(member) || oFF.notNull(structure) && member.getDimension() === structure)
	{
		return null;
	}
	var result = null;
	var size = this.m_sortOperations.size();
	for (var i = 0; i < size; i++)
	{
		var sortOperation = this.m_sortOperations.get(i);
		var componentType = sortOperation.getComponentType();
		if (componentType === oFF.OlapComponentType.MEASURE_SORTING)
		{
			var memberSorting = sortOperation;
			if (memberSorting.getMeasure() === member)
			{
				result = memberSorting;
				break;
			}
		}
	}
	if (oFF.isNull(result) && createIfNotExist)
	{
		result = this.newMeasureSorting(member);
		this.addSortOperation(result);
		if (oFF.notNull(structure) && structure.getLoadedStructureMembers().size() > 0)
		{
			result.setStructure(structure.getLoadedStructureMembers().get(0));
		}
	}
	return result;
};
oFF.QSortingManager.prototype.addSortOperation = function(sortOperation)
{
	if (oFF.notNull(sortOperation))
	{
		this.m_sortOperations.add(sortOperation);
	}
};
oFF.QSortingManager.prototype.supportsFieldSorting = function(field)
{
	return this.getModelCapabilities().supportsFieldSorting(field);
};
oFF.QSortingManager.prototype.supportsDimensionSorting = function(dimension, sortType)
{
	return this.getModelCapabilities().supportsDimensionSorting(dimension, sortType);
};
oFF.QSortingManager.prototype.supportsDataCellSorting = function()
{
	return this.getModelCapabilities().supportsDataCellSorting();
};
oFF.QSortingManager.prototype.supportsComplexSorting = function()
{
	return this.getModelCapabilities().supportsComplexSorting();
};
oFF.QSortingManager.prototype.supportsServerSideSorts = function()
{
	return this.getModelCapabilities().supportsServerSideSorts();
};
oFF.QSortingManager.prototype.supportsMeasureSorting = function()
{
	return this.getModelCapabilities().supportsMeasureSorting();
};
oFF.QSortingManager.prototype.supportsSortType = function(sortType)
{
	return this.getModelCapabilities().supportsSortType(sortType);
};
oFF.QSortingManager.prototype.supportsBreakGrouping = function(sortType)
{
	return this.getModelCapabilities().supportsBreakGrouping(sortType);
};
oFF.QSortingManager.prototype.supportsPreserveGrouping = function(sortType)
{
	return this.getModelCapabilities().supportsPreserveGrouping(sortType);
};
oFF.QSortingManager.prototype.clearSupportedSortType = function()
{
	this.getModelCapabilities().clearSupportedSortType();
};
oFF.QSortingManager.prototype.addSupportedSortType = function(sortType)
{
	this.getModelCapabilities().addSupportedSortType(sortType);
};
oFF.QSortingManager.prototype.addSupportedBreakGrouping = function(sortType)
{
	this.getModelCapabilities().addSupportedBreakGrouping(sortType);
};
oFF.QSortingManager.prototype.mergeDeepRecursive = function(settings, other)
{
	var otherSort = other;
	this.copyFrom(otherSort, null);
};
oFF.QSortingManager.prototype.applyCustomSort = function(dimension, field, customOrder, sortDirection, customSortPosition, createNewSortOperation)
{
	var capabilities = this.getModelCapabilities();
	var sortingOperation = null;
	if (oFF.notNull(dimension) && (capabilities.supportsCustomMeasureSortOrder() && dimension.isMeasureStructure() || capabilities.supportsCustomMemberKeySortOrder() && !dimension.isMeasureStructure()))
	{
		var dimensionSorting = null;
		if (createNewSortOperation)
		{
			dimensionSorting = this.newDimensionSorting(dimension);
			this.addSortOperation(dimensionSorting);
		}
		else
		{
			dimensionSorting = this.getDimensionSorting(dimension, true);
		}
		dimensionSorting.setSortType(oFF.SortType.MEMBER_KEY);
		dimensionSorting.setDirection(sortDirection);
		dimensionSorting.setCustomSort(customOrder);
		dimensionSorting.setCustomSortPosition(customSortPosition);
		sortingOperation = dimensionSorting;
	}
	else if (oFF.notNull(field) && capabilities.supportsCustomSort())
	{
		var fieldSorting = null;
		if (createNewSortOperation)
		{
			fieldSorting = this.newFieldSorting(field);
			this.addSortOperation(fieldSorting);
		}
		else
		{
			fieldSorting = this.getFieldSorting(field, true);
		}
		fieldSorting.setDirection(sortDirection);
		fieldSorting.setCustomSort(customOrder);
		fieldSorting.setCustomSortPosition(customSortPosition);
		sortingOperation = fieldSorting;
	}
	return sortingOperation;
};
oFF.QSortingManager.prototype.newCustomSorting = function(dimension, field, sortFromStart, sortFromEnd)
{
	var capabilities = this.getModelCapabilities();
	if (oFF.notNull(dimension) && (capabilities.supportsCustomMeasureSortOrder() && dimension.isMeasureStructure() || capabilities.supportsCustomMemberKeySortOrder() && !dimension.isMeasureStructure()))
	{
		if (oFF.XCollectionUtils.hasElements(sortFromStart))
		{
			var dimensionSortingStart = this.newDimensionSorting(dimension);
			dimensionSortingStart.setSortType(oFF.SortType.MEMBER_KEY);
			this.setSortingValues(sortFromStart, dimensionSortingStart, oFF.CustomSortPosition.TOP);
		}
		if (oFF.XCollectionUtils.hasElements(sortFromEnd))
		{
			var dimensionSortingEnd = this.newDimensionSorting(dimension);
			dimensionSortingEnd.setSortType(oFF.SortType.MEMBER_KEY);
			this.setSortingValues(sortFromEnd, dimensionSortingEnd, oFF.CustomSortPosition.BOTTOM);
		}
	}
	else if (oFF.notNull(field) && capabilities.supportsCustomSort())
	{
		if (oFF.XCollectionUtils.hasElements(sortFromStart))
		{
			var fieldSortingStart = this.newFieldSorting(field);
			this.setSortingValues(sortFromStart, fieldSortingStart, oFF.CustomSortPosition.TOP);
		}
		if (oFF.XCollectionUtils.hasElements(sortFromEnd))
		{
			var fieldSortingEnd = this.newFieldSorting(field);
			this.setSortingValues(sortFromEnd, fieldSortingEnd, oFF.CustomSortPosition.BOTTOM);
		}
	}
};
oFF.QSortingManager.prototype.setSortingValues = function(sortFromStart, dimensionSortingStart, sortPosition)
{
	this.addSortOperation(dimensionSortingStart);
	dimensionSortingStart.setDirection(oFF.XSortDirection.ASCENDING);
	dimensionSortingStart.setCustomSort(sortFromStart);
	dimensionSortingStart.setCustomSortPosition(sortPosition);
};

oFF.QFormulaInverseFormula = function() {};
oFF.QFormulaInverseFormula.prototype = new oFF.QModelComponent();
oFF.QFormulaInverseFormula.prototype._ff_c = "QFormulaInverseFormula";

oFF.QFormulaInverseFormula.createForCopy = function(context, parentFormulaMeasure)
{
	var inverseFormula = new oFF.QFormulaInverseFormula();
	inverseFormula.setupModelComponent(context, parentFormulaMeasure);
	return inverseFormula;
};
oFF.QFormulaInverseFormula.createInverseFormula = function(context, parentFormulaMeasure, conditionFormulaItem, targetMemberName, inverseFormulaItem)
{
	var inverseFormula = new oFF.QFormulaInverseFormula();
	inverseFormula.setupModelComponent(context, parentFormulaMeasure);
	inverseFormula.m_conditionFormulaItem = conditionFormulaItem;
	inverseFormula.m_targetMemberName = targetMemberName;
	inverseFormula.m_internalFormulaItem = inverseFormulaItem;
	return inverseFormula;
};
oFF.QFormulaInverseFormula.prototype.m_targetMemberName = null;
oFF.QFormulaInverseFormula.prototype.m_conditionFormulaItem = null;
oFF.QFormulaInverseFormula.prototype.m_internalFormulaItem = null;
oFF.QFormulaInverseFormula.prototype.m_parentFormulaMeasure = null;
oFF.QFormulaInverseFormula.prototype.getParentFormulaMeasure = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_parentFormulaMeasure);
};
oFF.QFormulaInverseFormula.prototype.releaseObject = function()
{
	this.m_internalFormulaItem = oFF.XObjectExt.release(this.m_internalFormulaItem);
	this.m_conditionFormulaItem = oFF.XObjectExt.release(this.m_conditionFormulaItem);
	this.m_targetMemberName = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QFormulaInverseFormula.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originInverseFormula = other;
	var orgTargetMemberName = originInverseFormula.getTargetMemberName();
	var orgInternalFormulaItem = originInverseFormula.getInternalFormulaItem();
	var orgConditionFormulaItem = originInverseFormula.getCondition();
	var internalFormulaItem = orgInternalFormulaItem.cloneOlapComponent(this.getContext(), this);
	var conditionFormulaItem = null;
	if (oFF.notNull(orgConditionFormulaItem))
	{
		conditionFormulaItem = orgConditionFormulaItem.cloneOlapComponent(this.getContext(), this);
	}
	this.m_conditionFormulaItem = conditionFormulaItem;
	this.m_targetMemberName = orgTargetMemberName;
	this.m_internalFormulaItem = internalFormulaItem;
};
oFF.QFormulaInverseFormula.prototype.getTargetMemberName = function()
{
	return this.m_targetMemberName;
};
oFF.QFormulaInverseFormula.prototype.setTargetMemberName = function(targetMember)
{
	this.m_targetMemberName = targetMember;
	this.notifyNodeChanged();
};
oFF.QFormulaInverseFormula.prototype.getCondition = function()
{
	return this.m_conditionFormulaItem;
};
oFF.QFormulaInverseFormula.prototype.setCondition = function(condition)
{
	this.m_conditionFormulaItem = condition;
	this.notifyNodeChanged();
};
oFF.QFormulaInverseFormula.prototype.getInternalFormulaItem = function()
{
	return this.m_internalFormulaItem;
};
oFF.QFormulaInverseFormula.prototype.setInternalFormulaItem = function(internalFormula)
{
	this.m_internalFormulaItem = internalFormula;
	this.notifyNodeChanged();
};

oFF.QOverdefinedMemberManager = function() {};
oFF.QOverdefinedMemberManager.prototype = new oFF.QModelComponent();
oFF.QOverdefinedMemberManager.prototype._ff_c = "QOverdefinedMemberManager";

oFF.QOverdefinedMemberManager._createOverdefineMemberManager = function(context, parent)
{
	var overdefineMemberManager = new oFF.QOverdefinedMemberManager();
	overdefineMemberManager.setupModelComponent(context, parent);
	overdefineMemberManager.m_visibilityOverrideMap = oFF.XHashMapByString.create();
	overdefineMemberManager.m_numericScaleOverrideMap = oFF.XHashMapByString.create();
	overdefineMemberManager.m_numericShiftOverrideMap = oFF.XHashMapByString.create();
	return overdefineMemberManager;
};
oFF.QOverdefinedMemberManager.prototype.m_visibilityOverrideMap = null;
oFF.QOverdefinedMemberManager.prototype.m_numericScaleOverrideMap = null;
oFF.QOverdefinedMemberManager.prototype.m_numericShiftOverrideMap = null;
oFF.QOverdefinedMemberManager.prototype.copyFromInternal = function(other, flags)
{
	var origin = other;
	var memberName;
	var memberNames;
	this.m_visibilityOverrideMap.clear();
	memberNames = origin.m_visibilityOverrideMap.getKeysAsIteratorOfString();
	while (memberNames.hasNext())
	{
		memberName = memberNames.next();
		this.m_visibilityOverrideMap.put(memberName, origin.m_visibilityOverrideMap.getByKey(memberName));
	}
	this.m_numericScaleOverrideMap.clear();
	memberNames = origin.m_numericScaleOverrideMap.getKeysAsIteratorOfString();
	while (memberNames.hasNext())
	{
		memberName = memberNames.next();
		this.m_numericScaleOverrideMap.put(memberName, origin.m_numericScaleOverrideMap.getByKey(memberName));
	}
	this.m_numericShiftOverrideMap.clear();
	memberNames = origin.m_numericShiftOverrideMap.getKeysAsIteratorOfString();
	while (memberNames.hasNext())
	{
		memberName = memberNames.next();
		this.m_numericShiftOverrideMap.put(memberName, origin.m_numericShiftOverrideMap.getByKey(memberName));
	}
};
oFF.QOverdefinedMemberManager.prototype.releaseObject = function()
{
	this.m_visibilityOverrideMap.clear();
	this.m_numericScaleOverrideMap.clear();
	this.m_numericShiftOverrideMap.clear();
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QOverdefinedMemberManager.prototype.getVisibilityOverride = function(aliasOrMemberName)
{
	return this.m_visibilityOverrideMap.getByKey(aliasOrMemberName);
};
oFF.QOverdefinedMemberManager.prototype.setVisibilityOverride = function(aliasOrMemberName, visibility)
{
	this.m_visibilityOverrideMap.put(aliasOrMemberName, visibility);
	this.notifyNodeChanged();
};
oFF.QOverdefinedMemberManager.prototype.getVisibilityOverrideMap = function()
{
	return this.m_visibilityOverrideMap;
};
oFF.QOverdefinedMemberManager.prototype.getNumericScaleOverride = function(aliasOrMemberName)
{
	return this.m_numericScaleOverrideMap.getByKey(aliasOrMemberName);
};
oFF.QOverdefinedMemberManager.prototype.setNumericScaleOverride = function(aliasOrMemberName, scale)
{
	this.m_numericScaleOverrideMap.put(aliasOrMemberName, oFF.XIntegerValue.create(scale));
	this.notifyNodeChanged();
};
oFF.QOverdefinedMemberManager.prototype.getNumericScaleOverrideMap = function()
{
	return this.m_numericScaleOverrideMap;
};
oFF.QOverdefinedMemberManager.prototype.getNumericShiftOverride = function(aliasOrMemberName)
{
	return this.m_numericShiftOverrideMap.getByKey(aliasOrMemberName);
};
oFF.QOverdefinedMemberManager.prototype.setNumericShiftOverride = function(aliasOrMemberName, shift)
{
	this.m_numericShiftOverrideMap.put(aliasOrMemberName, oFF.XIntegerValue.create(shift));
	this.notifyNodeChanged();
};
oFF.QOverdefinedMemberManager.prototype.getNumericShiftOverrideMap = function()
{
	return this.m_numericShiftOverrideMap;
};
oFF.QOverdefinedMemberManager.prototype.removeOverdefinedMember = function(aliasOrMemberName)
{
	this.m_numericScaleOverrideMap.remove(aliasOrMemberName);
	this.m_numericShiftOverrideMap.remove(aliasOrMemberName);
	this.m_visibilityOverrideMap.remove(aliasOrMemberName);
};
oFF.QOverdefinedMemberManager.prototype.removeVisiblityOverride = function(aliasOrMemberName)
{
	this.m_visibilityOverrideMap.remove(aliasOrMemberName);
	this.notifyNodeChanged();
};
oFF.QOverdefinedMemberManager.prototype.removeNumericScaleOverride = function(aliasOrMemberName)
{
	this.m_numericScaleOverrideMap.remove(aliasOrMemberName);
	this.notifyNodeChanged();
};
oFF.QOverdefinedMemberManager.prototype.removeNumericShiftOverride = function(aliasOrMemberName)
{
	this.m_numericShiftOverrideMap.remove(aliasOrMemberName);
	this.notifyNodeChanged();
};
oFF.QOverdefinedMemberManager.prototype.containsOverdefinedProperty = function(aliasOrMemberName)
{
	return this.m_visibilityOverrideMap.containsKey(aliasOrMemberName) || this.m_numericScaleOverrideMap.containsKey(aliasOrMemberName) || this.m_numericShiftOverrideMap.containsKey(aliasOrMemberName);
};

oFF.QTimeOperation = function() {};
oFF.QTimeOperation.prototype = new oFF.QModelComponent();
oFF.QTimeOperation.prototype._ff_c = "QTimeOperation";

oFF.QTimeOperation.create = function(context, structureMember)
{
	var capabilities = context.getModelCapabilities();
	if (!capabilities.supportsDynamicTimeMeasure())
	{
		oFF.noSupport();
	}
	var timeOperation = new oFF.QTimeOperation();
	timeOperation.setupTimeOperation(context, structureMember);
	return timeOperation;
};
oFF.QTimeOperation.prototype.m_dimensionName = null;
oFF.QTimeOperation.prototype.m_function = null;
oFF.QTimeOperation.prototype.m_granularity = null;
oFF.QTimeOperation.prototype.m_period = 0;
oFF.QTimeOperation.prototype.m_filterElementContext = null;
oFF.QTimeOperation.prototype.m_forceMemberNavigationGeneration = false;
oFF.QTimeOperation.prototype.m_useToDateFlatRangeSelection = false;
oFF.QTimeOperation.prototype.m_timePeriodOperationLevel = null;
oFF.QTimeOperation.prototype.setupTimeOperation = function(context, structureMember)
{
	this.setupModelComponent(context, structureMember);
	this.m_forceMemberNavigationGeneration = false;
	this.m_useToDateFlatRangeSelection = false;
	this.m_timePeriodOperationLevel = oFF.QTimePeriodOperationLevel.LOWEST_LEVEL;
};
oFF.QTimeOperation.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originTimeOperation = other;
	this.m_dimensionName = originTimeOperation.getDimensionName();
	this.m_function = originTimeOperation.getFunction();
	this.m_granularity = originTimeOperation.getGranularity();
	this.m_period = originTimeOperation.getPeriod();
	this.m_filterElementContext = originTimeOperation.getFilterElementContext();
	this.m_forceMemberNavigationGeneration = originTimeOperation.getForceMemberNavigationGeneration();
	this.m_useToDateFlatRangeSelection = originTimeOperation.getUseToDateFlatRangeSelection();
	this.m_timePeriodOperationLevel = originTimeOperation.getTimePeriodOperationLevel();
};
oFF.QTimeOperation.prototype.releaseObject = function()
{
	this.m_dimensionName = null;
	this.m_function = null;
	this.m_granularity = null;
	this.m_filterElementContext = null;
	this.m_timePeriodOperationLevel = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QTimeOperation.prototype.getDimensionName = function()
{
	return this.m_dimensionName;
};
oFF.QTimeOperation.prototype.setDimensionName = function(dimensionName)
{
	this.m_dimensionName = dimensionName;
	this.notifyNodeChanged();
};
oFF.QTimeOperation.prototype.getFunction = function()
{
	return this.m_function;
};
oFF.QTimeOperation.prototype.setFunction = function(timeFunction)
{
	this.m_function = timeFunction;
	this.notifyNodeChanged();
};
oFF.QTimeOperation.prototype.getGranularity = function()
{
	return this.m_granularity;
};
oFF.QTimeOperation.prototype.setGranularity = function(granularity)
{
	this.m_granularity = granularity;
	this.notifyNodeChanged();
};
oFF.QTimeOperation.prototype.getPeriod = function()
{
	return this.m_period;
};
oFF.QTimeOperation.prototype.setPeriod = function(period)
{
	this.m_period = period;
	this.notifyNodeChanged();
};
oFF.QTimeOperation.prototype.getFilterElementContext = function()
{
	return this.m_filterElementContext;
};
oFF.QTimeOperation.prototype.setFilterElementContext = function(filterContext)
{
	this.m_filterElementContext = filterContext;
};
oFF.QTimeOperation.prototype.getTimePeriodOperationLevel = function()
{
	return this.m_timePeriodOperationLevel;
};
oFF.QTimeOperation.prototype.setTimePeriodOperationLevel = function(timePeriodOperationLevel)
{
	this.m_timePeriodOperationLevel = timePeriodOperationLevel;
	this.notifyNodeChanged();
};
oFF.QTimeOperation.prototype.needsTransientTimeSelection = function()
{
	return this.getFunction() !== oFF.QTimeOperationFunction.CURRENT;
};
oFF.QTimeOperation.prototype.generateTransientIgnoredExternalDimensions = function(queryModel, messageManager)
{
	var timeDimension = queryModel.getDimensionByName(this.getDimensionName());
	if (!this.validateTimeDimensionOperation(queryModel, timeDimension, messageManager) || !this.needsTransientTimeSelection())
	{
		return null;
	}
	if (this.shouldGenerateSingleValueFilterBasedTransientTimeSelection(timeDimension.getAxisType()) || this.getFunction() === oFF.QTimeOperationFunction.CURRENT_DATE)
	{
		var dimensionLevelNames = oFF.QTimeDimensionUtil.getAllLevelNamesFilterLevelTypeAll(timeDimension);
		dimensionLevelNames.add(timeDimension.getName());
		return dimensionLevelNames.getValuesAsReadOnlyListOfString();
	}
	return null;
};
oFF.QTimeOperation.prototype.shouldGenerateSingleValueFilterBasedTransientTimeSelection = function(timeDimensionAxis)
{
	return !this.m_forceMemberNavigationGeneration && (timeDimensionAxis === oFF.AxisType.FREE || oFF.notNull(this.m_filterElementContext));
};
oFF.QTimeOperation.prototype.flattenDependentTimeOperations = function(queryModel, messageManager, transientTimeSelection, dependentRestrictedMeasure)
{
	if (this.getFunction() === oFF.QTimeOperationFunction.CURRENT_DATE)
	{
		return transientTimeSelection;
	}
	var timeDimensionName = this.getDimensionName();
	var timeDimension = queryModel.getDimensionByName(timeDimensionName);
	if (this.shouldGenerateSingleValueFilterBasedTransientTimeSelection(timeDimension.getAxisType()))
	{
		return this.accumulateDependentTimeOperationsToInitialTimeSelection(queryModel, messageManager, transientTimeSelection, dependentRestrictedMeasure);
	}
	return this.getDependentMemberNavigationsIfApplicable(queryModel, messageManager, transientTimeSelection, dependentRestrictedMeasure);
};
oFF.QTimeOperation.prototype.generateTransientTimeSelection = function(queryModel, messageManager)
{
	if (!this.needsTransientTimeSelection())
	{
		return null;
	}
	var timeDimensionName = this.getDimensionName();
	var timeDimension = queryModel.getDimensionByName(timeDimensionName);
	if (!this.validateTimeDimensionOperation(queryModel, timeDimension, messageManager))
	{
		return null;
	}
	if (this.getFunction() === oFF.QTimeOperationFunction.CURRENT_DATE)
	{
		return this.generateTransientCurrentDateSelection(queryModel, timeDimension);
	}
	if (this.shouldGenerateSingleValueFilterBasedTransientTimeSelection(timeDimension.getAxisType()))
	{
		var singleValueTimeCartesianList = this.findFinestSingleValueTimeCartesianList(queryModel, timeDimension, messageManager, this.determineFilterElementContextToUse(queryModel));
		if (oFF.isNull(singleValueTimeCartesianList))
		{
			var errorMsgArgs = oFF.XListOfString.create();
			var timeDimensionTextOrName = this.getTimeDimensionTextOrName();
			errorMsgArgs.add(timeDimensionTextOrName);
			errorMsgArgs.add(timeDimensionTextOrName);
			errorMsgArgs.add(this.getParentTextOrName());
			messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_NO_TIME_IN_AXIS_OR_SINGLE_VALUE_FILTER, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_NO_TIME_IN_AXIS_OR_SINGLE_VALUE_FILTER, errorMsgArgs, this.getParentAliasOrMemberName()));
			return null;
		}
		return this.generateSingleValueFilterBasedTransientTimeSelection(queryModel, timeDimension, messageManager, singleValueTimeCartesianList);
	}
	return this.generateTransientTimeMemberNavigations(queryModel, timeDimension, messageManager);
};
oFF.QTimeOperation.prototype.generateTransientCurrentDateSelection = function(queryModel, timeDimension)
{
	var filterHierarchyName = timeDimension.getHierarchyName();
	var minutesPerDay = 24 * 60;
	if (oFF.isNull(filterHierarchyName))
	{
		var leveledHierarchy = oFF.QTimeDimensionUtil.findFirstLeveledHierarchyWithLevelType(timeDimension, oFF.QCanonicalDateUtil.convertTimeOperationGranularityToHierarchyLevelType(this.getGranularity()));
		filterHierarchyName = leveledHierarchy.getName();
	}
	var currentCanonicalDate;
	var hasInvalidUTCOffset = oFF.XMath.abs(this.getPeriod()) >= minutesPerDay;
	if (hasInvalidUTCOffset)
	{
		currentCanonicalDate = oFF.QCanonicalDateUtil.createCurrentCanonicalDate(queryModel, timeDimension, filterHierarchyName);
	}
	else
	{
		currentCanonicalDate = oFF.QCanonicalDateUtil.createCurrentCanonicalDateWithTimeZoneOffset(queryModel, timeDimension, filterHierarchyName, this.getPeriod());
	}
	currentCanonicalDate = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, filterHierarchyName, currentCanonicalDate, oFF.QCanonicalDateUtil.convertTimeOperationGranularityToHierarchyLevelType(this.getGranularity()), false);
	var cartesianList = oFF.QFactory.createFilterCartesianListWithField(queryModel.getContext(), timeDimension.getHierarchyKeyField());
	cartesianList.setConvertToFlatFilter(true);
	cartesianList.setHierarchyName(filterHierarchyName);
	this.createAndAddHierarchyTimeFilterFromCanonicalDate(queryModel, timeDimension, filterHierarchyName, cartesianList, currentCanonicalDate, null, true);
	return cartesianList;
};
oFF.QTimeOperation.prototype.validateTimeDimensionOperation = function(queryModel, timeDimension, messageManager)
{
	var capabilities = queryModel.getContext().getModelCapabilities();
	if (!capabilities.supportsDynamicTimeMeasure())
	{
		messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_NOT_SUPPORTED, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_NOT_SUPPORTED, oFF.XListOfString.create(), this.getParentAliasOrMemberName()));
		return false;
	}
	if (oFF.notNull(timeDimension) && oFF.QTimeDimensionUtil.isDateOrTimeLikeDimension(timeDimension))
	{
		return true;
	}
	messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TIME_DIMENSION, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TIME_DIMENSION, oFF.XListOfString.create(), this.getParentAliasOrMemberName()));
	return false;
};
oFF.QTimeOperation.prototype.determineFilterElementContextToUse = function(queryModel)
{
	var filterContextRoot;
	if (oFF.notNull(this.m_filterElementContext))
	{
		filterContextRoot = this.m_filterElementContext;
	}
	else
	{
		filterContextRoot = queryModel.getFilter().getEffectiveFilter().getFilterRootElement();
	}
	return filterContextRoot;
};
oFF.QTimeOperation.prototype.accumulateDependentTimeOperationsToInitialTimeSelection = function(queryModel, messageManager, initialTimeSelection, dependentRestrictedMeasure)
{
	var resultTimeSelection = initialTimeSelection;
	if (oFF.notNull(dependentRestrictedMeasure) && dependentRestrictedMeasure.needsTransientTimeSelection(messageManager))
	{
		if (this.getFunction() === oFF.QTimeOperationFunction.TO_DATE)
		{
			resultTimeSelection = dependentRestrictedMeasure.generateFlattenTransientTimeSelection(queryModel, messageManager, dependentRestrictedMeasure.getTimeOperation(), this.getFilterElementContext());
			var clonedTimeOperation = oFF.QTimeOperation.create(queryModel, null);
			clonedTimeOperation.copyFrom(this, null);
			clonedTimeOperation.setFilterElementContext(resultTimeSelection);
			resultTimeSelection = clonedTimeOperation.generateTransientTimeSelection(queryModel, messageManager);
			oFF.XObjectExt.release(clonedTimeOperation);
		}
		else
		{
			resultTimeSelection = dependentRestrictedMeasure.generateFlattenTransientTimeSelection(queryModel, messageManager, dependentRestrictedMeasure.getTimeOperation(), resultTimeSelection);
		}
	}
	return resultTimeSelection;
};
oFF.QTimeOperation.prototype.validateMemberNavigationWithTimeFilter = function(queryModel, timeDimension, messageManager)
{
	var capabilities = this.getContext().getModelCapabilities();
	if (capabilities.supportsTimeBasedVarianceWithNavigationAndExternalFilter())
	{
		return true;
	}
	var hasFlatTimeFilter = false;
	var hasHierarchicalTimeFilter = false;
	var filterRootElement = queryModel.getFilter().getEffectiveFilter().getFilterRootElement();
	var timeCartesianLists = oFF.QFilterUtil.collectAllTimeCartesianLists(filterRootElement, timeDimension);
	for (var i = 0; i < timeCartesianLists.size(); i++)
	{
		var timeCartesianList = timeCartesianLists.get(i);
		if (timeCartesianList.isConvertToFlatFilter() || timeCartesianList.getHierarchyName() === null)
		{
			hasFlatTimeFilter = true;
		}
		else
		{
			hasHierarchicalTimeFilter = true;
		}
	}
	var isNestedUsingFormulaMeasure = false;
	var parent = this.getParent();
	if (oFF.notNull(parent) && parent.getMemberType() === oFF.MemberType.RESTRICTED_MEASURE)
	{
		var rmParent = parent;
		var dimensionContext = rmParent.getDimensionContext(queryModel.getQueryManager());
		var dependentMemberNames = oFF.XListOfString.createFromReadOnlyList(oFF.QFilterUtil.getMemberNamesFromFilter(rmParent.getFilter().getFilterRootElement(), dimensionContext.getName()));
		if (dependentMemberNames.size() === 1)
		{
			var memberName = dependentMemberNames.get(0);
			var member = dimensionContext.getStructureMemberByAliasOrMember(memberName);
			if (oFF.isNull(member))
			{
				var isPrimary = dimensionContext === queryModel.getPrimaryCalculationDimension();
				member = this.getOlapEnv().getClientQueryObjectManager().getStructuredMember(memberName, this.getStorageName(), isPrimary);
			}
			if (oFF.notNull(member) && member.getMemberType() === oFF.MemberType.FORMULA)
			{
				isNestedUsingFormulaMeasure = true;
			}
		}
	}
	var errorMsgArgs = oFF.XListOfString.create();
	errorMsgArgs.add(this.getTimeDimensionTextOrName());
	if (hasFlatTimeFilter && hasHierarchicalTimeFilter && !isNestedUsingFormulaMeasure && !this.supportsTimeMeasureWithFlatAndHierarchicalFilter(queryModel))
	{
		messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_MEMBER_NAVIGATION_WITH_FLAT_AND_HIERARCHICAL_FILTER, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_MEMBER_NAVIGATION_WITH_FLAT_AND_HIERARCHICAL_FILTER, errorMsgArgs, this.getParentAliasOrMemberName()));
		return false;
	}
	else if (hasFlatTimeFilter && !this.supportsTimeMeasureWithFlatAndHierarchicalFilter(queryModel))
	{
		messageManager.addInfo(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_OUT_OF_BOUND_MEMBER_NAVIGATION_WITH_FLAT_FILTER, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_OUT_OF_BOUND_MEMBER_NAVIGATION_WITH_FLAT_FILTER, errorMsgArgs, this.getParentAliasOrMemberName()));
	}
	return true;
};
oFF.QTimeOperation.prototype.supportsTimeMeasureWithFlatAndHierarchicalFilter = function(queryModel)
{
	if (queryModel.getSession().hasFeature(oFF.FeatureToggleOlap.TIME_MEASURE_WITH_FLAT_AND_HIERARCHICAL_FILTER))
	{
		var mdsHints = queryModel.getOptimizerHintsByExecutionEngine(oFF.ExecutionEngine.MDS);
		return oFF.notNull(mdsHints) && oFF.XString.isEqual(mdsHints.getByKey(oFF.OptimizerHint.MDS_PLAN_USE_CE_NEW.getName()), "true");
	}
	return false;
};
oFF.QTimeOperation.prototype.validateMemberNavigationDrillLevelType = function(queryModel, timeDimension, drillLevelTypeToValidate, hierarchyNameToValidate, messageManager)
{
	var isValid = true;
	if (drillLevelTypeToValidate === oFF.HierarchyLevelType.ALL && this.getGranularity() === oFF.QTimeOperationGranularity.PERIOD)
	{
		var errorMsgArgs = oFF.XListOfString.create();
		errorMsgArgs.add(this.getTimeDimensionTextOrName());
		errorMsgArgs.add(this.getParentTextOrName());
		messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_PREVIOUS_PERIOD_NOT_DRILLED, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_PREVIOUS_PERIOD_NOT_DRILLED, errorMsgArgs, this.getParentAliasOrMemberName()));
	}
	else if (oFF.notNull(drillLevelTypeToValidate) && this.getGranularity() !== oFF.QTimeOperationGranularity.PERIOD)
	{
		isValid = this.validateTimeHierarchyContainsTimeOperationHierarchyLevel(hierarchyNameToValidate, timeDimension, messageManager) && this.validateTimeOperationHierarchyLevelFinerThanDrillLevel(drillLevelTypeToValidate, messageManager, true) && this.validateWeekAndDayDrillLevelTimeOperationConstraints(drillLevelTypeToValidate, messageManager, true, timeDimension);
	}
	return isValid && this.validateMemberNavigationWithTimeFilter(queryModel, timeDimension, messageManager);
};
oFF.QTimeOperation.prototype.validateSingleValueFilterDrillLevelType = function(drillLevelTypeToValidate, messageManager, timeDimension)
{
	if (oFF.notNull(drillLevelTypeToValidate) && this.getGranularity() !== oFF.QTimeOperationGranularity.PERIOD)
	{
		return this.validateTimeOperationHierarchyLevelFinerThanDrillLevel(drillLevelTypeToValidate, messageManager, false) && this.validateWeekAndDayDrillLevelTimeOperationConstraints(drillLevelTypeToValidate, messageManager, false, timeDimension);
	}
	return true;
};
oFF.QTimeOperation.prototype.validateTimeHierarchyContainsTimeOperationHierarchyLevel = function(hierarchyNameToValidate, timeDimension, messageManager)
{
	if (this.getDimensionLevelNameByLevelType(timeDimension, hierarchyNameToValidate, oFF.QCanonicalDateUtil.convertTimeOperationGranularityToHierarchyLevelType(this.getGranularity())) === null)
	{
		var errorMsgArgs = oFF.XListOfString.create();
		errorMsgArgs.add(this.getGranularity().getName());
		errorMsgArgs.add(this.getParentTextOrName());
		messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_NOT_IN_HIERARCHY, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_NOT_IN_HIERARCHY, errorMsgArgs, this.getParentAliasOrMemberName()));
		return false;
	}
	return true;
};
oFF.QTimeOperation.prototype.validateTimeOperationHierarchyLevelFinerThanDrillLevel = function(drillLevelTypeToValidate, messageManager, isTimeInAxis)
{
	if (oFF.QCanonicalDateUtil.convertTimeOperationGranularityToHierarchyLevelType(this.getGranularity()).getLevelIndex() > drillLevelTypeToValidate.getLevelIndex())
	{
		var errorMsgArgs = oFF.XListOfString.create();
		errorMsgArgs.add(this.getTimeDimensionTextOrName());
		errorMsgArgs.add(this.getGranularity().getName());
		errorMsgArgs.add(this.getParentTextOrName());
		if (isTimeInAxis)
		{
			messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_IS_FINER_THAN_DRILL_LEVEL, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_IS_FINER_THAN_DRILL_LEVEL, errorMsgArgs, this.getParentAliasOrMemberName()));
		}
		else
		{
			messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_IS_FINER_THAN_FILTER_LEVEL, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_IS_FINER_THAN_FILTER_LEVEL, errorMsgArgs, this.getParentAliasOrMemberName()));
			return false;
		}
	}
	return true;
};
oFF.QTimeOperation.prototype.validateWeekAndDayDrillLevelTimeOperationConstraints = function(drillLevelTypeToValidate, messageManager, isTimeInAxis, timeDimension)
{
	var opLevelType = oFF.QCanonicalDateUtil.convertTimeOperationGranularityToHierarchyLevelType(this.getGranularity());
	if (oFF.QTimeDimensionUtil.isFlexibleTimeDimension(timeDimension) && drillLevelTypeToValidate === oFF.HierarchyLevelType.TIME_WEEK)
	{
		return true;
	}
	if (this.getFunction() !== oFF.QTimeOperationFunction.TO_DATE)
	{
		if (drillLevelTypeToValidate === oFF.HierarchyLevelType.TIME_WEEK || drillLevelTypeToValidate === oFF.HierarchyLevelType.TIME_DAY)
		{
			if (opLevelType === oFF.HierarchyLevelType.TIME_YEAR || opLevelType === oFF.HierarchyLevelType.TIME_HALF_YEAR || opLevelType === oFF.HierarchyLevelType.TIME_QUARTER || opLevelType === oFF.HierarchyLevelType.TIME_MONTH)
			{
				var errorMsgArgs = oFF.XListOfString.create();
				errorMsgArgs.add(this.getTimeDimensionTextOrName());
				errorMsgArgs.add(this.getParentTextOrName());
				if (isTimeInAxis)
				{
					messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_ON_WEEK_DAY_DRILL_LEVEL, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_ON_WEEK_DAY_DRILL_LEVEL, errorMsgArgs, this.getParentAliasOrMemberName()));
				}
				else
				{
					messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_ON_WEEK_DAY_FILTER_LEVEL, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_ON_WEEK_DAY_FILTER_LEVEL, errorMsgArgs, this.getParentAliasOrMemberName()));
				}
				return false;
			}
		}
	}
	return true;
};
oFF.QTimeOperation.prototype.validateSingleValueFilterSpansAcrossWeek = function(queryModel, timeDimension, hierarchyName, canonicalDate, messageManager)
{
	if (oFF.QCanonicalDateUtil.doesCanonicalDateSpanAcrossYears(queryModel, timeDimension, hierarchyName, canonicalDate))
	{
		messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_WEEK_ACROSS_YEAR_SINGLE_VALUE_FILTER, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_WEEK_ACROSS_YEAR_SINGLE_VALUE_FILTER, oFF.XListOfString.create(), this.getParentAliasOrMemberName()));
		return false;
	}
	return true;
};
oFF.QTimeOperation.prototype.validateToDateSpansAcrossMultipleValues = function(startCanonicalDateInOpGranularity, endCanonicalDateInOpGranularity, messageManager)
{
	if (!oFF.QCanonicalDateUtil.isEqual(startCanonicalDateInOpGranularity, endCanonicalDateInOpGranularity))
	{
		var errorMsgArgs = oFF.XListOfString.create();
		errorMsgArgs.add(this.getParentTextOrName());
		errorMsgArgs.add(oFF.XString.toLowerCase(this.getGranularity().getName()));
		messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TO_DATE_ACROSS_MULTIPLE_VALUES, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TO_DATE_ACROSS_MULTIPLE_VALUES, errorMsgArgs, this.getParentAliasOrMemberName()));
		return false;
	}
	return true;
};
oFF.QTimeOperation.prototype.generateTransientTimeMemberNavigations = function(queryModel, timeDimension, messageManager)
{
	if (timeDimension.getHierarchyName() === null)
	{
		messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TIME_DIMENSION, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TIME_DIMENSION, oFF.XListOfString.create(), this.getParentAliasOrMemberName()));
		return null;
	}
	var timeFilterOp = oFF.QFactory.createFilterOperation(queryModel, timeDimension.getKeyField());
	timeFilterOp.setHierarchyName(timeDimension.getHierarchyName());
	timeFilterOp.getLow().setFilterValueType(oFF.XValueType.CURRENT_MEMBER);
	var memberNavigations = timeFilterOp.getLow().getMemberNavigations();
	var memberNav = null;
	var opFunction = this.getFunction();
	var opGranularity = this.getGranularity();
	var opLevelType = oFF.QCanonicalDateUtil.convertTimeOperationGranularityToHierarchyLevelType(opGranularity);
	var opPeriod = this.getPeriod();
	var lowestDrillLevelType = queryModel.getDrillManager().getTimeDimensionLowestDrillLevelType(timeDimension);
	if (!this.validateMemberNavigationDrillLevelType(queryModel, timeDimension, lowestDrillLevelType, timeDimension.getHierarchyName(), messageManager))
	{
		return null;
	}
	if (opFunction === oFF.QTimeOperationFunction.PREVIOUS)
	{
		if (oFF.isNull(lowestDrillLevelType) || this.m_timePeriodOperationLevel === oFF.QTimePeriodOperationLevel.ALL_LEVELS)
		{
			if (opGranularity === oFF.QTimeOperationGranularity.PERIOD && opPeriod === 1)
			{
				memberNav = oFF.QFactory.createMemberNavigation(oFF.CurrentMemberFunction.PREV_MEMBER);
			}
			else if (opGranularity === oFF.QTimeOperationGranularity.PERIOD && opPeriod > 1)
			{
				memberNav = oFF.QFactory.createMemberNavigation(oFF.CurrentMemberFunction.LAG);
				memberNav.addParameter(oFF.QFactory.createNavigationParameterWithIntegerConstant(opPeriod));
			}
			else
			{
				memberNav = this.createParallelPeriodMemberNavigation(this.getDimensionLevelNameByLevelType(timeDimension, timeDimension.getHierarchyName(), opLevelType), opPeriod);
			}
		}
		else if (this.m_timePeriodOperationLevel === oFF.QTimePeriodOperationLevel.LOWEST_LEVEL)
		{
			var adjustedLagPeriod = this.convertToLagPeriod(opPeriod, opGranularity, lowestDrillLevelType);
			if (adjustedLagPeriod !== 0 && (!oFF.QTimeDimensionUtil.isFlexibleTimeDimension(timeDimension) || opGranularity === oFF.QTimeOperationGranularity.PERIOD))
			{
				memberNav = this.createParallelPeriodMemberNavigation(this.getDimensionLevelNameByLevelType(timeDimension, timeDimension.getHierarchyName(), lowestDrillLevelType), adjustedLagPeriod);
			}
			else
			{
				memberNav = this.createParallelPeriodMemberNavigation(this.getDimensionLevelNameByLevelType(timeDimension, timeDimension.getHierarchyName(), opLevelType), opPeriod);
			}
		}
		else
		{
			oFF.noSupport();
		}
	}
	else if (opFunction === oFF.QTimeOperationFunction.NEXT)
	{
		var leadAdjustedLagPeriod = this.convertToLagPeriod(opPeriod, opGranularity, lowestDrillLevelType);
		memberNav = oFF.QFactory.createMemberNavigation(oFF.CurrentMemberFunction.LEAD);
		memberNav.addParameter(oFF.QFactory.createNavigationParameterWithIntegerConstant(leadAdjustedLagPeriod));
	}
	else if (opFunction === oFF.QTimeOperationFunction.TO_DATE)
	{
		if (opGranularity === oFF.QTimeOperationGranularity.YEAR)
		{
			memberNav = oFF.QFactory.createMemberNavigation(oFF.CurrentMemberFunction.YTD);
		}
		else if (opGranularity === oFF.QTimeOperationGranularity.QUARTER)
		{
			memberNav = oFF.QFactory.createMemberNavigation(oFF.CurrentMemberFunction.QTD);
		}
		else if (opGranularity === oFF.QTimeOperationGranularity.MONTH)
		{
			memberNav = oFF.QFactory.createMemberNavigation(oFF.CurrentMemberFunction.MTD);
		}
		else if (opGranularity === oFF.QTimeOperationGranularity.WEEK)
		{
			memberNav = oFF.QFactory.createMemberNavigation(oFF.CurrentMemberFunction.WTD);
		}
		else
		{
			messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TO_DATE_FUNCTION_GRANULARITY, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TO_DATE_FUNCTION_GRANULARITY, oFF.XListOfString.create(), this.getParentAliasOrMemberName()));
			return null;
		}
	}
	else
	{
		messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_FUNCTION, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_FUNCTION, oFF.XListOfString.create(), this.getParentAliasOrMemberName()));
		return null;
	}
	memberNavigations.add(memberNav);
	var timeCartesianList = oFF.QFactory.createFilterCartesianListWithField(queryModel, timeDimension.getKeyField());
	timeCartesianList.add(timeFilterOp);
	timeCartesianList.setHierarchyName(timeDimension.getHierarchyName());
	return timeCartesianList;
};
oFF.QTimeOperation.prototype.getDependentMemberNavigationsIfApplicable = function(queryModel, messageManager, transientTimeSelection, dependentRestrictedMeasure)
{
	var dependentTimeCartesianList = dependentRestrictedMeasure.generateFlattenTransientTimeSelection(queryModel, messageManager, dependentRestrictedMeasure.getTimeOperation(), null);
	if (oFF.isNull(dependentTimeCartesianList))
	{
		return null;
	}
	var memberNavigations = oFF.XList.create();
	var memberNav = null;
	for (var idxTransientCartesian = 0; idxTransientCartesian < transientTimeSelection.size(); idxTransientCartesian++)
	{
		var cartesianElement = transientTimeSelection.getCartesianElement(idxTransientCartesian);
		memberNavigations = cartesianElement.getLow().getMemberNavigations();
		if (memberNavigations.size() === 1)
		{
			memberNav = memberNavigations.get(0);
			memberNavigations.clear();
		}
	}
	for (var idxDependentCartesian = 0; idxDependentCartesian < dependentTimeCartesianList.size(); idxDependentCartesian++)
	{
		var dependentCartesianElement = dependentTimeCartesianList.getCartesianElement(idxDependentCartesian);
		memberNavigations.addAll(dependentCartesianElement.getLow().getMemberNavigations());
	}
	if (oFF.notNull(memberNav))
	{
		if (memberNavigations.size() > 0 && oFF.CurrentMemberFunction.isToDate(memberNavigations.get(memberNavigations.size() - 1).getMemberFunction()))
		{
			memberNavigations.insert(memberNavigations.size() - 1, memberNav);
		}
		else
		{
			memberNavigations.add(memberNav);
		}
	}
	return transientTimeSelection;
};
oFF.QTimeOperation.prototype.createParallelPeriodMemberNavigation = function(levelValue, constantValue)
{
	var memberNav;
	if (this.getContext().getModelCapabilities().supportsInaCurrentMember())
	{
		memberNav = oFF.QFactory.createMemberNavigation(oFF.CurrentMemberFunction.INA_PARALLEL_PERIOD);
		memberNav.addParameter(oFF.QFactory.createNavigationParameterWithShift(levelValue, constantValue * -1));
	}
	else
	{
		memberNav = oFF.QFactory.createMemberNavigation(oFF.CurrentMemberFunction.PARALLEL_PERIOD);
		memberNav.addParameter(oFF.QFactory.createNavigationParameterWithLevelLiteral(levelValue));
		memberNav.addParameter(oFF.QFactory.createNavigationParameterWithIntegerConstant(constantValue));
	}
	return memberNav;
};
oFF.QTimeOperation.prototype.convertToLagPeriod = function(opPeriod, opGranularity, currentDrillLevelType)
{
	var lagPeriod = null;
	if (opGranularity === oFF.QTimeOperationGranularity.PERIOD)
	{
		lagPeriod = oFF.QTimeOperationLagPeriod.NO_LAG_PERIOD;
	}
	else
	{
		var opLevelType = oFF.QCanonicalDateUtil.convertTimeOperationGranularityToHierarchyLevelType(opGranularity);
		if (opLevelType === currentDrillLevelType)
		{
			lagPeriod = oFF.QTimeOperationLagPeriod.NO_LAG_PERIOD;
		}
		else if (opLevelType === oFF.HierarchyLevelType.TIME_YEAR)
		{
			if (currentDrillLevelType === oFF.HierarchyLevelType.TIME_HALF_YEAR)
			{
				lagPeriod = oFF.QTimeOperationLagPeriod.YEAR_TO_HALF_YEAR;
			}
			else if (currentDrillLevelType === oFF.HierarchyLevelType.TIME_QUARTER)
			{
				lagPeriod = oFF.QTimeOperationLagPeriod.YEAR_TO_QUARTER;
			}
			else if (currentDrillLevelType === oFF.HierarchyLevelType.TIME_MONTH)
			{
				lagPeriod = oFF.QTimeOperationLagPeriod.YEAR_TO_MONTH;
			}
		}
		else if (opLevelType === oFF.HierarchyLevelType.TIME_HALF_YEAR)
		{
			if (currentDrillLevelType === oFF.HierarchyLevelType.TIME_QUARTER)
			{
				lagPeriod = oFF.QTimeOperationLagPeriod.HALF_YEAR_TO_QUARTER;
			}
			else if (currentDrillLevelType === oFF.HierarchyLevelType.TIME_MONTH)
			{
				lagPeriod = oFF.QTimeOperationLagPeriod.HALF_YEAR_TO_MONTH;
			}
		}
		else if (opLevelType === oFF.HierarchyLevelType.TIME_QUARTER)
		{
			if (currentDrillLevelType === oFF.HierarchyLevelType.TIME_MONTH)
			{
				lagPeriod = oFF.QTimeOperationLagPeriod.QUARTER_TO_MONTH;
			}
		}
		else if (opLevelType === oFF.HierarchyLevelType.TIME_WEEK)
		{
			if (currentDrillLevelType === oFF.HierarchyLevelType.TIME_DAY)
			{
				lagPeriod = oFF.QTimeOperationLagPeriod.WEEK_TO_DAY;
			}
		}
		if (oFF.isNull(lagPeriod))
		{
			return 0;
		}
	}
	return lagPeriod.getLagPeriod() * opPeriod;
};
oFF.QTimeOperation.prototype.getDimensionLevelNameByLevelType = function(timeDimension, hierarchyName, levelType)
{
	var hierarchy = timeDimension.getLeveledHierarchy(hierarchyName);
	if (oFF.notNull(hierarchy))
	{
		var level = hierarchy.getLevelByType(levelType);
		if (oFF.notNull(level))
		{
			return level.getLevelName();
		}
	}
	return null;
};
oFF.QTimeOperation.prototype.findFinestSingleValueTimeCartesianList = function(queryModel, timeDimension, messageManager, filterElementContext)
{
	var timeCartesianLists = oFF.QFilterUtil.collectAllTimeCartesianLists(filterElementContext, timeDimension);
	var multiValueTimeCartesianLists = oFF.XListOfNameObject.create();
	var finestSingleValueTimeCartesianList = null;
	var singleValueLowestLevelTypeIndex = 1;
	for (var timeCartesianListIdx = 0; timeCartesianListIdx < timeCartesianLists.size(); timeCartesianListIdx++)
	{
		var timeCartesianList = timeCartesianLists.get(timeCartesianListIdx);
		if (oFF.isNull(timeCartesianList))
		{
			continue;
		}
		if (!oFF.QFilterUtil.isSingleValueSourceCartesianList(timeCartesianList) && (timeCartesianList.size() > 1 || !oFF.QFilterUtil.isSingleValueFilterElement(timeCartesianList.getCartesianElement(0))))
		{
			multiValueTimeCartesianLists.add(timeCartesianList);
			continue;
		}
		var levelType = this.getLowestHierarchyLevelTypeFromCartesianList(timeCartesianList, queryModel, timeDimension);
		var levelTypeIndex = levelType.getLevelIndex();
		if (levelTypeIndex > singleValueLowestLevelTypeIndex && levelType !== oFF.HierarchyLevelType.ALL)
		{
			singleValueLowestLevelTypeIndex = levelTypeIndex;
			finestSingleValueTimeCartesianList = timeCartesianList;
		}
	}
	if (oFF.isNull(finestSingleValueTimeCartesianList))
	{
		return null;
	}
	var finestSingleValueTimeCartesianElement = finestSingleValueTimeCartesianList.getCartesianElement(0);
	var finestSingleValueCanonicalDate = this.convertFilterValueToCanonicalDateWithCompatibleHierarchyIfNecessary(queryModel, timeDimension, finestSingleValueTimeCartesianList, finestSingleValueTimeCartesianElement.getFieldMetadata(), finestSingleValueTimeCartesianElement.getLow().getString());
	if (oFF.isNull(finestSingleValueCanonicalDate))
	{
		return null;
	}
	for (var multiValueTimeCartesianListIdx = 0; multiValueTimeCartesianListIdx < multiValueTimeCartesianLists.size(); multiValueTimeCartesianListIdx++)
	{
		var multiValueTimeCartesianList = multiValueTimeCartesianLists.get(multiValueTimeCartesianListIdx);
		if (this.doesMultiValueTimeCartesianListConflictWithFinestSingleValueCartesianList(queryModel, timeDimension, finestSingleValueCanonicalDate, multiValueTimeCartesianList))
		{
			return null;
		}
	}
	return finestSingleValueTimeCartesianList;
};
oFF.QTimeOperation.prototype.doesMultiValueTimeCartesianListConflictWithFinestSingleValueCartesianList = function(queryModel, timeDimension, finestSingleValueCanonicalDate, multiValueTimeCartesianList)
{
	var finestSingleValueCartesianListLevelType = oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(finestSingleValueCanonicalDate.getGranularity());
	var lowestMultiValueCartesianListLevelType = this.getLowestHierarchyLevelTypeFromCartesianList(multiValueTimeCartesianList, queryModel, timeDimension);
	if (lowestMultiValueCartesianListLevelType.getLevelIndex() <= finestSingleValueCartesianListLevelType.getLevelIndex())
	{
		return false;
	}
	for (var elemIdx = 0; elemIdx < multiValueTimeCartesianList.size(); elemIdx++)
	{
		var cartesianElement = multiValueTimeCartesianList.getCartesianElement(elemIdx);
		var filterHierarchyName = multiValueTimeCartesianList.getHierarchyName();
		if (oFF.isNull(filterHierarchyName))
		{
			var compatibleHierarchyLevelTypesToSearch = oFF.XList.create();
			compatibleHierarchyLevelTypesToSearch.add(oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(finestSingleValueCanonicalDate.getGranularity()));
			var hierarchyNameAndLevelTypeName = this.getCompatibleFilterHierarchyNameAndLevelTypeName(queryModel, timeDimension, cartesianElement.getFieldMetadata(), compatibleHierarchyLevelTypesToSearch);
			if (oFF.notNull(hierarchyNameAndLevelTypeName))
			{
				filterHierarchyName = hierarchyNameAndLevelTypeName.getFirstString();
			}
		}
		if (oFF.isNull(filterHierarchyName))
		{
			return false;
		}
		var filterCanonicalDateA = this.convertFilterValueToCanonicalDateWithCompatibleHierarchyIfNecessary(queryModel, timeDimension, multiValueTimeCartesianList, cartesianElement.getFieldMetadata(), cartesianElement.getLow().getString());
		if (oFF.isNull(filterCanonicalDateA))
		{
			return false;
		}
		filterCanonicalDateA = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, filterHierarchyName, filterCanonicalDateA, oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(finestSingleValueCanonicalDate.getGranularity()), false);
		var filterCanonicalDateB = null;
		if (cartesianElement.getHigh() !== null && cartesianElement.getHigh().getString() !== null)
		{
			filterCanonicalDateB = this.convertFilterValueToCanonicalDateWithCompatibleHierarchyIfNecessary(queryModel, timeDimension, multiValueTimeCartesianList, cartesianElement.getFieldMetadata(), cartesianElement.getHigh().getString());
			if (oFF.notNull(filterCanonicalDateB))
			{
				filterCanonicalDateB = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, filterHierarchyName, filterCanonicalDateB, oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(finestSingleValueCanonicalDate.getGranularity()), false);
			}
		}
		if (oFF.QCanonicalDateUtil.isEqual(finestSingleValueCanonicalDate, filterCanonicalDateA) || oFF.notNull(filterCanonicalDateB) && oFF.QCanonicalDateUtil.isEqual(finestSingleValueCanonicalDate, filterCanonicalDateB))
		{
			return true;
		}
	}
	return false;
};
oFF.QTimeOperation.prototype.convertFilterValueToCanonicalDateWithCompatibleHierarchyIfNecessary = function(queryModel, timeDimension, parentCartesianList, filterElementFieldMetadata, filterValue)
{
	var filterHierarchyName = parentCartesianList.getHierarchyName();
	var filterLevelType = null;
	if (oFF.isNull(filterHierarchyName))
	{
		var hierarchyNameAndLevelTypeName = this.getCompatibleFilterHierarchyNameAndLevelTypeName(queryModel, timeDimension, filterElementFieldMetadata, oFF.XList.create());
		if (oFF.notNull(hierarchyNameAndLevelTypeName))
		{
			filterHierarchyName = hierarchyNameAndLevelTypeName.getFirstString();
			filterLevelType = oFF.HierarchyLevelType.lookup(hierarchyNameAndLevelTypeName.getSecondString());
		}
	}
	if (oFF.isNull(filterHierarchyName))
	{
		return null;
	}
	return this.convertFilterValueToCanonicalDate(queryModel, timeDimension, filterLevelType, filterValue, filterHierarchyName, oFF.notNull(filterLevelType));
};
oFF.QTimeOperation.prototype.generateSingleValueFilterBasedTransientTimeSelection = function(queryModel, timeDimension, messageManager, singleValueTimeCartesianList)
{
	var lowFilterValue = null;
	var filterLevelType = null;
	var filterHierarchyName = null;
	var filterElement = singleValueTimeCartesianList.getCartesianElement(0);
	if (filterElement.getSetSign() === oFF.SetSign.INCLUDING && (oFF.QFilterUtil.isSingleValueFilterElement(filterElement) || oFF.QFilterUtil.isSingleValueSourceCartesianList(singleValueTimeCartesianList)))
	{
		lowFilterValue = filterElement.getLow().getString();
		filterHierarchyName = singleValueTimeCartesianList.getHierarchyName();
		if (oFF.isNull(filterHierarchyName))
		{
			var levelTypesToSearch = oFF.XList.create();
			var timeOperationHierarchyLevelType = oFF.QCanonicalDateUtil.convertTimeOperationGranularityToHierarchyLevelType(this.getGranularity());
			if (oFF.notNull(timeOperationHierarchyLevelType))
			{
				levelTypesToSearch.add(timeOperationHierarchyLevelType);
			}
			if (oFF.QFilterUtil.isSingleValueSourceCartesianList(singleValueTimeCartesianList))
			{
				levelTypesToSearch.add(singleValueTimeCartesianList.getHierarchyLevelType());
			}
			var hierarchyNameAndLevelTypeName = this.getCompatibleFilterHierarchyNameAndLevelTypeName(queryModel, timeDimension, filterElement.getFieldMetadata(), levelTypesToSearch);
			if (oFF.notNull(hierarchyNameAndLevelTypeName))
			{
				filterHierarchyName = hierarchyNameAndLevelTypeName.getFirstString();
				filterLevelType = oFF.HierarchyLevelType.lookup(hierarchyNameAndLevelTypeName.getSecondString());
			}
		}
	}
	if (oFF.isNull(lowFilterValue) || oFF.isNull(filterHierarchyName))
	{
		var errorMsgArgs = oFF.XListOfString.create();
		errorMsgArgs.add(this.getGranularity().getName());
		errorMsgArgs.add(this.getParentTextOrName());
		messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_NOT_IN_HIERARCHY, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_GRANULARITY_NOT_IN_HIERARCHY, errorMsgArgs, this.getParentAliasOrMemberName()));
		return null;
	}
	var isFlat = oFF.notNull(filterLevelType);
	var lowFilterValueCanonicalDate = this.convertFilterValueToCanonicalDate(queryModel, timeDimension, filterLevelType, lowFilterValue, filterHierarchyName, isFlat);
	if (oFF.isNull(filterLevelType))
	{
		filterLevelType = oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(lowFilterValueCanonicalDate.getGranularity());
	}
	if (!this.validateSingleValueFilterDrillLevelType(filterLevelType, messageManager, timeDimension) || !this.validateSingleValueFilterSpansAcrossWeek(queryModel, timeDimension, filterHierarchyName, lowFilterValueCanonicalDate, messageManager))
	{
		return null;
	}
	return this.generateTimeSelections(singleValueTimeCartesianList, filterLevelType, filterHierarchyName, queryModel, timeDimension, messageManager);
};
oFF.QTimeOperation.prototype.getCompatibleFilterHierarchyNameAndLevelTypeName = function(queryModel, timeDimension, filterElementFieldMetadata, levelTypesToSearch)
{
	var leveledHierarchies = timeDimension.getLeveledHierarchies();
	for (var idxLeveledHierarchy = 0; idxLeveledHierarchy < leveledHierarchies.size(); idxLeveledHierarchy++)
	{
		var hierarchy = leveledHierarchies.get(idxLeveledHierarchy);
		var hierarchyContainsAllLevelTypesToCheck = true;
		for (var iterator = levelTypesToSearch.getIterator(); iterator.hasNext(); )
		{
			if (hierarchy.getLevelByType(iterator.next()) === null)
			{
				hierarchyContainsAllLevelTypesToCheck = false;
			}
		}
		if (levelTypesToSearch.size() === 0 || hierarchyContainsAllLevelTypesToCheck)
		{
			var level = oFF.QTimeDimensionUtil.getHierarchyLevelMatchingField(queryModel, hierarchy, filterElementFieldMetadata);
			if (oFF.notNull(level))
			{
				return oFF.XPairOfString.create(hierarchy.getName(), level.getLevelType().getName());
			}
		}
	}
	return null;
};
oFF.QTimeOperation.prototype.generateTimeSelections = function(singleValueTimeCartesianList, filterLevelType, filterHierarchyName, queryModel, timeDimension, messageManager)
{
	var filterElement = singleValueTimeCartesianList.getCartesianElement(0);
	var targetFilterLevelType = filterLevelType;
	var lowFilterValue = filterElement.getLow().getString();
	var highFilterValue = null;
	if (oFF.QFilterUtil.isSingleValueSourceCartesianList(singleValueTimeCartesianList) && filterElement.getComparisonOperator() === oFF.ComparisonOperator.BETWEEN)
	{
		highFilterValue = filterElement.getHigh().getString();
	}
	var isFlat = singleValueTimeCartesianList.getHierarchyName() === null;
	var persistedPlaceholderTagging = filterElement.getLow().getTagging().getByKey(oFF.QPersistedPlaceholderTag.PERSISTED_QUERY_PLACEHOLDER);
	var isToDateWithFlatRangeSelection = this.getFunction() === oFF.QTimeOperationFunction.TO_DATE && this.getUseToDateFlatRangeSelection();
	var transientCartesianList;
	if (isToDateWithFlatRangeSelection)
	{
		transientCartesianList = oFF.QFactory.createFilterCartesianList(queryModel);
	}
	else
	{
		if (oFF.QFilterUtil.isSingleValueSourceCartesianList(singleValueTimeCartesianList))
		{
			var singleValueConvertedTimeCartesianList = singleValueTimeCartesianList;
			var originalHierarchyLevelType = singleValueConvertedTimeCartesianList.getHierarchyLevelType();
			if (oFF.notNull(originalHierarchyLevelType))
			{
				targetFilterLevelType = originalHierarchyLevelType;
			}
			var convertedTimeCartesianList = oFF.QFactory.createFilterConvertedTimeCartesianListWithField(queryModel, timeDimension.getHierarchyKeyField());
			convertedTimeCartesianList.setIsSingleValueSourceCartesianList(true);
			convertedTimeCartesianList.setHierarchyLevelType(originalHierarchyLevelType);
			transientCartesianList = convertedTimeCartesianList;
		}
		else if (this.getFunction() === oFF.QTimeOperationFunction.TO_DATE)
		{
			var convertedToDateTimeCartesianList = oFF.QFactory.createFilterConvertedTimeCartesianListWithField(queryModel, timeDimension.getHierarchyKeyField());
			convertedToDateTimeCartesianList.setIsSingleValueSourceCartesianList(true);
			transientCartesianList = convertedToDateTimeCartesianList;
		}
		else
		{
			transientCartesianList = oFF.QFactory.createFilterCartesianListWithField(queryModel, timeDimension.getHierarchyKeyField());
		}
		transientCartesianList.setConvertToFlatFilter(true);
		transientCartesianList.setHierarchyName(filterHierarchyName);
	}
	if (isToDateWithFlatRangeSelection)
	{
		var lowestToDateFilterValueCanonicalDate = null;
		var highestToDateFilterValueCanonicalDate = null;
		isFlat = singleValueTimeCartesianList.getHierarchyName() === null;
		for (var cartesianListIdx = 0; cartesianListIdx < singleValueTimeCartesianList.size(); cartesianListIdx++)
		{
			filterElement = singleValueTimeCartesianList.getCartesianElement(cartesianListIdx);
			lowFilterValue = filterElement.getLow().getString();
			var filterValueCanonicalDate = this.convertFilterValueToCanonicalDate(queryModel, timeDimension, filterLevelType, lowFilterValue, filterHierarchyName, isFlat);
			if (oFF.isNull(lowestToDateFilterValueCanonicalDate) || oFF.QCanonicalDateUtil.isBefore(queryModel, timeDimension, filterHierarchyName, filterValueCanonicalDate, lowestToDateFilterValueCanonicalDate))
			{
				lowestToDateFilterValueCanonicalDate = filterValueCanonicalDate;
			}
			if (oFF.notNull(highFilterValue))
			{
				filterValueCanonicalDate = this.convertFilterValueToCanonicalDate(queryModel, timeDimension, filterLevelType, highFilterValue, filterHierarchyName, isFlat);
			}
			if (oFF.isNull(highestToDateFilterValueCanonicalDate) || oFF.QCanonicalDateUtil.isAfter(queryModel, timeDimension, filterHierarchyName, filterValueCanonicalDate, highestToDateFilterValueCanonicalDate))
			{
				highestToDateFilterValueCanonicalDate = filterValueCanonicalDate;
			}
			persistedPlaceholderTagging = filterElement.getLow().getTagging().getByKey(oFF.QPersistedPlaceholderTag.PERSISTED_QUERY_PLACEHOLDER);
		}
		if (!this.createToDateFlatRangeSelectionFromCanonicalDates(queryModel, timeDimension, filterHierarchyName, filterLevelType, transientCartesianList, lowestToDateFilterValueCanonicalDate, highestToDateFilterValueCanonicalDate, messageManager, persistedPlaceholderTagging))
		{
			return null;
		}
	}
	else if (oFF.isNull(highFilterValue) || this.getFunction() === oFF.QTimeOperationFunction.TO_DATE)
	{
		isFlat = singleValueTimeCartesianList.getHierarchyName() === null;
		for (var i = 0; i < singleValueTimeCartesianList.size(); i++)
		{
			filterElement = singleValueTimeCartesianList.getCartesianElement(i);
			lowFilterValue = filterElement.getLow().getString();
			var lowFilterValueCanonicalDate = this.convertFilterValueToCanonicalDate(queryModel, timeDimension, filterLevelType, lowFilterValue, filterHierarchyName, isFlat);
			persistedPlaceholderTagging = filterElement.getLow().getTagging().getByKey(oFF.QPersistedPlaceholderTag.PERSISTED_QUERY_PLACEHOLDER);
			if (isToDateWithFlatRangeSelection)
			{
				var highFilterValueCanonicalDate = lowFilterValueCanonicalDate;
				if (oFF.notNull(highFilterValue))
				{
					highFilterValueCanonicalDate = this.convertFilterValueToCanonicalDate(queryModel, timeDimension, filterLevelType, highFilterValue, filterHierarchyName, isFlat);
				}
				if (!this.createToDateFlatRangeSelectionFromCanonicalDates(queryModel, timeDimension, filterHierarchyName, filterLevelType, transientCartesianList, lowFilterValueCanonicalDate, highFilterValueCanonicalDate, messageManager, persistedPlaceholderTagging))
				{
					return null;
				}
			}
			else
			{
				if (!this.performTimeShiftAndAddToCartesianList(queryModel, timeDimension, filterHierarchyName, targetFilterLevelType, lowFilterValueCanonicalDate, messageManager, transientCartesianList, persistedPlaceholderTagging))
				{
					return null;
				}
				if (this.getFunction() === oFF.QTimeOperationFunction.TO_DATE)
				{
					break;
				}
			}
		}
	}
	else
	{
		var lowRangeFilterValueCanonicalDate = this.convertFilterValueToCanonicalDate(queryModel, timeDimension, filterLevelType, lowFilterValue, filterHierarchyName, isFlat);
		var highRangeFilterValueCanonicalDate = this.convertFilterValueToCanonicalDate(queryModel, timeDimension, filterLevelType, highFilterValue, filterHierarchyName, isFlat);
		highRangeFilterValueCanonicalDate = oFF.QCanonicalDateUtil.incrementCanonicalDate(queryModel, timeDimension, filterHierarchyName, highRangeFilterValueCanonicalDate, 1, filterLevelType);
		while (!oFF.QCanonicalDateUtil.isEqual(lowRangeFilterValueCanonicalDate, highRangeFilterValueCanonicalDate))
		{
			if (!this.performTimeShiftAndAddToCartesianList(queryModel, timeDimension, filterHierarchyName, targetFilterLevelType, lowRangeFilterValueCanonicalDate, messageManager, transientCartesianList, persistedPlaceholderTagging))
			{
				return null;
			}
			lowRangeFilterValueCanonicalDate = oFF.QCanonicalDateUtil.incrementCanonicalDate(queryModel, timeDimension, filterHierarchyName, lowRangeFilterValueCanonicalDate, 1, filterLevelType);
		}
	}
	return transientCartesianList;
};
oFF.QTimeOperation.prototype.convertFilterValueToCanonicalDate = function(queryModel, timeDimension, filterLevelType, filterValue, filterHierarchyName, isFlat)
{
	var filterValueCanonicalDate;
	if (!isFlat)
	{
		filterValueCanonicalDate = oFF.QCanonicalDateUtil.createCanonicalDateFromEntityValue(queryModel, timeDimension, filterHierarchyName, filterValue);
	}
	else
	{
		filterValueCanonicalDate = oFF.QCanonicalDateUtil.createCanonicalDateFromEntityValueInfo(queryModel, timeDimension, filterHierarchyName, filterValue, filterLevelType);
	}
	return filterValueCanonicalDate;
};
oFF.QTimeOperation.prototype.createToDateFlatRangeSelectionFromCanonicalDates = function(queryModel, timeDimension, filterHierarchyName, filterLevelType, cartesianList, lowFilterValueCanonicalDate, highFilterValueCanonicalDate, messageManager, persistedPlaceholderTagging)
{
	var leveledHierarchy = timeDimension.getLeveledHierarchy(filterHierarchyName);
	if (oFF.isNull(leveledHierarchy))
	{
		return false;
	}
	var toDateLevelType = filterLevelType;
	var level = leveledHierarchy.getLevelByType(toDateLevelType);
	if (oFF.isNull(level))
	{
		return false;
	}
	if (toDateLevelType === oFF.HierarchyLevelType.TIME_HALF_YEAR)
	{
		var newLevel = leveledHierarchy.getLevel(level.getLevelNumber() + 1);
		if (oFF.notNull(newLevel))
		{
			toDateLevelType = newLevel.getLevelType();
			level = newLevel;
		}
	}
	var opGranularity = this.getGranularity();
	var opLevelType = oFF.QCanonicalDateUtil.convertTimeOperationGranularityToHierarchyLevelType(opGranularity);
	if (opGranularity === oFF.QTimeOperationGranularity.PERIOD)
	{
		messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TO_DATE_FUNCTION_GRANULARITY, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TO_DATE_FUNCTION_GRANULARITY, oFF.XListOfString.create(), this.getParentAliasOrMemberName()));
		return false;
	}
	var startCanonicalDateInOpGranularity = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, filterHierarchyName, lowFilterValueCanonicalDate, opLevelType, false);
	var startCanonicalDate = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, filterHierarchyName, startCanonicalDateInOpGranularity, toDateLevelType, false);
	var endCanonicalDate = highFilterValueCanonicalDate;
	if (endCanonicalDate.getGranularity() !== startCanonicalDate.getGranularity())
	{
		endCanonicalDate = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, filterHierarchyName, endCanonicalDate, toDateLevelType, true);
	}
	var endCanonicalDateInOpGranularity = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, filterHierarchyName, highFilterValueCanonicalDate, opLevelType, false);
	if (!this.validateToDateSpansAcrossMultipleValues(startCanonicalDateInOpGranularity, endCanonicalDateInOpGranularity, messageManager))
	{
		return false;
	}
	var dimensionLevel = queryModel.getDimensionByName(level.getLevelDimensionName());
	if (oFF.notNull(dimensionLevel))
	{
		var flatKeyField = dimensionLevel.getFlatKeyField();
		cartesianList.setField(flatKeyField);
		var timeFilterOp = oFF.QFactory.createFilterOperation(queryModel, flatKeyField);
		timeFilterOp.setComparisonOperator(oFF.ComparisonOperator.BETWEEN);
		var lowValue = oFF.QCanonicalDateUtil.getEntityValueKeyFromCanonicalDate(queryModel, timeDimension, filterHierarchyName, startCanonicalDate);
		var highValue = oFF.QCanonicalDateUtil.getEntityValueKeyFromCanonicalDate(queryModel, timeDimension, filterHierarchyName, endCanonicalDate);
		oFF.QTimeDimensionUtil.setCartesianElementValues(timeFilterOp, lowValue, highValue, flatKeyField);
		if (oFF.XStringUtils.isNotNullAndNotEmpty(persistedPlaceholderTagging))
		{
			this.addPersistedPlaceholderTagging(queryModel, timeDimension, filterHierarchyName, timeFilterOp, endCanonicalDate, oFF.QPersistedPlaceholderTagType.DYNAMIC_TIME_CALCULATION_TO_DATE_SELECTION_PLACEHOLDER, persistedPlaceholderTagging);
		}
		cartesianList.add(timeFilterOp);
	}
	return true;
};
oFF.QTimeOperation.prototype.performTimeShiftAndAddToCartesianList = function(queryModel, timeDimension, filterHierarchyName, filterLevelType, canonicalDateParam, messageManager, transientCartesianList, persistedPlaceholderTagging)
{
	var canonicalDate = canonicalDateParam;
	var opFunction = this.getFunction();
	var opGranularity = this.getGranularity();
	var opLevelType = oFF.QCanonicalDateUtil.convertTimeOperationGranularityToHierarchyLevelType(opGranularity);
	var opPeriod = this.getPeriod();
	if (opFunction === oFF.QTimeOperationFunction.PREVIOUS || opFunction === oFF.QTimeOperationFunction.NEXT)
	{
		var targetLevelType;
		if (opGranularity === oFF.QTimeOperationGranularity.PERIOD)
		{
			targetLevelType = filterLevelType;
		}
		else
		{
			targetLevelType = opLevelType;
		}
		var timeShift = opPeriod;
		if (opFunction === oFF.QTimeOperationFunction.PREVIOUS)
		{
			timeShift = timeShift * -1;
		}
		canonicalDate = oFF.QCanonicalDateUtil.incrementCanonicalDate(queryModel, timeDimension, filterHierarchyName, canonicalDate, timeShift, targetLevelType);
		this.createAndAddHierarchyTimeFilterFromCanonicalDate(queryModel, timeDimension, filterHierarchyName, transientCartesianList, canonicalDate, persistedPlaceholderTagging, false);
	}
	else if (opFunction === oFF.QTimeOperationFunction.TO_DATE)
	{
		if (opGranularity === oFF.QTimeOperationGranularity.PERIOD)
		{
			messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TO_DATE_FUNCTION_GRANULARITY, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TO_DATE_FUNCTION_GRANULARITY, oFF.XListOfString.create(), this.getParentAliasOrMemberName()));
			return false;
		}
		var startCanonicalDateInOpGranularity = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, filterHierarchyName, canonicalDate, opLevelType, false);
		var startCanonicalDateInFilterGranularity = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, filterHierarchyName, startCanonicalDateInOpGranularity, filterLevelType, false);
		if (canonicalDate.getGranularity() !== startCanonicalDateInFilterGranularity.getGranularity())
		{
			canonicalDate = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, filterHierarchyName, canonicalDate, oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(startCanonicalDateInFilterGranularity.getGranularity()), false);
		}
		while (!oFF.QCanonicalDateUtil.isEqual(startCanonicalDateInFilterGranularity, canonicalDate))
		{
			this.createAndAddHierarchyTimeFilterFromCanonicalDate(queryModel, timeDimension, filterHierarchyName, transientCartesianList, startCanonicalDateInFilterGranularity, null, false);
			startCanonicalDateInFilterGranularity = oFF.QCanonicalDateUtil.incrementCanonicalDate(queryModel, timeDimension, filterHierarchyName, startCanonicalDateInFilterGranularity, 1, filterLevelType);
		}
		this.createAndAddHierarchyTimeFilterFromCanonicalDate(queryModel, timeDimension, filterHierarchyName, transientCartesianList, startCanonicalDateInFilterGranularity, null, false);
	}
	else
	{
		messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_FUNCTION, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_TIME_OPERATION_FUNCTION, oFF.XListOfString.create(), this.getParentAliasOrMemberName()));
		return false;
	}
	return true;
};
oFF.QTimeOperation.prototype.createAndAddHierarchyTimeFilterFromCanonicalDate = function(queryModel, timeDimension, hierarchyName, cartesianList, canonicalDate, persistedPlaceholderTagging, forceAddPersistedPlaceholderTagging)
{
	if (canonicalDate.getGranularity() === oFF.DateTimeGranularityType.WEEK)
	{
		var startOfWeek = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, hierarchyName, canonicalDate, oFF.HierarchyLevelType.TIME_DAY, false);
		var endOfWeek = oFF.QCanonicalDateUtil.castCanonicalDateToLevel(queryModel, timeDimension, hierarchyName, canonicalDate, oFF.HierarchyLevelType.TIME_DAY, true);
		if (startOfWeek.getYear() !== endOfWeek.getYear())
		{
			while (!oFF.QCanonicalDateUtil.isEqual(startOfWeek, endOfWeek))
			{
				cartesianList.add(this.createHierarchyTimeFilterOperationFromCanonicalDate(queryModel, timeDimension, hierarchyName, startOfWeek, persistedPlaceholderTagging, forceAddPersistedPlaceholderTagging));
				startOfWeek = oFF.QCanonicalDateUtil.incrementCanonicalDate(queryModel, timeDimension, hierarchyName, startOfWeek, 1, oFF.HierarchyLevelType.TIME_DAY);
			}
			cartesianList.add(this.createHierarchyTimeFilterOperationFromCanonicalDate(queryModel, timeDimension, hierarchyName, startOfWeek, persistedPlaceholderTagging, forceAddPersistedPlaceholderTagging));
			return;
		}
	}
	cartesianList.add(this.createHierarchyTimeFilterOperationFromCanonicalDate(queryModel, timeDimension, hierarchyName, canonicalDate, persistedPlaceholderTagging, forceAddPersistedPlaceholderTagging));
};
oFF.QTimeOperation.prototype.createHierarchyTimeFilterOperationFromCanonicalDate = function(queryModel, timeDimension, hierarchyName, canonicalDate, persistedPlaceholderTagging, forceAddPersistedPlaceholderTagging)
{
	var timeFilterOp = oFF.QFactory.createFilterOperation(queryModel, timeDimension.getHierarchyKeyField());
	timeFilterOp.setHierarchyName(hierarchyName);
	timeFilterOp.setLowString(oFF.QCanonicalDateUtil.createEntityValueFromCanonicalDate(queryModel, timeDimension, hierarchyName, canonicalDate));
	if (forceAddPersistedPlaceholderTagging || oFF.XStringUtils.isNotNullAndNotEmpty(persistedPlaceholderTagging))
	{
		this.addPersistedPlaceholderTagging(queryModel, timeDimension, hierarchyName, timeFilterOp, canonicalDate, oFF.QPersistedPlaceholderTagType.DYNAMIC_TIME_CALCULATION_SELECTION_PLACEHOLDER, persistedPlaceholderTagging);
	}
	return timeFilterOp;
};
oFF.QTimeOperation.prototype.addPersistedPlaceholderTagging = function(queryModel, timeDimension, hierarchyName, timeFilterOp, canonicalDate, tagType, persistedFilterPlaceholderTagging)
{
	var levelType = oFF.QCanonicalDateUtil.convertDateTimeGranularityToHierarchyLevelType(canonicalDate.getGranularity());
	var currentDate = oFF.QCanonicalDateUtil.createCurrentCanonicalDate(queryModel, timeDimension, hierarchyName);
	var timeSelectionPlaceholder;
	if (tagType === oFF.QPersistedPlaceholderTagType.DYNAMIC_TIME_CALCULATION_TO_DATE_SELECTION_PLACEHOLDER)
	{
		timeSelectionPlaceholder = new oFF.QTimeSelectionPlaceholderToDate();
		var opLevelType = oFF.QCanonicalDateUtil.convertTimeOperationGranularityToHierarchyLevelType(this.getGranularity());
		if (oFF.notNull(opLevelType))
		{
			var opGranularity = oFF.QCanonicalDateUtil.convertHierarchyLevelTypeToDateTimeGranularity(opLevelType);
			timeSelectionPlaceholder.setTimeOperationGranularity(opGranularity);
		}
	}
	else
	{
		timeSelectionPlaceholder = new oFF.QTimeSelectionPlaceholder();
	}
	timeSelectionPlaceholder.setGranularity(canonicalDate.getGranularity());
	timeSelectionPlaceholder.setShift(oFF.QCanonicalDateUtil.getDifferenceBetweenCanonicalDates(queryModel, timeDimension, hierarchyName, canonicalDate, currentDate, levelType));
	var filterPlaceholderTag = oFF.QPersistedPlaceholderTagFilter.createFromPlaceholderString(persistedFilterPlaceholderTagging);
	if (oFF.notNull(filterPlaceholderTag))
	{
		var ccdId = filterPlaceholderTag.getCustomCurrentDateId();
		if (oFF.XStringUtils.isNotNullAndNotEmpty(ccdId))
		{
			timeSelectionPlaceholder.setCcdId(ccdId);
		}
	}
	timeSelectionPlaceholder.setOriginalLowValue(timeFilterOp.getLow().getString());
	var canonicalDateContext = oFF.QFactory.createCanonicalDateContext(queryModel, timeDimension, hierarchyName);
	var canonicalDateContextJson = canonicalDateContext.serializeToJson();
	var tag = oFF.QFactory.createPersistedPlaceholderTagCalculation(tagType.getName(), timeSelectionPlaceholder.getStringRepresentation(), canonicalDateContextJson.getStringRepresentation());
	timeFilterOp.getLow().getTagging().put(oFF.QPersistedPlaceholderTag.PERSISTED_QUERY_PLACEHOLDER, tag.getPlaceholderString());
};
oFF.QTimeOperation.prototype.getLowestHierarchyLevelTypeFromCartesianList = function(timeCartesianList, queryModel, timeDimension)
{
	if (oFF.QFilterUtil.isSingleValueSourceCartesianList(timeCartesianList))
	{
		var convertedTimeCartesianListHierarchyLevelType = timeCartesianList.getHierarchyLevelType();
		if (oFF.notNull(convertedTimeCartesianListHierarchyLevelType))
		{
			return convertedTimeCartesianListHierarchyLevelType;
		}
	}
	var lowestLevelType = oFF.HierarchyLevelType.ALL;
	for (var i = 0; i < timeCartesianList.size(); i++)
	{
		var filterElement = timeCartesianList.getCartesianElement(i);
		var filterLevelType = null;
		var filterHierarchyName = timeCartesianList.getHierarchyName();
		if (oFF.isNull(filterHierarchyName))
		{
			var leveledHierarchies = timeDimension.getLeveledHierarchies();
			for (var idxLeveledHierarchy = 0; idxLeveledHierarchy < leveledHierarchies.size(); idxLeveledHierarchy++)
			{
				var hierarchy = leveledHierarchies.get(idxLeveledHierarchy);
				var level = oFF.QTimeDimensionUtil.getHierarchyLevelMatchingField(queryModel, hierarchy, filterElement.getFieldMetadata());
				if (oFF.notNull(level))
				{
					filterLevelType = level.getLevelType();
					break;
				}
			}
		}
		else
		{
			filterLevelType = oFF.QCanonicalDateUtil.getHierarchyLevelTypeFromEntityValue(queryModel, timeDimension, filterHierarchyName, filterElement.getLow().getString());
		}
		if (oFF.notNull(filterLevelType))
		{
			if (filterLevelType.getLevelIndex() > lowestLevelType.getLevelIndex())
			{
				lowestLevelType = filterLevelType;
			}
		}
	}
	return lowestLevelType;
};
oFF.QTimeOperation.prototype.generateTimeSelection = function(queryModel, messageManager)
{
	return this.generateTransientTimeSelection(queryModel, messageManager);
};
oFF.QTimeOperation.prototype.getForceMemberNavigationGeneration = function()
{
	return this.m_forceMemberNavigationGeneration;
};
oFF.QTimeOperation.prototype.setForceMemberNavigationGeneration = function(forceMemberNavigationGeneration)
{
	this.m_forceMemberNavigationGeneration = forceMemberNavigationGeneration;
	this.notifyNodeChanged();
};
oFF.QTimeOperation.prototype.getUseToDateFlatRangeSelection = function()
{
	return this.m_useToDateFlatRangeSelection;
};
oFF.QTimeOperation.prototype.setUseToDateFlatRangeSelection = function(useToDateFlatRangeSelection)
{
	this.m_useToDateFlatRangeSelection = useToDateFlatRangeSelection;
	this.notifyNodeChanged();
};
oFF.QTimeOperation.prototype.getTimeDimensionTextOrName = function()
{
	var text = "";
	var timeDimension = this.getQueryModel().getDimensionByName(this.getDimensionName());
	if (oFF.notNull(timeDimension))
	{
		text = timeDimension.getText();
		if (oFF.XStringUtils.isNullOrEmpty(text))
		{
			text = timeDimension.getName();
		}
	}
	return text;
};
oFF.QTimeOperation.prototype.getParentTextOrName = function()
{
	var text = "";
	var parent = this.getParent();
	if (oFF.notNull(parent))
	{
		text = parent.getText();
		if (oFF.XStringUtils.isNullOrEmpty(text))
		{
			text = parent.getAliasOrMemberName();
		}
	}
	return text;
};
oFF.QTimeOperation.prototype.getParentAliasOrMemberName = function()
{
	var text = "";
	var parent = this.getParent();
	if (oFF.notNull(parent))
	{
		text = parent.getAliasOrMemberName();
	}
	return text;
};

oFF.QUniversalDisplayHierarchies = function() {};
oFF.QUniversalDisplayHierarchies.prototype = new oFF.QModelComponent();
oFF.QUniversalDisplayHierarchies.prototype._ff_c = "QUniversalDisplayHierarchies";

oFF.QUniversalDisplayHierarchies.create = function(context, queryModel)
{
	var udh = new oFF.QUniversalDisplayHierarchies();
	udh.setupUniversalDisplayHierarchies(context, queryModel);
	return udh;
};
oFF.QUniversalDisplayHierarchies.prototype.m_hierarchies = null;
oFF.QUniversalDisplayHierarchies.prototype.setupUniversalDisplayHierarchies = function(context, queryModel)
{
	this.setupModelComponent(context, queryModel);
	this.m_hierarchies = oFF.XListOfNameObject.create();
};
oFF.QUniversalDisplayHierarchies.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originUniversalDisplayHierarchies = other;
	var queryModel = this.getQueryModel();
	var hierarchies = originUniversalDisplayHierarchies.getHierarchies();
	var size = hierarchies.size();
	for (var i = 0; i < size; i++)
	{
		var originHierarchy = hierarchies.get(i);
		var dimensionNames = oFF.XListOfString.create();
		dimensionNames.addAll(originHierarchy.getDimensionNames());
		var axis = queryModel.getAxis(originHierarchy.getHierarchyDedicatedAxis().getType());
		this.addHierarchy(originHierarchy.getName(), dimensionNames, originHierarchy.getInitialDrillLevel(), originHierarchy.getAlignment(), originHierarchy.isActive(), axis, originHierarchy.hasCustomDimensions());
		var dimension = queryModel.getDimensionByNameFromExistingMetadata(originHierarchy.getName());
		queryModel.getVirtualAxis().add(dimension);
	}
};
oFF.QUniversalDisplayHierarchies.prototype.mergeDeepRecursive = function(settings, other)
{
	if (oFF.notNull(other))
	{
		this.m_hierarchies.clear();
		this.copyFrom(other, null);
	}
};
oFF.QUniversalDisplayHierarchies.prototype.releaseObject = function()
{
	oFF.QModelComponent.prototype.releaseObject.call( this );
	this.m_hierarchies = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_hierarchies);
};
oFF.QUniversalDisplayHierarchies.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.UNIVERSAL_DISPLAY_HIERARCHIES;
};
oFF.QUniversalDisplayHierarchies.prototype.addHierarchy = function(name, dimensionNames, initialDrillLevel, alignment, active, axis, customDimensions)
{
	var existingHierarchy = this.getByName(name);
	if (oFF.notNull(existingHierarchy))
	{
		existingHierarchy.setDimensionNames(dimensionNames);
		existingHierarchy.setInitialDrillLevel(initialDrillLevel);
		existingHierarchy.setAlignment(alignment);
		existingHierarchy.setActive(active);
		existingHierarchy.setAxis(axis);
		existingHierarchy.setCustomDimensions(customDimensions);
	}
	else
	{
		var hierarchy = oFF.QUniversalDisplayHierarchy.create(this.getContext(), this.getQueryModelBase(), name, dimensionNames, initialDrillLevel, alignment, active);
		hierarchy.setAxis(axis);
		hierarchy.setCustomDimensions(customDimensions);
		this.m_hierarchies.add(hierarchy);
	}
};
oFF.QUniversalDisplayHierarchies.prototype.getIndexedChildren = function()
{
	return oFF.XIteratorWrapper.create(this.m_hierarchies.getIterator());
};
oFF.QUniversalDisplayHierarchies.prototype.getHierarchies = function()
{
	return this.m_hierarchies;
};
oFF.QUniversalDisplayHierarchies.prototype.updateIncludedDimensions = function()
{
	for (var i = 0; i < this.m_hierarchies.size(); i++)
	{
		this.m_hierarchies.get(i).updateIncludedDimensions();
	}
};
oFF.QUniversalDisplayHierarchies.prototype.getByName = function(hierarchyName)
{
	return this.m_hierarchies.getByKey(hierarchyName);
};
oFF.QUniversalDisplayHierarchies.prototype.getByIncludedDimension = function(dimension)
{
	for (var i = 0; i < this.m_hierarchies.size(); i++)
	{
		var hierarchy = this.m_hierarchies.get(i);
		hierarchy.updateIncludedDimensions();
		if (hierarchy.getDimensionNames().contains(dimension.getName()))
		{
			return hierarchy;
		}
	}
	return null;
};
oFF.QUniversalDisplayHierarchies.prototype.getByAxisType = function(axisType)
{
	for (var i = 0; i < this.m_hierarchies.size(); i++)
	{
		var hierarchy = this.m_hierarchies.get(i);
		if (hierarchy.getHierarchyDedicatedAxis().getType() === axisType)
		{
			return hierarchy;
		}
	}
	return null;
};
oFF.QUniversalDisplayHierarchies.prototype.setHierarchy = function(dimensionNames, initialDrillLevel, active)
{
	var queryManager = this.getQueryManager();
	if (this.m_hierarchies.isEmpty() && oFF.notNull(queryManager) && queryManager.hasVariables() && !queryManager.isSubmitted())
	{
		throw oFF.XException.createIllegalArgumentException("Ensure variables have been submitted before updating a universal display hierarchy");
	}
	if (!oFF.XCollectionUtils.hasElements(dimensionNames))
	{
		throw oFF.XException.createIllegalArgumentException("The list of dimensions must not be empty");
	}
	var dimension = this.getQueryModel().getDimensionByName(dimensionNames.get(0));
	if (oFF.isNull(dimension))
	{
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate3("The dimensions ", dimensionNames.toString(), " must exist and be placed next to each other on the axis."));
	}
	var axis = dimension.getAxis();
	for (var i = 0; i < this.m_hierarchies.size(); i++)
	{
		var hierarchy = this.m_hierarchies.get(i);
		if (hierarchy.getHierarchyDedicatedAxis() === axis)
		{
			var originalDimensionNames = hierarchy.getDimensionNames();
			hierarchy.setDimensionNames(dimensionNames);
			if (active && !hierarchy.isDimensionListValid())
			{
				hierarchy.setDimensionNames(originalDimensionNames.createListOfStringCopy());
				throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate3("The dimensions ", dimensionNames.toString(), " must exist and be placed next to each other on the axis."));
			}
			hierarchy.setActive(active);
			hierarchy.setInitialDrillLevel(initialDrillLevel);
			return hierarchy;
		}
	}
	throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate5("No suitable UDH could be found for dimensions ", dimensionNames.toString(), " and hierarchy ", this.m_hierarchies.toString(), ". Ensure these dimensions have been added to rows or columns before (de)activating a hierarchy."));
};
oFF.QUniversalDisplayHierarchies.prototype.toString = function()
{
	return this.m_hierarchies.toString();
};

oFF.QUniversalDisplayHierarchy = function() {};
oFF.QUniversalDisplayHierarchy.prototype = new oFF.QModelComponent();
oFF.QUniversalDisplayHierarchy.prototype._ff_c = "QUniversalDisplayHierarchy";

oFF.QUniversalDisplayHierarchy.create = function(context, queryModel, name, dimensionNames, initialDrillLevel, alignment, active)
{
	var udh = new oFF.QUniversalDisplayHierarchy();
	udh.setName(name);
	udh.setupUniversalDisplayHierarchy(context, queryModel, dimensionNames, initialDrillLevel, alignment, active);
	return udh;
};
oFF.QUniversalDisplayHierarchy.prototype.m_dimensionNames = null;
oFF.QUniversalDisplayHierarchy.prototype.m_initialDrillLevel = 0;
oFF.QUniversalDisplayHierarchy.prototype.m_alignment = null;
oFF.QUniversalDisplayHierarchy.prototype.m_active = false;
oFF.QUniversalDisplayHierarchy.prototype.m_axis = null;
oFF.QUniversalDisplayHierarchy.prototype.m_customDimensions = false;
oFF.QUniversalDisplayHierarchy.prototype.setupUniversalDisplayHierarchy = function(context, queryModel, dimensionNames, initialDrillLevel, alignment, active)
{
	this.setupModelComponent(context, queryModel);
	this.m_dimensionNames = dimensionNames;
	this.m_initialDrillLevel = initialDrillLevel;
	this.m_alignment = alignment;
	this.m_active = active;
	this.m_customDimensions = false;
};
oFF.QUniversalDisplayHierarchy.prototype.releaseObject = function()
{
	oFF.QModelComponent.prototype.releaseObject.call( this );
	this.m_dimensionNames = oFF.XObjectExt.release(this.m_dimensionNames);
	this.m_alignment = null;
	this.m_axis = null;
};
oFF.QUniversalDisplayHierarchy.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.UNIVERSAL_DISPLAY_HIERARCHY;
};
oFF.QUniversalDisplayHierarchy.prototype.updateIncludedDimensions = function()
{
	if (this.getModelCapabilities().supportsUniversalDisplayHierarchiesCustomDimensions() && this.m_customDimensions)
	{
		return;
	}
	var axis = this.getHierarchyDedicatedAxis();
	if (oFF.notNull(axis))
	{
		this.m_dimensionNames.clear();
		var dimensions = axis.getIterator();
		while (dimensions.hasNext())
		{
			var dimensionName = dimensions.next().getName();
			if (!oFF.XString.isEqual(dimensionName, this.getName()))
			{
				this.m_dimensionNames.add(dimensionName);
			}
		}
	}
};
oFF.QUniversalDisplayHierarchy.prototype.getHierarchyDedicatedAxis = function()
{
	return this.m_axis;
};
oFF.QUniversalDisplayHierarchy.prototype.setAxis = function(axis)
{
	if (oFF.notNull(axis))
	{
		this.m_axis = axis;
	}
};
oFF.QUniversalDisplayHierarchy.prototype.getDimensionNames = function()
{
	return this.m_dimensionNames;
};
oFF.QUniversalDisplayHierarchy.prototype.setDimensionNames = function(dimensionNames)
{
	if (!this.m_dimensionNames.isEqualTo(dimensionNames))
	{
		this.setCustomDimensions(true);
		var oldValue = this.m_dimensionNames;
		this.m_dimensionNames.clear();
		this.m_dimensionNames.addAll(dimensionNames);
		this.notifyPropertyChanged(oFF.QUniversalDisplayHierarchyProperties.QY_DIMENSION_NAMES, oldValue, this.m_dimensionNames);
	}
};
oFF.QUniversalDisplayHierarchy.prototype.addDimension = function(dimensionName)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(dimensionName) && !this.m_dimensionNames.contains(dimensionName))
	{
		this.setCustomDimensions(true);
		var oldValue = this.m_dimensionNames;
		this.m_dimensionNames.add(dimensionName);
		this.notifyPropertyChanged(oFF.QUniversalDisplayHierarchyProperties.QY_DIMENSION_NAMES, oldValue, this.m_dimensionNames);
	}
};
oFF.QUniversalDisplayHierarchy.prototype.removeDimension = function(dimensionName)
{
	if (this.m_dimensionNames.contains(dimensionName))
	{
		this.setCustomDimensions(true);
		var oldValue = this.m_dimensionNames;
		this.m_dimensionNames.removeElement(dimensionName);
		this.notifyPropertyChanged(oFF.QUniversalDisplayHierarchyProperties.QY_DIMENSION_NAMES, oldValue, this.m_dimensionNames);
	}
};
oFF.QUniversalDisplayHierarchy.prototype.getInitialDrillLevel = function()
{
	return this.m_initialDrillLevel;
};
oFF.QUniversalDisplayHierarchy.prototype.setInitialDrillLevel = function(initialDrillLevel)
{
	if (this.m_initialDrillLevel !== initialDrillLevel)
	{
		var oldValue = this.m_initialDrillLevel;
		this.m_initialDrillLevel = initialDrillLevel;
		this.notifyPropertyIntegerChanged(oFF.QUniversalDisplayHierarchyProperties.QY_INITIAL_DRILL_LEVEL, oldValue, initialDrillLevel);
	}
};
oFF.QUniversalDisplayHierarchy.prototype.getAlignment = function()
{
	return this.m_alignment;
};
oFF.QUniversalDisplayHierarchy.prototype.setAlignment = function(alignment)
{
	if (oFF.isNull(alignment) || this.m_alignment === alignment)
	{
		return;
	}
	var oldValue = this.m_alignment;
	this.m_alignment = alignment;
	this.notifyPropertyConstantChanged(oFF.QUniversalDisplayHierarchyProperties.QY_LOWER_LEVEL_NODE_ALIGNMENT, oldValue, alignment);
};
oFF.QUniversalDisplayHierarchy.prototype.isActive = function()
{
	return this.m_active;
};
oFF.QUniversalDisplayHierarchy.prototype.setActive = function(active)
{
	if (this.m_active !== active)
	{
		this.m_active = active;
		this.notifyPropertyBooleanChanged(oFF.QUniversalDisplayHierarchyProperties.QY_ACTIVE, !active, active);
	}
};
oFF.QUniversalDisplayHierarchy.prototype.getKeyField = function(udhDimension, attributes, key, name)
{
	if (oFF.notNull(attributes))
	{
		var size = attributes.size();
		for (var i = 0; i < size; i++)
		{
			var attribute = attributes.getStructureAt(i);
			if (attribute.getBooleanByKeyExt(key, false))
			{
				var keyField = udhDimension.getFieldByName(attribute.getStringByKey(name));
				if (oFF.notNull(keyField))
				{
					return keyField;
				}
			}
		}
	}
	return null;
};
oFF.QUniversalDisplayHierarchy.prototype.getTextField = function(udhDimension)
{
	var queryModel = udhDimension.getQueryModel();
	var size = this.m_dimensionNames.size();
	for (var i = 0; i < size; i++)
	{
		var dim = queryModel.getDimensionByName(this.m_dimensionNames.get(i));
		if (oFF.notNull(dim))
		{
			var field = this.getUdhField(udhDimension, dim.getFlatTextField());
			if (oFF.notNull(field))
			{
				return field;
			}
		}
	}
	return null;
};
oFF.QUniversalDisplayHierarchy.prototype.getDisplayKeyField = function(udhDimension)
{
	var queryModel = udhDimension.getQueryModel();
	var size = this.m_dimensionNames.size();
	for (var i = 0; i < size; i++)
	{
		var dim = queryModel.getDimensionByName(this.m_dimensionNames.get(i));
		if (oFF.notNull(dim))
		{
			var field = this.getUdhField(udhDimension, dim.getFlatDisplayKeyField());
			if (oFF.notNull(field))
			{
				return field;
			}
		}
	}
	return null;
};
oFF.QUniversalDisplayHierarchy.prototype.getUdhField = function(udhDimension, dimensionField)
{
	if (oFF.notNull(dimensionField))
	{
		var udhFieldName = oFF.XString.replace(dimensionField.getName(), dimensionField.getDimension().getName(), this.getName());
		var field = udhDimension.getFieldByName(udhFieldName);
		if (oFF.notNull(field))
		{
			return field;
		}
	}
	return null;
};
oFF.QUniversalDisplayHierarchy.prototype.mapFieldToOriginalDimension = function(udhField)
{
	if (oFF.notNull(udhField) && oFF.XString.startsWith(udhField.getName(), this.getName()))
	{
		var fieldNameWithoutDimPrefix = oFF.XString.replace(udhField.getName(), this.getName(), "");
		var queryModel = this.getQueryModel();
		var size = this.m_dimensionNames.size();
		for (var i = 0; i < size; i++)
		{
			var dim = queryModel.getDimensionByName(this.m_dimensionNames.get(i));
			var originalFieldName = oFF.XStringUtils.concatenate2(dim.getName(), fieldNameWithoutDimPrefix);
			var field = dim.getFieldByName(originalFieldName);
			if (oFF.notNull(field))
			{
				return field;
			}
		}
	}
	return null;
};
oFF.QUniversalDisplayHierarchy.prototype.isDimensionListValid = function()
{
	var axis = this.getHierarchyDedicatedAxis();
	var indexes = oFF.XListOfString.create();
	for (var i = 0; i < this.m_dimensionNames.size(); i++)
	{
		var dimension = this.getQueryModel().getDimensionByName(this.m_dimensionNames.get(i));
		indexes.add(oFF.XInteger.convertToString(axis.getIndex(dimension)));
	}
	indexes.sortByDirection(oFF.XSortDirection.ASCENDING);
	var lastIndex = -1;
	for (var k = 0; k < indexes.size(); k++)
	{
		var index = oFF.XInteger.convertFromString(indexes.get(k));
		if (index === -1 || lastIndex >= 0 && index !== lastIndex + 1)
		{
			return false;
		}
		lastIndex = index;
	}
	return true;
};
oFF.QUniversalDisplayHierarchy.prototype.setCustomDimensions = function(useCustomDimensions)
{
	if (this.m_customDimensions !== useCustomDimensions)
	{
		this.m_customDimensions = useCustomDimensions;
		this.notifyPropertyBooleanChanged(oFF.QUniversalDisplayHierarchyProperties.QY_CUSTOM_DIMENSIONS, !useCustomDimensions, useCustomDimensions);
	}
};
oFF.QUniversalDisplayHierarchy.prototype.hasCustomDimensions = function()
{
	return this.m_customDimensions;
};
oFF.QUniversalDisplayHierarchy.prototype.toString = function()
{
	var buffer = oFF.XStringBuffer.create();
	buffer.append("{name: ").append(this.getName());
	buffer.append(", active: ").appendBoolean(this.isActive());
	buffer.append(", initialDrillLevel: ").appendInt(this.getInitialDrillLevel());
	buffer.append(", dimensions: ").append(this.getDimensionNames().toString());
	buffer.append("}");
	return buffer.toString();
};

oFF.QValueHelpVarDimMember = function() {};
oFF.QValueHelpVarDimMember.prototype = new oFF.QModelComponent();
oFF.QValueHelpVarDimMember.prototype._ff_c = "QValueHelpVarDimMember";

oFF.QValueHelpVarDimMember.create = function(context, dimMemberVariable)
{
	var newObj = new oFF.QValueHelpVarDimMember();
	newObj.setupValueHelp(context, dimMemberVariable);
	return newObj;
};
oFF.QValueHelpVarDimMember.prototype.m_dimMemberVariable = null;
oFF.QValueHelpVarDimMember.prototype.m_valueHelpManager = null;
oFF.QValueHelpVarDimMember.prototype.m_valueHelpDimension = null;
oFF.QValueHelpVarDimMember.prototype.m_rootNode = null;
oFF.QValueHelpVarDimMember.prototype.m_offsetRows = 0;
oFF.QValueHelpVarDimMember.prototype.m_maxRows = 0;
oFF.QValueHelpVarDimMember.prototype.setupValueHelp = function(context, dimMemberVariable)
{
	oFF.QModelComponent.prototype.setupModelComponent.call( this , context, dimMemberVariable);
	this.m_dimMemberVariable = dimMemberVariable;
	var queryModel = dimMemberVariable.getDimension().getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var queryManager = queryModel.getQueryManager();
		var instanceId = queryModel.getDataSource().getInstanceId();
		this.m_valueHelpManager = queryManager.cloneQueryManager();
		this.prepareQueryLayout(instanceId);
	}
	this.m_rootNode = oFF.QFactory.createValueHelpNode(this, null, null, 0, -1);
};
oFF.QValueHelpVarDimMember.prototype.prepareQueryLayout = function(instanceId)
{
	var originDim = this.m_dimMemberVariable.getDimension();
	var dimName = originDim.getName();
	var valueHelpModel = this.m_valueHelpManager.getQueryModel();
	var sys = this.m_valueHelpManager.getSystemDescription();
	var systemType = sys.getSystemType();
	if (systemType.isTypeOf(oFF.SystemType.BW))
	{
		var dataSource = valueHelpModel.getDataSourceBase();
		dataSource.setInstanceId(instanceId);
		dataSource.setType(oFF.MetaObjectType.QUERY_VALUEHELP);
		var variableProcessor = this.m_valueHelpManager.getVariableProcessor();
		variableProcessor.setVariableProcessorState(oFF.VariableProcessorState.VALUE_HELP);
	}
	var sortingManager = valueHelpModel.getSortingManager();
	var sortingOperations = sortingManager.getSortingOperations();
	sortingOperations.clear();
	var cmds = valueHelpModel.getConvenienceCommands();
	cmds.clearAxis(oFF.AxisType.ROWS);
	cmds.clearAxis(oFF.AxisType.COLUMNS);
	this.m_valueHelpDimension = valueHelpModel.getDimensionByName(dimName);
	cmds.moveDimensionToAxis(dimName, oFF.AxisType.ROWS);
	if (this.m_valueHelpDimension.supportsHierarchy())
	{
		var hierarchyName = this.m_dimMemberVariable.getHierarchyName();
		var hierarchyVersion = this.m_dimMemberVariable.getHierarchyVersion();
		if (oFF.isNull(hierarchyName))
		{
			this.m_valueHelpDimension.setHierarchyActive(false);
		}
		else
		{
			this.m_valueHelpDimension.activateHierarchy(hierarchyName, hierarchyVersion, null);
		}
	}
	if (!this.m_valueHelpDimension.isHierarchyActive())
	{
		var resultSetSorting = this.m_valueHelpDimension.getResultSetSorting();
		resultSetSorting.setSortByKey();
		resultSetSorting.setDirection(oFF.XSortDirection.ASCENDING);
	}
	var selectorReadModes = this.m_valueHelpDimension.getSupportedReadModes(oFF.QContextType.SELECTOR).getIterator();
	var readModeManagerBase = this.m_valueHelpDimension.getReadModeManagerBase();
	readModeManagerBase.clearReadModes(oFF.QContextType.RESULT_SET);
	var defaultValueBest = null;
	var defaultValueFallback = null;
	while (selectorReadModes.hasNext())
	{
		defaultValueFallback = selectorReadModes.next();
		if (defaultValueFallback.isTypeOf(oFF.QMemberReadMode.BOOKED))
		{
			if (oFF.isNull(defaultValueBest))
			{
				defaultValueBest = defaultValueFallback;
			}
			else if (defaultValueBest.getOrder() < defaultValueFallback.getOrder())
			{
				defaultValueBest = defaultValueFallback;
			}
		}
		readModeManagerBase.addSupportedReadMode(oFF.QContextType.RESULT_SET, defaultValueFallback);
	}
	oFF.XObjectExt.release(selectorReadModes);
	var readMode = this.m_valueHelpDimension.getReadMode(oFF.QContextType.SELECTOR);
	if (oFF.isNull(readMode))
	{
		if (oFF.notNull(defaultValueBest))
		{
			readMode = defaultValueBest;
		}
		else
		{
			readMode = defaultValueFallback;
		}
	}
	this.m_valueHelpDimension.setReadMode(oFF.QContextType.RESULT_SET, readMode);
	var filter = valueHelpModel.getFilterBase();
	if (filter.isValueHelpFilterInitialized())
	{
		var selectorContainer = filter.getValuehelpFilter();
		filter.setDynamicFilter(selectorContainer);
	}
	if (systemType.isTypeOf(oFF.SystemType.BW))
	{
		var variableManagerBase = valueHelpModel.getVariableManagerBase();
		var excludeName = this.m_dimMemberVariable.getName();
		var variablesCopy = oFF.XCollectionUtils.createListCopy(variableManagerBase.getVariables());
		var iterator = variablesCopy.getIterator();
		while (iterator.hasNext())
		{
			var variable = iterator.next();
			var name = variable.getName();
			if (!oFF.XString.isEqual(excludeName, name))
			{
				variableManagerBase.removeVariable(name);
			}
		}
	}
	this.m_valueHelpManager.applyValueHelpCapabilities();
};
oFF.QValueHelpVarDimMember.prototype.releaseObject = function()
{
	this.m_dimMemberVariable = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QValueHelpVarDimMember.prototype.setOffsetRows = function(offset)
{
	this.m_offsetRows = offset;
	return null;
};
oFF.QValueHelpVarDimMember.prototype.getOffsetRows = function()
{
	return this.m_offsetRows;
};
oFF.QValueHelpVarDimMember.prototype.setMaxRows = function(max)
{
	this.m_maxRows = max;
	return null;
};
oFF.QValueHelpVarDimMember.prototype.getMaxRows = function()
{
	return this.m_maxRows;
};
oFF.QValueHelpVarDimMember.prototype.hasMoreRowRecordsAvailable = function()
{
	return false;
};
oFF.QValueHelpVarDimMember.prototype.getValueHelpDimension = function()
{
	return this.m_valueHelpDimension;
};
oFF.QValueHelpVarDimMember.prototype.getDimension = function()
{
	return this.m_dimMemberVariable.getDimension();
};
oFF.QValueHelpVarDimMember.prototype.getVariable = function()
{
	return this.m_dimMemberVariable;
};
oFF.QValueHelpVarDimMember.prototype.process = oFF.noSupport;
oFF.QValueHelpVarDimMember.prototype.getQueryManager = function()
{
	return this.m_valueHelpManager;
};
oFF.QValueHelpVarDimMember.prototype.getValueHelpMembers = function()
{
	return null;
};
oFF.QValueHelpVarDimMember.prototype.getRootNode = function()
{
	return this.m_rootNode;
};

oFF.QVariableModelComponent = function() {};
oFF.QVariableModelComponent.prototype = new oFF.QModelComponent();
oFF.QVariableModelComponent.prototype._ff_c = "QVariableModelComponent";


oFF.QVizDef = function() {};
oFF.QVizDef.prototype = new oFF.QModelComponent();
oFF.QVizDef.prototype._ff_c = "QVizDef";

oFF.QVizDef.create = function(context)
{
	var udh = new oFF.QVizDef();
	udh.setupVizDef(context);
	return udh;
};
oFF.QVizDef.prototype.m_dataBindingType = null;
oFF.QVizDef.prototype.setupVizDef = function(context)
{
	this.setupModelComponent(context, null);
};
oFF.QVizDef.prototype.getSemanticBindingType = function()
{
	return this.m_dataBindingType;
};
oFF.QVizDef.prototype.setSemanticBindingType = function(type)
{
	this.m_dataBindingType = type;
};

oFF.QVizManager = function() {};
oFF.QVizManager.prototype = new oFF.QModelComponent();
oFF.QVizManager.prototype._ff_c = "QVizManager";

oFF.QVizManager.create = function(queryModel)
{
	var object = new oFF.QVizManager();
	object.setupSortManager(queryModel);
	return object;
};
oFF.QVizManager.prototype.m_operations = null;
oFF.QVizManager.prototype.m_vizDef = null;
oFF.QVizManager.prototype.m_globalDef = null;
oFF.QVizManager.prototype.setupSortManager = function(queryModel)
{
	this.setupModelComponent(queryModel, queryModel);
	this.m_operations = oFF.QModelComponentList.createModelComponentList(queryModel, this, true, null);
};
oFF.QVizManager.prototype.copyVizManager = function(origin)
{
	oFF.QModelComponent.prototype.copyFrom.call( this , origin, null);
};
oFF.QVizManager.prototype.releaseObject = function()
{
	this.m_operations = oFF.XObjectExt.release(this.m_operations);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QVizManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.VIZ_MANAGER;
};
oFF.QVizManager.prototype.getVizDefinitions = function()
{
	return this.m_operations;
};
oFF.QVizManager.prototype.getVizDef = function()
{
	return this.m_vizDef;
};
oFF.QVizManager.prototype.setVizDef = function(vizDef)
{
	this.m_vizDef = vizDef;
};
oFF.QVizManager.prototype.setGlobalDef = function(globalDef)
{
	this.m_globalDef = globalDef;
};
oFF.QVizManager.prototype.getGlobalDef = function()
{
	return this.m_globalDef;
};

oFF.QWindowFunction = function() {};
oFF.QWindowFunction.prototype = new oFF.QModelComponent();
oFF.QWindowFunction.prototype._ff_c = "QWindowFunction";

oFF.QWindowFunction._createWindowFunction = function(type)
{
	var functions = new oFF.QWindowFunction();
	functions.m_type = type;
	functions.m_notInPartitionDimensions = oFF.XListOfString.create();
	functions.m_sortDimensions = oFF.XList.create();
	return functions;
};
oFF.QWindowFunction.prototype.m_type = null;
oFF.QWindowFunction.prototype.m_sortDimensions = null;
oFF.QWindowFunction.prototype.m_notInPartitionDimensions = null;
oFF.QWindowFunction.prototype.m_frame = null;
oFF.QWindowFunction.prototype.addSortDimension = function(name, direction, nulls)
{
	var sortDimension = oFF.QSortDimension._createSortDimension(name, direction, nulls);
	this.m_sortDimensions.add(sortDimension);
	this.notifyNodeChanged();
};
oFF.QWindowFunction.prototype.removeSortDimension = function(name)
{
	var removeIndex = oFF.XCollectionUtils.getIndexByName(this.m_sortDimensions, name);
	if (removeIndex !== -1)
	{
		this.m_sortDimensions.removeAt(removeIndex);
		this.notifyNodeChanged();
		return true;
	}
	return false;
};
oFF.QWindowFunction.prototype.clearSortDimensions = function()
{
	this.m_sortDimensions.clear();
	this.notifyNodeChanged();
};
oFF.QWindowFunction.prototype.getSortDimensions = function()
{
	return this.m_sortDimensions;
};
oFF.QWindowFunction.prototype.setType = function(type)
{
	this.m_type = type;
	this.notifyNodeChanged();
};
oFF.QWindowFunction.prototype.getType = function()
{
	return this.m_type;
};
oFF.QWindowFunction.prototype.getNotInPartitionDimensions = function()
{
	return this.m_notInPartitionDimensions;
};
oFF.QWindowFunction.prototype.addNotInPartitionDimension = function(name)
{
	this.m_notInPartitionDimensions.add(name);
	this.notifyNodeChanged();
};
oFF.QWindowFunction.prototype.removeNotInPartitionDimension = function(name)
{
	if (this.m_notInPartitionDimensions.contains(name))
	{
		this.m_notInPartitionDimensions.removeElement(name);
		this.notifyNodeChanged();
		return true;
	}
	return false;
};
oFF.QWindowFunction.prototype.clearNotInPartitionDimensions = function()
{
	this.m_notInPartitionDimensions.clear();
	this.notifyNodeChanged();
};
oFF.QWindowFunction.prototype.getFrame = function()
{
	return this.m_frame;
};
oFF.QWindowFunction.prototype.setFrame = function(start, startPreceding, end, endFollowing)
{
	this.m_frame = oFF.QFrame._createFrame(start, startPreceding, end, endFollowing);
	this.notifyNodeChanged();
};
oFF.QWindowFunction.prototype.releaseObject = function()
{
	this.m_type = null;
	this.m_sortDimensions = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_sortDimensions);
	this.m_notInPartitionDimensions = oFF.XObjectExt.release(this.m_notInPartitionDimensions);
	this.m_frame = oFF.XObjectExt.release(this.m_frame);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QWindowFunction.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originWindowFunction = other;
	this.m_type = originWindowFunction.getType();
	this.m_sortDimensions = oFF.XCollectionUtils.createListOfClones(originWindowFunction.getSortDimensions());
	this.m_notInPartitionDimensions = originWindowFunction.getNotInPartitionDimensions().createListOfStringCopy();
	this.m_frame = oFF.XObjectExt.cloneIfNotNull(originWindowFunction.getFrame());
};

oFF.QCurrencyTranslationDetails = function() {};
oFF.QCurrencyTranslationDetails.prototype = new oFF.QModelComponent();
oFF.QCurrencyTranslationDetails.prototype._ff_c = "QCurrencyTranslationDetails";

oFF.QCurrencyTranslationDetails.create = function(currencyTranslationManager)
{
	if (oFF.XString.isEqual(oFF.CurrencyTranslationConstants.NO_CURRENCY, currencyTranslationManager.getCurrencyTranslationEnabledType()))
	{
		throw oFF.XException.createIllegalArgumentException("Currency Translation not allowed on this Query.");
	}
	var currencyTranslationDetails = new oFF.QCurrencyTranslationDetails();
	currencyTranslationDetails.setupModelComponent(currencyTranslationManager.getContext(), currencyTranslationManager);
	return currencyTranslationDetails;
};
oFF.QCurrencyTranslationDetails.prototype.m_currencyTranslationName = null;
oFF.QCurrencyTranslationDetails.prototype.m_currencyTranslationTarget = null;
oFF.QCurrencyTranslationDetails.prototype.m_currencyTranslationOperation = null;
oFF.QCurrencyTranslationDetails.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var currencyTranslationDetails = other;
	this.m_currencyTranslationName = currencyTranslationDetails.getCurrencyTranslationName();
	this.m_currencyTranslationTarget = currencyTranslationDetails.getCurrencyTranslationTarget();
	this.m_currencyTranslationOperation = currencyTranslationDetails.getCurrencyTranslationOperation();
};
oFF.QCurrencyTranslationDetails.prototype.supportsPredefinedCurrencyTranslation = function()
{
	var enabledType = this.getQueryModel().getCurrencyTranslationManager().getCurrencyTranslationEnabledType();
	return oFF.XString.isEqual(enabledType, oFF.CurrencyTranslationConstants.DEFINED);
};
oFF.QCurrencyTranslationDetails.prototype.setApplyPredefinedCurrencyTranslation = function(intermediate)
{
	if (intermediate)
	{
		if (this.isApplyDefinedCurrencyTranslation())
		{
			this.setCurrencyTranslationOperation(oFF.CurrencyTranslationOperation.BOTH);
		}
		else
		{
			this.setCurrencyTranslationOperation(oFF.CurrencyTranslationOperation.DEFINITION);
		}
	}
	else
	{
		if (this.isApplyDefinedCurrencyTranslation())
		{
			this.setCurrencyTranslationOperation(oFF.CurrencyTranslationOperation.TARGET);
		}
		else
		{
			this.setCurrencyTranslationOperation(oFF.CurrencyTranslationOperation.ORIGINAL);
		}
	}
};
oFF.QCurrencyTranslationDetails.prototype.isApplyPredefinedCurrencyTranslation = function()
{
	return oFF.notNull(this.m_currencyTranslationOperation) && this.m_currencyTranslationOperation.isConsiderMetadataDefinedCurrencyTranslation();
};
oFF.QCurrencyTranslationDetails.prototype.setApplyDefinedCurrencyTranslation = function(intermediate)
{
	if (intermediate)
	{
		if (this.isApplyPredefinedCurrencyTranslation())
		{
			this.setCurrencyTranslationOperation(oFF.CurrencyTranslationOperation.BOTH);
		}
		else
		{
			this.setCurrencyTranslationOperation(oFF.CurrencyTranslationOperation.TARGET);
		}
	}
	else
	{
		if (this.isApplyPredefinedCurrencyTranslation())
		{
			this.setCurrencyTranslationOperation(oFF.CurrencyTranslationOperation.DEFINITION);
		}
		else
		{
			this.setCurrencyTranslationOperation(oFF.CurrencyTranslationOperation.ORIGINAL);
		}
	}
};
oFF.QCurrencyTranslationDetails.prototype.isApplyDefinedCurrencyTranslation = function()
{
	return oFF.notNull(this.m_currencyTranslationOperation) && this.m_currencyTranslationOperation.isConsiderClientDefinedCurrencyTranslation();
};
oFF.QCurrencyTranslationDetails.prototype.setApplyToDefaultCurrencyTranslation = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.isApplyToDefaultCurrencyTranslation = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.getCurrencyTranslationName = function()
{
	return this.m_currencyTranslationName;
};
oFF.QCurrencyTranslationDetails.prototype.setCurrencyTranslationName = function(currencyTranslationName)
{
	this.m_currencyTranslationName = currencyTranslationName;
	var map = this.getQueryModelBase().getCurrencyTranslationManagerBase().getAvailableCurrencyTranslationObjectsMap();
	var targetCurrency;
	if (oFF.notNull(map) && map.containsKey(currencyTranslationName))
	{
		targetCurrency = map.getByKey(currencyTranslationName).getFixedTargetCurrency();
		if (oFF.XStringUtils.isNotNullAndNotEmpty(targetCurrency))
		{
			this.m_currencyTranslationTarget = targetCurrency;
		}
	}
	this.notifyNodeChanged();
};
oFF.QCurrencyTranslationDetails.prototype.setCurrencyTranslationObject = function(currencyTranslationObject)
{
	this.setCurrencyTranslationName(currencyTranslationObject.getName());
};
oFF.QCurrencyTranslationDetails.prototype.getCurrencyTranslationObject = function()
{
	var map = this.getQueryModelBase().getCurrencyTranslationManagerBase().getAvailableCurrencyTranslationObjectsMap();
	if (oFF.notNull(map))
	{
		return map.getByKey(this.m_currencyTranslationName);
	}
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.getCurrencyTranslationTarget = function()
{
	return this.m_currencyTranslationTarget;
};
oFF.QCurrencyTranslationDetails.prototype.setCurrencyTranslationTarget = function(currencyTranslationTarget)
{
	this.m_currencyTranslationTarget = currencyTranslationTarget;
	this.notifyNodeChanged();
};
oFF.QCurrencyTranslationDetails.prototype.getCurrencyTranslationOperation = function()
{
	return this.m_currencyTranslationOperation;
};
oFF.QCurrencyTranslationDetails.prototype.setCurrencyTranslationOperation = function(currencyTranslationOperation)
{
	if (oFF.XString.isEqual(oFF.CurrencyTranslationConstants.POSSIBLE, this.getQueryModel().getCurrencyTranslationManager().getCurrencyTranslationEnabledType()) && (oFF.CurrencyTranslationOperation.BOTH === currencyTranslationOperation || oFF.CurrencyTranslationOperation.DEFINITION === currencyTranslationOperation))
	{
		throw oFF.XException.createIllegalArgumentException("Property CurrencyTranslationEnabled on the Query is 'Possible'. Allowed Operation values are Original or Target. ");
	}
	if (this.m_currencyTranslationOperation !== currencyTranslationOperation)
	{
		var oldValue = this.m_currencyTranslationOperation;
		this.m_currencyTranslationOperation = currencyTranslationOperation;
		this.notifyPropertyConstantChanged(oFF.QCurrencyTranslationProperties.QY_CURRENCY_TRANSLATION_OPERATION, oldValue, currencyTranslationOperation);
	}
};
oFF.QCurrencyTranslationDetails.prototype.releaseObject = function()
{
	this.m_currencyTranslationName = null;
	this.m_currencyTranslationTarget = null;
	this.m_currencyTranslationOperation = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QCurrencyTranslationDetails.prototype.reset = function()
{
	this.setCurrencyTranslationName("");
	this.setCurrencyTranslationOperation(null);
	this.setCurrencyTranslationTarget("");
};
oFF.QCurrencyTranslationDetails.prototype.setErrorHandling = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.getErrorHandling = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.supportsErrorHandling = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.supportsTargetCurrency = function()
{
	var map = this.getQueryModelBase().getCurrencyTranslationManagerBase().getAvailableCurrencyTranslationObjectsMap();
	return oFF.notNull(map) && map.getByKey(this.m_currencyTranslationName) !== null && map.getByKey(this.m_currencyTranslationName).requiresTargetCurrency();
};
oFF.QCurrencyTranslationDetails.prototype.supportsTargetCurrencyAsField = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.supportsTargetCurrencyAsVariable = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.supportsDefaultCurrency = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.requiresTargetCurrency = function()
{
	var map = this.getQueryModelBase().getCurrencyTranslationManagerBase().getAvailableCurrencyTranslationObjectsMap();
	return oFF.notNull(map) && map.getByKey(this.m_currencyTranslationName) !== null && map.getByKey(this.m_currencyTranslationName).supportsTargetCurrency();
};
oFF.QCurrencyTranslationDetails.prototype.isMissingTargetCurrency = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.supportsReferenceDate = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.supportsReferenceDateAsField = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.requiresReferenceDate = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.isMissingReferenceDate = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.supportsOffsetInDays = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.supportsOffsetInMonths = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.supportsRateName = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.requiresRateName = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.isMissingRateName = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.supportsPlanningParameters = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.setFixedTargetCurrencyByString = function(currencyName)
{
	this.m_currencyTranslationTarget = currencyName;
};
oFF.QCurrencyTranslationDetails.prototype.isTargetCurrencyFixed = function()
{
	return oFF.XStringUtils.isNotNullAndNotEmpty(this.m_currencyTranslationTarget);
};
oFF.QCurrencyTranslationDetails.prototype.getFixedTargetCurrency = function()
{
	return this.m_currencyTranslationTarget;
};
oFF.QCurrencyTranslationDetails.prototype.setTargetCurrencyByFieldName = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.setTargetCurrencyByField = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.getTargetCurrencyField = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.getTargetCurrencyFieldName = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.isTargetCurrencyField = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.setTargetCurrencyByVariableName = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.setTargetCurrencyByVariable = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.getTargetCurrencyVariable = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.getTargetCurrencyVariableName = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.isTargetCurrencyVariable = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.setDefaultCurrency = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.isDefaultCurrency = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.setFixedReferenceDateByString = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.setFixedReferenceDateByDateValue = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.isReferenceDateFixed = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.getFixedReferenceDate = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.getFixedReferenceDateAsString = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.setReferenceDateByFieldName = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.setReferenceDateByField = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.isReferenceDateField = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.getReferenceDateField = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.getReferenceDateFieldName = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.setDynamicReferenceDate = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.setDynamicReferenceDateWithOffsetAndGranularity = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.setReferenceDateByFieldOffsetAndGranularity = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.setReferenceDateByFieldNameOffsetAndGranularity = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.getDateOffset = function()
{
	return 0;
};
oFF.QCurrencyTranslationDetails.prototype.getDateOffsetGranularity = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.setFixedRateNameByString = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.isFixedRateName = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.getFixedRateName = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.setRateNameByFieldName = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.setRateNameByField = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.isRateNameField = function()
{
	return false;
};
oFF.QCurrencyTranslationDetails.prototype.getRateNameField = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.getRateNameFieldName = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.setFixedRateType = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.setDynamicRateType = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.getFixedRateType = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.setFixedCategory = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.getFixedCategory = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.setFixedRateVersion = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.getFixedRateVersion = function()
{
	return null;
};
oFF.QCurrencyTranslationDetails.prototype.setDynamicRateVersionAndCategory = oFF.noSupport;
oFF.QCurrencyTranslationDetails.prototype.isParametersComplete = function()
{
	return !this.isMissingTargetCurrency();
};

oFF.QMeasure2QueryCurrencyTranslation = function() {};
oFF.QMeasure2QueryCurrencyTranslation.prototype = new oFF.QModelComponent();
oFF.QMeasure2QueryCurrencyTranslation.prototype._ff_c = "QMeasure2QueryCurrencyTranslation";

oFF.QMeasure2QueryCurrencyTranslation.createFromMeasureCurrencyTranslation = function(context, modelComponentBase)
{
	var newInstance = new oFF.QMeasure2QueryCurrencyTranslation();
	newInstance.setupModelComponent(context, modelComponentBase);
	newInstance.setupOperationProxy(context, modelComponentBase);
	return newInstance;
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.m_measureCurrencyTranslation = null;
oFF.QMeasure2QueryCurrencyTranslation.prototype.m_currencyTranslationName = null;
oFF.QMeasure2QueryCurrencyTranslation.prototype.m_applyDefinedCurrencyTranslation = false;
oFF.QMeasure2QueryCurrencyTranslation.prototype.m_applyToDefaultCurrencyTranslation = false;
oFF.QMeasure2QueryCurrencyTranslation.prototype.setupOperationProxy = function(context, modelComponentBase)
{
	this.m_currencyTranslationName = oFF.CurrencyTranslationConstants.QUERY_LEVEL;
	this.m_measureCurrencyTranslation = oFF.QMeasureCurrencyTranslation.createWithName(context, modelComponentBase, oFF.CurrencyTranslationConstants.QUERY_LEVEL, oFF.CurrencyTranslationConstants.QUERY_LEVEL);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getMeasureCurrencyTranslation = function()
{
	return this.m_measureCurrencyTranslation;
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var origin = other;
	this.m_currencyTranslationName = origin.m_currencyTranslationName;
	this.m_measureCurrencyTranslation.copyFrom(origin.m_measureCurrencyTranslation, flags);
	this.m_applyDefinedCurrencyTranslation = origin.m_applyDefinedCurrencyTranslation;
	this.m_applyToDefaultCurrencyTranslation = origin.m_applyToDefaultCurrencyTranslation;
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.releaseObject = function()
{
	this.m_measureCurrencyTranslation = oFF.XObjectExt.release(this.m_measureCurrencyTranslation);
	this.m_currencyTranslationName = null;
	this.m_applyDefinedCurrencyTranslation = false;
	this.m_applyToDefaultCurrencyTranslation = false;
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.reset = function() {};
oFF.QMeasure2QueryCurrencyTranslation.prototype.supportsPredefinedCurrencyTranslation = function()
{
	return false;
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setApplyPredefinedCurrencyTranslation = oFF.noSupport;
oFF.QMeasure2QueryCurrencyTranslation.prototype.isApplyPredefinedCurrencyTranslation = function()
{
	return false;
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setApplyDefinedCurrencyTranslation = function(intermediate)
{
	if (intermediate !== this.m_applyDefinedCurrencyTranslation)
	{
		this.m_applyDefinedCurrencyTranslation = intermediate;
		this.notifyNodeChanged();
	}
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isApplyDefinedCurrencyTranslation = function()
{
	return this.m_applyDefinedCurrencyTranslation;
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setApplyToDefaultCurrencyTranslation = function(apply)
{
	if (apply !== this.m_applyToDefaultCurrencyTranslation)
	{
		this.m_applyToDefaultCurrencyTranslation = apply;
		this.notifyNodeChanged();
	}
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isApplyToDefaultCurrencyTranslation = function()
{
	return this.m_applyToDefaultCurrencyTranslation;
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getCurrencyTranslationName = function()
{
	return this.m_currencyTranslationName;
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setCurrencyTranslationName = function(currencyTranslationName)
{
	this.m_currencyTranslationName = currencyTranslationName;
	if (oFF.notNull(currencyTranslationName))
	{
		var measureCurrencyTranslation = this.getQueryModel().getCurrencyTranslationManager().getMeasureCurrencyTranslation(currencyTranslationName);
		if (oFF.notNull(measureCurrencyTranslation))
		{
			this.m_measureCurrencyTranslation.copyFrom(measureCurrencyTranslation, null);
			if (!measureCurrencyTranslation.isMetadataDefined())
			{
				this.m_measureCurrencyTranslation.setName(oFF.CurrencyTranslationConstants.QUERY_LEVEL);
			}
		}
	}
	this.notifyNodeChanged();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setCurrencyTranslationObject = function(currencyTranslationObject)
{
	this.setCurrencyTranslationName(currencyTranslationObject.getName());
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getCurrencyTranslationObject = function()
{
	return this.getQueryModelBase().getCurrencyTranslationManagerBase().getMeasureCurrencyTranslation(this.getCurrencyTranslationName());
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setErrorHandling = function(errorHandlingMode)
{
	this.getMeasureCurrencyTranslation().setErrorHandling(errorHandlingMode);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getErrorHandling = function()
{
	return this.getMeasureCurrencyTranslation().getErrorHandling();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.supportsErrorHandling = function()
{
	return this.getMeasureCurrencyTranslation().supportsTargetCurrency();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.supportsTargetCurrency = function()
{
	return this.getMeasureCurrencyTranslation().supportsTargetCurrency();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.supportsTargetCurrencyAsField = function()
{
	return this.getMeasureCurrencyTranslation().supportsTargetCurrencyAsField();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.supportsTargetCurrencyAsVariable = function()
{
	return this.getMeasureCurrencyTranslation().supportsTargetCurrencyAsVariable();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.supportsDefaultCurrency = function()
{
	return this.getMeasureCurrencyTranslation().supportsDefaultCurrency();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.requiresTargetCurrency = function()
{
	return this.getMeasureCurrencyTranslation().requiresTargetCurrency();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isMissingTargetCurrency = function()
{
	return this.getMeasureCurrencyTranslation().isMissingTargetCurrency();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.supportsReferenceDate = function()
{
	return this.getMeasureCurrencyTranslation().supportsReferenceDate();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.supportsReferenceDateAsField = function()
{
	return this.getMeasureCurrencyTranslation().supportsReferenceDateAsField();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.requiresReferenceDate = function()
{
	return this.getMeasureCurrencyTranslation().requiresReferenceDate();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isMissingReferenceDate = function()
{
	return this.getMeasureCurrencyTranslation().isMissingReferenceDate();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.supportsOffsetInDays = function()
{
	return this.getMeasureCurrencyTranslation().supportsOffsetInDays();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.supportsOffsetInMonths = function()
{
	return this.getMeasureCurrencyTranslation().supportsOffsetInMonths();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.supportsRateName = function()
{
	return this.getMeasureCurrencyTranslation().supportsRateName();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.requiresRateName = function()
{
	return this.getMeasureCurrencyTranslation().requiresRateName();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isMissingRateName = function()
{
	return this.getMeasureCurrencyTranslation().isMissingRateName();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.supportsPlanningParameters = function()
{
	return this.getMeasureCurrencyTranslation().supportsPlanningParameters();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setFixedTargetCurrencyByString = function(currencyName)
{
	this.getMeasureCurrencyTranslation().setFixedTargetCurrencyByString(currencyName);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isTargetCurrencyFixed = function()
{
	return this.getMeasureCurrencyTranslation().isTargetCurrencyFixed();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getFixedTargetCurrency = function()
{
	return this.getMeasureCurrencyTranslation().getFixedTargetCurrency();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setTargetCurrencyByFieldName = function(currencyFieldName)
{
	this.getMeasureCurrencyTranslation().setTargetCurrencyByFieldName(currencyFieldName);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setTargetCurrencyByField = function(currencyField)
{
	this.getMeasureCurrencyTranslation().setTargetCurrencyByField(currencyField);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getTargetCurrencyField = function()
{
	return this.getMeasureCurrencyTranslation().getTargetCurrencyField();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getTargetCurrencyFieldName = function()
{
	return this.getMeasureCurrencyTranslation().getTargetCurrencyFieldName();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isTargetCurrencyField = function()
{
	return this.getMeasureCurrencyTranslation().isTargetCurrencyField();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setTargetCurrencyByVariableName = function(variableName)
{
	this.getMeasureCurrencyTranslation().setTargetCurrencyByVariableName(variableName);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setTargetCurrencyByVariable = function(variable)
{
	this.getMeasureCurrencyTranslation().setTargetCurrencyByVariable(variable);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getTargetCurrencyVariable = function()
{
	return this.getMeasureCurrencyTranslation().getTargetCurrencyVariable();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getTargetCurrencyVariableName = function()
{
	return this.getMeasureCurrencyTranslation().getTargetCurrencyVariableName();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isTargetCurrencyVariable = function()
{
	return this.getMeasureCurrencyTranslation().isTargetCurrencyVariable();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setDefaultCurrency = function()
{
	this.getMeasureCurrencyTranslation().setDefaultCurrency();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isDefaultCurrency = function()
{
	return this.getMeasureCurrencyTranslation().isDefaultCurrency();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setFixedReferenceDateByString = function(referenceDateString)
{
	this.getMeasureCurrencyTranslation().setFixedReferenceDateByString(referenceDateString);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setFixedReferenceDateByDateValue = function(referenceDateValue)
{
	this.getMeasureCurrencyTranslation().setFixedReferenceDateByDateValue(referenceDateValue);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isReferenceDateFixed = function()
{
	return this.getMeasureCurrencyTranslation().isReferenceDateFixed();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getFixedReferenceDate = function()
{
	return this.getMeasureCurrencyTranslation().getFixedReferenceDate();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getFixedReferenceDateAsString = function()
{
	return this.getMeasureCurrencyTranslation().getFixedReferenceDateAsString();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setReferenceDateByFieldName = function(fieldName)
{
	this.getMeasureCurrencyTranslation().setReferenceDateByFieldName(fieldName);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setReferenceDateByField = function(field)
{
	this.getMeasureCurrencyTranslation().setReferenceDateByField(field);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isReferenceDateField = function()
{
	return this.getMeasureCurrencyTranslation().isReferenceDateField();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getReferenceDateField = function()
{
	return this.getMeasureCurrencyTranslation().getReferenceDateField();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getReferenceDateFieldName = function()
{
	return this.getMeasureCurrencyTranslation().getReferenceDateFieldName();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setDynamicReferenceDate = function()
{
	this.getMeasureCurrencyTranslation().setDynamicReferenceDate();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setDynamicReferenceDateWithOffsetAndGranularity = function(offset, offsetGranularity)
{
	this.getMeasureCurrencyTranslation().setDynamicReferenceDateWithOffsetAndGranularity(offset, offsetGranularity);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setReferenceDateByFieldOffsetAndGranularity = function(field, offset, offsetGranularity)
{
	this.getMeasureCurrencyTranslation().setReferenceDateByFieldOffsetAndGranularity(field, offset, offsetGranularity);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setReferenceDateByFieldNameOffsetAndGranularity = function(fieldName, offset, offsetGranularity)
{
	this.getMeasureCurrencyTranslation().setReferenceDateByFieldNameOffsetAndGranularity(fieldName, offset, offsetGranularity);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getDateOffset = function()
{
	return this.getMeasureCurrencyTranslation().getDateOffset();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getDateOffsetGranularity = function()
{
	return this.getMeasureCurrencyTranslation().getDateOffsetGranularity();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setFixedRateNameByString = function(rateNameString)
{
	this.getMeasureCurrencyTranslation().setFixedRateNameByString(rateNameString);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isFixedRateName = function()
{
	return this.getMeasureCurrencyTranslation().isFixedRateName();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getFixedRateName = function()
{
	return this.getMeasureCurrencyTranslation().getFixedRateName();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setRateNameByFieldName = function(fieldName)
{
	this.getMeasureCurrencyTranslation().setRateNameByFieldName(fieldName);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setRateNameByField = function(field)
{
	this.getMeasureCurrencyTranslation().setRateNameByField(field);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isRateNameField = function()
{
	return this.getMeasureCurrencyTranslation().isRateNameField();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getRateNameField = function()
{
	return this.getMeasureCurrencyTranslation().getRateNameField();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getRateNameFieldName = function()
{
	return this.getMeasureCurrencyTranslation().getRateNameFieldName();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setFixedRateType = function(rateType)
{
	this.getMeasureCurrencyTranslation().setFixedRateType(rateType);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setDynamicRateType = function()
{
	this.getMeasureCurrencyTranslation().setDynamicRateType();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getFixedRateType = function()
{
	return this.getMeasureCurrencyTranslation().getFixedRateType();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setFixedCategory = function(category)
{
	this.getMeasureCurrencyTranslation().setFixedCategory(category);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getFixedCategory = function()
{
	return this.getMeasureCurrencyTranslation().getFixedCategory();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setFixedRateVersion = function(rateVersion)
{
	this.getMeasureCurrencyTranslation().setFixedRateVersion(rateVersion);
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.getFixedRateVersion = function()
{
	return this.getMeasureCurrencyTranslation().getFixedRateVersion();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.setDynamicRateVersionAndCategory = function()
{
	this.getMeasureCurrencyTranslation().setDynamicRateVersionAndCategory();
};
oFF.QMeasure2QueryCurrencyTranslation.prototype.isParametersComplete = function()
{
	return this.getMeasureCurrencyTranslation().isParametersComplete();
};

oFF.QDimension = function() {};
oFF.QDimension.prototype = new oFF.QModelComponent();
oFF.QDimension.prototype._ff_c = "QDimension";

oFF.QDimension._create = function(context, parentNode)
{
	var dim = new oFF.QDimension();
	dim.setupDimension(context, parentNode);
	return dim;
};
oFF.QDimension.prototype.m_metadata = null;
oFF.QDimension.prototype.m_axis = null;
oFF.QDimension.prototype.m_fieldLayoutType = null;
oFF.QDimension.prototype.m_selectorFieldLayoutType = null;
oFF.QDimension.prototype.m_fieldContainer = null;
oFF.QDimension.prototype.m_attributeContainer = null;
oFF.QDimension.prototype.m_isIgnoredOnExport = false;
oFF.QDimension.prototype.m_skip = 0;
oFF.QDimension.prototype.m_top = 0;
oFF.QDimension.prototype.m_resultStructureController = null;
oFF.QDimension.prototype.m_resultMemberTotal = null;
oFF.QDimension.prototype.m_resultMemberTotalIncluded = null;
oFF.QDimension.prototype.m_resultMemberTotalRemaining = null;
oFF.QDimension.prototype.m_hierarchyManager = null;
oFF.QDimension.prototype.m_isCumulative = false;
oFF.QDimension.prototype.m_nameValuePairs = null;
oFF.QDimension.prototype.m_selector = null;
oFF.QDimension.prototype.m_structureMemberLazyLoader = null;
oFF.QDimension.prototype.m_allStructureMembers = null;
oFF.QDimension.prototype.m_structureLayout = null;
oFF.QDimension.prototype.m_alternativeFieldValues = null;
oFF.QDimension.prototype.m_skipMetadataValidationOnRepoImport = false;
oFF.QDimension.prototype.m_placeholderIds = null;
oFF.QDimension.prototype.m_placeholderIdMemberMap = null;
oFF.QDimension.prototype.m_designTimeMode = false;
oFF.QDimension.prototype.m_overdefinedMemberManager = null;
oFF.QDimension.prototype.m_functionalValueHelpSelectFunctions = null;
oFF.QDimension.prototype.m_readModeManager = null;
oFF.QDimension.prototype.m_overrideText = null;
oFF.QDimension.prototype.cloneOlapComponent = function(context, parent)
{
	var clone = oFF.QDimension._create(context, parent);
	clone.copyDimension(this);
	clone.copyDimensionMember(this);
	return clone;
};
oFF.QDimension.prototype.copyFromInternal = function(other, flags)
{
	this.copyDimension(other);
};
oFF.QDimension.prototype.copyDimension = function(origin)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , origin, null);
	var metadata = origin.getMetadata();
	if (oFF.notNull(metadata) && !this.getDimensionType().isTypeOf(oFF.DimensionType.CALCULATED_DIMENSION))
	{
		var originalCacheKey = origin.getMetadata().getCacheKey();
		var originDimMd = this.getOlapEnv().getDimensionMetadataByKey(originalCacheKey);
		this.m_metadata = oFF.XWeakReferenceUtil.getWeakRef(originDimMd);
		var queryModel = origin.getQueryModelBase();
		if (oFF.isNull(this.m_metadata) && queryModel.isPartialResponse())
		{
			this.m_metadata = oFF.XWeakReferenceUtil.getWeakRef(metadata);
		}
	}
	this.setDimensionType(origin.getDimensionType());
	this.m_fieldContainer.copyFrom(origin.m_fieldContainer, null);
	this.m_attributeContainer.copyFrom(origin.m_attributeContainer, null);
	this.m_fieldLayoutType = origin.m_fieldLayoutType;
	this.m_selectorFieldLayoutType = origin.m_selectorFieldLayoutType;
	this.m_skip = origin.m_skip;
	this.m_top = origin.m_top;
	this.m_designTimeMode = origin.m_designTimeMode;
	this.m_resultStructureController.copyFrom(origin.m_resultStructureController, null);
	if (oFF.notNull(origin.m_resultMemberTotal))
	{
		this.createResultMember(oFF.MemberType.RESULT);
	}
	if (oFF.notNull(origin.m_resultMemberTotalIncluded))
	{
		this.createResultMember(oFF.MemberType.CONDITION_RESULT);
	}
	if (oFF.notNull(origin.m_resultMemberTotalRemaining))
	{
		this.createResultMember(oFF.MemberType.CONDITION_OTHERS_RESULT);
	}
	this.m_readModeManager.copyFrom(origin.m_readModeManager, null);
	this.m_isCumulative = origin.m_isCumulative;
	if (oFF.notNull(origin.m_nameValuePairs))
	{
		this.m_nameValuePairs = origin.m_nameValuePairs.createMapByStringCopy();
	}
	this.m_isIgnoredOnExport = origin.m_isIgnoredOnExport;
	this.m_hierarchyManager.copyFrom(origin.getHierarchyManager(), null);
	this.m_skipMetadataValidationOnRepoImport = origin.m_skipMetadataValidationOnRepoImport;
	var originAxis = origin.getAxis();
	if (oFF.notNull(originAxis))
	{
		this.setAxis(this.getQueryModel().getAxis(originAxis.getType()));
	}
	this.m_placeholderIds = origin.m_placeholderIds.createListOfStringCopy();
	this.m_placeholderIdMemberMap = origin.m_placeholderIdMemberMap.createMapByStringCopy();
	this.m_overdefinedMemberManager.copyFrom(origin.m_overdefinedMemberManager, null);
	this.m_overrideText = origin.m_overrideText;
	if (oFF.notNull(origin.m_selector))
	{
		this.getSelector().copyFrom(origin.m_selector, null);
	}
};
oFF.QDimension.prototype.copyDimensionMember = function(origin)
{
	if (origin.getKeyRefStorage() !== this.getKeyRefStorage())
	{
		this.getKeyRefStorage().removeObjectsByGroup(oFF.KeyRefConstants.MAIN_STORAGE, this.getName(), true);
		var originModellerMembers = origin.getKeyRefStorage().getObjectsByGroup(oFF.KeyRefConstants.MAIN_STORAGE, this.getName());
		var originModellerMembersIter = originModellerMembers.getIterator();
		while (originModellerMembersIter.hasNext())
		{
			var originModellerMember = originModellerMembersIter.next();
			var newModellerMember = oFF.QStructureMember.createMeasure(originModellerMember.getMemberType(), this.getContext(), this);
			oFF.QStructureMember.copyMeasure(newModellerMember, originModellerMember);
			this.getKeyRefStorage().putExt(newModellerMember, this.getName(), newModellerMember.getName());
		}
	}
	if (oFF.notNull(origin.m_allStructureMembers))
	{
		var context = this.getContext();
		var i;
		var size = origin.m_allStructureMembers.size();
		for (i = 0; i < size; i++)
		{
			var origMeasure = origin.m_allStructureMembers.get(i);
			if (oFF.isNull(origMeasure))
			{
				continue;
			}
			var newMeasure = context.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(origMeasure);
			if (oFF.isNull(newMeasure))
			{
				newMeasure = this.getKeyRefStorage().get(oFF.KeyRefConstants.MAIN_STORAGE, this.getName(), origMeasure.getName());
			}
			if (oFF.isNull(newMeasure))
			{
				newMeasure = oFF.QStructureMember.createMeasure(origMeasure.getMemberType(), this.getContext(), this);
				oFF.QStructureMember.copyMeasure(newMeasure, origMeasure);
			}
			this.addMeasureInternal(newMeasure, false);
			if (origMeasure.getMemberType() !== oFF.MemberType.BASIC_MEASURE)
			{
				this.addQueryDataCells(newMeasure);
			}
		}
		if (origin.m_structureLayout.isEmpty())
		{
			this.m_structureLayout.clear();
		}
		var newSortedList = oFF.QModelComponentList.createModelComponentWithNameList(context, this, false, "Structure Layout", true);
		for (var n = 0; n < origin.m_structureLayout.size(); n++)
		{
			var currentMemberOrigin = origin.m_structureLayout.get(n);
			if (oFF.isNull(currentMemberOrigin))
			{
				continue;
			}
			var foundMember = this.m_structureLayout.getByKey(currentMemberOrigin.getName());
			if (oFF.notNull(foundMember))
			{
				newSortedList.addInternal(foundMember);
			}
			else if (this.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(currentMemberOrigin) !== null)
			{
				newSortedList.addInternal(currentMemberOrigin);
			}
		}
		this.m_structureLayout = newSortedList;
		if (oFF.notNull(origin.m_alternativeFieldValues))
		{
			this.m_alternativeFieldValues = origin.m_alternativeFieldValues.createMapByStringCopy();
		}
	}
	if (oFF.notNull(origin.m_structureMemberLazyLoader))
	{
		this.setStructureMemberLazyLoader(origin.m_structureMemberLazyLoader.copyStructureMemberLazyLoader(this));
	}
};
oFF.QDimension.prototype.setupDimension = function(context, parentNode)
{
	oFF.QModelComponent.prototype.setupModelComponent.call( this , context, parentNode);
	this.m_hierarchyManager = oFF.QFactory.createHierarchyManager(context, this);
	this.m_selectorFieldLayoutType = oFF.FieldLayoutType.FIELD_BASED;
	this.m_fieldLayoutType = oFF.FieldLayoutType.FIELD_BASED;
	this.m_fieldContainer = oFF.QFactory.createFieldContainer(context, this);
	this.m_attributeContainer = oFF.QFactory.createAttributeContainer(context, this);
	this.m_readModeManager = oFF.QFactory.createReadModeManager(this);
	this.m_resultStructureController = oFF.QFactory.createResultStructureController(context, this, oFF.QModelLevel.DIMENSIONS);
	this.m_placeholderIds = oFF.XListOfString.create();
	this.m_placeholderIdMemberMap = oFF.XHashMapByString.create();
	this.m_overdefinedMemberManager = oFF.QOverdefinedMemberManager._createOverdefineMemberManager(this.getContext(), this);
};
oFF.QDimension.prototype.releaseObject = function()
{
	this.m_fieldLayoutType = null;
	this.m_selectorFieldLayoutType = null;
	if (this.supportsCustomMembers())
	{
		var memberSize = this.m_allStructureMembers.size();
		for (var measureIdx = 0; measureIdx < memberSize; measureIdx++)
		{
			var structureMember = this.m_allStructureMembers.get(measureIdx);
			if (oFF.notNull(structureMember))
			{
				var memberType = structureMember.getMemberType();
				if (oFF.notNull(memberType) && memberType.isCustomMember() && oFF.XString.isEqual(structureMember.getStorageName(), this.getStorageName()))
				{
					oFF.XObjectExt.release(structureMember);
				}
			}
		}
	}
	this.m_alternativeFieldValues = oFF.XObjectExt.release(this.m_alternativeFieldValues);
	this.m_resultStructureController = oFF.XObjectExt.release(this.m_resultStructureController);
	this.m_resultMemberTotal = oFF.XObjectExt.release(this.m_resultMemberTotal);
	this.m_resultMemberTotalIncluded = oFF.XObjectExt.release(this.m_resultMemberTotalIncluded);
	this.m_resultMemberTotalRemaining = oFF.XObjectExt.release(this.m_resultMemberTotalRemaining);
	this.m_selector = oFF.XObjectExt.release(this.m_selector);
	this.m_fieldContainer = oFF.XObjectExt.release(this.m_fieldContainer);
	this.m_attributeContainer = oFF.XObjectExt.release(this.m_attributeContainer);
	this.m_readModeManager = oFF.XObjectExt.release(this.m_readModeManager);
	this.m_nameValuePairs = oFF.XObjectExt.release(this.m_nameValuePairs);
	this.m_allStructureMembers = oFF.XObjectExt.release(this.m_allStructureMembers);
	this.m_structureLayout = oFF.XObjectExt.release(this.m_structureLayout);
	this.m_placeholderIds = oFF.XObjectExt.release(this.m_placeholderIds);
	this.m_placeholderIdMemberMap = oFF.XObjectExt.release(this.m_placeholderIdMemberMap);
	this.m_functionalValueHelpSelectFunctions = oFF.XObjectExt.release(this.m_functionalValueHelpSelectFunctions);
	try
	{
		if (this.getKeyRefStorage() !== null)
		{
			this.getKeyRefStorage().removeObjectsByGroup(oFF.KeyRefConstants.MAIN_STORAGE, this.getName(), true);
		}
	}
	catch (t)
	{
		this.logExt(this.getLogLayer(), oFF.Severity.DEBUG, 0, "this.getKeyRefStorage() - throw unsupported operation");
	}
	var metadata = this.getMetadata();
	if (oFF.notNull(metadata))
	{
		if (!metadata.isIncompleteDimensionMetadata())
		{
			if (this.getOlapEnv() !== null)
			{
				this.getOlapEnv().releaseDimensionMetadataByKey(metadata.getCacheKey());
			}
		}
	}
	this.m_metadata = oFF.XObjectExt.release(this.m_metadata);
	this.m_overdefinedMemberManager = oFF.XObjectExt.release(this.m_overdefinedMemberManager);
	this.m_overrideText = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QDimension.prototype.setAxis = function(axis)
{
	if (this.getAxis() !== axis)
	{
		this.m_axis = oFF.XWeakReferenceUtil.getWeakRef(axis);
		this.notifyNodeChanged();
	}
};
oFF.QDimension.prototype.getAxis = function()
{
	return this.getAxisBase();
};
oFF.QDimension.prototype.getAxisType = function()
{
	return this.getAxisBase().getType();
};
oFF.QDimension.prototype.getAxisBase = function()
{
	if (this.isUdhActiveInResultset())
	{
		return this.getUniversalDisplayHierarchy().getHierarchyDedicatedAxis();
	}
	return oFF.XWeakReferenceUtil.getHardRef(this.m_axis);
};
oFF.QDimension.prototype.getIndexOnAxis = function()
{
	if (this.isUdhActiveInResultset())
	{
		var udhDimensions = this.getUniversalDisplayHierarchy().getDimensionNames();
		var axisDimensions = this.getAxis().getDimensionNames().createListOfStringCopy();
		var size = axisDimensions.size();
		for (var i = 0; i < size; i++)
		{
			if (udhDimensions.contains(axisDimensions.get(i)))
			{
				return i;
			}
		}
	}
	return this.getAxis().getIndex(this);
};
oFF.QDimension.prototype.isUdhActiveInResultset = function()
{
	var queryManager = this.getQueryManager();
	var udh = this.getUniversalDisplayHierarchy();
	return oFF.notNull(udh) && udh.isActive() && oFF.notNull(queryManager) && queryManager.getResultSetSyncState().isInSync();
};
oFF.QDimension.prototype.getResultSetFields = function()
{
	return this.m_fieldContainer.getResultSetFields();
};
oFF.QDimension.prototype.getFieldsExt = function(context)
{
	return this.m_fieldContainer.getFieldsExt(context);
};
oFF.QDimension.prototype.getFields = function()
{
	return this.m_fieldContainer.getFields();
};
oFF.QDimension.prototype.getFieldIterator = function()
{
	return this.m_fieldContainer.getFieldIterator();
};
oFF.QDimension.prototype.getFieldByName = function(name)
{
	return this.m_fieldContainer.getFieldByName(name);
};
oFF.QDimension.prototype.getFieldByNameOrAlias = function(name)
{
	return this.m_fieldContainer.getFieldByNameOrAlias(name);
};
oFF.QDimension.prototype.getFirstFieldByType = function(type)
{
	return this.m_fieldContainer.getFirstFieldByType(type);
};
oFF.QDimension.prototype.getFieldByPresentationType = function(presentationType)
{
	var mainAttribute = this.getMainAttribute();
	if (oFF.isNull(mainAttribute))
	{
		return this.m_fieldContainer.getFieldByPresentationType(presentationType);
	}
	return mainAttribute.getFieldByPresentationType(presentationType);
};
oFF.QDimension.prototype.getKeyField = function()
{
	return this.m_fieldContainer.getKeyField();
};
oFF.QDimension.prototype.getKeyFieldExt = function(context)
{
	return this.m_fieldContainer.getKeyFieldExt(context);
};
oFF.QDimension.prototype.getTextField = function()
{
	return this.m_fieldContainer.getTextField();
};
oFF.QDimension.prototype.getDisplayKeyField = function()
{
	return this.m_fieldContainer.getDisplayKeyField();
};
oFF.QDimension.prototype.getFlatKeyField = function()
{
	return this.m_fieldContainer.getFlatKeyField();
};
oFF.QDimension.prototype.getFlatTextField = function()
{
	return this.m_fieldContainer.getFlatTextField();
};
oFF.QDimension.prototype.getFlatDisplayKeyField = function()
{
	return this.m_fieldContainer.getFlatDisplayKeyField();
};
oFF.QDimension.prototype.getHierarchyKeyField = function()
{
	return this.m_fieldContainer.getHierarchyKeyField();
};
oFF.QDimension.prototype.getHierarchyTextField = function()
{
	return this.m_fieldContainer.getHierarchyTextField();
};
oFF.QDimension.prototype.getHierarchyDisplayKeyField = function()
{
	return this.m_fieldContainer.getHierarchyDisplayKeyField();
};
oFF.QDimension.prototype.findKeyField = function()
{
	var field = this.getKeyField();
	oFF.XObjectExt.assertNotNullExt(field, oFF.XStringUtils.concatenate2("Cannot find key field for dimension ", this.getName()));
	return field;
};
oFF.QDimension.prototype.getDimensionMember = function(name)
{
	var remappedName = this.remapIfDefaultMemberName(name);
	if (this.supportsBasicStructureMembers())
	{
		var structureMember = this.getStructureMemberByKey(remappedName);
		if (oFF.notNull(structureMember) || this.getDimensionType() !== oFF.DimensionType.ACCOUNT)
		{
			return structureMember;
		}
	}
	return this.getDimensionMemberWithFormat(remappedName, null);
};
oFF.QDimension.prototype.remapIfDefaultMemberName = function(name)
{
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var datasetId = queryModel.getDatasetId();
		if (oFF.notNull(datasetId) && oFF.XString.isEqual(name, oFF.MeasureModelConstants.DEFAULT_CUSTOMDIMENSION2_MEMBER) && queryModel.getDimensionByType(oFF.DimensionType.SECONDARY_STRUCTURE) !== null)
		{
			return oFF.XStringUtils.concatenate3(datasetId, "-", name);
		}
	}
	return name;
};
oFF.QDimension.prototype.getStructureMemberByKey = function(name)
{
	if (oFF.notNull(this.m_structureMemberLazyLoader))
	{
		this.m_structureMemberLazyLoader.loadStructureMember(name);
	}
	var structureMember = this.m_allStructureMembers.getByKey(name);
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var datasetId = queryModel.getDatasetId();
		if (oFF.isNull(structureMember) && (oFF.XString.isEqual(name, oFF.CurrencyConstants.DEFAULT_CURRENCY) || oFF.XString.isEqual(name, oFF.CurrencyConstants.LOCAL_CURRENCY)) && this.supportsCurrencyTranslationMembers())
		{
			if (oFF.notNull(datasetId))
			{
				structureMember = this.m_allStructureMembers.getByKey(oFF.XStringUtils.concatenate3(datasetId, "-", name));
			}
		}
		else if (oFF.isNull(structureMember) && oFF.notNull(datasetId) && oFF.XString.isEqual(name, oFF.MeasureModelConstants.DEFAULT_CUSTOMDIMENSION2_MEMBER) && queryModel.getDimensionByType(oFF.DimensionType.SECONDARY_STRUCTURE) !== null)
		{
			structureMember = this.m_allStructureMembers.getByKey(oFF.XStringUtils.concatenate3(datasetId, "-", name));
		}
	}
	return structureMember;
};
oFF.QDimension.prototype.getDimensionMemberWithValue = function(name, field)
{
	var valueType = field.getValueType();
	var replaceValueType = this.baseValueTypeOnLowValueType(name.getValueType(), true);
	if (replaceValueType)
	{
		valueType = field.getDimension().getFlatKeyField().getValueType();
	}
	if (!valueType.isTypeOf(name.getValueType()))
	{
		throw oFF.XException.createIllegalStateException("incompatible value types");
	}
	var dimensionMember = oFF.QDimensionMember.createDimensionMember(this.getContext(), this);
	oFF.XObjectExt.assertNotNullExt(dimensionMember.createAndAddFieldWithValue(field, name), "internal error");
	dimensionMember.setName(name.toString());
	return dimensionMember;
};
oFF.QDimension.prototype.newDimensionMemberEmpty = function()
{
	return oFF.QDimensionMember.createDimensionMember(this.getContext(), this);
};
oFF.QDimension.prototype.baseValueTypeOnSearchCriteria = function(name, dimension, checkEitherHierarchy)
{
	var hierarchyActive = checkEitherHierarchy && dimension.isHierarchyActive() || dimension.isSelectorHierarchyActive();
	return hierarchyActive && dimension.getQueryModel() !== null && dimension.getQueryModel().getSystemType().isTypeOf(oFF.SystemType.ABAP) && dimension.getFlatKeyField().getValueType() === oFF.XValueType.DATE && oFF.XString.indexOf(name, "!") === -1;
};
oFF.QDimension.prototype.baseValueTypeOnLowValueType = function(lowValueType, checkEitherHierarchy)
{
	var hierarchyActive = checkEitherHierarchy && this.isHierarchyActive() || this.isSelectorHierarchyActive();
	return hierarchyActive && this.getQueryModel() !== null && this.getQueryModel().getSystemType().isTypeOf(oFF.SystemType.ABAP) && this.getFlatKeyField().getValueType() === oFF.XValueType.DATE && lowValueType === oFF.XValueType.DATE;
};
oFF.QDimension.prototype.getDimensionMemberWithFormat = function(name, valueFormat)
{
	return this.getDimensionMemberWithFormatInternal(name, valueFormat, this.findKeyField());
};
oFF.QDimension.prototype.getValueHelpDimensionMemberWithFormat = function(name, valueFormat)
{
	return this.getDimensionMemberWithFormatInternal(name, valueFormat, this.getSelectorKeyField());
};
oFF.QDimension.prototype.getDimensionMemberWithFormatInternal = function(name, valueFormat, keyField)
{
	var dimensionMember = oFF.QDimensionMember.createDimensionMember(this.getContext(), this);
	var valueType = keyField.getValueType();
	var replaceValueType = this.baseValueTypeOnSearchCriteria(name, this, true);
	if (replaceValueType)
	{
		valueType = dimensionMember.getDimension().getFlatKeyField().getValueType();
	}
	dimensionMember.setName(name);
	var value = oFF.XValueUtil.getValueFromString(name, valueType);
	dimensionMember.createAndAddFieldWithValue(keyField, value);
	return dimensionMember;
};
oFF.QDimension.prototype.getDimensionMemberByInt = function(keyValue)
{
	return this.getDimensionMemberWithFormat(oFF.XInteger.convertToString(keyValue), null);
};
oFF.QDimension.prototype.getDimensionMemberByLong = function(keyValue)
{
	return this.getDimensionMemberWithFormat(oFF.XLong.convertToString(keyValue), null);
};
oFF.QDimension.prototype.getDimensionMemberByDouble = function(keyValue)
{
	return this.getDimensionMemberWithFormat(oFF.XDouble.convertToString(keyValue), null);
};
oFF.QDimension.prototype.getDimensionMemberByDate = function(keyValue)
{
	return this.getDimensionMemberWithFormat(keyValue.toIsoFormat(), oFF.DateTimeFormat.ISO);
};
oFF.QDimension.prototype.getResultMember = function(type)
{
	if (type === oFF.MemberType.RESULT && oFF.notNull(this.m_resultMemberTotal))
	{
		return this.m_resultMemberTotal;
	}
	if (type === oFF.MemberType.CONDITION_RESULT && oFF.notNull(this.m_resultMemberTotalIncluded))
	{
		return this.m_resultMemberTotalIncluded;
	}
	if (type === oFF.MemberType.CONDITION_OTHERS_RESULT && oFF.notNull(this.m_resultMemberTotalRemaining))
	{
		return this.m_resultMemberTotalRemaining;
	}
	return this.createResultMember(type);
};
oFF.QDimension.prototype.createResultMember = function(type)
{
	if (type === oFF.MemberType.RESULT)
	{
		if (oFF.isNull(this.m_resultMemberTotal))
		{
			this.m_resultMemberTotal = oFF.QDimensionMemberResult.createQDimensionMember(this.getContext(), this, type);
		}
		return this.m_resultMemberTotal;
	}
	if (type === oFF.MemberType.CONDITION_RESULT)
	{
		if (oFF.isNull(this.m_resultMemberTotalIncluded))
		{
			this.m_resultMemberTotalIncluded = oFF.QDimensionMemberResult.createQDimensionMember(this.getContext(), this, type);
		}
		return this.m_resultMemberTotalIncluded;
	}
	if (type === oFF.MemberType.CONDITION_OTHERS_RESULT)
	{
		if (oFF.isNull(this.m_resultMemberTotalRemaining))
		{
			this.m_resultMemberTotalRemaining = oFF.QDimensionMemberResult.createQDimensionMember(this.getContext(), this, type);
		}
		return this.m_resultMemberTotalRemaining;
	}
	return null;
};
oFF.QDimension.prototype.createFilterList = function()
{
	var hierarchyName = null;
	if (this.isHierarchyActive())
	{
		hierarchyName = this.getHierarchyName();
	}
	return oFF.QFilterCartesianList._createMd(this.getContext(), null, this.getKeyField().getMetadata(), hierarchyName);
};
oFF.QDimension.prototype.getResultSetSorting = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.isNull(queryModel))
	{
		return null;
	}
	return queryModel.getSortingManager().getDimensionSorting(this, true);
};
oFF.QDimension.prototype.hasSorting = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.isNull(queryModel))
	{
		return false;
	}
	var sortManager = queryModel.getSortingManager();
	var dimSorting = sortManager.getDimensionSorting(this, false);
	return oFF.notNull(dimSorting);
};
oFF.QDimension.prototype.supportsSorting = function(sortType)
{
	var supportedSortTypes = this.getMetadata().getSupportedSortTypes();
	if (oFF.notNull(supportedSortTypes) && oFF.notNull(sortType) && !supportedSortTypes.contains(sortType))
	{
		return false;
	}
	var queryModel = this.getQueryModel();
	if (oFF.isNull(queryModel))
	{
		return false;
	}
	var modelCapabilities = queryModel.getModelCapabilities();
	return !this.isUniversalDisplayHierarchyDimension() && modelCapabilities.supportsDimensionSorting(null, sortType);
};
oFF.QDimension.prototype.getSupportedReadModes = function(context)
{
	return this.m_readModeManager.getSupportedReadModes(context);
};
oFF.QDimension.prototype.supportsReadMode = function(context, readMode)
{
	return this.m_readModeManager.supportsReadMode(context, readMode);
};
oFF.QDimension.prototype.getReadModeDefault = function(context)
{
	return this.m_readModeManager.getReadModeDefault(context);
};
oFF.QDimension.prototype.hasReadModeDefault = function(context)
{
	return this.m_readModeManager.hasReadModeDefault(context);
};
oFF.QDimension.prototype.getReadMode = function(context)
{
	return this.m_readModeManager.getReadMode(context);
};
oFF.QDimension.prototype.setReadMode = function(context, mode)
{
	this.m_readModeManager.setReadMode(context, mode);
};
oFF.QDimension.prototype.setReadModeGraceful = function(context, mode)
{
	return this.m_readModeManager.setReadModeGraceful(context, mode);
};
oFF.QDimension.prototype.determineBestReadMode = function(context, mode)
{
	return this.m_readModeManager.determineBestReadMode(context, mode);
};
oFF.QDimension.prototype.isCompound = function()
{
	var metadata = this.getMetadataBase();
	if (metadata.isCompoundBase() === oFF.TriStateBool._DEFAULT)
	{
		var isNotCompoundField = this.getFirstFieldByType(oFF.PresentationType.DISPLAY_KEY_NOT_COMPOUND) !== null;
		if (!isNotCompoundField)
		{
			isNotCompoundField = this.getFirstFieldByType(oFF.PresentationType.KEY_NOT_COMPOUND) !== null;
		}
		if (!isNotCompoundField)
		{
			isNotCompoundField = this.getFirstFieldByType(oFF.PresentationType.DISPLAY_KEY_MIXED_COMPOUNDMENT) !== null;
		}
		metadata.setIsCompoundBase(oFF.TriStateBool.lookup(isNotCompoundField));
	}
	return metadata.isCompound();
};
oFF.QDimension.prototype.getSupportedAxesTypes = function()
{
	var axes = null;
	var metadata = this.getMetadata();
	if (oFF.notNull(metadata))
	{
		axes = metadata.getSupportedAxesTypes();
	}
	return axes;
};
oFF.QDimension.prototype.supportsAxis = function(axisType)
{
	return this.getMetadata().supportsAxis(axisType);
};
oFF.QDimension.prototype.isSelectable = function()
{
	var axis = this.getAxis();
	return oFF.isNull(axis) ? true : this.getMetadata().isSelectable(axis.getType());
};
oFF.QDimension.prototype.getDimensionType = function()
{
	var metadata = this.getMetadata();
	if (oFF.isNull(metadata))
	{
		return oFF.DimensionType.DIMENSION;
	}
	return metadata.getDimensionType();
};
oFF.QDimension.prototype.setDimensionType = function(type)
{
	if (oFF.notNull(type))
	{
		if (this.isStructure())
		{
			this.m_resultStructureController.setSupportsTotals(false);
		}
		if (this.supportsCustomMembers())
		{
			this.m_allStructureMembers = oFF.QModelComponentList.createModelComponentWithNameList(this.getContext(), this, false, "Structure Members", true);
			this.m_structureLayout = oFF.QModelComponentList.createModelComponentWithNameList(this.getContext(), this, false, "Structure Layout", true);
		}
	}
};
oFF.QDimension.prototype.getOlapComponentType = function()
{
	var metadata = this.getMetadata();
	if (oFF.notNull(metadata))
	{
		return metadata.getDimensionType();
	}
	return null;
};
oFF.QDimension.prototype.getTotalsStructure = function()
{
	return this.m_resultStructureController.getTotalsStructure();
};
oFF.QDimension.prototype.setResultVisibility = function(visibility)
{
	this.m_resultStructureController.setResultVisibility(visibility);
};
oFF.QDimension.prototype.setResultVisibilityByElement = function(element, visibility)
{
	this.m_resultStructureController.setResultVisibilityByElement(element, visibility);
};
oFF.QDimension.prototype.setResultVisibilityByElementAndAlignment = function(alignment, element, visibility)
{
	this.m_resultStructureController.setResultVisibilityByElementAndAlignment(alignment, element, visibility);
};
oFF.QDimension.prototype.getResultVisibility = function()
{
	return this.m_resultStructureController.getResultVisibility();
};
oFF.QDimension.prototype.getResultVisibilitySettings = function()
{
	return this.m_resultStructureController.getResultVisibilitySettings();
};
oFF.QDimension.prototype.clearResultVisibilitySettings = function()
{
	this.m_resultStructureController.clearResultVisibilitySettings();
};
oFF.QDimension.prototype.getResultVisibilityByElement = function(element)
{
	return this.m_resultStructureController.getResultVisibilityByElement(element);
};
oFF.QDimension.prototype.getResultVisibilityByElementAndAlignment = function(alignment, element)
{
	return this.m_resultStructureController.getResultVisibilityByElementAndAlignment(alignment, element);
};
oFF.QDimension.prototype.setResultAlignment = function(alignment)
{
	this.m_resultStructureController.setResultAlignment(alignment);
};
oFF.QDimension.prototype.getResultAlignment = function()
{
	return this.m_resultStructureController.getResultAlignment();
};
oFF.QDimension.prototype.getAdvancedResultStructure = function()
{
	return this.m_resultStructureController.getAdvancedResultStructure();
};
oFF.QDimension.prototype.getParentResultStructureController = function()
{
	var axis = this.getAxis();
	if (oFF.notNull(axis))
	{
		return axis.getResultStructureController();
	}
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		return queryModel.getResultStructureController();
	}
	return null;
};
oFF.QDimension.prototype.getResultStructureController = function()
{
	return this.m_resultStructureController;
};
oFF.QDimension.prototype.getResultStructureControllerBase = function()
{
	return this.m_resultStructureController;
};
oFF.QDimension.prototype.getResultStructureChildren = function()
{
	return null;
};
oFF.QDimension.prototype.supportsTotals = function()
{
	return this.getMetadata().canBeAggregated() && this.m_resultStructureController.supportsTotals();
};
oFF.QDimension.prototype.isTotalsAlignmentOnDefault = function()
{
	return this.m_resultStructureController.isTotalsAlignmentOnDefault();
};
oFF.QDimension.prototype.isTotalsVisibilityOnDefault = function()
{
	return this.m_resultStructureController.isTotalsVisibilityOnDefault();
};
oFF.QDimension.prototype.isTotalsStructureOnDefault = function()
{
	return this.m_resultStructureController.isTotalsStructureOnDefault();
};
oFF.QDimension.prototype.restoreTotalsAlignment = function(restoreAction, recurseChildren)
{
	this.m_resultStructureController.restoreTotalsAlignment(restoreAction, recurseChildren);
};
oFF.QDimension.prototype.restoreTotalsVisibility = function(restoreAction, recurseChildren)
{
	this.m_resultStructureController.restoreTotalsVisibility(restoreAction, recurseChildren);
};
oFF.QDimension.prototype.getModelLevel = function()
{
	return this.m_resultStructureController.getModelLevel();
};
oFF.QDimension.prototype.getFilterCapabilities = function()
{
	return this.getMetadata().getFilterCapabilities();
};
oFF.QDimension.prototype.isOwnerDimension = function()
{
	return this.getMetadata().isOwnerDimension();
};
oFF.QDimension.prototype.getFieldLayoutType = function()
{
	return this.m_fieldLayoutType;
};
oFF.QDimension.prototype.getFieldLayoutTypeExt = function(context)
{
	if (context === oFF.QContextType.RESULT_SET)
	{
		return this.m_fieldLayoutType;
	}
	return this.m_selectorFieldLayoutType;
};
oFF.QDimension.prototype.assertSupportsFieldLayoutType = function(type)
{
	if (!this.getMetadata().supportsFieldLayoutType(type))
	{
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("Field layout type is not supported ", type.getName()));
	}
};
oFF.QDimension.prototype.setFieldLayoutType = function(type)
{
	if (oFF.notNull(type))
	{
		this.assertSupportsFieldLayoutType(type);
		if (this.m_fieldLayoutType !== type)
		{
			var oldValue = this.m_fieldLayoutType;
			this.m_fieldLayoutType = type;
			this.notifyPropertyConstantChanged(oFF.QDimensionProperties.QY_FIELD_LAYOUT_TYPE, oldValue, type);
		}
	}
};
oFF.QDimension.prototype.getDefaultFieldLayoutType = function()
{
	return this.getMetadata().getDefaultFieldLayoutType();
};
oFF.QDimension.prototype.getSelectorFieldLayoutType = function()
{
	return this.m_selectorFieldLayoutType;
};
oFF.QDimension.prototype.setSelectorFieldLayoutType = function(type)
{
	if (oFF.notNull(this.m_selectorFieldLayoutType) && oFF.notNull(type))
	{
		this.assertSupportsFieldLayoutType(type);
		if (this.m_selectorFieldLayoutType !== type)
		{
			this.m_selectorFieldLayoutType = type;
			this.notifyNodeChanged();
		}
	}
};
oFF.QDimension.prototype.supportsFieldLayoutType = function(type)
{
	return this.getMetadata().supportsFieldLayoutType(type);
};
oFF.QDimension.prototype.getFieldContainer = function()
{
	return this.m_fieldContainer;
};
oFF.QDimension.prototype.getFieldContainerBase = function()
{
	return this.m_fieldContainer;
};
oFF.QDimension.prototype.getAttributeContainer = function()
{
	return this.m_attributeContainer;
};
oFF.QDimension.prototype.getAttributeContainerBase = function()
{
	return this.m_attributeContainer;
};
oFF.QDimension.prototype.getMainAttribute = function()
{
	return this.m_attributeContainer.getMainAttribute();
};
oFF.QDimension.prototype.getDimension = function()
{
	return this;
};
oFF.QDimension.prototype.getResultSetAttributes = function()
{
	return this.m_attributeContainer.getResultSetAttributes();
};
oFF.QDimension.prototype.getAttributes = function()
{
	return this.m_attributeContainer.getAttributes();
};
oFF.QDimension.prototype.getAttributeByName = function(name)
{
	return this.m_attributeContainer.getAttributeByName(name);
};
oFF.QDimension.prototype.getDefaultResultSetAttributes = function()
{
	return this.m_attributeContainer.getDefaultResultSetAttributes();
};
oFF.QDimension.prototype.setIsCumulative = function(isEnabled)
{
	if (!this.supportsCumulative())
	{
		oFF.noSupport();
	}
	var oldValue = this.m_isCumulative;
	this.m_isCumulative = isEnabled;
	this.notifyPropertyBooleanChanged(oFF.QDimensionProperties.IS_CUMULATIVE, oldValue, isEnabled);
};
oFF.QDimension.prototype.isCumulative = function()
{
	if (!this.supportsCumulative())
	{
		return false;
	}
	return this.m_isCumulative;
};
oFF.QDimension.prototype.supportsCumulative = function()
{
	return this.getMetadata().supportsCumulative();
};
oFF.QDimension.prototype.isGroupingDimension = function()
{
	return this.getMetadata().isGroupingDimension();
};
oFF.QDimension.prototype.isComponentNode = function()
{
	return true;
};
oFF.QDimension.prototype.getIndexedChildren = function()
{
	var children = oFF.XList.create();
	if (oFF.notNull(this.m_allStructureMembers))
	{
		for (var i = 0; i < this.m_allStructureMembers.size(); i++)
		{
			var structureMember = this.m_allStructureMembers.get(i);
			if (oFF.notNull(structureMember) && structureMember.getMemberType() === oFF.MemberType.RESTRICTED_MEASURE)
			{
				children.add(structureMember);
			}
		}
	}
	return children.getIterator();
};
oFF.QDimension.prototype.getNamedChildren = function()
{
	var map = oFF.XHashMapByString.create();
	if (oFF.notNull(this.m_fieldContainer))
	{
		map.put("FieldContainer", this.m_fieldContainer);
	}
	if (oFF.notNull(this.m_attributeContainer))
	{
		map.put("AttributeContainer", this.m_attributeContainer);
	}
	return map;
};
oFF.QDimension.prototype.getAllDimensionMembers = function()
{
	var member = oFF.XList.create();
	if (this.isMeasureStructure())
	{
		var allStructureMembers = this.getAllStructureMembers();
		oFF.XCollectionUtils.addAll(member, allStructureMembers);
	}
	else
	{
		var allDimensionMembers = this.processValueHelp(oFF.SyncType.BLOCKING, null, null).getData();
		member = this.nodeToMember(allDimensionMembers);
	}
	return member;
};
oFF.QDimension.prototype.nodeToMember = function(list)
{
	var member = oFF.XList.create();
	if (oFF.XCollectionUtils.hasElements(list))
	{
		var iterator = list.getIterator();
		while (iterator.hasNext())
		{
			member.add(iterator.next().getDimensionMember());
		}
		oFF.XObjectExt.release(iterator);
	}
	return member;
};
oFF.QDimension.prototype.processVariableHelp = function(variableName, syncType, listener, customIdentifier)
{
	var listenerDecorator = oFF.QFactory.createValueHelpListenerDecorator(listener);
	this.processVarHelp(variableName, syncType, listenerDecorator, customIdentifier);
	return listenerDecorator.getResult();
};
oFF.QDimension.prototype.processVarHelp = function(variableName, syncType, listener, customIdentifier)
{
	var dimension = this;
	var valueHelpProvider;
	var variable;
	if (this.getQueryManagerBase() !== null)
	{
		var queryManager = this.getQueryManagerBase();
		if (queryManager.supportsReInitVariables() && queryManager.isSubmitted())
		{
			return this._valueHelpError("Valuehelp for variables is not allowed if variables are already submitted.", listener, customIdentifier);
		}
		valueHelpProvider = queryManager.getValueHelpProvider();
		variable = queryManager.getVariableProcessor().getVariables().getByKey(variableName);
	}
	else if (this.getDataSource().getType() === oFF.MetaObjectType.PLANNING_SEQUENCE || this.getDataSource().getType() === oFF.MetaObjectType.PLANNING_FUNCTION)
	{
		var planningService = this.getContext().getPlanningContext().getPlanningService();
		if (planningService.supportsPlanningValueHelp())
		{
			valueHelpProvider = this.getContext().getVariableHelpProvider();
		}
		else if (this.getDataSource().getType() === oFF.MetaObjectType.PLANNING_SEQUENCE)
		{
			var dimQm = this.getContext().getQueryManagerForDimension(this);
			valueHelpProvider = dimQm.getValueHelpProvider();
			dimension = dimQm.getQueryModel().getDimensionByName(this.getName());
		}
		else
		{
			return this._valHelpError("Valuehelp is not supported in this context", listener, customIdentifier);
		}
		variable = this.getContext().getVariableContainer().getVariable(variableName);
	}
	else
	{
		return this._valHelpError("Valuehelp is not supported in this context", listener, customIdentifier);
	}
	return this._processVariableValueHelp(variableName, syncType, listener, customIdentifier, valueHelpProvider, variable, dimension);
};
oFF.QDimension.prototype.processVariableHelpWithVariable = function(variable, syncType, listener, customIdentifier)
{
	var listenerDecorator = oFF.QFactory.createValueHelpListenerDecorator(listener);
	this.processVarHelpWithVariable(variable, syncType, listenerDecorator, customIdentifier);
	return listenerDecorator.getResult();
};
oFF.QDimension.prototype.processVarHelpWithVariable = function(variable, syncType, listener, customIdentifier)
{
	var dimension = this;
	var valueHelpProvider;
	if (this.getQueryManagerBase() !== null)
	{
		valueHelpProvider = this.getQueryManagerBase().getValueHelpProvider();
	}
	else if (this.getDataSource().getType() === oFF.MetaObjectType.PLANNING_SEQUENCE || this.getDataSource().getType() === oFF.MetaObjectType.PLANNING_FUNCTION)
	{
		var planningService = this.getContext().getPlanningContext().getPlanningService();
		if (planningService.supportsPlanningValueHelp())
		{
			valueHelpProvider = this.getContext().getVariableHelpProvider();
		}
		else if (this.getDataSource().getType() === oFF.MetaObjectType.PLANNING_SEQUENCE)
		{
			var dimQm = this.getContext().getQueryManagerForDimension(this);
			valueHelpProvider = dimQm.getValueHelpProvider();
			dimension = dimQm.getQueryModel().getDimensionByName(this.getName());
		}
		else
		{
			return this._valHelpError("Valuehelp is not supported in this context", listener, customIdentifier);
		}
	}
	else
	{
		return this._valHelpError("Valuehelp is not supported in this context", listener, customIdentifier);
	}
	return this._processVariableValueHelp(variable.getName(), syncType, listener, customIdentifier, valueHelpProvider, variable, dimension);
};
oFF.QDimension.prototype._processVariableValueHelp = function(variableName, syncType, listener, customIdentifier, valueHelpProvider, variable, dimension)
{
	if (oFF.isNull(variable))
	{
		return this._valueHelpError(oFF.XStringUtils.concatenate3("Variable '", variableName, "' is null."), listener, customIdentifier);
	}
	var variableType = variable.getVariableType();
	if (variableType.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
	{
		var memberVariable = variable;
		if (memberVariable.supportsValueHelp())
		{
			return valueHelpProvider.processVarHelp(dimension, memberVariable, syncType, listener, customIdentifier);
		}
		return this._valueHelpError(oFF.XStringUtils.concatenate3("Variable '", variableName, "' does not support valuehelp."), listener, customIdentifier);
	}
	return this._valueHelpError(oFF.XStringUtils.concatenate2("Valuehelp is not supported for variables of the type ", variableType.getName()), listener, customIdentifier);
};
oFF.QDimension.prototype._valueHelpError = function(errorMessage, listener, customIdentifier)
{
	var extResult = oFF.ExtResult.createWithErrorMessage(errorMessage);
	if (oFF.notNull(listener))
	{
		listener.onValuehelpExecuted(extResult, null, customIdentifier);
	}
	return extResult;
};
oFF.QDimension.prototype._valHelpError = function(errorMessage, listener, customIdentifier)
{
	var extResult = oFF.ExtResult.createWithErrorMessage(errorMessage);
	if (oFF.notNull(listener))
	{
		listener.onValuehelpExecuted(extResult, null, customIdentifier);
	}
	return extResult;
};
oFF.QDimension.prototype._valHelpResultSetError = function(errorMessage, listener, customIdentifier)
{
	var extResult = oFF.ExtResult.createWithErrorMessage(errorMessage);
	if (oFF.notNull(listener))
	{
		listener.onValuehelpExecuted(extResult, null, customIdentifier);
	}
	return extResult;
};
oFF.QDimension.prototype.processIsNodeChildOfParent = function(nodeName, parentName, syncType, listener, customIdentifier)
{
	return this.getSelector().processIsNodeChildOfParent(nodeName, parentName, syncType, listener, customIdentifier);
};
oFF.QDimension.prototype.processMemberHelp = function(syncType, listener, customIdentifier)
{
	var listenerDecorator = oFF.QFactory.createValueHelpListenerDecorator(listener);
	this.processValueHelp(syncType, listenerDecorator, customIdentifier);
	return listenerDecorator.getResult();
};
oFF.QDimension.prototype.processValueHelp = function(syncType, listener, customIdentifier)
{
	var queryModel = this.getQueryModelBase();
	if (oFF.isNull(queryModel))
	{
		return this._valHelpError("Valuehelp is not supported in this context", listener, customIdentifier);
	}
	if (queryModel.isBlendingModel())
	{
		return this._valHelpError("Valuehelp is not supported for Blending", listener, customIdentifier);
	}
	var queryManager = queryModel.getQueryManagerBase();
	return queryManager.getValueHelpProvider().processValueHelp(this, syncType, listener, customIdentifier);
};
oFF.QDimension.prototype.processValueHelpResultSet = function(syncType, listener, customIdentifier)
{
	var queryModel = this.getQueryModelBase();
	if (oFF.isNull(queryModel))
	{
		return this._valHelpResultSetError("Valuehelp is not supported in this context", listener, customIdentifier);
	}
	if (queryModel.isBlendingModel())
	{
		return this._valHelpResultSetError("Valuehelp is not supported for Blending", listener, customIdentifier);
	}
	var queryManager = queryModel.getQueryManagerBase();
	return queryManager.getValueHelpProvider().processValueHelpResultSet(this, syncType, listener, customIdentifier);
};
oFF.QDimension.prototype.getNameValuePairs = function()
{
	if (oFF.isNull(this.m_nameValuePairs))
	{
		return oFF.XList.create();
	}
	return this.m_nameValuePairs.getValuesAsReadOnlyList();
};
oFF.QDimension.prototype.addNameValuePair = function(nameValuePair)
{
	if (oFF.isNull(this.m_nameValuePairs))
	{
		this.m_nameValuePairs = oFF.XHashMapByString.create();
	}
	if (oFF.notNull(nameValuePair) && !this.m_nameValuePairs.containsKey(nameValuePair.getName()))
	{
		this.m_nameValuePairs.put(nameValuePair.getName(), nameValuePair);
	}
};
oFF.QDimension.prototype.getNameValuePair = function(name)
{
	if (oFF.notNull(this.m_nameValuePairs) && this.m_nameValuePairs.containsKey(name))
	{
		return this.m_nameValuePairs.getByKey(name);
	}
	return null;
};
oFF.QDimension.prototype.getEffectiveResultSetFields = function()
{
	if (this.m_fieldLayoutType === oFF.FieldLayoutType.FIELD_BASED)
	{
		return this.m_fieldContainer.getResultSetFields();
	}
	return this.m_attributeContainer.getResultSetAttributes().getEffectiveFields(oFF.QContextType.RESULT_SET);
};
oFF.QDimension.prototype.getAttributesExt = function(context)
{
	return this.m_attributeContainer.getAttributesExt(context);
};
oFF.QDimension.prototype.getSelectorAttributes = function()
{
	return this.m_attributeContainer.getSelectorAttributes();
};
oFF.QDimension.prototype.setMeasureHelpMetadataSelector = function(measureHelpMetadataSelector)
{
	this.getSelector().setMeasureHelpMetadataSelector(measureHelpMetadataSelector);
};
oFF.QDimension.prototype.getMeasureHelpMetadataSelector = function()
{
	return this.getSelector().getMeasureHelpMetadataSelector();
};
oFF.QDimension.prototype.setSelectorOrder = function(direction)
{
	this.getSelector().setSelectorOrder(direction);
};
oFF.QDimension.prototype.getSelectorOrder = function()
{
	return this.getSelector().getSelectorOrder();
};
oFF.QDimension.prototype.setSelectorPaging = function(start, end)
{
	this.getSelector().setSelectorPaging(start, end);
};
oFF.QDimension.prototype.getSelectorPagingStart = function()
{
	return this.getSelector().getSelectorPagingStart();
};
oFF.QDimension.prototype.getSelectorPagingEnd = function()
{
	return this.getSelector().getSelectorPagingEnd();
};
oFF.QDimension.prototype.setSelectorPagingDefault = function()
{
	this.getSelector().setSelectorPagingDefault();
};
oFF.QDimension.prototype.setSelectorPagingStart = function(start)
{
	this.getSelector().setSelectorPagingStart(start);
};
oFF.QDimension.prototype.setSelectorPagingEnd = function(end)
{
	this.getSelector().setSelectorPagingEnd(end);
};
oFF.QDimension.prototype.getFlatFieldsList = function()
{
	return this.m_fieldContainer.getFlatFieldsList();
};
oFF.QDimension.prototype.getHierarchyFieldsList = function()
{
	return this.m_fieldContainer.getHierarchyFieldsList();
};
oFF.QDimension.prototype.getFieldsListByActiveUsageType = function()
{
	var result;
	if (this.isHierarchyAssignedAndActive())
	{
		result = this.m_fieldContainer.getHierarchyFieldsList();
	}
	else
	{
		result = this.m_fieldContainer.getFlatFieldsList();
	}
	return result;
};
oFF.QDimension.prototype.getFieldsListByActiveUsageTypeExt = function(context)
{
	var result = null;
	if (context === oFF.QContextType.RESULT_SET)
	{
		result = this.getFieldsListByActiveUsageType();
	}
	return result;
};
oFF.QDimension.prototype.getSelector = function()
{
	if (oFF.isNull(this.m_selector))
	{
		this.m_selector = oFF.QFactory.createDimensionSelector(this);
	}
	return this.m_selector;
};
oFF.QDimension.prototype.getSelectorContainer = function()
{
	return this.getSelector().getSelectorContainer();
};
oFF.QDimension.prototype.addSelectorFilterForKey = function(filterValue, comparisonOperator)
{
	return this.getSelector().addSelectorFilterForKey(filterValue, comparisonOperator);
};
oFF.QDimension.prototype.addSelectorFilterIntervalForKey = function(lowValue, highValue, comparisonOperator)
{
	return this.getSelector().addSelectorFilterIntervalForKey(lowValue, highValue, comparisonOperator);
};
oFF.QDimension.prototype.addSelectorFilter = function(filterValue, field, comparisonOperator)
{
	return this.getSelector().addSelectorFilter(filterValue, field, comparisonOperator);
};
oFF.QDimension.prototype.addSelectorFilterInterval = function(lowValue, highValue, field, comparisonOperator)
{
	return this.getSelector().addSelectorFilterInterval(lowValue, highValue, field, comparisonOperator);
};
oFF.QDimension.prototype.clearSelectorFilter = function()
{
	this.getSelector().clearSelectorFilter();
};
oFF.QDimension.prototype.getSelectorFilterUsage = function()
{
	return this.getSelector().getSelectorFilterUsage();
};
oFF.QDimension.prototype.addSearchForKey = function(searchValue)
{
	return this.getSelector().addSearchForKey(searchValue);
};
oFF.QDimension.prototype.addSearchForText = function(searchValue)
{
	return this.getSelector().addSearchForText(searchValue);
};
oFF.QDimension.prototype.addSearchForKeyUsingDynamicFilter = function(searchValue)
{
	return this.getSelector().addSearchForKeyUsingDynamicFilter(searchValue);
};
oFF.QDimension.prototype.addSearchForTextUsingDynamicFilter = function(searchValue)
{
	return this.getSelector().addSearchForTextUsingDynamicFilter(searchValue);
};
oFF.QDimension.prototype.setSelectorFilterUsage = function(queryFilterUsage)
{
	this.getSelector().setSelectorFilterUsage(queryFilterUsage);
};
oFF.QDimension.prototype.setSelectorHierarchyNode = function(parent)
{
	this.getSelector().setSelectorHierarchyNode(parent);
};
oFF.QDimension.prototype.clearSelectorHierarchyNode = function()
{
	this.getSelector().clearSelectorHierarchyNode();
};
oFF.QDimension.prototype.getSelectorHierarchyNode = function()
{
	return this.getSelector().getSelectorHierarchyNode();
};
oFF.QDimension.prototype.getFilter = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.isNull(queryModel))
	{
		return null;
	}
	var selectionStateContainer = queryModel.getFilter().getDynamicFilter();
	var complexSelectionRoot = selectionStateContainer.getFilterRootElement();
	if (oFF.isNull(complexSelectionRoot) || selectionStateContainer.isCartesianProduct())
	{
		var cartesianProduct = selectionStateContainer.getCartesianProductWithDefault();
		return cartesianProduct.getCartesianListByDimensionName(this.getName());
	}
	if (selectionStateContainer.isComplexFilter())
	{
		return this.getFilterFromComplexSelection(complexSelectionRoot);
	}
	return null;
};
oFF.QDimension.prototype.getFilterFromComplexSelection = function(complexSelectionRoot)
{
	var cartesianList = null;
	if (complexSelectionRoot.getOlapComponentType() === oFF.FilterComponentType.AND)
	{
		var selectionIterator = complexSelectionRoot.getChildrenIterator();
		while (selectionIterator.hasNext())
		{
			var component = selectionIterator.next();
			if (component.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
			{
				var dimensionName = component.getDimensionName();
				if (oFF.XString.isEqual(dimensionName, this.getName()))
				{
					if (oFF.notNull(cartesianList))
					{
						return null;
					}
					cartesianList = component;
				}
			}
		}
	}
	return cartesianList;
};
oFF.QDimension.prototype.setSelectorInitialDrillLevel = function(relativeLevelCount)
{
	this.getSelector().setSelectorInitialDrillLevel(relativeLevelCount);
};
oFF.QDimension.prototype.getSelectorRootLevel = function()
{
	return this.getSelector().getSelectorRootLevel();
};
oFF.QDimension.prototype.setSelectorHierarchyActive = function(isActive)
{
	this.getSelector().setSelectorHierarchyActive(isActive);
};
oFF.QDimension.prototype.isSelectorHierarchyActive = function()
{
	return this.getSelector().isSelectorHierarchyActive();
};
oFF.QDimension.prototype.getSelectorKeyField = function()
{
	return this.getSelector().getSelectorKeyField();
};
oFF.QDimension.prototype.getSelectorTextField = function()
{
	return this.getSelector().getSelectorTextField();
};
oFF.QDimension.prototype.getSelectorFields = function()
{
	return this.m_fieldContainer.getSelectorFields();
};
oFF.QDimension.prototype.setSelectorMaxResultRecords = function(maxResultRecords)
{
	this.getSelector().setSelectorMaxResultRecords(maxResultRecords);
};
oFF.QDimension.prototype.getSelectorMaxResultRecords = function()
{
	return this.getSelector().getSelectorMaxResultRecords();
};
oFF.QDimension.prototype.setSkipEntries = function(amount)
{
	if (this.m_skip !== amount)
	{
		var oldValue = this.m_skip;
		this.m_skip = amount;
		this.notifyPropertyIntegerChanged(oFF.QDimensionProperties.QY_SKIP, oldValue, amount);
	}
};
oFF.QDimension.prototype.getSkipEntries = function()
{
	return this.m_skip;
};
oFF.QDimension.prototype.setTopEntries = function(amount)
{
	if (this.m_top !== amount)
	{
		var oldValue = this.m_skip;
		this.m_top = amount;
		this.notifyPropertyIntegerChanged(oFF.QDimensionProperties.QY_TOP, oldValue, amount);
	}
};
oFF.QDimension.prototype.getTopEntries = function()
{
	return this.m_top;
};
oFF.QDimension.prototype.getSelectorDisplayKeyField = function()
{
	return this.getSelector().getSelectorDisplayKeyField();
};
oFF.QDimension.prototype.setSelectorFilterOnDisplayKey = function(isUsingDisplayKey)
{
	this.getSelector().setSelectorFilterOnDisplayKey(isUsingDisplayKey);
};
oFF.QDimension.prototype.setSelectorUseVisibilityFilter = function(isUsingVisibilityFilter)
{
	this.getSelector().setSelectorUseVisibilityFilter(isUsingVisibilityFilter);
};
oFF.QDimension.prototype.isSelectorFilteringOnDisplayKey = function()
{
	return this.getSelector().isSelectorFilteringOnDisplayKey();
};
oFF.QDimension.prototype.addSelectorFilterForText = function(filterValue, comparisonOperator)
{
	return this.getSelector().addSelectorFilterForText(filterValue, comparisonOperator);
};
oFF.QDimension.prototype.setSelectorGettingInterval = function(doGetInterval)
{
	return this.getSelector().setSelectorGettingInterval(doGetInterval);
};
oFF.QDimension.prototype.isSelectorGettingInterval = function()
{
	return this.getSelector().isSelectorGettingInterval();
};
oFF.QDimension.prototype.getGroupingDimensions = function()
{
	return this.getMetadata().getGroupingDimensions(this.getDimensionAccessor());
};
oFF.QDimension.prototype.getGroupingDimensionNames = function()
{
	return this.getMetadata().getGroupingDimensionNames(this.getDimensionAccessor());
};
oFF.QDimension.prototype.getGroupedDimensions = function()
{
	return this.getMetadata().getGroupedDimensions(this.getDimensionAccessor(), this);
};
oFF.QDimension.prototype.getLeveledHierarchies = function()
{
	return this.m_hierarchyManager.getLeveledHierarchies();
};
oFF.QDimension.prototype.getLeveledHierarchy = function(name)
{
	return this.m_hierarchyManager.getLeveledHierarchy(name);
};
oFF.QDimension.prototype.clearSelectorFilterByDimension = function(dimension)
{
	this.getSelector().clearSelectorFilterByDimension(dimension);
};
oFF.QDimension.prototype.getExternalName = function()
{
	return this.getMetadata().getExternalName();
};
oFF.QDimension.prototype.supportsLowerCase = function()
{
	return this.getMetadata().supportsLowerCase();
};
oFF.QDimension.prototype.setSelectorHierarchyNodeByName = function(parent)
{
	this.getSelector().setSelectorHierarchyNodeByName(parent);
};
oFF.QDimension.prototype.getSelectorHierarchyNodeName = function()
{
	return this.getSelector().getSelectorHierarchyNodeName();
};
oFF.QDimension.prototype.setSelectorUseQueryDrillOperations = function(useQueryDrillOperations)
{
	this.getSelector().setSelectorUseQueryDrillOperations(useQueryDrillOperations);
};
oFF.QDimension.prototype.isSelectorUseQueryDrillOperations = function()
{
	return this.getSelector().isSelectorUseQueryDrillOperations();
};
oFF.QDimension.prototype.setSelectorHierarchyWithNodeSid = function(nodeSid, nodeName)
{
	this.getSelector().setSelectorHierarchyWithNodeSid(nodeSid, nodeName);
};
oFF.QDimension.prototype.getSelectorHierarchyNodeSid = function()
{
	return this.getSelector().getSelectorHierarchyNodeSid();
};
oFF.QDimension.prototype.getHierarchyPathField = function()
{
	return this.m_fieldContainer.getHierarchyPathField();
};
oFF.QDimension.prototype.setSelectorComplexSelectionRoot = function(complexSelection)
{
	this.getSelector().setSelectorComplexSelectionRoot(complexSelection);
};
oFF.QDimension.prototype.newHierarchy = function(name)
{
	return oFF.QHierarchy.create(this.getContext(), this, name);
};
oFF.QDimension.prototype.getDefaultAxisType = function()
{
	return this.getMetadata().getDefaultAxisType();
};
oFF.QDimension.prototype.getDefaultResultSetFields = function()
{
	return this.m_fieldContainer.getDefaultResultSetFields();
};
oFF.QDimension.prototype.hasFixedResultSetFields = function()
{
	return this.m_fieldContainer.hasFixedResultSetFields();
};
oFF.QDimension.prototype.convertToFieldLayoutType = function(type)
{
	if (this.m_fieldLayoutType !== type)
	{
		if (this.getMetadata().supportsFieldLayoutType(type))
		{
			if (type === oFF.FieldLayoutType.FIELD_BASED)
			{
				var effectiveResultSetFields = this.getEffectiveResultSetFields();
				var fields = this.getResultSetFields();
				fields.queueEventing();
				fields.clear();
				fields.addAll(effectiveResultSetFields);
				fields.resumeEventing();
				this.setFieldLayoutType(type);
			}
		}
	}
};
oFF.QDimension.prototype.getNavigationNodes = function()
{
	return this.getSelector().getNavigationNodes();
};
oFF.QDimension.prototype.getAllStructureMembers = function()
{
	if (oFF.notNull(this.m_structureMemberLazyLoader))
	{
		this.m_structureMemberLazyLoader.loadAllStructureMembers();
	}
	return this.m_allStructureMembers;
};
oFF.QDimension.prototype.getLoadedStructureMembers = function()
{
	return this.m_allStructureMembers;
};
oFF.QDimension.prototype.getLoadedStructureMember = function(memberName)
{
	return this.m_allStructureMembers.getByKey(memberName);
};
oFF.QDimension.prototype.getStructureLayout = function()
{
	if (this.supportsBasicStructureMembers())
	{
		return this.m_structureLayout;
	}
	return null;
};
oFF.QDimension.prototype.setStructuredLayout = function(customStructureLayout)
{
	if (oFF.notNull(this.m_structureLayout))
	{
		this.m_structureLayout.clear();
		this.m_structureLayout.addAll(customStructureLayout);
	}
};
oFF.QDimension.prototype.isStructure = function()
{
	return this.getMetadata().isStructure();
};
oFF.QDimension.prototype.isMeasureStructure = function()
{
	return this.getMetadata().isMeasureStructure();
};
oFF.QDimension.prototype.getStructureMember = function(name)
{
	if (oFF.isNull(this.m_allStructureMembers) || oFF.isNull(name))
	{
		return null;
	}
	var member = this.getStructureMemberByKey(name);
	if (oFF.isNull(member))
	{
		member = this.remapIfLegacyCalculationPlaceholderName(name);
	}
	return member;
};
oFF.QDimension.prototype.remapIfLegacyCalculationPlaceholderName = function(name)
{
	var member = null;
	if (this.getSession().hasFeature(oFF.FeatureToggleOlap.MULTIPLE_ACCOUNT_HIERARCHIES) && this.getDimensionType() === oFF.DimensionType.ACCOUNT)
	{
		var placeholderPattern = oFF.XStringUtils.concatenate2("].&[", oFF.QModelConstants.CALCULATION_PLACEHOLDER_ID_PREFIX);
		if (oFF.XString.startsWith(name, "[") && oFF.XString.indexOf(name, placeholderPattern) !== -1)
		{
			var index = oFF.XString.indexOf(name, oFF.QModelConstants.CALCULATION_PLACEHOLDER_ID_PREFIX);
			var endindex = oFF.XString.indexOfFrom(name, "]", index);
			var noPrefixMemberName = oFF.XString.substring(name, index, endindex);
			member = this.getPlaceholderIdMemberMap().getByKey(noPrefixMemberName);
		}
	}
	return member;
};
oFF.QDimension.prototype.getStructureMemberByAliasOrMember = function(name)
{
	var foundMember = this.getStructureMember(name);
	if (oFF.isNull(foundMember))
	{
		return this.getStructureMemberByAlias(name);
	}
	return foundMember;
};
oFF.QDimension.prototype.getStructureMemberByAlias = function(aliasName)
{
	if (oFF.isNull(this.m_allStructureMembers) || oFF.isNull(aliasName))
	{
		return null;
	}
	var iterator = this.m_allStructureMembers.getIterator();
	while (iterator.hasNext())
	{
		var member = iterator.next();
		if (oFF.notNull(member) && oFF.XString.isEqual(member.getAliasName(), aliasName))
		{
			return member;
		}
	}
	return null;
};
oFF.QDimension.prototype.supportsResultVisibility = function()
{
	if (this.isStructure())
	{
		return false;
	}
	return this.m_resultStructureController.supportsResultVisibility();
};
oFF.QDimension.prototype.supportsResultAlignment = function()
{
	if (this.isStructure())
	{
		return false;
	}
	return this.m_resultStructureController.supportsResultAlignment();
};
oFF.QDimension.prototype.supportsAdvancedResultStructure = function()
{
	if (this.isStructure())
	{
		return false;
	}
	return this.m_resultStructureController.supportsAdvancedResultStructure();
};
oFF.QDimension.prototype.addNewBasicMeasure = function(name, text)
{
	if (this.supportsBasicStructureMembers())
	{
		var member = oFF.QBasicMeasure._createBasicMeasure(this.getContext(), this);
		member.setName(name);
		member.setText(text);
		this.addMeasureInternal(member, false);
		return member;
	}
	return null;
};
oFF.QDimension.prototype.addNewFormulaMeasure = function(name, text)
{
	if (this.supportsCustomMembers())
	{
		var newMember = oFF.QFormulaMeasure._createFormulaMeasure(this.getContext(), this);
		newMember.setName(name);
		newMember.setText(text);
		this.addMeasureInternal(newMember, true);
		this.addQueryDataCells(newMember);
		return newMember;
	}
	return null;
};
oFF.QDimension.prototype.addNewRestrictedMeasure = function(name, text)
{
	if (this.supportsCustomMembers())
	{
		var newMember = oFF.QRestrictedMeasure._createRestrictedMeasure(this, this);
		newMember.setName(name);
		newMember.setText(text);
		this.addMeasureInternal(newMember, true);
		this.addQueryDataCells(newMember);
		return newMember;
	}
	return null;
};
oFF.QDimension.prototype.addNewVarianceMeasure = function(name, text)
{
	if (this.supportsCustomMembers())
	{
		var newMember = oFF.QVarianceMeasure._createVarianceMeasure(this, this);
		newMember.setName(name);
		newMember.setText(text);
		this.addMeasureInternal(newMember, true);
		this.addQueryDataCells(newMember);
		return newMember;
	}
	return null;
};
oFF.QDimension.prototype.addNewExceptionAggregationMeasure = function(name, text)
{
	if (this.supportsCustomMembers())
	{
		var newMember = oFF.QExceptionAggregationMeasure._createExceptionAggregationMeasure(this.getContext(), this);
		newMember.setName(name);
		newMember.setText(text);
		this.addMeasureInternal(newMember, true);
		this.addQueryDataCells(newMember);
		return newMember;
	}
	return null;
};
oFF.QDimension.prototype.supportsCurrencyTranslationMembers = function()
{
	if (!this.isMeasureStructure())
	{
		return false;
	}
	if (this.getModelCapabilities().supportsCurrencyTranslation())
	{
		return true;
	}
	var currencyTranslationManager = this.getQueryModelBase().getCurrencyTranslationManagerBase();
	return oFF.notNull(currencyTranslationManager) && currencyTranslationManager.isLegacyMeasureCurrencyTranslationAccountModel();
};
oFF.QDimension.prototype.addNewCurrencyMeasure = function(name, text)
{
	if (this.supportsCustomMembers() && this.supportsCurrencyTranslationMembers())
	{
		var newMember = oFF.QCurrencyMeasure._createCurrencyMeasure(this.getContext(), this);
		newMember.setName(name);
		newMember.setText(text);
		this.addMeasureInternal(newMember, true);
		this.addQueryDataCells(newMember);
		return newMember;
	}
	return null;
};
oFF.QDimension.prototype.addQueryDataCells = function(member)
{
	var modelCapabilities = this.getModelCapabilities();
	if (modelCapabilities.supportsDataCells() && modelCapabilities.supportsRestrictedMeasures())
	{
		this.getQueryModelBase().getQueryDataCellsBase().newQueryDataCellsForMember(member);
	}
};
oFF.QDimension.prototype.addMeasure = function(newMeasure)
{
	if (this.supportsBasicStructureMembers() && newMeasure.getMemberType() === oFF.MemberType.BASIC_MEASURE || this.supportsCustomMembers())
	{
		this.addMeasureInternal(newMeasure, true);
	}
};
oFF.QDimension.prototype.getNextFreeCurrencyPlaceholderId = function()
{
	if (this.m_placeholderIdMemberMap.size() === 0 && this.m_placeholderIds.contains(oFF.CurrencyTranslationConstants.SIGNED_DATA))
	{
		return oFF.CurrencyTranslationConstants.SIGNED_DATA;
	}
	else
	{
		var placeholderIter = this.m_placeholderIds.getIterator();
		while (placeholderIter.hasNext())
		{
			var placeholderId = placeholderIter.next();
			if (!this.m_placeholderIdMemberMap.containsKey(placeholderId) && !oFF.XString.isEqual(placeholderId, oFF.CurrencyTranslationConstants.SIGNED_DATA_LOCAL))
			{
				return placeholderId;
			}
		}
	}
	return null;
};
oFF.QDimension.prototype.addMeasureInternal = function(newMeasure, withEvent)
{
	if (oFF.notNull(newMeasure))
	{
		var measureBase = newMeasure;
		if (this.m_placeholderIds.size() > 0)
		{
			var measureAlias = measureBase.getAliasName();
			if (this.getMetadata().getDimensionType() === oFF.DimensionType.ACCOUNT)
			{
				var placeholderId = this.getPlaceholderIdByAlias(measureAlias);
				if (oFF.isNull(placeholderId))
				{
					if (this.m_placeholderIds.contains(measureBase.getName()))
					{
						placeholderId = measureBase.getName();
					}
					else if (oFF.notNull(measureAlias) || measureBase.getName() === null)
					{
						placeholderId = this.getNextFreePlaceholderId();
					}
				}
				if (oFF.notNull(placeholderId))
				{
					if (measureBase.getName() === null)
					{
						measureBase.setName(placeholderId);
					}
					this.m_placeholderIdMemberMap.put(placeholderId, measureBase);
				}
			}
			else if (this.getMetadata().getDimensionType() === oFF.DimensionType.MEASURE_STRUCTURE)
			{
				var currencyTranslationManager = this.getQueryModel().getCurrencyTranslationManager();
				if (currencyTranslationManager.isLegacyMeasureCurrencyTranslationAccountModel() && measureBase.getComponentType().isEqualTo(oFF.MemberType.CURRENCY_MEASURE))
				{
					var currencyMeasureName = measureBase.getName();
					var currencyPlaceholderId = this.getPlaceholderIdByAlias(currencyMeasureName);
					if (oFF.isNull(currencyPlaceholderId))
					{
						if (oFF.XString.isEqual(currencyMeasureName, oFF.CurrencyConstants.LOCAL_CURRENCY) && this.m_placeholderIds.contains(oFF.CurrencyTranslationConstants.SIGNED_DATA_LOCAL))
						{
							currencyPlaceholderId = oFF.CurrencyTranslationConstants.SIGNED_DATA_LOCAL;
						}
						else if (oFF.XString.isEqual(currencyMeasureName, oFF.CurrencyConstants.DEFAULT_CURRENCY) && this.m_placeholderIds.contains(oFF.CurrencyTranslationConstants.SIGNED_DATA))
						{
							currencyPlaceholderId = oFF.CurrencyTranslationConstants.SIGNED_DATA;
						}
						else
						{
							currencyPlaceholderId = this.getNextFreeCurrencyPlaceholderId();
						}
					}
					if (oFF.notNull(currencyPlaceholderId))
					{
						var assignedMember = null;
						if (oFF.XString.isEqual(currencyMeasureName, oFF.CurrencyConstants.DEFAULT_CURRENCY) && this.m_placeholderIds.contains(oFF.CurrencyTranslationConstants.SIGNED_DATA))
						{
							assignedMember = this.m_placeholderIdMemberMap.getByKey(oFF.CurrencyTranslationConstants.SIGNED_DATA);
						}
						if (oFF.notNull(assignedMember) && assignedMember !== measureBase)
						{
							var nextPlaceholderId = this.getNextFreeCurrencyPlaceholderId();
							if (oFF.notNull(nextPlaceholderId))
							{
								measureBase.setAliasName(currencyMeasureName);
								this.m_placeholderIdMemberMap.put(currencyPlaceholderId, measureBase);
								this.m_placeholderIdMemberMap.put(nextPlaceholderId, assignedMember);
							}
						}
						else
						{
							measureBase.setAliasName(currencyMeasureName);
							this.m_placeholderIdMemberMap.put(currencyPlaceholderId, measureBase);
						}
					}
				}
			}
		}
		this.assertMemberUniqueName(measureBase.getName());
		if (this.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(measureBase) !== null || this.getKeyRefStorage().get(oFF.KeyRefConstants.MAIN_STORAGE, measureBase.getStorageGroupName(), measureBase.getName()) !== null)
		{
			measureBase.initializeFieldValues();
			var keyRef = oFF.QFactory.createKeyRef(measureBase.getStorageName(), measureBase.getStorageGroupName(), measureBase.getStorageObjectName());
			this.addQueryDataCells(measureBase);
			if (withEvent)
			{
				this.m_structureLayout.addKeyRef(keyRef);
				this.m_allStructureMembers.addKeyRef(keyRef);
			}
			else
			{
				this.m_structureLayout.addKeyRefInternal(keyRef);
				this.m_allStructureMembers.addKeyRefInternal(keyRef);
			}
		}
		else
		{
			measureBase.setParent(this);
			measureBase.initializeFieldValues();
			if (withEvent)
			{
				this.m_allStructureMembers.add(newMeasure);
				this.m_structureLayout.add(newMeasure);
			}
			else
			{
				this.m_allStructureMembers.addInternal(newMeasure);
				this.m_structureLayout.addInternal(newMeasure);
			}
		}
	}
};
oFF.QDimension.prototype.removeMeasure = function(name)
{
	if (this.supportsCustomMembers())
	{
		var member = this.getStructureMemberByKey(name);
		if (oFF.notNull(member))
		{
			var memberType = member.getMemberType();
			if (!memberType.isCustomMember() && !member.getTagging().containsKey(oFF.QTransientConstants.TAG_IS_TRANSIENT_MEMBER_COPY))
			{
				throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("Structure member cannot be removed: ", name));
			}
			if (member.isCreatedFromMetadata())
			{
				return false;
			}
		}
		return this.removeMeasureWithNoValidation(name);
	}
	return false;
};
oFF.QDimension.prototype.removeMeasureWithNoValidation = function(name)
{
	if (this.supportsCustomMembers())
	{
		var member = this.getStructureMemberByKey(name);
		if (oFF.notNull(member))
		{
			var queryModel = this.getQueryModelBase();
			queryModel.getQueryDataCellsBase().removeByMember(member);
			var sortingManager = queryModel.getSortingManager();
			var measureSorting = sortingManager.getMeasureSorting(member, false);
			if (oFF.notNull(measureSorting))
			{
				sortingManager.getSortingOperations().removeElement(measureSorting);
			}
			var currencyTranslationManager = queryModel.getCurrencyTranslationManager();
			if (currencyTranslationManager.isLegacyMeasureCurrencyTranslationAccountModel() && member.getComponentType().isEqualTo(oFF.MemberType.CURRENCY_MEASURE))
			{
				this.removeCurrencyPlaceHolderIdMember(member);
			}
			else
			{
				this.removePlaceholderIdMember(member);
			}
			queryModel.getExceptionManager().removeAllExceptionsOfMeasure(member);
		}
		var filter = this.getFilter();
		if (oFF.notNull(filter))
		{
			for (var i = 0; i < filter.size(); i++)
			{
				var filterElement = filter.getOp(i);
				var comparisonOperator = filterElement.getComparisonOperator();
				if (comparisonOperator.getNumberOfParameters() === 1)
				{
					var dimensionMember = filterElement.getLow().getDimensionMember();
					if (oFF.notNull(dimensionMember) && oFF.XString.isEqual(dimensionMember.getName(), name))
					{
						filter.removeAt(i);
						break;
					}
				}
			}
		}
		this.m_allStructureMembers.removeElement(member);
		this.m_structureLayout.removeElement(member);
		this.m_overdefinedMemberManager.removeOverdefinedMember(name);
		return true;
	}
	return false;
};
oFF.QDimension.prototype.removePlaceholderIdMember = function(member)
{
	if (this.m_placeholderIds.contains(member.getName()))
	{
		this.m_placeholderIdMemberMap.remove(member.getName());
	}
	else
	{
		var placeholderIdsIter = this.m_placeholderIdMemberMap.getKeysAsIteratorOfString();
		var deletePlaceholderId = null;
		while (placeholderIdsIter.hasNext())
		{
			var placeholderId = placeholderIdsIter.next();
			var assignedMember = this.m_placeholderIdMemberMap.getByKey(placeholderId);
			if (oFF.notNull(assignedMember) && oFF.XString.isEqual(assignedMember.getName(), member.getName()))
			{
				deletePlaceholderId = placeholderId;
				break;
			}
		}
		if (oFF.notNull(deletePlaceholderId))
		{
			this.m_placeholderIdMemberMap.remove(deletePlaceholderId);
		}
	}
};
oFF.QDimension.prototype.getLastAssignedCurrencyPlaceholderId = function()
{
	var placeholderIds = this.m_placeholderIdMemberMap.getKeysAsReadOnlyListOfString();
	var lastPlaceholderId = null;
	for (var i = placeholderIds.size() - 1; i >= 0; i--)
	{
		var placeholderId = placeholderIds.get(i);
		if (!oFF.XString.isEqual(placeholderId, oFF.CurrencyTranslationConstants.SIGNED_DATA) && !oFF.XString.isEqual(placeholderId, oFF.CurrencyTranslationConstants.SIGNED_DATA_LOCAL))
		{
			lastPlaceholderId = placeholderId;
			break;
		}
	}
	return lastPlaceholderId;
};
oFF.QDimension.prototype.removeCurrencyPlaceHolderIdMember = function(member)
{
	var assignedMember;
	var placeholderIdsIter = this.m_placeholderIdMemberMap.getKeysAsIteratorOfString();
	var deletePlaceholderId = null;
	while (placeholderIdsIter.hasNext())
	{
		var placeholderId = placeholderIdsIter.next();
		assignedMember = this.m_placeholderIdMemberMap.getByKey(placeholderId);
		if (oFF.notNull(assignedMember) && oFF.XString.isEqual(assignedMember.getAliasName(), member.getAliasName()))
		{
			deletePlaceholderId = placeholderId;
			break;
		}
	}
	if (oFF.notNull(deletePlaceholderId))
	{
		this.m_placeholderIdMemberMap.remove(deletePlaceholderId);
		if (oFF.XString.isEqual(deletePlaceholderId, oFF.CurrencyTranslationConstants.SIGNED_DATA))
		{
			var lastPlaceholderId = this.getLastAssignedCurrencyPlaceholderId();
			if (oFF.notNull(lastPlaceholderId))
			{
				assignedMember = this.m_placeholderIdMemberMap.getByKey(lastPlaceholderId);
				this.m_placeholderIdMemberMap.remove(lastPlaceholderId);
				this.m_placeholderIdMemberMap.put(oFF.CurrencyTranslationConstants.SIGNED_DATA, assignedMember);
			}
		}
	}
};
oFF.QDimension.prototype.removeOverdefinedAccount = function(name)
{
	if (this.getMetadata().getDimensionType() === oFF.DimensionType.ACCOUNT)
	{
		var member = this.getStructureMemberByKey(name);
		var dimMember = this.getDimensionMemberWithFormat(name, null);
		if (oFF.isNull(member))
		{
			return;
		}
		var memberType = member.getMemberType();
		if (!memberType.isCustomMember())
		{
			throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("Structure member cannot be removed: ", name));
		}
		var filter = this.getFilter();
		if (oFF.notNull(filter))
		{
			for (var i = 0; i < filter.size(); i++)
			{
				var filterElement = filter.getOp(i);
				var comparisonOperator = filterElement.getComparisonOperator();
				if (comparisonOperator.getNumberOfParameters() === 1)
				{
					var dimensionMember = filterElement.getLow().getDimensionMember();
					if (dimensionMember === member)
					{
						filterElement.getLow().setDimensionMember(dimMember);
						break;
					}
				}
			}
		}
		this.removePlaceholderIdMember(member);
		this.m_allStructureMembers.removeElement(member);
		this.m_structureLayout.removeElement(member);
	}
};
oFF.QDimension.prototype.removeCustomMembersWithWhiteList = function(measuresToKeep)
{
	if (oFF.isNull(measuresToKeep) || measuresToKeep.isEmpty())
	{
		this.removeCustomMembers();
	}
	else
	{
		if (this.supportsCustomMembers())
		{
			this.m_structureLayout.queueEventing();
			for (var measureIdx = 0; measureIdx < this.m_allStructureMembers.size(); measureIdx++)
			{
				var structureMember = this.m_allStructureMembers.get(measureIdx);
				if (oFF.isNull(structureMember))
				{
					this.m_allStructureMembers.removeAt(measureIdx);
					this.m_structureLayout.removeAt(measureIdx);
					measureIdx--;
				}
				else
				{
					var memberName = structureMember.getName();
					if (!measuresToKeep.contains(memberName) && structureMember.getMemberType().isCustomMember())
					{
						if (this.removeMeasure(memberName))
						{
							measureIdx--;
						}
					}
				}
			}
			this.m_structureLayout.resumeEventing();
		}
	}
};
oFF.QDimension.prototype.removeCustomMembers = function()
{
	if (this.supportsCustomMembers())
	{
		this.m_structureLayout.queueEventing();
		for (var measureIdx = 0; measureIdx < this.m_allStructureMembers.size(); measureIdx++)
		{
			var iqStructureMember = this.m_allStructureMembers.get(measureIdx);
			if (oFF.isNull(iqStructureMember))
			{
				this.m_allStructureMembers.removeAt(measureIdx);
				this.m_structureLayout.removeAt(measureIdx);
				measureIdx--;
			}
			else if (iqStructureMember.getMemberType().isCustomMember() && !iqStructureMember.isModelDefinedMember())
			{
				if (this.removeMeasure(iqStructureMember.getName()))
				{
					measureIdx--;
				}
			}
		}
		this.m_structureLayout.resumeEventing();
	}
};
oFF.QDimension.prototype.supportsCustomMembers = function()
{
	return this.getMetadata() !== null && this.getMetadata().supportsCustomMembers();
};
oFF.QDimension.prototype.getStructureMembers = function(getBasicMembers)
{
	var list = oFF.XListOfNameObject.create();
	for (var i = 0; i < this.m_allStructureMembers.size(); i++)
	{
		var member = this.m_allStructureMembers.get(i);
		if (oFF.notNull(member) && member.getMemberType() === oFF.MemberType.BASIC_MEASURE === getBasicMembers)
		{
			list.add(member);
		}
	}
	list.sortByDirection(oFF.XSortDirection.ASCENDING);
	return list;
};
oFF.QDimension.prototype.getBasicStructureMembers = function()
{
	if (this.supportsBasicStructureMembers())
	{
		return this.getStructureMembers(true);
	}
	return null;
};
oFF.QDimension.prototype.supportsBasicStructureMembers = function()
{
	return this.getMetadata().supportsBasicStructureMembers();
};
oFF.QDimension.prototype.getExtendedStructureMembers = function()
{
	if (this.isStructure())
	{
		return this.getStructureMembers(false);
	}
	return null;
};
oFF.QDimension.prototype.assertMemberUniqueName = function(name)
{
	if (oFF.isNull(name))
	{
		throw oFF.XException.createRuntimeException("The measure has no name");
	}
	oFF.XBooleanUtils.checkFalse(this.m_allStructureMembers.containsKey(name), oFF.XStringUtils.concatenate3("The MeasureStructure already has a measure '", name, "' defined. You can call removeMeasure(String name) to remove a custom measure previously defined."));
};
oFF.QDimension.prototype.containsStructureMember = function(name)
{
	if (oFF.isNull(this.m_allStructureMembers) || oFF.isNull(name))
	{
		return false;
	}
	return this.m_allStructureMembers.containsKey(name);
};
oFF.QDimension.prototype.supportsCalculatedBeforeAggregation = function()
{
	return this.getMetadata().supportsCalculatedBeforeAggregation();
};
oFF.QDimension.prototype.isHierarchyNavigationDeltaMode = function()
{
	return this.m_hierarchyManager.isHierarchyNavigationDeltaMode();
};
oFF.QDimension.prototype.getCubeBlendingPropertiesField = function()
{
	return this.m_fieldContainer.getCubeBlendingPropertiesField();
};
oFF.QDimension.prototype.newValueHelpMembers = function()
{
	return null;
};
oFF.QDimension.prototype.setAlternativeFieldValue = function(hierarchyKey, memberKey, fieldName, value, language)
{
	var internalLanguage;
	if (oFF.isNull(language))
	{
		internalLanguage = "";
	}
	else
	{
		internalLanguage = language;
	}
	if (oFF.isNull(this.m_alternativeFieldValues))
	{
		this.m_alternativeFieldValues = oFF.XHashMapByString.create();
	}
	var keyTypeStringRepresentation = oFF.XBoolean.convertToString(hierarchyKey);
	var keyMap = this.m_alternativeFieldValues.getByKey(keyTypeStringRepresentation);
	if (oFF.isNull(keyMap))
	{
		keyMap = oFF.XHashMapByString.create();
		this.m_alternativeFieldValues.put(keyTypeStringRepresentation, keyMap);
	}
	var fieldMap = keyMap.getByKey(memberKey);
	if (oFF.isNull(fieldMap))
	{
		fieldMap = oFF.XHashMapByString.create();
		keyMap.put(memberKey, fieldMap);
	}
	var languageMap = fieldMap.getByKey(fieldName);
	if (oFF.isNull(languageMap))
	{
		languageMap = oFF.XHashMapByString.create();
		fieldMap.put(fieldName, languageMap);
	}
	languageMap.put(internalLanguage, value);
};
oFF.QDimension.prototype.getAlternativeFieldValue = function(hierarchyKey, memberKey, fieldName, language)
{
	return this.getAlternateFieldValueWithActualLanguageOrLanguageParam(hierarchyKey, memberKey, fieldName, false, language);
};
oFF.QDimension.prototype.getAlternativeFieldValueLanguageOption = function(hierarchyKey, memberKey, fieldName)
{
	return this.getAlternateFieldValueWithActualLanguageOrLanguageParam(hierarchyKey, memberKey, fieldName, true, null);
};
oFF.QDimension.prototype.getAlternateFieldValueWithActualLanguageOrLanguageParam = function(hierarchyKey, memberKey, fieldName, withActualLanguage, languageParameter)
{
	if (oFF.notNull(this.m_alternativeFieldValues))
	{
		var keyMap = this.m_alternativeFieldValues.getByKey(oFF.XBoolean.convertToString(hierarchyKey));
		if (oFF.notNull(keyMap))
		{
			var fieldMap = keyMap.getByKey(memberKey);
			if (oFF.notNull(fieldMap))
			{
				var languageMap = fieldMap.getByKey(fieldName);
				if (oFF.notNull(languageMap))
				{
					var language = languageParameter;
					if (withActualLanguage)
					{
						language = this.getActualLanguage();
					}
					if (oFF.XStringUtils.isNullOrEmpty(language) || languageMap.getByKey(language) === null)
					{
						return languageMap.getByKey("");
					}
					return languageMap.getByKey(language);
				}
			}
		}
	}
	return null;
};
oFF.QDimension.prototype.getActualLanguage = function()
{
	var queryManager = this.getQueryManagerBase();
	if (oFF.isNull(queryManager))
	{
		return null;
	}
	var language = null;
	var connection = queryManager.getConnection();
	if (oFF.notNull(connection))
	{
		var serverMetadata = connection.getServerMetadata();
		if (oFF.notNull(serverMetadata))
		{
			language = serverMetadata.getUserLanguage();
		}
	}
	if (oFF.isNull(language))
	{
		var sysDesc = queryManager.getSystemDescription();
		if (oFF.notNull(sysDesc))
		{
			language = sysDesc.getLanguage();
		}
	}
	return language;
};
oFF.QDimension.prototype.getAlternativeFieldValueMemberKeys = function(hierarchyKey)
{
	if (oFF.notNull(this.m_alternativeFieldValues))
	{
		var keyMap = this.m_alternativeFieldValues.getByKey(oFF.XBoolean.convertToString(hierarchyKey));
		if (oFF.notNull(keyMap))
		{
			return keyMap.getKeysAsReadOnlyListOfString();
		}
	}
	return null;
};
oFF.QDimension.prototype.getAlternativeFieldValueFields = function(hierarchyKey, memberKey)
{
	if (oFF.notNull(this.m_alternativeFieldValues))
	{
		var keyMap = this.m_alternativeFieldValues.getByKey(oFF.XBoolean.convertToString(hierarchyKey));
		if (oFF.notNull(keyMap))
		{
			var fieldMap = keyMap.getByKey(memberKey);
			if (oFF.notNull(fieldMap))
			{
				return fieldMap.getKeysAsReadOnlyListOfString();
			}
		}
	}
	return null;
};
oFF.QDimension.prototype.getAlternativeFieldValueLanguages = function(hierarchyKey, memberKey, fieldName)
{
	if (oFF.notNull(this.m_alternativeFieldValues))
	{
		var keyMap = this.m_alternativeFieldValues.getByKey(oFF.XBoolean.convertToString(hierarchyKey));
		if (oFF.notNull(keyMap))
		{
			var fieldMap = keyMap.getByKey(memberKey);
			if (oFF.notNull(fieldMap))
			{
				var languageMap = fieldMap.getByKey(fieldName);
				if (oFF.notNull(languageMap))
				{
					return languageMap.getKeysAsReadOnlyListOfString();
				}
			}
		}
	}
	return null;
};
oFF.QDimension.prototype.canBeAggregated = function()
{
	return this.getMetadata().canBeAggregated();
};
oFF.QDimension.prototype.getAttributeViewName = function()
{
	return this.getMetadata().getAttributeViewName();
};
oFF.QDimension.prototype.setIgnoreOnOptimizedExport = function(isIgnored)
{
	this.m_isIgnoredOnExport = isIgnored;
};
oFF.QDimension.prototype.isIgnoredOnOptimizedExport = function()
{
	return this.m_isIgnoredOnExport;
};
oFF.QDimension.prototype.mergeDeepRecursive = function(settings, other)
{
	var otherDim = other;
	this.setText(otherDim.getOriginalText());
	this.setOverrideText(otherDim.getOverrideText());
	this.m_hierarchyManager.mergeDeepRecursive(settings, otherDim);
	if (oFF.notNull(settings) && settings.isInitialBWMerge())
	{
		if (this.getFieldLayoutType() === oFF.FieldLayoutType.ATTRIBUTE_BASED)
		{
			var otherFieldLayout = otherDim.getFieldLayoutType();
			this.setFieldLayoutType(otherFieldLayout);
			if (otherFieldLayout === oFF.FieldLayoutType.ATTRIBUTE_BASED)
			{
				var attributeContainer = this.getAttributeContainerBase();
				var otherAttributeContainer = otherDim.getAttributeContainer();
				attributeContainer.mergeDeepRecursive(settings, otherAttributeContainer);
			}
		}
	}
	var selector = this.getSelector();
	selector.mergeDeepRecursive(settings, otherDim.getSelector());
	this.m_readModeManager.mergeDeepRecursive(settings, otherDim);
	this._mergeDeepRecursiveMembers(settings, otherDim);
};
oFF.QDimension.prototype._mergeDeepRecursiveMembers = function(settings, otherDim)
{
	var allStructureMembers = otherDim.getAllStructureMembers();
	if (this.isStructure())
	{
		if (!oFF.XCollectionUtils.hasElements(allStructureMembers))
		{
			return;
		}
		var memberSize = allStructureMembers.size();
		for (var i = 0; i < memberSize; i++)
		{
			var otherStructureMember = allStructureMembers.get(i);
			var structureMember = this.getStructureMemberByKey(otherStructureMember.getName());
			if (oFF.notNull(structureMember))
			{
				structureMember.mergeDeepRecursive(settings, otherStructureMember);
			}
		}
	}
};
oFF.QDimension.prototype.activateHierarchy = function(name, version, dueDate)
{
	this.m_hierarchyManager.activateHierarchy(name, version, dueDate);
};
oFF.QDimension.prototype.setHierarchySelection = function(name, version)
{
	this.m_hierarchyManager.setHierarchySelection(name, version);
};
oFF.QDimension.prototype.getHierarchyUniqueName = function(hierarchyName)
{
	return this.m_hierarchyManager.getHierarchyUniqueName(hierarchyName);
};
oFF.QDimension.prototype.setHierarchyName = function(name)
{
	this.m_hierarchyManager.setHierarchyName(name);
};
oFF.QDimension.prototype.setHierarchyVersion = function(version)
{
	this.m_hierarchyManager.setHierarchyVersion(version);
};
oFF.QDimension.prototype.setHierarchyDueDate = function(dueDate)
{
	this.m_hierarchyManager.setHierarchyDueDate(dueDate);
};
oFF.QDimension.prototype.setHierarchyActive = function(active)
{
	return this.m_hierarchyManager.setHierarchyActive(active);
};
oFF.QDimension.prototype.getHierarchyVersion = function()
{
	return this.m_hierarchyManager.getHierarchyVersion();
};
oFF.QDimension.prototype.getHierarchyDueDate = function()
{
	return this.m_hierarchyManager.getHierarchyDueDate();
};
oFF.QDimension.prototype.isHierarchyActive = function()
{
	return this.m_hierarchyManager.isHierarchyActive();
};
oFF.QDimension.prototype.getHierarchy = function()
{
	return this.m_hierarchyManager.getHierarchy();
};
oFF.QDimension.prototype.setHierarchy = function(hierarchy)
{
	this.m_hierarchyManager.setHierarchy(hierarchy);
};
oFF.QDimension.prototype.getHierarchyName = function()
{
	return this.m_hierarchyManager.getHierarchyName();
};
oFF.QDimension.prototype.isHierarchyAssigned = function()
{
	return this.m_hierarchyManager.isHierarchyAssigned();
};
oFF.QDimension.prototype.isHierarchyAssignedAndActive = function()
{
	return this.m_hierarchyManager.isHierarchyAssignedAndActive();
};
oFF.QDimension.prototype.getLowerLevelNodeAlignment = function()
{
	return this.m_hierarchyManager.getLowerLevelNodeAlignment();
};
oFF.QDimension.prototype.hasDefaultLowerLevelNodeAlignment = function()
{
	return this.m_hierarchyManager.hasDefaultLowerLevelNodeAlignment();
};
oFF.QDimension.prototype.setLowerLevelNodeAlignment = function(alignment)
{
	this.m_hierarchyManager.setLowerLevelNodeAlignment(alignment);
};
oFF.QDimension.prototype.hasNodeCondensation = function()
{
	return this.m_hierarchyManager.hasNodeCondensation();
};
oFF.QDimension.prototype.setHasNodeCondensation = function(condense)
{
	this.m_hierarchyManager.setHasNodeCondensation(condense);
};
oFF.QDimension.prototype.getMemberOfPostedNodeVisibility = function()
{
	return this.m_hierarchyManager.getMemberOfPostedNodeVisibility();
};
oFF.QDimension.prototype.setMemberOfPostedNodeVisibility = function(visibility)
{
	this.m_hierarchyManager.setMemberOfPostedNodeVisibility(visibility);
};
oFF.QDimension.prototype.getHierarchyValueHelp = function(syncType)
{
	return this.m_hierarchyManager.getHierarchyValueHelp(syncType);
};
oFF.QDimension.prototype.useDefaultDrillLevelOnChange = function()
{
	return this.m_hierarchyManager.useDefaultDrillLevelOnChange();
};
oFF.QDimension.prototype.setUseDefaultDrillLevelOnChange = function(useDefaultDrillLevelOnChange)
{
	this.m_hierarchyManager.setUseDefaultDrillLevelOnChange(useDefaultDrillLevelOnChange);
};
oFF.QDimension.prototype.getInitialDrillLevel = function()
{
	return this.m_hierarchyManager.getInitialDrillLevel();
};
oFF.QDimension.prototype.setInitialDrillLevel = function(relativeLevelCount)
{
	this.m_hierarchyManager.setInitialDrillLevel(relativeLevelCount);
};
oFF.QDimension.prototype.setInitialDrillOffset = function(relativeLevelOffset)
{
	this.m_hierarchyManager.setInitialDrillOffset(relativeLevelOffset);
};
oFF.QDimension.prototype.getInitialDrillOffset = function()
{
	return this.m_hierarchyManager.getInitialDrillOffset();
};
oFF.QDimension.prototype.setExplicitDrillOnFilteredNodes = function(drillOnFilteredNodes)
{
	this.m_hierarchyManager.setExplicitDrillOnFilteredNodes(drillOnFilteredNodes);
};
oFF.QDimension.prototype.isExplicitDrillOnFilteredNodes = function()
{
	return this.m_hierarchyManager.isExplicitDrillOnFilteredNodes();
};
oFF.QDimension.prototype.hasStickyMember = function(memberName)
{
	return this.m_hierarchyManager.hasStickyMember(memberName);
};
oFF.QDimension.prototype.hasStickyMembers = function()
{
	return this.m_hierarchyManager.hasStickyMembers();
};
oFF.QDimension.prototype.clearStickyMembers = function()
{
	this.m_hierarchyManager.clearStickyMembers();
};
oFF.QDimension.prototype.removeStickyMember = function(memberName)
{
	this.m_hierarchyManager.removeStickyMember(memberName);
};
oFF.QDimension.prototype.addStickyMember = function(memberName)
{
	this.m_hierarchyManager.addStickyMember(memberName);
};
oFF.QDimension.prototype.getStickyMembers = function()
{
	return this.m_hierarchyManager.getStickyMembers();
};
oFF.QDimension.prototype.hasPlaceHolderForHierarchyInfo = function()
{
	return this.useHierarchyNameVariable() && oFF.XStringUtils.isNotNullAndNotEmpty(this.getHierarchyNameVariableName()) || this.useHierarchyDueDateVariable() && oFF.XStringUtils.isNotNullAndNotEmpty(this.getHierarchyDueDateVariableName()) || this.useHierarchyVersionVariable() && oFF.XStringUtils.isNotNullAndNotEmpty(this.getHierarchyVersionVariableName());
};
oFF.QDimension.prototype.useHierarchyNameVariable = function()
{
	return this.m_hierarchyManager.useHierarchyNameVariable();
};
oFF.QDimension.prototype.setUseHierarchyNameVariable = function(useVariable)
{
	this.m_hierarchyManager.setUseHierarchyNameVariable(useVariable);
};
oFF.QDimension.prototype.getHierarchyNameVariableName = function()
{
	return this.m_hierarchyManager.getHierarchyNameVariableName();
};
oFF.QDimension.prototype.setHierarchyNameVariableName = function(name)
{
	this.m_hierarchyManager.setHierarchyNameVariableName(name);
};
oFF.QDimension.prototype.getHierarchyDueDateVariableName = function()
{
	return this.m_hierarchyManager.getHierarchyDueDateVariableName();
};
oFF.QDimension.prototype.setHierarchyDueDateVariableName = function(name)
{
	this.m_hierarchyManager.setHierarchyDueDateVariableName(name);
};
oFF.QDimension.prototype.useHierarchyDueDateVariable = function()
{
	return this.m_hierarchyManager.useHierarchyDueDateVariable();
};
oFF.QDimension.prototype.setUseHierarchyDueDateVariable = function(useVariable)
{
	this.m_hierarchyManager.setUseHierarchyDueDateVariable(useVariable);
};
oFF.QDimension.prototype.useHierarchyVersionVariable = function()
{
	return this.m_hierarchyManager.useHierarchyVersionVariable();
};
oFF.QDimension.prototype.setUseHierarchyVersionVariable = function(useVariable)
{
	this.m_hierarchyManager.setUseHierarchyVersionVariable(useVariable);
};
oFF.QDimension.prototype.getHierarchyVersionVariableName = function()
{
	return this.m_hierarchyManager.getHierarchyVersionVariableName();
};
oFF.QDimension.prototype.setHierarchyVersionVariableName = function(name)
{
	this.m_hierarchyManager.setHierarchyVersionVariableName(name);
};
oFF.QDimension.prototype.supportsHierarchy = function()
{
	return this.m_hierarchyManager.supportsHierarchy();
};
oFF.QDimension.prototype.getHierarchies = function()
{
	return this.m_hierarchyManager.getHierarchies();
};
oFF.QDimension.prototype.setCustomHierarchyDefinition = function(customHierarchyDefinition)
{
	this.m_hierarchyManager.setCustomHierarchyDefinition(customHierarchyDefinition);
};
oFF.QDimension.prototype.getCustomHierarchyDefinition = function()
{
	return this.m_hierarchyManager.getCustomHierarchyDefinition();
};
oFF.QDimension.prototype.getCustomHierarchies = function()
{
	return this.m_hierarchyManager.getCustomHierarchies();
};
oFF.QDimension.prototype.getVirtualRootNodeName = function()
{
	return this.m_hierarchyManager.getVirtualRootNodeName();
};
oFF.QDimension.prototype.getRestNodeName = function()
{
	return this.m_hierarchyManager.getRestNodeName();
};
oFF.QDimension.prototype.hasZoomDrill = function()
{
	return this.getHierarchyManager().hasZoomDrill();
};
oFF.QDimension.prototype.getHierarchyManager = function()
{
	return this.m_hierarchyManager;
};
oFF.QDimension.prototype.getHierarchyManagerBase = function()
{
	return this.m_hierarchyManager;
};
oFF.QDimension.prototype.getOrderedStructureMemberNames = function()
{
	if (oFF.isNull(this.m_allStructureMembers) || this.m_allStructureMembers.isEmpty())
	{
		return null;
	}
	return this.m_allStructureMembers.getKeysAsReadOnlyListOfString();
};
oFF.QDimension.prototype.reOrderStructureMembers = function(orderedStructureMemberNames)
{
	oFF.XListUtils.reorderList(this.m_allStructureMembers, orderedStructureMemberNames);
};
oFF.QDimension.prototype.getDefaultHierarchyName = function()
{
	return this.m_hierarchyManager.getDefaultHierarchyName();
};
oFF.QDimension.prototype.getMetadata = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_metadata);
};
oFF.QDimension.prototype.setMetadata = function(metadata)
{
	this.m_metadata = oFF.XWeakReferenceUtil.getWeakRef(metadata);
};
oFF.QDimension.prototype.getMetadataBase = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_metadata);
};
oFF.QDimension.prototype.getUniversalDisplayHierarchy = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var universalDisplayHierarchies = queryModel.getUniversalDisplayHierarchies();
		if (oFF.notNull(universalDisplayHierarchies))
		{
			return universalDisplayHierarchies.getByName(this.getName());
		}
	}
	return null;
};
oFF.QDimension.prototype.isUniversalDisplayHierarchyDimension = function()
{
	return this.getUniversalDisplayHierarchy() !== null;
};
oFF.QDimension.prototype.getUDHWithThisDimensionIncluded = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var universalDisplayHierarchies = queryModel.getUniversalDisplayHierarchies();
		if (oFF.notNull(universalDisplayHierarchies))
		{
			return universalDisplayHierarchies.getByIncludedDimension(this);
		}
	}
	return null;
};
oFF.QDimension.prototype.isPartOfActiveUDH = function()
{
	var udh = this.getUDHWithThisDimensionIncluded();
	return oFF.notNull(udh) && udh.isActive();
};
oFF.QDimension.prototype.isEnforcedDynamicValue = function()
{
	if (this.getMetadataBase() === null)
	{
		return false;
	}
	return this.getMetadataBase().isEnforcedDynamicValue();
};
oFF.QDimension.prototype.setSkipMetadataValidationOnRepoImport = function(skipMetadataValidationOnRepoImport)
{
	this.m_skipMetadataValidationOnRepoImport = skipMetadataValidationOnRepoImport;
};
oFF.QDimension.prototype.getSkipMetadataValidationOnRepoImport = function()
{
	return this.m_skipMetadataValidationOnRepoImport;
};
oFF.QDimension.prototype.getHierarchyNavigationField = function()
{
	return this.m_fieldContainer.getHierarchyNavigationField();
};
oFF.QDimension.prototype.getNumberOfHierarchies = function()
{
	return this.getHierarchyManager().getNumberOfHierarchies();
};
oFF.QDimension.prototype.isDisplayHierarchyFixInFilter = function()
{
	return this.getHierarchyManager().isDisplayHierarchyFixInFilter();
};
oFF.QDimension.prototype.hasAlternativeFieldValuesDefined = function()
{
	return oFF.notNull(this.m_alternativeFieldValues);
};
oFF.QDimension.prototype.getValueType = function()
{
	return this.getMetadata().getValueType();
};
oFF.QDimension.prototype.isPrivate = function()
{
	return this.getMetadata().isPrivate();
};
oFF.QDimension.prototype.isHierarchyMandatory = function()
{
	return this.getMetadata().isHierarchyMandatory();
};
oFF.QDimension.prototype.getGeoShapeField = function()
{
	return this.m_fieldContainer.getGeoShapeField();
};
oFF.QDimension.prototype.getGeoPointField = function()
{
	return this.m_fieldContainer.getGeoPointField();
};
oFF.QDimension.prototype.getGeoLevelField = function()
{
	return this.m_fieldContainer.getGeoLevelField();
};
oFF.QDimension.prototype.getGeoAreaNameField = function()
{
	return this.m_fieldContainer.getGeoAreaNameField();
};
oFF.QDimension.prototype.getVisibility = function()
{
	return this.getMetadata().getVisibility();
};
oFF.QDimension.prototype.getDefaultMemberValue = function()
{
	return this.getMetadata().getDefaultMemberValue();
};
oFF.QDimension.prototype.getId = function()
{
	return this.getMetadata().getId();
};
oFF.QDimension.prototype.convertLegacyPlaceholderName = function(name)
{
	if (oFF.notNull(name) && this.getSession().hasFeature(oFF.FeatureToggleOlap.MULTIPLE_ACCOUNT_HIERARCHIES) && this.getDimensionType() === oFF.DimensionType.ACCOUNT)
	{
		var placeholderPattern = oFF.XStringUtils.concatenate2("].&[", oFF.QModelConstants.CALCULATION_PLACEHOLDER_ID_PREFIX);
		if (oFF.XString.startsWith(name, "[") && oFF.XString.indexOf(name, placeholderPattern) !== -1)
		{
			var index = oFF.XString.indexOf(name, oFF.QModelConstants.CALCULATION_PLACEHOLDER_ID_PREFIX);
			var endindex = oFF.XString.indexOfFrom(name, "]", index);
			var noPrefixMemberName = oFF.XString.substring(name, index, endindex);
			return noPrefixMemberName;
		}
	}
	return name;
};
oFF.QDimension.prototype.addPlaceholderId = function(placeholderId)
{
	if (this.getDimensionType() !== oFF.DimensionType.ACCOUNT && this.getDimensionType() !== oFF.DimensionType.MEASURE_STRUCTURE)
	{
		oFF.noSupport();
	}
	this.m_placeholderIds.add(this.convertLegacyPlaceholderName(placeholderId));
};
oFF.QDimension.prototype.clearPlaceholderIds = function()
{
	this.m_placeholderIds.clear();
	this.m_placeholderIdMemberMap.clear();
};
oFF.QDimension.prototype.setPlaceholderIds = function(placeholderIds)
{
	this.m_placeholderIds.clear();
	for (var i = 0; i < placeholderIds.size(); i++)
	{
		var placeholderId = placeholderIds.get(i);
		this.addPlaceholderId(placeholderId);
	}
};
oFF.QDimension.prototype.getPlaceholderIds = function()
{
	return this.m_placeholderIds;
};
oFF.QDimension.prototype.getFreePlaceholderIds = function()
{
	var freePlaceholderIds = oFF.XListOfString.create();
	var placeholderIter = this.m_placeholderIds.getIterator();
	while (placeholderIter.hasNext())
	{
		var placeholderId = placeholderIter.next();
		if (!this.m_placeholderIdMemberMap.containsKey(placeholderId))
		{
			freePlaceholderIds.add(placeholderId);
		}
	}
	return freePlaceholderIds;
};
oFF.QDimension.prototype.getNextFreePlaceholderId = function()
{
	var placeholderIter = this.m_placeholderIds.getIterator();
	while (placeholderIter.hasNext())
	{
		var placeholderId = placeholderIter.next();
		if (!this.m_placeholderIdMemberMap.containsKey(placeholderId) && this.getStructureMember(placeholderId) === null)
		{
			return placeholderId;
		}
	}
	throw oFF.XException.createIllegalStateException(oFF.ErrorMessages.FREE_PLACEHOLDER_NOT_FOUND);
};
oFF.QDimension.prototype.getPlaceholderIdByAlias = function(aliasName)
{
	if (oFF.notNull(aliasName))
	{
		var placeholderIdIter = this.m_placeholderIdMemberMap.getKeysAsIteratorOfString();
		while (placeholderIdIter.hasNext())
		{
			var placeholderId = placeholderIdIter.next();
			var member = this.m_placeholderIdMemberMap.getByKey(placeholderId);
			if (oFF.notNull(member) && oFF.XString.isEqual(member.getAliasName(), aliasName))
			{
				return placeholderId;
			}
		}
	}
	return null;
};
oFF.QDimension.prototype.getRuntimePlaceholderIdByAlias = function(aliasName)
{
	if (oFF.notNull(aliasName))
	{
		var placeholderIdIter = this.m_placeholderIdMemberMap.getKeysAsIteratorOfString();
		while (placeholderIdIter.hasNext())
		{
			var placeholderId = placeholderIdIter.next();
			var member = this.m_placeholderIdMemberMap.getByKey(placeholderId);
			if (oFF.notNull(member) && oFF.XString.isEqual(member.getAliasName(), aliasName))
			{
				return this.convertPlaceholderIdToRuntimePlaceholderId(placeholderId);
			}
		}
	}
	return null;
};
oFF.QDimension.prototype.convertPlaceholderIdToRuntimePlaceholderId = function(placeholderId)
{
	if (this.getSession().hasFeature(oFF.FeatureToggleOlap.MULTIPLE_ACCOUNT_HIERARCHIES) && this.getDimensionType() === oFF.DimensionType.ACCOUNT)
	{
		if (oFF.XString.startsWith(placeholderId, oFF.QModelConstants.CALCULATION_PLACEHOLDER_ID_PREFIX))
		{
			var hierarchyName = this.getHierarchyName() !== null ? this.getHierarchyName() : this.getDefaultHierarchyName();
			var placeholderPrefix = oFF.XStringUtils.concatenate5("[", this.getName(), "].[", hierarchyName, "].&[");
			return oFF.XStringUtils.concatenate3(placeholderPrefix, placeholderId, "]");
		}
	}
	return placeholderId;
};
oFF.QDimension.prototype.reorderPlaceholderIds = function(orderedPlaceholderIds)
{
	if (this.m_placeholderIds.size() === orderedPlaceholderIds.size())
	{
		for (var i = 0; i < this.m_placeholderIds.size(); i++)
		{
			if (!orderedPlaceholderIds.contains(this.convertPlaceholderIdToRuntimePlaceholderId(this.m_placeholderIds.get(i))))
			{
				return;
			}
		}
		this.setPlaceholderIds(orderedPlaceholderIds);
	}
};
oFF.QDimension.prototype.getKeyAttributesNames = function()
{
	return this.getMetadata().getKeyAttributesNames();
};
oFF.QDimension.prototype.getHasCheckTable = function()
{
	return this.getMetadata().getHasCheckTable();
};
oFF.QDimension.prototype.getGeoShapeHierarchies = function()
{
	return this.m_hierarchyManager.getGeoShapeHierarchies();
};
oFF.QDimension.prototype.getAllFields = oFF.noSupport;
oFF.QDimension.prototype.setRsDimensionType = oFF.noSupport;
oFF.QDimension.prototype.addRsField = oFF.noSupport;
oFF.QDimension.prototype.addRsField2 = oFF.noSupport;
oFF.QDimension.prototype.getAccountTypeAttributeName = function()
{
	return this.getMetadata().getAccountTypeAttributeName();
};
oFF.QDimension.prototype.setDesignTimeMode = function(designTimeMode)
{
	this.m_designTimeMode = designTimeMode;
};
oFF.QDimension.prototype.isDesignTimeMode = function()
{
	return this.m_designTimeMode;
};
oFF.QDimension.prototype.getFiscalEnabled = function()
{
	return this.getMetadata().getFiscalEnabled();
};
oFF.QDimension.prototype.getFiscalDisplayPeriod = function()
{
	return this.getMetadata().getFiscalDisplayPeriod();
};
oFF.QDimension.prototype.getFiscalShift = function()
{
	return this.getMetadata().getFiscalShift();
};
oFF.QDimension.prototype.hasDayTimeYYYYMMDDFormat = function()
{
	return this.getMetadata().hasDayTimeYYYYMMDDFormat();
};
oFF.QDimension.prototype.assignPlaceholderIdByAlias = function(placeholderId, aliasName)
{
	var member = this.getStructureMemberByAlias(aliasName);
	if (oFF.notNull(member))
	{
		this.m_placeholderIdMemberMap.put(this.convertLegacyPlaceholderName(placeholderId), member);
	}
};
oFF.QDimension.prototype.removeAssignedPlaceholderId = function(placeholderId)
{
	this.m_placeholderIdMemberMap.remove(this.convertLegacyPlaceholderName(placeholderId));
};
oFF.QDimension.prototype.getPlaceholderIdMemberMap = function()
{
	return this.m_placeholderIdMemberMap;
};
oFF.QDimension.prototype.getRuntimePlaceholderIdMemberMap = function()
{
	var remappedPlaceholderIdMemberMap = oFF.XHashMapByString.create();
	var placeholderIdIter = this.m_placeholderIdMemberMap.getKeysAsIteratorOfString();
	while (placeholderIdIter.hasNext())
	{
		var placeholderId = placeholderIdIter.next();
		var member = this.m_placeholderIdMemberMap.getByKey(placeholderId);
		var runtimePlaceholderId = this.convertPlaceholderIdToRuntimePlaceholderId(placeholderId);
		remappedPlaceholderIdMemberMap.put(runtimePlaceholderId, member);
	}
	return remappedPlaceholderIdMemberMap;
};
oFF.QDimension.prototype.getFunctionalValueHelpSelectFunctions = function(syncType, listener, customIdentifier)
{
	if (oFF.isNull(this.m_functionalValueHelpSelectFunctions))
	{
		this.m_functionalValueHelpSelectFunctions = oFF.FunctionalValueHelpFactory.createForSelectFunctions(this);
	}
	return this.m_functionalValueHelpSelectFunctions.processSyncAction(syncType, listener, customIdentifier);
};
oFF.QDimension.prototype.getFunctionalValueHelpParameters = function(selectFunction, syncType, listener, customIdentifier)
{
	return oFF.FunctionalValueHelpFactory.createForFunctionParameters(selectFunction).processSyncAction(syncType, listener, customIdentifier);
};
oFF.QDimension.prototype.getFunctionalValueHelpParameterValues = function(parameter, syncType, listener, customIdentifier)
{
	return oFF.FunctionalValueHelpFactory.createForParameterValues(parameter).processSyncAction(syncType, listener, customIdentifier);
};
oFF.QDimension.prototype.processFunctionalValueHelp = function(selectFunction, parameterValues, syncType, listener, customIdentifier)
{
	return oFF.FunctionalValueHelpFactory.createForResolveValues(selectFunction, parameterValues).processSyncAction(syncType, listener, customIdentifier);
};
oFF.QDimension.prototype.getReadModeManagerBase = function()
{
	return this.m_readModeManager;
};
oFF.QDimension.prototype.getOverdefinedMemberManager = function()
{
	return this.m_overdefinedMemberManager;
};
oFF.QDimension.prototype.clearOrphanKeyRefs = function()
{
	for (var structureMemberIdx = this.m_allStructureMembers.size() - 1; structureMemberIdx >= 0; structureMemberIdx--)
	{
		if (this.m_allStructureMembers.get(structureMemberIdx) === null)
		{
			this.m_allStructureMembers.removeAt(structureMemberIdx);
		}
	}
	for (var structureLayoutIdx = this.m_structureLayout.size() - 1; structureLayoutIdx >= 0; structureLayoutIdx--)
	{
		if (this.m_structureLayout.get(structureLayoutIdx) === null)
		{
			this.m_structureLayout.removeAt(structureLayoutIdx);
		}
	}
	var placeholderIdsIter = this.m_placeholderIdMemberMap.getKeysAsIteratorOfString();
	while (placeholderIdsIter.hasNext())
	{
		var placeholderId = placeholderIdsIter.next();
		var assignedMember = this.m_placeholderIdMemberMap.getByKey(placeholderId);
		if (oFF.notNull(assignedMember) && assignedMember.isReleased())
		{
			this.m_placeholderIdMemberMap.remove(placeholderId);
		}
	}
	this.notifyNodeChanged();
};
oFF.QDimension.prototype.supportsHierarchyMetadata = function()
{
	return this.getModelCapabilities().supportsHierarchyMetadata();
};
oFF.QDimension.prototype.addModellerMember = function(member)
{
	this.getKeyRefStorage().putExt(member, this.getName(), member.getName());
	this.notifyNodeChanged();
};
oFF.QDimension.prototype.removeModellerMember = function(name)
{
	this.getKeyRefStorage().removeObject(oFF.KeyRefConstants.MAIN_STORAGE, this.getName(), name, true);
	this.notifyNodeChanged();
};
oFF.QDimension.prototype.getModellerMemberKeyRef = function(name)
{
	return this.getKeyRefStorage().get(oFF.KeyRefConstants.MAIN_STORAGE, this.getName(), name);
};
oFF.QDimension.prototype.isUsedInFilter = function(filterExpression)
{
	return oFF.DimensionUsageAnalyzer2.addDimensionsUsedInContainer(filterExpression, null).contains(this.getName());
};
oFF.QDimension.prototype.fetchHierarchyCatalog = function(syncType, listener, customIdentifier)
{
	return this.getHierarchyManager().fetchHierarchyCatalog(syncType, listener, customIdentifier);
};
oFF.QDimension.prototype.setIncludeCustomHierarchies = function(includeCustomHierarchies)
{
	this.getHierarchyManager().setIncludeCustomHierarchies(includeCustomHierarchies);
};
oFF.QDimension.prototype.customHierarchiesIncluded = function()
{
	return this.getHierarchyManager().customHierarchiesIncluded();
};
oFF.QDimension.prototype.setSelectorSortType = function(sortType)
{
	this.getSelector().setSelectorSortType(sortType);
};
oFF.QDimension.prototype.getSelectorSortType = function()
{
	return this.getSelector().getSelectorSortType();
};
oFF.QDimension.prototype.addSelectorForValuesAndExternalFilter = function(externalFilterName, values, searchMode)
{
	this.getSelector().addSelectorForValuesAndExternalFilter(externalFilterName, values, searchMode);
};
oFF.QDimension.prototype.clearAlternativeFieldValues = function()
{
	this.m_alternativeFieldValues = oFF.XObjectExt.release(this.m_alternativeFieldValues);
};
oFF.QDimension.prototype.getAdditionalPeriods = function()
{
	return this.getMetadata().getAdditionalPeriods();
};
oFF.QDimension.prototype.getPeriodPrefix = function()
{
	return this.getMetadata().getPeriodPrefix();
};
oFF.QDimension.prototype.getUseMonthLabel = function()
{
	return this.getMetadata().getUseMonthLabel();
};
oFF.QDimension.prototype.isUserManaged = function()
{
	return this.getMetadata().isUserManaged();
};
oFF.QDimension.prototype.isTimeConfigEnablePattern = function()
{
	return this.getMetadata().isTimeConfigEnablePattern();
};
oFF.QDimension.prototype.getText = function()
{
	var text = oFF.QModelComponent.prototype.getText.call( this );
	if (oFF.notNull(this.m_overrideText))
	{
		text = this.m_overrideText;
	}
	else
	{
		if (this.getQueryModel() !== null && this.getMetadata() !== null)
		{
			var cacheKey = this.getMetadata().getCacheKey();
			var olapEnvCube = this.getOlapEnv().getCubeContainer(cacheKey);
			if (oFF.notNull(olapEnvCube))
			{
				var storageName = this.getQueryModel().getQueryManager().getClientQueryObjectStorageName();
				var datasetId = this.getQueryModel().getDatasetId();
				var overrideText = olapEnvCube.getDimensionOverrideTextByDatasetId(storageName, this.getName(), datasetId);
				if (oFF.notNull(overrideText))
				{
					text = overrideText;
				}
			}
		}
	}
	return text;
};
oFF.QDimension.prototype.getOriginalText = function()
{
	return oFF.QModelComponent.prototype.getText.call( this );
};
oFF.QDimension.prototype.setOverrideText = function(overrideText)
{
	if (!oFF.XString.isEqual(overrideText, "") && !oFF.XString.isEqual(overrideText, this.m_overrideText))
	{
		this.m_overrideText = overrideText;
		this.notifyPropertyStringChanged(oFF.QDimensionProperties.QY_OVERRIDE_TEXT, this.m_overrideText, overrideText);
	}
};
oFF.QDimension.prototype.getOverrideText = function()
{
	return this.m_overrideText;
};
oFF.QDimension.prototype.setClientDefaultTextField = function(field)
{
	this.m_fieldContainer.setClientDefaultTextField(field);
};
oFF.QDimension.prototype.getClientDefaultTextField = function()
{
	return this.m_fieldContainer.getClientDefaultTextField();
};
oFF.QDimension.prototype.isUseServerDefaultTextField = function()
{
	return this.m_fieldContainer.isUseServerDefaultTextField();
};
oFF.QDimension.prototype.setStructureMemberLazyLoader = function(structureMemberLazyLoader)
{
	this.m_structureMemberLazyLoader = structureMemberLazyLoader;
};
oFF.QDimension.prototype.getStructureMemberLazyLoader = function()
{
	return this.m_structureMemberLazyLoader;
};

oFF.QAbstractDimensionMember = function() {};
oFF.QAbstractDimensionMember.prototype = new oFF.AbstractValueAccessComponent();
oFF.QAbstractDimensionMember.prototype._ff_c = "QAbstractDimensionMember";

oFF.QAbstractDimensionMember.prototype.m_dimension = null;
oFF.QAbstractDimensionMember.prototype.m_memberType = null;
oFF.QAbstractDimensionMember.prototype.setupAbstractDimensionMember = function(context, dimension)
{
	this.setupModelComponent(context, dimension);
	this.setDimension(dimension);
};
oFF.QAbstractDimensionMember.prototype.copyAbstractDimensionMember = function(origin)
{
	oFF.AbstractValueAccessComponent.prototype.copyFromInternal.call( this , origin, null);
	var queryModel = this.getQueryModel();
	var originDimension = origin.getDimension();
	if (oFF.isNull(originDimension))
	{
		originDimension = origin.getParentComponent();
	}
	var dimension = queryModel.getDimensionByNameFromExistingMetadata(originDimension.getName());
	if (oFF.notNull(dimension))
	{
		this.setDimension(dimension);
	}
};
oFF.QAbstractDimensionMember.prototype.copyAttributesFromDimensionMember = function(origin)
{
	var context = this.getContext();
	var allFieldValues = origin.getAllFieldValues();
	var keys = allFieldValues.getKeysAsReadOnlyListOfString();
	var size = keys.size();
	for (var i = 0; i < size; i++)
	{
		this.addFieldValue(allFieldValues.getByKey(keys.get(i)).cloneOlapComponent(context, this));
	}
};
oFF.QAbstractDimensionMember.prototype.releaseObject = function()
{
	this.m_dimension = oFF.XObjectExt.release(this.m_dimension);
	this.m_memberType = null;
	oFF.AbstractValueAccessComponent.prototype.releaseObject.call( this );
};
oFF.QAbstractDimensionMember.prototype.getDimension = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_dimension);
};
oFF.QAbstractDimensionMember.prototype.setDimension = function(dimension)
{
	this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
};
oFF.QAbstractDimensionMember.prototype.setType = function(type)
{
	this.m_memberType = type;
};
oFF.QAbstractDimensionMember.prototype.getType = function()
{
	return this.getMemberType();
};
oFF.QAbstractDimensionMember.prototype.getMemberType = function()
{
	return this.m_memberType;
};
oFF.QAbstractDimensionMember.prototype.getOlapComponentType = function()
{
	return this.m_memberType;
};
oFF.QAbstractDimensionMember.prototype.getDimensionMember = function()
{
	return this;
};
oFF.QAbstractDimensionMember.prototype.getSelectableElement = function()
{
	return this;
};
oFF.QAbstractDimensionMember.prototype.isNode = function()
{
	return this.getMemberType().isNode();
};

oFF.QException = function() {};
oFF.QException.prototype = new oFF.QAbstractThresholdEvaluateList();
oFF.QException.prototype._ff_c = "QException";

oFF.QException.createException = function(context, model, name, text)
{
	var exception = new oFF.QException();
	exception.setupException(context, model, name, text);
	return exception;
};
oFF.QException.prototype.m_evaluateDefault = null;
oFF.QException.prototype.m_headerSetting = null;
oFF.QException.prototype.m_evaluatedBeforePostAggregation = false;
oFF.QException.prototype.m_isActive = false;
oFF.QException.prototype.m_isChangeable = false;
oFF.QException.prototype.m_evaluateAllMeasureMembers = false;
oFF.QException.prototype.m_evaluateAllStructureMembers = false;
oFF.QException.prototype.m_measure = null;
oFF.QException.prototype.m_structure = null;
oFF.QException.prototype.m_displayOnMeasureMember = null;
oFF.QException.prototype.m_displayOnStructureMember = null;
oFF.QException.prototype.setupException = function(context, model, name, text)
{
	this.setupThresholdEvaluateList(context);
	this.setupModelComponentWithName(context, model, name);
	this.setText(text);
	this.m_isChangeable = true;
	this.m_evaluateDefault = oFF.QExceptionEvalType.ALL;
	this.m_headerSetting = oFF.QExceptionHeaderSettings.NONE;
	this.m_evaluatedBeforePostAggregation = false;
	this.m_isActive = true;
	this.m_evaluateAllMeasureMembers = false;
	this.m_evaluateAllStructureMembers = false;
};
oFF.QException.prototype.releaseObject = function()
{
	this.m_evaluateDefault = null;
	this.m_headerSetting = null;
	this.m_measure = oFF.XObjectExt.release(this.m_measure);
	this.m_structure = oFF.XObjectExt.release(this.m_structure);
	this.m_displayOnMeasureMember = oFF.XObjectExt.release(this.m_displayOnMeasureMember);
	this.m_displayOnStructureMember = oFF.XObjectExt.release(this.m_displayOnStructureMember);
	oFF.QAbstractThresholdEvaluateList.prototype.releaseObject.call( this );
};
oFF.QException.prototype.copyFromInternal = function(other, flags)
{
	oFF.QAbstractThresholdEvaluateList.prototype.copyFromInternal.call( this , other, flags);
	var originObj = other;
	var capabilities = this.getModelCapabilities();
	var origMeasure = originObj.getMeasure();
	var origStructureMember = originObj.getStructure();
	var targetMeasure = this.resolveTargetMember(origMeasure);
	var targetStructureMember = this.resolveTargetMember(origStructureMember);
	if (oFF.notNull(targetMeasure))
	{
		this.setMeasure(targetMeasure);
	}
	if (oFF.notNull(targetStructureMember))
	{
		this.setStructure(targetStructureMember);
	}
	if (capabilities.supportsExceptionsV2())
	{
		if (oFF.notNull(origMeasure))
		{
			var origDisplayOnOtherMember1 = originObj.getDisplayOnOtherMember(origMeasure);
			if (oFF.notNull(origDisplayOnOtherMember1))
			{
				var targetDisplayOnOtherMember1 = this.resolveTargetMember(origDisplayOnOtherMember1);
				this.displayOnOtherMember(targetMeasure, targetDisplayOnOtherMember1);
			}
		}
		if (oFF.notNull(origStructureMember))
		{
			var origDisplayOnOtherMember2 = originObj.getDisplayOnOtherMember(origStructureMember);
			if (oFF.notNull(origDisplayOnOtherMember2))
			{
				var targetDisplayOnOtherMember2 = this.resolveTargetMember(origDisplayOnOtherMember2);
				this.displayOnOtherMember(targetStructureMember, targetDisplayOnOtherMember2);
			}
		}
	}
	this.m_evaluateDefault = originObj.m_evaluateDefault;
	this.m_headerSetting = originObj.m_headerSetting;
	this.m_evaluatedBeforePostAggregation = originObj.m_evaluatedBeforePostAggregation;
	this.m_isActive = originObj.m_isActive;
	this.m_isChangeable = originObj.m_isChangeable;
	this.m_evaluateAllMeasureMembers = originObj.m_evaluateAllMeasureMembers;
	this.m_evaluateAllStructureMembers = originObj.m_evaluateAllStructureMembers;
};
oFF.QException.prototype.resolveTargetMember = function(sourceMember)
{
	var myStructureMemberTarget3 = null;
	if (oFF.notNull(sourceMember))
	{
		var myDimensionTarget3 = this.getQueryModel().getDimensionByNameFromExistingMetadata(sourceMember.getDimension().getName());
		myStructureMemberTarget3 = myDimensionTarget3.getStructureMember(sourceMember.getName());
	}
	return myStructureMemberTarget3;
};
oFF.QException.prototype.assertIsChangeable = function()
{
	oFF.XBooleanUtils.checkTrue(this.m_isChangeable, oFF.XStringUtils.concatenate3("The exception '", this.getName(), "' is not changeable!"));
};
oFF.QException.prototype.getEvaluateDefault = function()
{
	return this.m_evaluateDefault;
};
oFF.QException.prototype.getHeaderSetting = function()
{
	return this.m_headerSetting;
};
oFF.QException.prototype.getMeasure = function()
{
	var m1 = oFF.XWeakReferenceUtil.getHardRef(this.m_measure);
	return m1;
};
oFF.QException.prototype.getStructure = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_structure);
};
oFF.QException.prototype.isActive = function()
{
	return this.m_isActive;
};
oFF.QException.prototype.isChangeable = function()
{
	return this.m_isChangeable;
};
oFF.QException.prototype.isEvaluatedAfterCalculations = function()
{
	return this.m_evaluatedBeforePostAggregation;
};
oFF.QException.prototype.setActive = function(active)
{
	if (this.m_isActive !== active)
	{
		this.m_isActive = active;
		this.notifyPropertyBooleanChanged(oFF.QExceptionProperties.QY_ACTIVE, !active, active);
	}
};
oFF.QException.prototype.setEvaluateDefault = function(evaluateDefault)
{
	this.assertIsChangeable();
	this.m_evaluateDefault = evaluateDefault;
	this.notifyNodeChanged();
};
oFF.QException.prototype.setEvaluationAfterCalculations = function(afterCalculations)
{
	if (this.m_evaluatedBeforePostAggregation !== afterCalculations)
	{
		this.assertIsChangeable();
		this.m_evaluatedBeforePostAggregation = afterCalculations;
		this.notifyPropertyBooleanChanged(oFF.QExceptionProperties.QY_EVALUATE_BEFORE_POST_AGGREGATION, !afterCalculations, afterCalculations);
	}
};
oFF.QException.prototype.assertBw = function()
{
	oFF.XBooleanUtils.checkTrue(this.getQueryModel().getSystemType().isTypeOf(oFF.SystemType.BW), "This is only supported for BW systems!");
};
oFF.QException.prototype.setHeaderSetting = function(headerSetting)
{
	if (this.m_headerSetting !== headerSetting)
	{
		this.assertIsChangeable();
		this.assertBw();
		this.m_headerSetting = headerSetting;
		this.notifyNodeChanged();
	}
};
oFF.QException.prototype.setIsChangeable = function(isChangeable)
{
	if (this.m_isChangeable !== isChangeable)
	{
		this.m_isChangeable = isChangeable;
		this.notifyPropertyBooleanChanged(oFF.QExceptionProperties.QY_CHANGEABLE, !isChangeable, isChangeable);
	}
};
oFF.QException.prototype.setMeasure = function(measure)
{
	this.assertIsChangeable();
	oFF.XObjectExt.assertNotNullExt(measure, "The measure member is null.");
	if (oFF.isNull(this.m_measure) || !oFF.XString.isEqual(this.getMeasure().getName(), measure.getName()))
	{
		var exceptions = measure.getExceptions();
		if (oFF.notNull(exceptions))
		{
			if (oFF.XCollectionUtils.getByName(exceptions, this.getName()) !== null)
			{
				throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate3("The exception name '", this.getName(), "' is not unique!"));
			}
		}
		this.m_measure = oFF.XWeakReferenceUtil.getWeakRef(measure);
		this.notifyNodeChanged();
	}
};
oFF.QException.prototype.setStructure = function(structure)
{
	this.assertSupportsExceptionsV2();
	this.assertIsChangeable();
	oFF.XObjectExt.assertNotNullExt(structure, "The structure member is null.");
	this.m_structure = oFF.XWeakReferenceUtil.getWeakRef(structure);
	this.notifyNodeChanged();
};
oFF.QException.prototype.setEvaluateAllMembers = function(dimension, evaluateAllMembers)
{
	this.assertSupportsExceptionsV2();
	this.assertIsChangeable();
	oFF.XObjectExt.assertNotNullExt(dimension, "The dimension is null.");
	if (this.getMeasure() !== null && this.getMeasure().getDimension() === dimension)
	{
		if (this.m_evaluateAllMeasureMembers !== evaluateAllMembers)
		{
			this.m_evaluateAllMeasureMembers = evaluateAllMembers;
			this.notifyPropertyBooleanChanged(oFF.QExceptionProperties.QY_EVALUATE_ALL_MEMBERS_MEASURE_DIMENSION, !evaluateAllMembers, evaluateAllMembers);
		}
	}
	else if (this.getStructure() !== null && this.getStructure().getDimension() === dimension)
	{
		if (this.m_evaluateAllStructureMembers !== evaluateAllMembers)
		{
			this.m_evaluateAllStructureMembers = evaluateAllMembers;
			this.notifyPropertyBooleanChanged(oFF.QExceptionProperties.QY_EVALUATE_ALL_MEMBERS_SECONDARY_STRUCTURE, !evaluateAllMembers, evaluateAllMembers);
		}
	}
};
oFF.QException.prototype.isEvaluateAllMembers = function(dimension)
{
	this.assertSupportsExceptionsV2();
	var result = false;
	if (oFF.notNull(dimension))
	{
		if (this.getMeasure() !== null && this.getMeasure().getDimension() === dimension)
		{
			result = this.m_evaluateAllMeasureMembers;
		}
		else if (this.getStructure() !== null && this.getStructure().getDimension() === dimension)
		{
			result = this.m_evaluateAllStructureMembers;
		}
	}
	return result;
};
oFF.QException.prototype.displayOnOtherMember = function(member, memberToDisplayOn)
{
	this.assertSupportsExceptionsV2();
	this.assertIsChangeable();
	if (oFF.notNull(member))
	{
		var measureMember = this.getMeasure();
		var structureMember = this.getStructure();
		if (measureMember === member)
		{
			this.m_displayOnMeasureMember = oFF.XWeakReferenceUtil.getWeakRef(memberToDisplayOn);
			this.notifyNodeChanged();
		}
		else if (structureMember === member)
		{
			this.m_displayOnStructureMember = oFF.XWeakReferenceUtil.getWeakRef(memberToDisplayOn);
			this.notifyNodeChanged();
		}
	}
};
oFF.QException.prototype.getDisplayOnOtherMember = function(member)
{
	this.assertSupportsExceptionsV2();
	var result = null;
	if (oFF.notNull(member))
	{
		if (this.getMeasure() === member && oFF.notNull(this.m_displayOnMeasureMember))
		{
			result = oFF.XWeakReferenceUtil.getHardRef(this.m_displayOnMeasureMember);
		}
		else if (this.getStructure() === member && oFF.notNull(this.m_displayOnStructureMember))
		{
			result = oFF.XWeakReferenceUtil.getHardRef(this.m_displayOnStructureMember);
		}
	}
	return result;
};
oFF.QException.prototype.assertSupportsExceptionsV2 = function()
{
	if (!this.getModelCapabilities().supportsExceptionsV2())
	{
		oFF.noSupport();
	}
};
oFF.QException.prototype.setHeaderSettingBase = function(headerSetting)
{
	this.m_headerSetting = headerSetting;
};

oFF.QFormulaException = function() {};
oFF.QFormulaException.prototype = new oFF.QAbstractThresholdEvaluateList();
oFF.QFormulaException.prototype._ff_c = "QFormulaException";

oFF.QFormulaException.createFormulaException = function(context, model, name, text)
{
	var exception = new oFF.QFormulaException();
	exception.setupFormulaException(context, model, name, text);
	return exception;
};
oFF.QFormulaException.prototype.m_measure = null;
oFF.QFormulaException.prototype.m_baseMeasure = null;
oFF.QFormulaException.prototype.m_baseMeasureName = null;
oFF.QFormulaException.prototype.m_referenceMeasure = null;
oFF.QFormulaException.prototype.m_referenceMeasureName = null;
oFF.QFormulaException.prototype.m_formulaType = null;
oFF.QFormulaException.prototype.m_isHandleNullAsZero = false;
oFF.QFormulaException.prototype.m_isAutoSignFlip = false;
oFF.QFormulaException.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FORMULA_EXCEPTION;
};
oFF.QFormulaException.prototype.copyFromInternal = function(other, flags)
{
	oFF.QAbstractThresholdEvaluateList.prototype.copyFromInternal.call( this , other, flags);
	var originObj = other;
	if (originObj.getMeasure() !== null)
	{
		this.setMeasure(originObj.getMeasure());
	}
	if (originObj.getBaseMeasure() !== null)
	{
		this.setBaseMeasure(originObj.getBaseMeasure());
	}
	this.m_baseMeasureName = originObj.m_baseMeasureName;
	if (originObj.getReferenceMeasure() !== null)
	{
		this.setReferenceMeasure(originObj.getReferenceMeasure());
	}
	this.m_referenceMeasureName = originObj.m_referenceMeasureName;
	this.m_formulaType = originObj.m_formulaType;
	this.m_isHandleNullAsZero = originObj.m_isHandleNullAsZero;
	this.m_isAutoSignFlip = originObj.m_isAutoSignFlip;
};
oFF.QFormulaException.prototype.setupFormulaException = function(context, model, name, text)
{
	this.setupThresholdEvaluateList(context);
	this.setupModelComponentWithName(context, model, name);
	this.setText(text);
	this.m_thresholds = oFF.QModelComponentList.createModelComponentWithNameList(context, this, false, "Thresholds", false);
};
oFF.QFormulaException.prototype.releaseObject = function()
{
	this.m_measure = oFF.XObjectExt.release(this.m_measure);
	this.m_baseMeasure = oFF.XObjectExt.release(this.m_baseMeasure);
	this.m_baseMeasureName = null;
	this.m_referenceMeasure = oFF.XObjectExt.release(this.m_referenceMeasure);
	this.m_referenceMeasureName = null;
	this.m_formulaType = null;
	oFF.QAbstractThresholdEvaluateList.prototype.releaseObject.call( this );
};
oFF.QFormulaException.prototype.setMeasure = function(measure)
{
	oFF.XObjectExt.assertNotNullExt(measure, "The measure member is null.");
	this.m_measure = oFF.XWeakReferenceUtil.getWeakRef(measure);
	this.notifyNodeChanged();
};
oFF.QFormulaException.prototype.getMeasure = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_measure);
};
oFF.QFormulaException.prototype.setBaseMeasure = function(measure)
{
	oFF.XObjectExt.assertNotNullExt(measure, "The measure member is null.");
	this.m_baseMeasure = oFF.XWeakReferenceUtil.getWeakRef(measure);
	this.notifyNodeChanged();
};
oFF.QFormulaException.prototype.getBaseMeasure = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_baseMeasure);
};
oFF.QFormulaException.prototype.setBaseMeasureName = function(name)
{
	this.m_baseMeasureName = name;
	this.notifyNodeChanged();
};
oFF.QFormulaException.prototype.getBaseMeasureName = function()
{
	return this.m_baseMeasureName;
};
oFF.QFormulaException.prototype.getBaseMeasureNameInternal = function()
{
	var baseMeasureName = this.m_baseMeasureName;
	if (oFF.isNull(baseMeasureName) && oFF.notNull(this.m_baseMeasure))
	{
		baseMeasureName = this.getBaseMeasure().getAliasOrMemberName();
	}
	return baseMeasureName;
};
oFF.QFormulaException.prototype.getMeasureStructureMember = function(queryModel, measureName)
{
	var structureMember = null;
	if (oFF.notNull(measureName))
	{
		structureMember = queryModel.getPrimaryCalculationDimension().getStructureMemberByAliasOrMember(measureName);
		if (oFF.isNull(structureMember))
		{
			structureMember = this.getOlapEnv().getClientQueryObjectManager().getStructuredMember(measureName, queryModel.getQueryManager().getClientQueryObjectStorageName(), true);
		}
	}
	return structureMember;
};
oFF.QFormulaException.prototype.getMeasureInternal = function(context, measureRef, measureName)
{
	if (oFF.notNull(measureRef))
	{
		return oFF.XWeakReferenceUtil.getHardRef(measureRef);
	}
	if (oFF.notNull(measureName))
	{
		var queryModel = context.getQueryModel();
		var measure = queryModel.getPrimaryCalculationDimension().getStructureMemberByAliasOrMember(measureName);
		return measure;
	}
	return null;
};
oFF.QFormulaException.prototype.getBaseMeasureInternal = function(context)
{
	return this.getMeasureInternal(context, this.m_baseMeasure, this.m_baseMeasureName);
};
oFF.QFormulaException.prototype.setReferenceMeasure = function(measure)
{
	oFF.XObjectExt.assertNotNullExt(measure, "The measure member is null.");
	this.m_referenceMeasure = oFF.XWeakReferenceUtil.getWeakRef(measure);
	this.notifyNodeChanged();
};
oFF.QFormulaException.prototype.getReferenceMeasure = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_referenceMeasure);
};
oFF.QFormulaException.prototype.setReferenceMeasureName = function(name)
{
	this.m_referenceMeasureName = name;
	this.notifyNodeChanged();
};
oFF.QFormulaException.prototype.getReferenceMeasureName = function()
{
	return this.m_referenceMeasureName;
};
oFF.QFormulaException.prototype.getReferenceMeasureNameInternal = function()
{
	var referenceMeasureName = this.m_referenceMeasureName;
	if (oFF.isNull(referenceMeasureName) && oFF.notNull(this.m_referenceMeasure))
	{
		referenceMeasureName = this.getReferenceMeasure().getAliasOrMemberName();
	}
	return referenceMeasureName;
};
oFF.QFormulaException.prototype.getReferenceMeasureInternal = function(context)
{
	return this.getMeasureInternal(context, this.m_referenceMeasure, this.m_referenceMeasureName);
};
oFF.QFormulaException.prototype.setFormulaExceptionType = function(type)
{
	this.m_formulaType = type;
	this.notifyNodeChanged();
};
oFF.QFormulaException.prototype.getFormulaExceptionType = function()
{
	return this.m_formulaType;
};
oFF.QFormulaException.prototype.getFormulaMeasureInternal = function(context)
{
	if (this.m_formulaType === oFF.FormulaExceptionType.POSITIVE_RATIO_NEGATIVE_VARIANCE)
	{
		return this.getPositiveRatioNegativeVarianceFormula(context);
	}
	else if (this.m_formulaType === oFF.FormulaExceptionType.BASE_MEASURE_ONLY)
	{
		return null;
	}
	return null;
};
oFF.QFormulaException.prototype.getFormulaMeasure = function(context)
{
	var formulaMeasure = this.getFormulaMeasureInternal(context);
	if (oFF.notNull(formulaMeasure))
	{
		formulaMeasure.setResultVisibility(oFF.ResultVisibility.VISIBLE);
	}
	return formulaMeasure;
};
oFF.QFormulaException.prototype.setHandleNullAsZero = function(nullAsZero)
{
	if (this.m_isHandleNullAsZero !== nullAsZero)
	{
		this.m_isHandleNullAsZero = nullAsZero;
		this.notifyPropertyBooleanChanged(oFF.QExceptionProperties.QY_NULL_AS_ZERO, !nullAsZero, nullAsZero);
	}
};
oFF.QFormulaException.prototype.isHandleNullAsZero = function()
{
	return this.m_isHandleNullAsZero;
};
oFF.QFormulaException.prototype.isAutoSignFlip = function()
{
	return this.m_isAutoSignFlip;
};
oFF.QFormulaException.prototype.setAutoSignFlip = function(autoSignFlip)
{
	if (this.m_isAutoSignFlip !== autoSignFlip)
	{
		this.m_isAutoSignFlip = autoSignFlip;
		this.notifyPropertyBooleanChanged(oFF.QExceptionProperties.QY_AUTO_SIGN_FLIP, !autoSignFlip, autoSignFlip);
	}
};
oFF.QFormulaException.prototype.assertIsChangeable = function() {};
oFF.QFormulaException.prototype.getBaseMember = function(context)
{
	var member = oFF.QFactory.createFormulaMember(context);
	member.setMember(this.getBaseMeasureInternal(context));
	return member;
};
oFF.QFormulaException.prototype.getReferenceMember = function(context)
{
	var member = oFF.QFactory.createFormulaMember(context);
	member.setMember(this.getReferenceMeasureInternal(context));
	return member;
};
oFF.QFormulaException.prototype.getMeasureFormulaItem = function(context, member)
{
	if (this.m_isHandleNullAsZero)
	{
		if (this.getModelCapabilities().supportsVarianceOperator())
		{
			var nDivPercentageFunction = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.NDIV0.getName());
			nDivPercentageFunction.add(member);
			return nDivPercentageFunction;
		}
		var ifNull = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.IF.getName());
		var isNull = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.ISNULL.getName());
		isNull.add(member);
		ifNull.add(isNull);
		ifNull.add(oFF.QFactory.createFormulaConstantWithIntValue(context, 0));
		ifNull.add(member);
		return ifNull;
	}
	return member;
};
oFF.QFormulaException.prototype.getPositiveRatioNegativeVarianceFormula = function(context)
{
	var baseMeasure = this.getMeasureFormulaItem(context, this.getBaseMember(context));
	var referenceMeasure = this.getMeasureFormulaItem(context, this.getReferenceMember(context));
	var transientMeasureName = this.getName();
	var queryModel = context.getQueryModel();
	var dimension = queryModel.getPrimaryCalculationDimension();
	var formulaMeasure = oFF.QFactory.createFormulaMeasure(context, dimension, null, transientMeasureName, null);
	formulaMeasure.setAutoSignFlip(this.m_isAutoSignFlip);
	formulaMeasure.setNumericScale(7);
	formulaMeasure.setNumericPrecision(31);
	if (dimension.getPlaceholderIds().size() > 0)
	{
		formulaMeasure.setAliasName(transientMeasureName);
	}
	else
	{
		formulaMeasure.setName(transientMeasureName);
	}
	var formulaExceptionManager = queryModel.getFormulaExceptionManager();
	if (formulaExceptionManager.isFormulaResultVisible())
	{
		formulaMeasure.setResultVisibility(oFF.ResultVisibility.VISIBLE);
	}
	else
	{
		formulaMeasure.setResultVisibility(oFF.ResultVisibility.HIDDEN);
	}
	var ifNull = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.IF.getName());
	var isNull = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.ISNULL.getName());
	ifNull.add(isNull);
	isNull.add(baseMeasure);
	ifNull.add(baseMeasure);
	var ifReferenceZero = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.IF.getName());
	var referenceIsZero = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.EQ.getName());
	ifNull.add(ifReferenceZero);
	ifReferenceZero.add(referenceIsZero);
	referenceIsZero.add(referenceMeasure);
	referenceIsZero.add(oFF.QFactory.createFormulaConstantWithIntValue(context, 0));
	var ifBaseZero = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.IF.getName());
	var baseIsZero = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.EQ.getName());
	ifReferenceZero.add(ifBaseZero);
	ifBaseZero.add(baseIsZero);
	baseIsZero.add(baseMeasure);
	baseIsZero.add(oFF.QFactory.createFormulaConstantWithIntValue(context, 0));
	var nullConstant = oFF.QFactory.createFormulaConstant(context);
	nullConstant.setNullByType(oFF.XValueType.INTEGER);
	ifBaseZero.add(nullConstant);
	var baseOverAbsBase = oFF.QFactory.createFormulaOperation(context);
	var absBase = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.ABS.getName());
	ifBaseZero.add(baseOverAbsBase);
	baseOverAbsBase.setOperator(oFF.MathOperator.DIV);
	baseOverAbsBase.setLeftSide(baseMeasure);
	absBase.add(baseMeasure);
	baseOverAbsBase.setRightSide(absBase);
	var ifMeasuresAreNegative = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.IF.getName());
	var baseOrMeasure = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.OR.getName());
	var baseLessThan = oFF.QFactory.createFormulaOperation(context);
	var referenceLessThan = oFF.QFactory.createFormulaOperation(context);
	ifReferenceZero.add(ifMeasuresAreNegative);
	ifMeasuresAreNegative.add(baseOrMeasure);
	baseOrMeasure.add(baseLessThan);
	baseLessThan.setOperator(oFF.ComparisonOperator.LESS_THAN);
	baseLessThan.setLeftSide(baseMeasure);
	baseLessThan.setRightSide(oFF.QFactory.createFormulaConstantWithIntValue(context, 0));
	baseOrMeasure.add(referenceLessThan);
	referenceLessThan.setOperator(oFF.ComparisonOperator.LESS_THAN);
	referenceLessThan.setLeftSide(referenceMeasure);
	referenceLessThan.setRightSide(oFF.QFactory.createFormulaConstantWithIntValue(context, 0));
	var varianceCalc = oFF.QFactory.createFormulaOperation(context);
	var baseMinusReference = oFF.QFactory.createFormulaOperation(context);
	var absReference = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.ABS.getName());
	ifMeasuresAreNegative.add(varianceCalc);
	varianceCalc.setOperator(oFF.MathOperator.DIV);
	varianceCalc.setLeftSide(baseMinusReference);
	baseMinusReference.setOperator(oFF.MathOperator.MINUS);
	baseMinusReference.setLeftSide(baseMeasure);
	baseMinusReference.setRightSide(referenceMeasure);
	varianceCalc.setRightSide(absReference);
	absReference.add(referenceMeasure);
	var ratioCalc = oFF.QFactory.createFormulaOperation(context);
	ifMeasuresAreNegative.add(ratioCalc);
	ratioCalc.setOperator(oFF.MathOperator.DIV);
	ratioCalc.setLeftSide(baseMeasure);
	ratioCalc.setRightSide(referenceMeasure);
	if (context.getQueryModel().getSystemType().isTypeOf(oFF.SystemType.BW))
	{
		formulaMeasure.setFormula(ifReferenceZero);
	}
	else
	{
		formulaMeasure.setFormula(ifNull);
	}
	return formulaMeasure;
};
oFF.QFormulaException.prototype.generateTransientMeasure = function(context, messageManager, measureName, needsOverdefined)
{
	var queryModel = context.getQueryModel();
	var dimension = queryModel.getPrimaryCalculationDimension();
	if (oFF.notNull(measureName))
	{
		var member = dimension.getStructureMemberByAliasOrMember(measureName);
		if (oFF.isNull(member))
		{
			var clientQueryObjectManager = queryModel.getOlapEnv().getClientQueryObjectManager();
			var measure = clientQueryObjectManager.getStructuredMember(measureName, this.getStorageName(), true);
			if (oFF.notNull(measure))
			{
				measure.getTagging().put(oFF.QTransientConstants.TAG_IS_TRANSIENT, "");
				dimension.addMeasure(measure);
				measure.generateTransientObjects(context, messageManager);
			}
			else if (this.getSession().hasFeature(oFF.FeatureToggleOlap.MULTIPLE_ACCOUNT_HIERARCHIES) && dimension.getDimensionType() === oFF.DimensionType.ACCOUNT)
			{
				var index = oFF.XString.indexOf(measureName, "].&[");
				if (index >= 0 && oFF.XString.endsWith(measureName, "]"))
				{
					var noPrefixMemberName = oFF.XString.substring(measureName, index + 4, oFF.XString.lastIndexOf(measureName, "]"));
					var uniqueNamePrefix = oFF.XStringUtils.concatenate5("[", dimension.getName(), "].[", dimension.getDefaultHierarchyName(), "].&[");
					var altMemberName = oFF.XStringUtils.concatenate3(uniqueNamePrefix, noPrefixMemberName, "]");
					member = dimension.getStructureMemberByAliasOrMember(altMemberName);
					if (oFF.notNull(member))
					{
						var isOverdefined = needsOverdefined && member.isModelDefinedMember();
						var copyMeasure = oFF.QStructureMember.createMeasure(member.getMemberType(), context, dimension);
						oFF.QStructureMember.copyMeasure(copyMeasure, member);
						copyMeasure.setName(measureName);
						copyMeasure.getTagging().put(oFF.QTransientConstants.TAG_IS_TRANSIENT, "");
						copyMeasure.getTagging().put(oFF.QTransientConstants.TAG_IS_TRANSIENT_MEMBER_COPY, "");
						dimension.addMeasure(copyMeasure);
						if (isOverdefined)
						{
							copyMeasure.getTagging().put(oFF.QTransientConstants.TAG_SERIALIZE_MEMBER, "");
							if (copyMeasure.getResultVisibility() === oFF.ResultVisibility.HIDDEN)
							{
								copyMeasure.getTagging().put(oFF.QTransientConstants.TAG_RESULT_IS_HIDDEN, "");
								copyMeasure.setResultVisibility(oFF.ResultVisibility.VISIBLE);
							}
						}
						copyMeasure.generateTransientObjects(context, messageManager);
					}
				}
			}
		}
		else if (needsOverdefined && member.isModelDefinedMember())
		{
			member.getTagging().put(oFF.QTransientConstants.TAG_SERIALIZE_MEMBER, "");
			if (member.getResultVisibility() === oFF.ResultVisibility.HIDDEN)
			{
				member.getTagging().put(oFF.QTransientConstants.TAG_RESULT_IS_HIDDEN, "");
				member.setResultVisibility(oFF.ResultVisibility.VISIBLE);
			}
		}
	}
};
oFF.QFormulaException.prototype.addVisibilityFilter = function(queryModel, dimension)
{
	var visibilityFilter = queryModel.getFilter().getVisibilityFilter();
	var visibilityFilterList = visibilityFilter.getCartesianList(dimension);
	if (oFF.notNull(visibilityFilterList) && visibilityFilterList.size() > 0)
	{
		var filter = visibilityFilter.addSingleMemberFilterByDimension(dimension, this.getName(), oFF.ComparisonOperator.EQUAL);
		filter.setDepth(0);
	}
};
oFF.QFormulaException.prototype.generateTransientObjects = function(context, messageManager)
{
	var queryModel = context.getQueryModel();
	var dimension = queryModel.getPrimaryCalculationDimension();
	var baseMeasureName = this.getBaseMeasureNameInternal();
	this.generateTransientMeasure(context, messageManager, baseMeasureName, true);
	var referenceMeasureName = this.getReferenceMeasureNameInternal();
	this.generateTransientMeasure(context, messageManager, referenceMeasureName, false);
	var formulaMeasure = dimension.getStructureMemberByAliasOrMember(this.getName());
	if (oFF.isNull(formulaMeasure))
	{
		formulaMeasure = this.getFormulaMeasureInternal(context);
		if (oFF.notNull(formulaMeasure))
		{
			formulaMeasure.getTagging().put(oFF.QTransientConstants.TAG_IS_TRANSIENT, "");
			dimension.getOverdefinedMemberManager().setVisibilityOverride(this.getName(), formulaMeasure.getResultVisibility());
			formulaMeasure.generateTransientObjects(context, messageManager);
			dimension.addMeasure(formulaMeasure);
		}
	}
	var exceptionManager = queryModel.getExceptionManager();
	var exception = exceptionManager.newException(this.getName(), this.getText());
	var displayMeasure = this.getMeasure();
	if (oFF.isNull(displayMeasure))
	{
		displayMeasure = this.getBaseMeasureInternal(context);
	}
	var formulaExceptionManager = queryModel.getFormulaExceptionManager();
	var dynamicFilter;
	var capabilities = this.getModelCapabilities();
	if (capabilities.supportsExceptionsV2())
	{
		if (oFF.notNull(formulaMeasure) && oFF.notNull(displayMeasure))
		{
			exception.setMeasure(formulaMeasure);
			exception.displayOnOtherMember(formulaMeasure, displayMeasure);
			if (formulaExceptionManager.isFormulaResultVisible())
			{
				dynamicFilter = queryModel.getFilter().getDynamicFilter();
				dynamicFilter.addSingleMemberFilterByDimension(dimension, this.getName(), oFF.ComparisonOperator.EQUAL);
				this.addVisibilityFilter(queryModel, dimension);
			}
		}
		else if (oFF.notNull(displayMeasure))
		{
			exception.setMeasure(displayMeasure);
		}
		else
		{
			messageManager.addError(oFF.ErrorCodes.FORMULA_EXCEPTION_INVALID_DISPLAY_MEASURE, oFF.ErrorMessages.FORMULA_EXCEPTION_INVALID_DISPLAY_MEASURE);
			this.destroyTransientObjects(context);
			return;
		}
	}
	else
	{
		if (queryModel.getAccountDimension() !== null && oFF.isNull(displayMeasure))
		{
			displayMeasure = queryModel.getMeasureDimension().getStructureMember("SignedData");
		}
		if (oFF.notNull(displayMeasure))
		{
			exception.setMeasure(displayMeasure);
			if (oFF.notNull(formulaMeasure) && !queryModel.isBlendingModel())
			{
				dynamicFilter = queryModel.getFilter().getDynamicFilter();
				dynamicFilter.addSingleMemberFilterByDimension(dimension, this.getName(), oFF.ComparisonOperator.EQUAL);
				if (formulaExceptionManager.isFormulaResultVisible())
				{
					this.addVisibilityFilter(queryModel, dimension);
				}
			}
		}
		else
		{
			messageManager.addError(oFF.ErrorCodes.FORMULA_EXCEPTION_INVALID_DISPLAY_MEASURE, oFF.ErrorMessages.FORMULA_EXCEPTION_INVALID_DISPLAY_MEASURE);
			this.destroyTransientObjects(context);
			return;
		}
	}
	if (oFF.isNull(formulaMeasure))
	{
		if (oFF.notNull(baseMeasureName))
		{
			exception.addNewEvaluate(dimension, oFF.XStringValue.create(baseMeasureName));
		}
	}
	else
	{
		exception.addNewEvaluate(dimension, oFF.XStringValue.create(formulaMeasure.getAliasOrMemberName()));
	}
	for (var j = 0; j < this.m_evaluates.size(); j++)
	{
		var evaluate = this.m_evaluates.get(j);
		var newEvaluate = oFF.QEvaluate.createEvaluateWithField(evaluate.getField(), evaluate.getLowValue().getValue(), exception);
		newEvaluate.copyEvaluate(evaluate);
		exception.addEvaluate(newEvaluate);
	}
	for (var i = 0; i < this.m_thresholds.size(); i++)
	{
		var threshold = this.m_thresholds.get(i);
		var thresholdException = exceptionManager.newException(threshold.getName(), this.getText());
		thresholdException.copyFrom(exception, null);
		thresholdException.setName(threshold.getName());
		var newThreshold = oFF.QThreshold.createThreshold(context, threshold.getLowValue(), threshold.getAlertLevel(), thresholdException);
		newThreshold.copyThreshold(threshold);
		thresholdException.addThreshold(newThreshold);
		exceptionManager.add(thresholdException);
	}
};
oFF.QFormulaException.prototype.destroyTransientMeasure = function(context, measureName)
{
	var queryModel = context.getQueryModel();
	var dimension = queryModel.getPrimaryCalculationDimension();
	if (oFF.notNull(dimension) && oFF.notNull(measureName))
	{
		var structureMember = dimension.getStructureMemberByAliasOrMember(measureName);
		if (oFF.notNull(structureMember))
		{
			var tagging = structureMember.getTagging();
			if (tagging.containsKey(oFF.QTransientConstants.TAG_SERIALIZE_MEMBER))
			{
				tagging.remove(oFF.QTransientConstants.TAG_SERIALIZE_MEMBER);
			}
			if (tagging.containsKey(oFF.QTransientConstants.TAG_RESULT_IS_HIDDEN))
			{
				tagging.remove(oFF.QTransientConstants.TAG_RESULT_IS_HIDDEN);
				structureMember.setResultVisibility(oFF.ResultVisibility.HIDDEN);
			}
			if (tagging.containsKey(oFF.QTransientConstants.TAG_IS_TRANSIENT))
			{
				tagging.remove(oFF.QTransientConstants.TAG_IS_TRANSIENT);
				dimension.removeMeasure(structureMember.getName());
				if (tagging.containsKey(oFF.QTransientConstants.TAG_IS_TRANSIENT_MEMBER_COPY))
				{
					tagging.remove(oFF.QTransientConstants.TAG_IS_TRANSIENT_MEMBER_COPY);
				}
			}
		}
	}
};
oFF.QFormulaException.prototype.destroyTransientObjects = function(context)
{
	var queryModel = context.getQueryModel();
	var dimension = queryModel.getPrimaryCalculationDimension();
	if (oFF.notNull(dimension))
	{
		var transientMeasure = dimension.getStructureMemberByAliasOrMember(this.getName());
		if (oFF.notNull(transientMeasure) && transientMeasure.getTagging().containsKey(oFF.QTransientConstants.TAG_IS_TRANSIENT))
		{
			var dynamicFilter = queryModel.getFilter().getDynamicFilter();
			dynamicFilter.removeSingleMemberFilterByDimension(dimension, this.getName(), oFF.ComparisonOperator.EQUAL);
			var visibilityFilter = queryModel.getFilter().getVisibilityFilter();
			visibilityFilter.removeSingleMemberFilterByDimension(dimension, this.getName(), oFF.ComparisonOperator.EQUAL);
			dimension.removeMeasure(transientMeasure.getName());
			dimension.getOverdefinedMemberManager().removeOverdefinedMember(this.getName());
		}
	}
	var baseMeasureName = this.getBaseMeasureNameInternal();
	this.destroyTransientMeasure(context, baseMeasureName);
	var referenceMeasureName = this.getReferenceMeasureNameInternal();
	this.destroyTransientMeasure(context, referenceMeasureName);
	var exceptionManager = queryModel.getExceptionManager();
	for (var i = 0; i < this.m_thresholds.size(); i++)
	{
		var threshold = this.m_thresholds.get(i);
		var thresholdException = exceptionManager.getByKey(threshold.getName());
		if (oFF.notNull(thresholdException))
		{
			exceptionManager.removeElement(thresholdException);
		}
	}
};
oFF.QFormulaException.prototype.insertThreshold = function(index, threshold)
{
	var byKey = this.m_thresholds.getByKey(threshold.getName());
	if (oFF.notNull(byKey))
	{
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate3("The threshold name '", threshold.getName(), "' is not unique!"));
	}
	oFF.QAbstractThresholdEvaluateList.prototype.insertThreshold.call( this , index, threshold);
};
oFF.QFormulaException.prototype.newThresholdWithName = function(name, lowValue, alertLevel)
{
	var threshold = oFF.QAbstractThresholdEvaluateList.prototype.newThreshold.call( this , lowValue, alertLevel);
	threshold.setName(name);
	return threshold;
};
oFF.QFormulaException.prototype.addNewThresholdWithName = function(name, lowValue, alertLevel)
{
	var threshold = this.newThresholdWithName(name, lowValue, alertLevel);
	this.addThreshold(threshold);
	return threshold;
};
oFF.QFormulaException.prototype.validateWithDataModelScope = function(context)
{
	var validationResult = oFF.MessageManager.createMessageManagerExt(this.getSession());
	var queryModel = context.getQueryModel();
	var baseMeasureName = this.getBaseMeasureNameInternal();
	var baseMeasure = this.getMeasureStructureMember(queryModel, baseMeasureName);
	if (oFF.notNull(baseMeasure) && baseMeasure.getMemberType() === oFF.MemberType.FORMULA)
	{
		var formulaMeasure = baseMeasure;
		if (formulaMeasure.getFormulaType() === oFF.QFormulaType.MODEL_LINK)
		{
			validationResult.addErrorExt(oFF.OriginLayer.APPLICATION, oFF.ErrorCodes.THRESHOLD_INVALID_MEASURE_WITH_LINK_FORMULA, "", oFF.XStringValue.create(baseMeasureName));
		}
	}
	if (this.m_formulaType === oFF.FormulaExceptionType.POSITIVE_RATIO_NEGATIVE_VARIANCE)
	{
		var referenceMeasureName = this.getReferenceMeasureNameInternal();
		if (oFF.notNull(referenceMeasureName))
		{
			var referenceMeasure = this.getMeasureStructureMember(queryModel, referenceMeasureName);
			if (oFF.notNull(referenceMeasure))
			{
				validationResult.addAllMessages(referenceMeasure.validateWithDataModelScope(context));
			}
			else
			{
				validationResult.addErrorExt(oFF.OriginLayer.APPLICATION, oFF.ErrorCodes.THRESHOLD_MISSING_REFERENCE_MEASURE, "", oFF.XStringValue.create(referenceMeasureName));
			}
		}
	}
	return validationResult;
};
oFF.QFormulaException.prototype.validateWithQueryModelScope = function(context)
{
	var validationResult = oFF.MessageManager.createMessageManagerExt(this.getSession());
	if (this.m_formulaType === oFF.FormulaExceptionType.POSITIVE_RATIO_NEGATIVE_VARIANCE)
	{
		var referenceMeasureName = this.getReferenceMeasureNameInternal();
		if (oFF.notNull(referenceMeasureName))
		{
			var referenceMeasure = this.getMeasureStructureMember(context.getQueryModel(), referenceMeasureName);
			if (oFF.notNull(referenceMeasure))
			{
				validationResult.addAllMessages(referenceMeasure.validateWithQueryModelScope(context));
			}
		}
	}
	return validationResult;
};

oFF.QFieldCalcDim = function() {};
oFF.QFieldCalcDim.prototype = new oFF.QField();
oFF.QFieldCalcDim.prototype._ff_c = "QFieldCalcDim";

oFF.QFieldCalcDim._createFieldCalcDim = function(context, dimension, type, name)
{
	var fieldCalcDim = new oFF.QFieldCalcDim();
	fieldCalcDim.setupFieldCalcDim(context, dimension, type, name);
	return fieldCalcDim;
};
oFF.QFieldCalcDim.prototype.m_calcMetadata = null;
oFF.QFieldCalcDim.prototype.setValueType = function(valueType)
{
	this.getMetadataBase().setValueType(valueType);
};
oFF.QFieldCalcDim.prototype.setupFieldCalcDim = function(context, dimension, type, name)
{
	this.setupField(context, dimension, type);
	this.setName(name);
	var cacheKey = oFF.QFactory.createCacheKeyForField(context, name, dimension.getName());
	var metadata = oFF.QFieldMetadata.create(cacheKey);
	metadata.setDimensionMetadata(dimension.getMetadataBase());
	metadata.setIsFilterable(true);
	metadata.setValueType(oFF.XValueType.STRING);
	metadata.setIsFlatKeyField(type === oFF.PresentationType.KEY);
	metadata.setPresentationType(type);
	this.setMetadata(metadata);
	this.m_calcMetadata = metadata;
};
oFF.QFieldCalcDim.prototype.getValueType = function()
{
	var metadata = this.getMetadata();
	return oFF.isNull(metadata) ? oFF.XValueType.STRING : metadata.getValueType();
};
oFF.QFieldCalcDim.prototype.releaseObject = function()
{
	oFF.QField.prototype.releaseObject.call( this );
	this.m_calcMetadata = oFF.XObjectExt.release(this.m_calcMetadata);
};

oFF.QFieldValue = function() {};
oFF.QFieldValue.prototype = new oFF.AbstractValueAccessComponent();
oFF.QFieldValue.prototype._ff_c = "QFieldValue";

oFF.QFieldValue._create = function(context)
{
	var fieldValue = new oFF.QFieldValue();
	fieldValue.setupFieldValue(context, null, null, oFF.MemberType.FIELD_VALUE);
	return fieldValue;
};
oFF.QFieldValue.create = function(context, field, dimensionMember)
{
	var fieldValue = new oFF.QFieldValue();
	fieldValue.setupFieldValue(context, field, dimensionMember, oFF.MemberType.FIELD_VALUE);
	return fieldValue;
};
oFF.QFieldValue.createWithValue = function(context, field, dimensionMember, value)
{
	var fieldValue = new oFF.QFieldValue();
	fieldValue.setupFieldValue(context, field, dimensionMember, oFF.MemberType.FIELD_VALUE);
	fieldValue.m_value = value;
	return fieldValue;
};
oFF.QFieldValue.createLiteral = function(context, field)
{
	var fieldValue = new oFF.QFieldValue();
	fieldValue.setupFieldValue(context, field, null, oFF.MemberType.LITERAL_MEMBER);
	return fieldValue;
};
oFF.QFieldValue.prototype.m_value = null;
oFF.QFieldValue.prototype.m_valueException = null;
oFF.QFieldValue.prototype.m_formattedValue = null;
oFF.QFieldValue.prototype.m_dimensionMember = null;
oFF.QFieldValue.prototype.m_field = null;
oFF.QFieldValue.prototype.m_memberType = null;
oFF.QFieldValue.prototype.m_isStarWildcardEnabled = false;
oFF.QFieldValue.prototype.setupFieldValue = function(context, field, dimensionMember, memberType)
{
	this.setupModelComponent(context, null);
	this.setDimensionMember(dimensionMember);
	this.m_field = field;
	this.m_memberType = memberType;
};
oFF.QFieldValue.prototype.isEqualTo = function(other)
{
	if (this === other)
	{
		return true;
	}
	if (oFF.isNull(other))
	{
		return false;
	}
	var xOther = other;
	if (this.m_dimensionMember !== xOther.m_dimensionMember)
	{
		return false;
	}
	if (this.m_field !== xOther.m_field)
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.m_formattedValue, xOther.m_formattedValue))
	{
		return false;
	}
	if (this.m_isStarWildcardEnabled !== xOther.m_isStarWildcardEnabled)
	{
		return false;
	}
	if (this.m_memberType !== xOther.m_memberType)
	{
		return false;
	}
	if (!oFF.XObjectExt.areEqual(this.m_value, xOther.m_value))
	{
		return false;
	}
	if (this.m_valueException !== xOther.m_valueException)
	{
		return false;
	}
	return true;
};
oFF.QFieldValue.prototype.cloneOlapComponent = function(context, parent)
{
	var clone = new oFF.QFieldValue();
	clone.setupFieldValue(context, null, null, this.m_memberType);
	clone.copyFieldValue(this);
	return clone;
};
oFF.QFieldValue.prototype.setFieldValue = function(other)
{
	if (oFF.notNull(other))
	{
		this.m_value = other.getValue() === null ? null : other.getValue().clone();
		this.m_valueException = other.getValueException();
		this.m_formattedValue = other.getFormattedValue();
		this.m_field = other.getField();
		this.m_memberType = other.getMemberType();
		this.m_dimensionMember = other.getDimensionMember();
		this.notifyNodeChanged();
	}
};
oFF.QFieldValue.prototype.copyFromInternal = function(other, flags)
{
	this.copyFieldValue(other);
};
oFF.QFieldValue.prototype.copyFieldValue = function(origin)
{
	oFF.AbstractValueAccessComponent.prototype.copyFromInternal.call( this , origin, null);
	if (oFF.isNull(origin.m_value))
	{
		this.m_value = null;
	}
	else
	{
		this.m_value = origin.m_value.clone();
		if (origin.m_value.getValueType() === oFF.XValueType.VARIABLE)
		{
			var variableValue = this.m_value;
			var variable = variableValue.getVariable();
			if (oFF.notNull(variable))
			{
				var correctVariable = this.getVariableContainer().getVariable(variable.getName());
				variableValue.setVariable(correctVariable);
			}
		}
	}
	this.m_valueException = origin.m_valueException;
	this.m_formattedValue = origin.m_formattedValue;
	if (oFF.notNull(origin.m_field) && this.getContext().getFieldAccessorSingle() !== null)
	{
		this.m_field = this.getContext().getFieldAccessorSingle().getFieldByName(origin.m_field.getName());
	}
	this.m_memberType = origin.m_memberType;
	this.m_isStarWildcardEnabled = origin.m_isStarWildcardEnabled;
	if (oFF.notNull(origin.m_dimensionMember))
	{
		var origMember = origin.getDimensionMember();
		if (oFF.notNull(origMember))
		{
			var originName = origMember.getName();
			if (oFF.notNull(originName))
			{
				var origMemberDimension = origMember.getDimension();
				if (oFF.notNull(origMemberDimension) && this.getDimensionAccessor() !== null)
				{
					var dimName = origMemberDimension.getName();
					var cloneDimension = this.getDimensionAccessor().getDimensionByNameFromExistingMetadataOrFormulaCalcDim(dimName);
					if (oFF.notNull(cloneDimension))
					{
						var cloneMember = cloneDimension.getDimensionMember(originName);
						if (oFF.notNull(cloneMember))
						{
							this.setDimensionMember(cloneMember);
						}
					}
				}
			}
		}
	}
};
oFF.QFieldValue.prototype.mergeDeepRecursive = function(settings, other)
{
	var otherFieldValue = other;
	var otherValue = otherFieldValue.getValue();
	if (oFF.notNull(this.m_value) && oFF.notNull(otherValue) && !this.m_value.isEqualTo(otherValue))
	{
		this.m_value = otherValue.clone();
	}
};
oFF.QFieldValue.prototype.releaseObject = function()
{
	this.m_value = oFF.XObjectExt.release(this.m_value);
	this.m_dimensionMember = null;
	this.m_formattedValue = null;
	this.m_valueException = null;
	this.m_field = null;
	oFF.AbstractValueAccessComponent.prototype.releaseObject.call( this );
};
oFF.QFieldValue.prototype.getType = function()
{
	return this.getMemberType();
};
oFF.QFieldValue.prototype.getMemberType = function()
{
	return this.m_memberType;
};
oFF.QFieldValue.prototype.getField = function()
{
	return this.m_field;
};
oFF.QFieldValue.prototype.getFieldBase = function()
{
	return this.m_field;
};
oFF.QFieldValue.prototype.getSelectValue = function()
{
	return this.getString();
};
oFF.QFieldValue.prototype.getSelectField = function()
{
	return this.m_field;
};
oFF.QFieldValue.prototype.getSelectHierarchyName = function()
{
	return null;
};
oFF.QFieldValue.prototype.getFormattedValue = function()
{
	if (this.getField() !== null && this.getField().getPresentationType() === oFF.PresentationType.URL)
	{
		return oFF.XHttpUtils.decodeURIComponent(this.m_formattedValue);
	}
	if (this.getField() !== null && this.getField().getPresentationType() === oFF.PresentationType.BLOB && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_formattedValue))
	{
		var queryManager = this.getQueryManager();
		var connection = queryManager.getConnection();
		var xxlPathWithSchemeHostPortPrefix = connection.getXXLPathWithSchemeHostPortPrefix();
		return oFF.XStringUtils.concatenate2(xxlPathWithSchemeHostPortPrefix, this.m_formattedValue);
	}
	return this.m_formattedValue;
};
oFF.QFieldValue.prototype.getFormattedValueForImageRequest = function()
{
	if (this.getField() !== null && this.getField().getPresentationType() === oFF.PresentationType.BLOB)
	{
		return this.m_formattedValue;
	}
	return null;
};
oFF.QFieldValue.prototype.setFormattedValue = function(formattedValue)
{
	this.m_formattedValue = formattedValue;
};
oFF.QFieldValue.prototype.getValue = function()
{
	return this.m_value;
};
oFF.QFieldValue.prototype.setValue = function(value)
{
	this.m_value = value;
	this.notifyNodeChanged();
};
oFF.QFieldValue.prototype.setXValue = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.getDimension = function()
{
	var field = this.getField();
	return oFF.isNull(field) ? null : field.getDimension();
};
oFF.QFieldValue.prototype.getDimensionMember = function()
{
	if (oFF.isNull(this.m_dimensionMember))
	{
		var field = this.getField();
		if (oFF.notNull(field) && field.isKeyField())
		{
			this.m_dimensionMember = field.getDimension().getDimensionMemberWithValue(this.getValue(), field);
		}
	}
	return this.m_dimensionMember;
};
oFF.QFieldValue.prototype.setDimensionMember = function(dimensionMember)
{
	this.m_dimensionMember = dimensionMember;
};
oFF.QFieldValue.prototype.setDecFloat = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.setLiteralDouble = function(value)
{
	this.setDouble(value);
};
oFF.QFieldValue.prototype.setDouble = function(value)
{
	this.assertNumeric(value);
	this.setValue(oFF.XDoubleValue.create(value));
};
oFF.QFieldValue.prototype.setLiteralInt = function(value)
{
	this.setInteger(value);
};
oFF.QFieldValue.prototype.setInteger = function(value)
{
	this.assertNumeric(value);
	this.setValue(oFF.XIntegerValue.create(value));
};
oFF.QFieldValue.prototype.setLiteralLong = function(value)
{
	this.setLong(value);
};
oFF.QFieldValue.prototype.setLong = function(value)
{
	this.assertNumeric(value);
	this.setValue(oFF.XLongValue.create(value));
};
oFF.QFieldValue.prototype.setLiteralDate = function(value)
{
	this.setDate(value);
};
oFF.QFieldValue.prototype.setDate = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.setTime = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.setLiteralTimespan = function(timespan)
{
	this.setTimeSpan(oFF.XTimeSpan.create(timespan));
};
oFF.QFieldValue.prototype.setTimeSpan = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.setLiteralPolygon = function(value)
{
	this.setPolygon(value);
};
oFF.QFieldValue.prototype.setPolygon = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.setLiteralPoint = function(value)
{
	this.setPoint(value);
};
oFF.QFieldValue.prototype.setPoint = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.getString = function()
{
	var value = this.getValue();
	if (oFF.isNull(value))
	{
		return this.m_formattedValue;
	}
	else if (value.getValueType() === oFF.XValueType.STRING)
	{
		return value.getString();
	}
	return value.toString();
};
oFF.QFieldValue.prototype.setLiteralString = function(value)
{
	this.setString(value);
};
oFF.QFieldValue.prototype.setString = function(value)
{
	this.setValue(oFF.XStringValue.create(value));
};
oFF.QFieldValue.prototype.setBoolean = function(value)
{
	this.setValue(oFF.XBooleanValue.create(value));
};
oFF.QFieldValue.prototype.setStructureValue = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.setStructureListValue = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.setPropertiesValue = function(properties)
{
	this.setValue(properties);
};
oFF.QFieldValue.prototype.setDateTime = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.setMultiPolygon = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.setLineString = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.setMultiLineString = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.setNullByType = function(nullValueType) {};
oFF.QFieldValue.prototype.setMultiPoint = function(value)
{
	this.setValue(value);
};
oFF.QFieldValue.prototype.getValueException = function()
{
	return this.m_valueException;
};
oFF.QFieldValue.prototype.setValueException = function(valueException)
{
	this.m_valueException = valueException;
};
oFF.QFieldValue.prototype.parseString = oFF.noSupport;
oFF.QFieldValue.prototype.supportsStarWildcard = function()
{
	return true;
};
oFF.QFieldValue.prototype.isStarWildcardEnabled = function()
{
	return this.m_isStarWildcardEnabled;
};
oFF.QFieldValue.prototype.setIsStarWildcardEnabled = function(isEnabled)
{
	this.m_isStarWildcardEnabled = isEnabled;
};
oFF.QFieldValue.prototype.hasValue = function()
{
	return oFF.notNull(this.m_value);
};
oFF.QFieldValue.prototype.getSelectableElement = function()
{
	return this;
};
oFF.QFieldValue.prototype.isNode = function()
{
	return this.getMemberType().isNode();
};
oFF.QFieldValue.prototype.assertNumeric = function(value)
{
	if (oFF.XMath.isNaN(value))
	{
		throw oFF.XException.createIllegalArgumentException("The value must not be NaN!");
	}
};
oFF.QFieldValue.prototype.toString = function()
{
	var buffer = oFF.XStringBuffer.create();
	if (oFF.notNull(this.m_field))
	{
		buffer.append(this.m_field.toString());
	}
	if (oFF.notNull(this.m_value))
	{
		buffer.append(": '").append(this.m_value.toString()).append("'");
	}
	return buffer.toString();
};

oFF.AbstractTransientFilter = function() {};
oFF.AbstractTransientFilter.prototype = new oFF.QFilterElement();
oFF.AbstractTransientFilter.prototype._ff_c = "AbstractTransientFilter";

oFF.AbstractTransientFilter.prototype.m_layeredFilters = null;
oFF.AbstractTransientFilter.prototype.m_transientRefCount = 0;
oFF.AbstractTransientFilter.prototype.m_transientFilterCapabilities = null;
oFF.AbstractTransientFilter.prototype.setupTransientFilter = function(context, name)
{
	oFF.QFilterElement.prototype.setupFilterElement.call( this , context, null, context.getComponentType() === oFF.OlapComponentType.QUERY_MODEL ? context : null);
	this.setName(name);
	this.m_layeredFilters = oFF.QLayeredFilter.create(context, this);
	this.m_transientFilterCapabilities = oFF.QFactory.createCapabilitiesDecorator(this);
	this.m_transientFilterCapabilities.setSupportsComplexFilter(true);
	this.m_transientFilterCapabilities.setSupportsIntersectLayers(true);
	this.m_transientFilterCapabilities.setSupportsVisibilityFilter(true);
	this.m_transientFilterCapabilities.setSupportsCellValueOperand(true);
	this.m_transientFilterCapabilities.setSupportsComplexTupleFilter(true);
};
oFF.AbstractTransientFilter.prototype.setParent = function(parent)
{
	oFF.QFilterElement.prototype.setParent.call( this , parent);
	this.m_transientFilterCapabilities.updateContext(this);
};
oFF.AbstractTransientFilter.prototype.getModelCapabilities = function()
{
	return this.m_transientFilterCapabilities;
};
oFF.AbstractTransientFilter.prototype.getTransientDimensionsForQueryModel = function(queryModel)
{
	var transientObjects = oFF.XList.create();
	var dimension = queryModel.getDimensionByName(this.getName());
	if (oFF.notNull(dimension) && !dimension.isReleased() && dimension.getDimensionType().isTypeOf(oFF.DimensionType.FORMULA_CALCULATED_DIMENSION))
	{
		transientObjects.add(dimension);
	}
	return transientObjects;
};
oFF.AbstractTransientFilter.prototype.copyFromInternal = function(other, flags)
{
	oFF.QFilterElement.prototype.copyFromInternal.call( this , other, flags);
	var originAbstractTransientFilter = other;
	this.m_layeredFilters.copyFrom(originAbstractTransientFilter.m_layeredFilters, flags);
	this.m_transientRefCount = originAbstractTransientFilter.m_transientRefCount;
};
oFF.AbstractTransientFilter.prototype.removeCalcDimByName = function(calcDimName, context)
{
	if (oFF.notNull(context))
	{
		var queryModel = context.getQueryModel();
		if (oFF.notNull(queryModel))
		{
			var dimToRelease = queryModel.getDimensionByName(calcDimName);
			queryModel.removeCalculatedDimensionByName(calcDimName);
			oFF.XObjectExt.release(dimToRelease);
		}
	}
};
oFF.AbstractTransientFilter.prototype.destroyTransientFromExternalFilters = function(context)
{
	var filterIterator = this.m_layeredFilters.getIterator();
	while (filterIterator.hasNext())
	{
		var filterElement = filterIterator.next().getFilterRootElement();
		if (oFF.isNull(filterElement))
		{
			continue;
		}
		var componentType = filterElement.getComponentType();
		if (componentType === oFF.FilterComponentType.FILTER_ACROSS_MODELS || componentType === oFF.FilterComponentType.FILTER_MEASURE_BASED)
		{
			filterElement.destroyTransientObjects(context);
		}
	}
};
oFF.AbstractTransientFilter.prototype.setFilterContext = function(calcDim)
{
	var filterAnd = oFF.QFactory.createFilterAnd(this);
	filterAnd.setHasChildOwnership(false);
	var iterator = this.m_layeredFilters.getIterator();
	while (iterator.hasNext())
	{
		filterAnd.addInternal(iterator.next().getFilterRootElement());
	}
	if (filterAnd.hasElements())
	{
		calcDim.getFilterContext().setComplexRoot(filterAnd);
	}
};
oFF.AbstractTransientFilter.prototype.addCalcDimAndDependencies = function(calcDim, queryModel, secondaryQueryModel, messageManager)
{
	if (oFF.notNull(calcDim))
	{
		queryModel.addDimension(calcDim);
		var filterIterator = this.m_layeredFilters.getIterator();
		while (filterIterator.hasNext())
		{
			var filterElement = filterIterator.next().getFilterRootElement();
			if (oFF.isNull(filterElement))
			{
				continue;
			}
			var componentType = filterElement.getComponentType();
			if (componentType === oFF.FilterComponentType.FILTER_ACROSS_MODELS || componentType === oFF.FilterComponentType.FILTER_MEASURE_BASED)
			{
				var elementName = filterElement.getName();
				filterElement.generateTransientObjects(secondaryQueryModel, messageManager);
				var depCalcDim = secondaryQueryModel.getDimensionByName(elementName);
				if (oFF.notNull(depCalcDim) && depCalcDim.getDimensionType().isTypeOf(oFF.DimensionType.FORMULA_CALCULATED_DIMENSION))
				{
					calcDim.addDependentCalculatedDimension(depCalcDim);
					queryModel.addDimension(depCalcDim);
				}
			}
			else
			{
				this.checkCalcDimFilter(filterElement, calcDim, queryModel);
			}
		}
	}
};
oFF.AbstractTransientFilter.prototype.checkCalcDimFilter = function(filterElement, calcDim, queryModel)
{
	var componentType = filterElement.getComponentType();
	if (componentType.isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
	{
		var filterList = filterElement;
		var listDimensionMetadata = filterList.getFieldMetadata().getDimensionMetadata();
		var listDimension = queryModel.getDimensionByName(listDimensionMetadata.getName());
		if (oFF.notNull(listDimension) && listDimension.getDimensionType().isTypeOf(oFF.DimensionType.FORMULA_CALCULATED_DIMENSION))
		{
			calcDim.addDependentCalculatedDimension(listDimension);
		}
	}
	else if (componentType === oFF.FilterComponentType.OPERATION)
	{
		var filterOperation = filterElement;
		var opDimensionMetadata = filterOperation.getFieldMetadata().getDimensionMetadata();
		var opDimension = queryModel.getDimensionByName(opDimensionMetadata.getName());
		if (oFF.notNull(opDimension) && opDimension.getDimensionType().isTypeOf(oFF.DimensionType.FORMULA_CALCULATED_DIMENSION))
		{
			calcDim.addDependentCalculatedDimension(opDimension);
		}
	}
	else if (componentType.isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA))
	{
		var filterAlgebra = filterElement;
		var iterator = filterAlgebra.getIterator();
		while (iterator.hasNext())
		{
			this.checkCalcDimFilter(iterator.next(), calcDim, queryModel);
		}
	}
};
oFF.AbstractTransientFilter.prototype.releaseObject = function()
{
	this.m_transientFilterCapabilities = oFF.XObjectExt.release(this.m_transientFilterCapabilities);
	this.m_layeredFilters = oFF.XObjectExt.release(this.m_layeredFilters);
	this.m_transientRefCount = 0;
	oFF.QFilterElement.prototype.releaseObject.call( this );
};
oFF.AbstractTransientFilter.prototype.unlinkFilters = function()
{
	this.m_layeredFilters.clear();
	this.clearCachedQueryDependentObjectsAndNotifyNodeChanged();
};
oFF.AbstractTransientFilter.prototype.linkFiltersIfApplicable = function(layeredFilter)
{
	if (!oFF.XCollectionUtils.hasElements(layeredFilter))
	{
		return false;
	}
	var modelCapabilities = this.getModelCapabilities();
	var iterator = layeredFilter.getIterator();
	while (iterator.hasNext())
	{
		if (!oFF.QFilterUtil.isFilterApplicable(iterator.next(), modelCapabilities))
		{
			return false;
		}
	}
	this.linkFilters(layeredFilter);
	return true;
};
oFF.AbstractTransientFilter.prototype.linkFilters = function(layeredFilter)
{
	this.m_layeredFilters.copy(layeredFilter);
	this.clearCachedQueryDependentObjectsAndNotifyNodeChanged();
};
oFF.AbstractTransientFilter.prototype.clearCachedQueryDependentObjectsAndNotifyNodeChanged = function()
{
	this.clearCachedQueryDependentObjects();
	this.notifyNodeChanged();
};
oFF.AbstractTransientFilter.prototype.clearCachedQueryDependentObjects = function()
{
	return;
};
oFF.AbstractTransientFilter.prototype.onModelComponentChanged = function(modelComponent, customIdentifier)
{
	this.clearCachedQueryDependentObjects();
};
oFF.AbstractTransientFilter.prototype.getLinkedFilters = function()
{
	return this.m_layeredFilters.toReadOnly();
};
oFF.AbstractTransientFilter.prototype.linkFilterIfApplicable = function(filterName, filter)
{
	var isApplicable = oFF.QFilterUtil.isFilterApplicable(filter, this.getModelCapabilities());
	if (isApplicable)
	{
		this.linkFilter(filterName, filter);
	}
	return isApplicable;
};
oFF.AbstractTransientFilter.prototype.linkFilter = function(filterName, filter)
{
	this.m_layeredFilters.putLayer(filterName, filter);
	this.clearCachedQueryDependentObjectsAndNotifyNodeChanged();
};
oFF.AbstractTransientFilter.prototype.linkFilterExt = function(filterName, filter, isBackProjection, isInternalLinkForLov)
{
	if (!isBackProjection)
	{
		this.linkFilter(filterName, filter);
	}
};
oFF.AbstractTransientFilter.prototype.linkFilterExtIfApplicable = function(filterName, filter, isBackProjection, isInternalLinkForLov)
{
	var isApplicable = oFF.QFilterUtil.isFilterApplicable(filter, this.getModelCapabilities());
	if (isApplicable)
	{
		this.linkFilterExt(filterName, filter, isBackProjection, isInternalLinkForLov);
	}
	return isApplicable;
};
oFF.AbstractTransientFilter.prototype.getBackProjectionFilterIds = function()
{
	return null;
};
oFF.AbstractTransientFilter.prototype.getInternalLinkedFilterIds = function()
{
	return null;
};
oFF.AbstractTransientFilter.prototype.linkFilterElementIfApplicable = function(filterName, filterElement)
{
	var filterExpression = oFF.QFilterExpression.create(this, this);
	filterExpression.setComplexRoot(filterElement);
	var isApplicable = oFF.QFilterUtil.isFilterApplicable(filterExpression, this.getModelCapabilities());
	if (isApplicable)
	{
		this.linkFilter(filterName, filterExpression);
	}
	return isApplicable;
};
oFF.AbstractTransientFilter.prototype.linkFilterElement = function(filterName, filterElement)
{
	var filterExpression = oFF.QFilterExpression.create(this, this);
	filterExpression.setComplexRoot(filterElement);
	this.linkFilter(filterName, filterExpression);
};
oFF.AbstractTransientFilter.prototype.getLinkedFilter = function(filterName)
{
	return this.m_layeredFilters.getLayer(filterName);
};
oFF.AbstractTransientFilter.prototype.getExternalizedFilterName = oFF.noSupport;

oFF.QDimensionLink = function() {};
oFF.QDimensionLink.prototype = new oFF.QFieldLink();
oFF.QDimensionLink.prototype._ff_c = "QDimensionLink";

oFF.QDimensionLink.createDimensionLink = function(context, parent, first, second, linkOnMatchingHierarchies)
{
	if (oFF.isNull(first) || oFF.isNull(second) || first === second)
	{
		return null;
	}
	var newLink = new oFF.QDimensionLink();
	newLink.setupModelComponent(context, parent);
	newLink.m_first = oFF.QDimensionLinkPart.createDimensionLinkPart(context, first, null, null);
	newLink.m_second = oFF.QDimensionLinkPart.createDimensionLinkPart(context, second, null, null);
	newLink.m_firstFieldKey = oFF.XObjectExt.cloneIfNotNull(first);
	newLink.m_secondFieldKey = oFF.XObjectExt.cloneIfNotNull(second);
	newLink.m_linkOnMatchingHierarchies = linkOnMatchingHierarchies;
	return newLink;
};
oFF.QDimensionLink.createDimensionLinkFromParts = function(context, parent, first, second, linkOnMatchingHierarchies)
{
	var newLink = new oFF.QDimensionLink();
	newLink.setupModelComponent(context, parent);
	newLink.m_first = first;
	newLink.m_second = second;
	newLink.m_firstFieldKey = oFF.XObjectExt.cloneIfNotNull(first.getFieldKey());
	newLink.m_secondFieldKey = oFF.XObjectExt.cloneIfNotNull(second.getFieldKey());
	newLink.m_linkOnMatchingHierarchies = linkOnMatchingHierarchies;
	first.setParent(newLink);
	second.setParent(newLink);
	return newLink;
};
oFF.QDimensionLink.prototype.m_firstFieldKey = null;
oFF.QDimensionLink.prototype.m_secondFieldKey = null;
oFF.QDimensionLink.prototype.m_linkOnMatchingHierarchies = false;
oFF.QDimensionLink.prototype.cloneOlapComponent = function(context, parent)
{
	return oFF.QDimensionLink.createDimensionLinkFromParts(context, parent, this.getFirstPart(), this.getSecondPart(), this.isLinkOnMatchingHierarchies());
};
oFF.QDimensionLink.prototype.releaseObject = function()
{
	oFF.QFieldLink.prototype.releaseObject.call( this );
	this.m_firstFieldKey = oFF.XObjectExt.release(this.m_firstFieldKey);
	this.m_secondFieldKey = oFF.XObjectExt.release(this.m_secondFieldKey);
};
oFF.QDimensionLink.prototype.getFirst = function()
{
	return this.m_firstFieldKey;
};
oFF.QDimensionLink.prototype.getSecond = function()
{
	return this.m_secondFieldKey;
};
oFF.QDimensionLink.prototype.isLinkOnMatchingHierarchies = function()
{
	return this.m_linkOnMatchingHierarchies;
};
oFF.QDimensionLink.prototype.setLinkOnMatchingHierarchies = function(linkOnMatchingHierarchies)
{
	this.m_linkOnMatchingHierarchies = linkOnMatchingHierarchies;
};
oFF.QDimensionLink.prototype.arePartsLinkedOnSameHierarchy = function()
{
	return oFF.XString.isEqual(this.getFirstPart().getHierarchyName(), this.getSecondPart().getHierarchyName()) && oFF.XString.isEqual(this.getFirstPart().getHierId(), this.getSecondPart().getHierId());
};

oFF.QDimensionLinkPart = function() {};
oFF.QDimensionLinkPart.prototype = new oFF.QFieldLinkPart();
oFF.QDimensionLinkPart.prototype._ff_c = "QDimensionLinkPart";

oFF.QDimensionLinkPart.createDimensionLinkPart = function(context, fieldKey, hierarchyName, queryManagerKey)
{
	var linkPart = new oFF.QDimensionLinkPart();
	linkPart.setupModelComponent(context, null);
	linkPart.m_systemName = fieldKey.getSystemName();
	if (oFF.notNull(context))
	{
		var olapEnv = context.getOlapEnv();
		var cubeContainer = olapEnv.getCubeContainer(fieldKey);
		var dataSource = cubeContainer.getDataSource();
		if (oFF.notNull(dataSource))
		{
			linkPart.m_cubeName = dataSource.getFullQualifiedName();
			oFF.XObjectExt.assertStringNotInitial(linkPart.m_cubeName);
		}
	}
	linkPart.m_dimensionName = fieldKey.getKey2();
	linkPart.m_fieldName = fieldKey.getKey1();
	linkPart.m_hierarchyName = hierarchyName;
	linkPart.m_fieldKey = oFF.XObjectExt.cloneIfNotNull(fieldKey);
	linkPart.m_queryManagerKey = queryManagerKey;
	return linkPart;
};
oFF.QDimensionLinkPart.prototype.m_hierarchyName = null;
oFF.QDimensionLinkPart.prototype.m_hierId = null;
oFF.QDimensionLinkPart.prototype.m_queryManagerKey = null;
oFF.QDimensionLinkPart.prototype.m_isLinkOnKeyField = false;
oFF.QDimensionLinkPart.prototype.m_containsEmptyDescriptionField = false;
oFF.QDimensionLinkPart.prototype.copyFromInternal = function(other, flags)
{
	oFF.QFieldLinkPart.prototype.copyFromInternal.call( this , other, flags);
	var otherPart = other;
	this.m_hierarchyName = otherPart.m_hierarchyName;
	this.m_hierId = otherPart.m_hierId;
	this.m_queryManagerKey = otherPart.m_queryManagerKey;
	this.setContainsEmptyDescriptionField(otherPart.m_containsEmptyDescriptionField);
	this.setLinkOnKeyField(otherPart.m_isLinkOnKeyField);
};
oFF.QDimensionLinkPart.prototype.releaseObject = function()
{
	oFF.QFieldLinkPart.prototype.releaseObject.call( this );
	this.m_hierarchyName = null;
	this.m_hierId = null;
	this.m_queryManagerKey = null;
};
oFF.QDimensionLinkPart.prototype.getHierarchyName = function()
{
	return this.m_hierarchyName;
};
oFF.QDimensionLinkPart.prototype.getHierId = function()
{
	return this.m_hierId;
};
oFF.QDimensionLinkPart.prototype.setHierId = function(hierId)
{
	this.m_hierId = hierId;
	this.notifyNodeChanged();
};
oFF.QDimensionLinkPart.prototype.isHierarchical = function()
{
	return oFF.XStringUtils.isNotNullAndNotEmpty(this.getHierarchyName());
};
oFF.QDimensionLinkPart.prototype.isEqualTo = function(other)
{
	if (!oFF.QFieldLinkPart.prototype.isEqualTo.call( this , other))
	{
		return false;
	}
	var xOther = other;
	return oFF.XString.isEqual(this.getQueryManagerKey(), xOther.getQueryManagerKey()) && oFF.XString.isEqual(this.getHierarchyName(), xOther.getHierarchyName()) && oFF.XString.isEqual(this.getHierId(), xOther.getHierId());
};
oFF.QDimensionLinkPart.prototype.getQueryManagerKey = function()
{
	return this.m_queryManagerKey;
};
oFF.QDimensionLinkPart.prototype.isLinkOnKeyField = function()
{
	return this.m_isLinkOnKeyField;
};
oFF.QDimensionLinkPart.prototype.setLinkOnKeyField = function(linkOnKeyField)
{
	this.m_isLinkOnKeyField = linkOnKeyField;
	this.notifyNodeChanged();
};
oFF.QDimensionLinkPart.prototype.containsEmptyDescriptionField = function()
{
	return this.m_containsEmptyDescriptionField;
};
oFF.QDimensionLinkPart.prototype.setContainsEmptyDescriptionField = function(containsEmptyDescriptionField)
{
	this.m_containsEmptyDescriptionField = containsEmptyDescriptionField;
	this.notifyNodeChanged();
};
oFF.QDimensionLinkPart.prototype.isSameDataSourceOrDatasetIdAsContext = function(context)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_queryManagerKey) && oFF.XStringUtils.isNotNullAndNotEmpty(context.getQueryModel().getDatasetId()))
	{
		return oFF.XString.isEqual(this.m_queryManagerKey, context.getQueryModel().getDatasetId());
	}
	else
	{
		return this.getFieldKey().isSameDataSourceAsContext(context);
	}
};

oFF.QFilter = function() {};
oFF.QFilter.prototype = new oFF.QModelComponent();
oFF.QFilter.prototype._ff_c = "QFilter";

oFF.QFilter.VALUEHELP_FILTER_CONTAINER = "selectorContainer";
oFF.QFilter.VALUEHELP_VISIBILITY_FILTER_CONTAINER = "selectorVisibilityContainer";
oFF.QFilter.VISIBILITY_FILTER_CONTAINER = "selectionVisibilityContainer";
oFF.QFilter.TEMPORARY_VISIBILITY_FILTER_CONTAINER = "selectionVisibilityTmpContainer";
oFF.QFilter.EFFECTIVE_VISIBILITY_FILTER_CONTAINER = "effectiveSelectionVisibilityContainer";
oFF.QFilter.FIXED_FILTER_CONTAINER = "selectionSpaceContainer";
oFF.QFilter.DYNAMIC_FILTER_CONTAINER = "selectionStateContainer";
oFF.QFilter.TEMPORARY_FILTER_CONTAINER = "selectionTmpContainer";
oFF.QFilter.EFFECTIVE_FILTER_CONTAINER = "effectiveSelectionContainer";
oFF.QFilter.DEFAULT_FILTER_LAYER = "externalFilter";
oFF.QFilter.createWithModelComponent = function(context, modelComponent)
{
	var filter = new oFF.QFilter();
	filter.setupFilter(context, modelComponent);
	return filter;
};
oFF.QFilter.mergeCartesianProducts = function(cartesianProductA, cartesianProductB, context, parent)
{
	if (oFF.isNull(cartesianProductA) && oFF.isNull(cartesianProductB))
	{
		return null;
	}
	if (oFF.isNull(cartesianProductA))
	{
		return cartesianProductB.clone();
	}
	if (oFF.isNull(cartesianProductB))
	{
		return cartesianProductA.clone();
	}
	var newCartesianProduct = oFF.QFilterCartesianProduct._create(context, cartesianProductA.getFilterExpression());
	newCartesianProduct.copyFrom(cartesianProductA, null);
	newCartesianProduct.setParent(parent);
	var sizeProduct = cartesianProductB.size();
	for (var i = 0; i < sizeProduct; i++)
	{
		var cartesianChildB = cartesianProductB.getCartesianChild(i);
		var dimensionName = cartesianChildB.getDimensionName();
		var existingListForDimension = newCartesianProduct.getCartesianListByDimensionName(dimensionName);
		if (oFF.isNull(existingListForDimension))
		{
			var cloneOfCartesianChildB = cartesianChildB.cloneOlapComponent(context, null);
			cloneOfCartesianChildB.setParent(newCartesianProduct);
			newCartesianProduct.add(cloneOfCartesianChildB);
		}
		else
		{
			var sizeList = cartesianChildB.size();
			for (var n = 0; n < sizeList; n++)
			{
				var cartesianElement = cartesianChildB.getCartesianElement(n);
				var clonedCartesianElement = existingListForDimension.addNewCartesianElement();
				clonedCartesianElement.copyFrom(cartesianElement, null);
			}
		}
	}
	return newCartesianProduct;
};
oFF.QFilter.addFilterExpressionRootIfNotNull = function(filterExpression, filterExpressionRoots)
{
	if (oFF.isNull(filterExpression))
	{
		return;
	}
	var filterRootElement = filterExpression.getFilterRootElement();
	if (oFF.notNull(filterRootElement))
	{
		filterExpressionRoots.add(filterRootElement);
	}
};
oFF.QFilter.addCellValueFilters = function(source, target)
{
	if (oFF.isNull(source))
	{
		return;
	}
	if (!source.getModelCapabilities().supportsCellValueOperand())
	{
		return;
	}
	var cellValueOperands = source.getCellValueOperands();
	if (oFF.isNull(cellValueOperands))
	{
		return;
	}
	for (var i = 0; i < cellValueOperands.size(); i++)
	{
		target.addCellValueFilter(cellValueOperands.get(i));
	}
	if (source.isSuppressingNulls())
	{
		target.setIsSuppressingNulls(true);
	}
};
oFF.QFilter.prototype.m_fixedFilter = null;
oFF.QFilter.prototype.m_dynamicFilter = null;
oFF.QFilter.prototype.m_valuehelpFilter = null;
oFF.QFilter.prototype.m_valuehelpVisibilityFilter = null;
oFF.QFilter.prototype.m_visibilityFilter = null;
oFF.QFilter.prototype.m_effectiveFilter = null;
oFF.QFilter.prototype.m_layeredFilters = null;
oFF.QFilter.prototype.m_tmpFilter = null;
oFF.QFilter.prototype.m_effectiveVisibilityFilter = null;
oFF.QFilter.prototype.m_layeredVisibilityFilters = null;
oFF.QFilter.prototype.m_tmpVisibilityFilter = null;
oFF.QFilter.prototype.m_backProjectionFilterIds = null;
oFF.QFilter.prototype.m_internalLinkedFilterIds = null;
oFF.QFilter.prototype.m_transientZoomDataFilter = null;
oFF.QFilter.prototype.m_transientZoomDisplayFilter = null;
oFF.QFilter.prototype.m_transientZoomVisibilityFilter = null;
oFF.QFilter.prototype.m_ignoreInternalNonMeasureFilters = false;
oFF.QFilter.prototype.m_flattenHierarchyNodeFiltersFromVariables = false;
oFF.QFilter.prototype.setupFilter = function(context, parentComponent)
{
	this.setupModelComponentWithName(context, parentComponent, "filterManager");
	this.m_layeredFilters = oFF.QLayeredFilter.create(this.getContext(), this);
	this.m_layeredVisibilityFilters = oFF.QLayeredFilter.create(this.getContext(), this);
	this.m_backProjectionFilterIds = oFF.XHashSetOfString.create();
	this.m_internalLinkedFilterIds = oFF.XHashSetOfString.create();
};
oFF.QFilter.prototype.copyFromInternal = function(other, flags)
{
	this.copyFilterManager(other);
};
oFF.QFilter.prototype.copyFilterManager = function(origin)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , origin, null);
	if (oFF.notNull(origin.m_fixedFilter) && !this.getQueryModel().isBasedOnMicroCube())
	{
		this.getFixedFilter().copyFrom(origin.m_fixedFilter, null);
	}
	if (oFF.notNull(origin.m_dynamicFilter))
	{
		this.getDynamicFilter().copyFrom(origin.m_dynamicFilter, null);
	}
	if (oFF.notNull(origin.m_visibilityFilter))
	{
		this.getVisibilityFilter().copyFrom(origin.m_visibilityFilter, null);
	}
	var session = this.getSession();
	if (oFF.notNull(session) && session.hasFeature(oFF.FeatureToggleOlap.CLONE_LINKED_FILTERS))
	{
		this.m_layeredFilters.copyFrom(origin.m_layeredFilters, null);
		this.m_layeredVisibilityFilters.copyFrom(origin.m_layeredFilters, null);
	}
	this.m_backProjectionFilterIds.clear();
	this.m_backProjectionFilterIds.addAll(origin.m_backProjectionFilterIds);
	this.m_internalLinkedFilterIds.clear();
	this.m_internalLinkedFilterIds.addAll(origin.m_internalLinkedFilterIds);
	this.m_ignoreInternalNonMeasureFilters = origin.m_ignoreInternalNonMeasureFilters;
	this.m_flattenHierarchyNodeFiltersFromVariables = origin.m_flattenHierarchyNodeFiltersFromVariables;
};
oFF.QFilter.prototype.releaseObject = function()
{
	this.m_effectiveFilter = oFF.XObjectExt.release(this.m_effectiveFilter);
	this.m_effectiveVisibilityFilter = oFF.XObjectExt.release(this.m_effectiveVisibilityFilter);
	this.m_layeredFilters = oFF.XObjectExt.release(this.m_layeredFilters);
	this.m_layeredVisibilityFilters = oFF.XObjectExt.release(this.m_layeredVisibilityFilters);
	if (oFF.notNull(this.m_tmpFilter))
	{
		this.freeAsSecondaryParent(this.m_tmpFilter);
		this.m_tmpFilter = null;
	}
	this.m_fixedFilter = oFF.XObjectExt.release(this.m_fixedFilter);
	this.m_dynamicFilter = oFF.XObjectExt.release(this.m_dynamicFilter);
	this.m_visibilityFilter = oFF.XObjectExt.release(this.m_visibilityFilter);
	this.m_tmpVisibilityFilter = oFF.XObjectExt.release(this.m_tmpVisibilityFilter);
	this.m_valuehelpFilter = oFF.XObjectExt.release(this.m_valuehelpFilter);
	this.m_valuehelpVisibilityFilter = oFF.XObjectExt.release(this.m_valuehelpVisibilityFilter);
	this.m_backProjectionFilterIds = oFF.XObjectExt.release(this.m_backProjectionFilterIds);
	this.m_internalLinkedFilterIds = oFF.XObjectExt.release(this.m_internalLinkedFilterIds);
	this.m_transientZoomVisibilityFilter = oFF.XObjectExt.release(this.m_transientZoomVisibilityFilter);
	this.m_transientZoomDataFilter = oFF.XObjectExt.release(this.m_transientZoomDataFilter);
	this.m_transientZoomDisplayFilter = oFF.XObjectExt.release(this.m_transientZoomDisplayFilter);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QFilter.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.SELECTOR;
};
oFF.QFilter.prototype.createFilter = function()
{
	return oFF.QFilterExpression.create(this, this);
};
oFF.QFilter.prototype.getDynamicFilter = function()
{
	if (oFF.isNull(this.m_dynamicFilter))
	{
		this.stopEventing();
		this.setDynamicFilter(this.createFilter());
		this.resumeEventing();
	}
	return this.m_dynamicFilter;
};
oFF.QFilter.prototype.isValueHelpFilterInitialized = function()
{
	return oFF.notNull(this.m_valuehelpFilter);
};
oFF.QFilter.prototype.getValuehelpFilter = function()
{
	if (oFF.isNull(this.m_valuehelpFilter))
	{
		this.m_valuehelpFilter = this.createFilter();
		this.m_valuehelpFilter.setName(oFF.QFilter.VALUEHELP_FILTER_CONTAINER);
		this.m_valuehelpFilter.setParent(null);
	}
	return this.m_valuehelpFilter;
};
oFF.QFilter.prototype.isValueHelpVisibilityFilterInitialized = function()
{
	return oFF.notNull(this.m_valuehelpVisibilityFilter);
};
oFF.QFilter.prototype.getValuehelpVisibilityFilter = function()
{
	if (oFF.isNull(this.m_valuehelpVisibilityFilter))
	{
		this.m_valuehelpVisibilityFilter = this.createFilter();
		this.m_valuehelpVisibilityFilter.setName(oFF.QFilter.VALUEHELP_VISIBILITY_FILTER_CONTAINER);
		this.m_valuehelpVisibilityFilter.setParent(null);
	}
	return this.m_valuehelpVisibilityFilter;
};
oFF.QFilter.prototype.getVisibilityFilter = function()
{
	if (oFF.isNull(this.m_visibilityFilter))
	{
		this.stopEventing();
		this.setVisibilityFilter(this.createFilter());
		this.resumeEventing();
	}
	return this.m_visibilityFilter;
};
oFF.QFilter.prototype.getExternalFilter = function()
{
	return this.getLinkedFilter(oFF.QFilter.DEFAULT_FILTER_LAYER);
};
oFF.QFilter.prototype.getLinkedFilters = function()
{
	return this.m_layeredFilters.toReadOnly();
};
oFF.QFilter.prototype.getLinkedVisibilityFilters = function()
{
	return this.m_layeredVisibilityFilters.toReadOnly();
};
oFF.QFilter.prototype.isTmpFilterInitialized = function()
{
	return oFF.notNull(this.m_tmpFilter);
};
oFF.QFilter.prototype.getTmpFilter = function()
{
	if (oFF.isNull(this.m_tmpFilter))
	{
		this.stopEventing();
		this.setTmpFilter(this.createFilter());
		this.resumeEventing();
	}
	return this.m_tmpFilter;
};
oFF.QFilter.prototype.isTmpVisibilityFilterInitialized = function()
{
	return oFF.notNull(this.m_tmpVisibilityFilter);
};
oFF.QFilter.prototype.getTmpVisibilityFilter = function()
{
	if (oFF.isNull(this.m_tmpVisibilityFilter))
	{
		this.stopEventing();
		this.setTmpVisibilityFilter(this.createFilter());
		this.resumeEventing();
	}
	return this.m_tmpVisibilityFilter;
};
oFF.QFilter.prototype.setVisibilityFilter = function(visibilityFilter)
{
	if (this.m_visibilityFilter === visibilityFilter)
	{
		return;
	}
	if (oFF.notNull(this.m_visibilityFilter))
	{
		this.freeAsPrimaryParent(this.m_visibilityFilter);
		this.m_visibilityFilter = null;
	}
	if (oFF.notNull(visibilityFilter))
	{
		this.m_visibilityFilter = visibilityFilter;
		this.becomePrimaryParentAndSetName(this.m_visibilityFilter, oFF.QFilter.VISIBILITY_FILTER_CONTAINER);
	}
	this.notifyNodeChanged();
	this.invalidateEffectiveFilter(true);
};
oFF.QFilter.prototype.invalidateEffectiveFilter = function(isVisibility)
{
	if (isVisibility)
	{
		this.m_effectiveVisibilityFilter = null;
	}
	else
	{
		this.m_effectiveFilter = null;
	}
};
oFF.QFilter.prototype.freeAsSecondaryParent = function(filterExpression)
{
	filterExpression.unregisterChangedListener(this);
	filterExpression.removeSecondaryParent(this);
};
oFF.QFilter.prototype.becomePrimaryParentAndSetName = function(filterExpression, newName)
{
	filterExpression.setParent(this);
	filterExpression.registerChangedListener(this, null);
	filterExpression.setName(newName);
};
oFF.QFilter.prototype.freeAsPrimaryParent = function(filterExpression)
{
	filterExpression.unregisterChangedListener(this);
	oFF.XObjectExt.release(filterExpression);
};
oFF.QFilter.prototype.setFixedFilter = function(fixedFilter)
{
	if (this.m_fixedFilter === fixedFilter)
	{
		return;
	}
	if (oFF.notNull(this.m_fixedFilter))
	{
		this.freeAsPrimaryParent(this.m_fixedFilter);
		this.m_fixedFilter.setIsLocked(false);
		this.m_fixedFilter = null;
	}
	if (oFF.notNull(fixedFilter))
	{
		this.m_fixedFilter = fixedFilter;
		this.m_fixedFilter.setIsLocked(true);
		this.becomePrimaryParentAndSetName(this.m_fixedFilter, oFF.QFilter.FIXED_FILTER_CONTAINER);
	}
	this.notifyNodeChanged();
};
oFF.QFilter.prototype.getFixedFilter = function()
{
	if (oFF.isNull(this.m_fixedFilter))
	{
		this.stopEventing();
		this.setFixedFilter(this.createFilter());
		this.resumeEventing();
	}
	return this.m_fixedFilter;
};
oFF.QFilter.prototype.setDynamicFilter = function(dynamicFilter)
{
	if (this.m_dynamicFilter === dynamicFilter)
	{
		return;
	}
	if (oFF.notNull(this.m_dynamicFilter))
	{
		this.freeAsPrimaryParent(this.m_dynamicFilter);
		this.m_dynamicFilter = null;
	}
	if (oFF.notNull(dynamicFilter))
	{
		this.m_dynamicFilter = dynamicFilter;
		this.becomePrimaryParentAndSetName(this.m_dynamicFilter, oFF.QFilter.DYNAMIC_FILTER_CONTAINER);
	}
	this.notifyNodeChanged();
	this.invalidateEffectiveFilter(false);
};
oFF.QFilter.prototype.setTmpFilter = function(tmpFilter)
{
	if (this.m_tmpFilter === tmpFilter)
	{
		return;
	}
	if (oFF.notNull(this.m_tmpFilter))
	{
		this.freeAsPrimaryParent(this.m_tmpFilter);
		this.m_tmpFilter = null;
	}
	if (oFF.notNull(tmpFilter))
	{
		this.m_tmpFilter = tmpFilter;
		this.becomePrimaryParentAndSetName(this.m_tmpFilter, oFF.QFilter.TEMPORARY_FILTER_CONTAINER);
	}
	this.notifyNodeChanged();
	this.invalidateEffectiveFilter(false);
};
oFF.QFilter.prototype.setTmpVisibilityFilter = function(tmpVisibilityFilter)
{
	if (this.m_tmpVisibilityFilter === tmpVisibilityFilter)
	{
		return;
	}
	if (oFF.notNull(this.m_tmpVisibilityFilter))
	{
		this.freeAsPrimaryParent(this.m_tmpVisibilityFilter);
		this.m_tmpVisibilityFilter = null;
	}
	if (oFF.notNull(tmpVisibilityFilter))
	{
		this.m_tmpVisibilityFilter = tmpVisibilityFilter;
		this.becomePrimaryParentAndSetName(this.m_tmpVisibilityFilter, oFF.QFilter.TEMPORARY_VISIBILITY_FILTER_CONTAINER);
	}
	this.notifyNodeChanged();
	this.invalidateEffectiveFilter(true);
};
oFF.QFilter.prototype.setExternalFilter = function(externalFilter)
{
	this.linkFilter(oFF.QFilter.DEFAULT_FILTER_LAYER, externalFilter);
};
oFF.QFilter.prototype.unlinkFilters = function()
{
	this.m_layeredFilters.clear();
	this.invalidateEffectiveFilter(false);
};
oFF.QFilter.prototype.linkFiltersIfApplicable = function(layeredFilter)
{
	if (!oFF.XCollectionUtils.hasElements(layeredFilter))
	{
		return false;
	}
	var modelCapabilities = this.getModelCapabilities();
	var iterator = layeredFilter.getIterator();
	while (iterator.hasNext())
	{
		if (!oFF.QFilterUtil.isFilterApplicable(iterator.next(), modelCapabilities))
		{
			return false;
		}
	}
	this.linkFilters(layeredFilter);
	return true;
};
oFF.QFilter.prototype.linkFilters = function(layeredFilter)
{
	this.m_layeredFilters.copy(layeredFilter);
	this.invalidateEffectiveFilter(false);
};
oFF.QFilter.prototype.onModelComponentChanged = function(modelComponent, customIdentifier)
{
	if (oFF.isNull(modelComponent))
	{
		return;
	}
	if (modelComponent.getOlapComponentType() === oFF.OlapComponentType.FILTER_EXPRESSION)
	{
		if (modelComponent === this.m_dynamicFilter || modelComponent === this.m_tmpFilter || this.m_layeredFilters.contains(modelComponent))
		{
			this.invalidateEffectiveFilter(false);
		}
		if (modelComponent === this.m_visibilityFilter || modelComponent === this.m_tmpVisibilityFilter || this.m_layeredVisibilityFilters.contains(modelComponent))
		{
			this.invalidateEffectiveFilter(true);
		}
	}
};
oFF.QFilter.prototype.updateEffectiveFilter = function(withEvents, isVisibility)
{
	var effectiveFilter = isVisibility ? this.m_effectiveVisibilityFilter : this.m_effectiveFilter;
	if (oFF.isNull(effectiveFilter))
	{
		return;
	}
	var sourceFilterRoots = this._getSourceFilters(isVisibility);
	if (withEvents)
	{
		effectiveFilter.queueEventing();
	}
	else
	{
		effectiveFilter.stopEventing();
	}
	var isLocked = effectiveFilter.isLocked();
	if (isLocked)
	{
		effectiveFilter.setIsLocked(false);
	}
	if (effectiveFilter.isCartesianProduct())
	{
		effectiveFilter.setCartesianProduct(null);
	}
	if (effectiveFilter.isComplexFilter())
	{
		effectiveFilter.setComplexRoot(null);
	}
	var effectiveModelCapabilities = effectiveFilter.getModelCapabilities();
	if (effectiveModelCapabilities.supportsCellValueOperand())
	{
		effectiveFilter.clearCellValueFilter();
		effectiveFilter.setIsSuppressingNulls(false);
	}
	var sizeSourceRoots = sourceFilterRoots.size();
	if (sizeSourceRoots > 0)
	{
		if (effectiveModelCapabilities.supportsMultiComplexFilter())
		{
			if (sizeSourceRoots === 1)
			{
				effectiveFilter.setComplexRoot(sourceFilterRoots.get(0));
			}
			else
			{
				var rootElementAnd = oFF.QFactory.createFilterAnd(effectiveFilter);
				rootElementAnd.setHasChildOwnership(false);
				rootElementAnd.addAll(sourceFilterRoots);
				effectiveFilter.setComplexRoot(rootElementAnd);
			}
		}
		else
		{
			if (sizeSourceRoots === 1)
			{
				var singleCartesianElement = sourceFilterRoots.get(0);
				var filterExpression = singleCartesianElement.getFilterExpression();
				if (oFF.notNull(filterExpression))
				{
					var singleCartesianProduct = filterExpression.getCartesianProduct();
					if (oFF.notNull(singleCartesianProduct) && singleCartesianProduct.hasElements())
					{
						var singleCartesianProductClone = oFF.QFactory.createFilterCartesianProduct(effectiveFilter);
						singleCartesianProductClone.copyFrom(singleCartesianProduct, null);
						effectiveFilter.setCartesianProduct(singleCartesianProductClone);
					}
				}
			}
			else
			{
				var cartesianProduct = oFF.QFactory.createFilterCartesianProduct(effectiveFilter);
				var context = cartesianProduct.getContext();
				for (var n = 0; n < sizeSourceRoots; n++)
				{
					var currentFilterElement = sourceFilterRoots.get(n);
					var currentCartesianProduct = currentFilterElement.getFilterExpression().getCartesianProduct();
					cartesianProduct = oFF.QFilter.mergeCartesianProducts(cartesianProduct, currentCartesianProduct, context, cartesianProduct);
				}
				if (cartesianProduct.hasElements())
				{
					effectiveFilter.setCartesianProduct(cartesianProduct);
				}
			}
		}
		if (effectiveModelCapabilities.supportsCellValueOperand())
		{
			for (var k = 0; k < sizeSourceRoots; k++)
			{
				oFF.QFilter.addCellValueFilters(sourceFilterRoots.get(k).getFilterExpression(), effectiveFilter);
			}
		}
	}
	if (isLocked)
	{
		effectiveFilter.setIsLocked(true);
	}
	effectiveFilter.resumeEventing();
};
oFF.QFilter.prototype.isFilterConflictingWithLocalFilter = function(filter)
{
	if (oFF.notNull(filter) && filter.isCartesianProduct())
	{
		var cartesianProduct = filter.getCartesianProduct();
		for (var i = 0; i < cartesianProduct.size(); i++)
		{
			var cartesianList = cartesianProduct.getCartesianChild(i);
			var currentDimensionName = cartesianList.getDimensionName();
			if (oFF.notNull(currentDimensionName))
			{
				var conflictDetected = this.isDimensionNameConflictingWithLocalFilter(currentDimensionName);
				if (conflictDetected)
				{
					return true;
				}
			}
		}
	}
	return false;
};
oFF.QFilter.prototype.setIgnoreInternalNonMeasureFilters = function(ignore)
{
	this.m_ignoreInternalNonMeasureFilters = ignore;
	this.notifyNodeChanged();
};
oFF.QFilter.prototype.isIgnoreInternalNonMeasureFilter = function()
{
	return this.m_ignoreInternalNonMeasureFilters;
};
oFF.QFilter.prototype.isFlattenHierarchyNodeFiltersFromVariables = function()
{
	return this.m_flattenHierarchyNodeFiltersFromVariables;
};
oFF.QFilter.prototype.setFlattenHierarchyNodeFiltersFromVariables = function(flattenHierarchyNodeFiltersFromVariables)
{
	this.m_flattenHierarchyNodeFiltersFromVariables = flattenHierarchyNodeFiltersFromVariables;
};
oFF.QFilter.prototype.isDimensionConflictingWithLocalFilter = function(dimension)
{
	return oFF.notNull(dimension) && this.isDimensionNameConflictingWithLocalFilter(dimension.getName());
};
oFF.QFilter.prototype.isDimensionNameConflictingWithLocalFilter = function(dimensionName)
{
	var dimensionAccessor = this.getDimensionAccessor();
	if (oFF.notNull(dimensionAccessor) && oFF.XStringUtils.isNotNullAndNotEmpty(dimensionName))
	{
		var dimension = dimensionAccessor.getDimensionByName(dimensionName);
		var effectiveFilter = this.getEffectiveFilter();
		if (oFF.notNull(dimension) && oFF.notNull(effectiveFilter) && effectiveFilter.isAll() && effectiveFilter.isCartesianProduct())
		{
			var cartesianProduct = effectiveFilter.getFilterExpression().getCartesianProduct();
			if (oFF.notNull(cartesianProduct))
			{
				var cartesianList = cartesianProduct.getCartesianList(dimension);
				return oFF.XCollectionUtils.hasElements(cartesianList);
			}
		}
	}
	return false;
};
oFF.QFilter.prototype.isDimensionConflictingWithLinkedFilters = function(dimension)
{
	return oFF.notNull(dimension) && this.isDimensionNameConflictingWithLinkedFilters(dimension.getName());
};
oFF.QFilter.prototype.isDimensionNameConflictingWithLinkedFilters = function(dimensionName)
{
	var dimensionAccessor = this.getDimensionAccessor();
	if (oFF.notNull(dimensionAccessor) && oFF.XStringUtils.isNotNullAndNotEmpty(dimensionName))
	{
		var layeredFilters = this.m_layeredFilters.getIterator();
		while (layeredFilters.hasNext())
		{
			var filterLayer = layeredFilters.next();
			if (oFF.notNull(filterLayer) && filterLayer.isAll() && filterLayer.isCartesianProduct())
			{
				var cartesianProduct = filterLayer.getFilterExpression().getCartesianProduct();
				if (oFF.notNull(cartesianProduct))
				{
					var cartesianList = cartesianProduct.getCartesianListByDimensionName(dimensionName);
					return oFF.XCollectionUtils.hasElements(cartesianList);
				}
			}
		}
	}
	return false;
};
oFF.QFilter.prototype._getSourceFilters = function(isVisibility)
{
	var sourceFilters = oFF.XList.create();
	oFF.QFilter.addFilterExpressionRootIfNotNull(isVisibility ? this.m_visibilityFilter : this.m_dynamicFilter, sourceFilters);
	oFF.QFilter.addFilterExpressionRootIfNotNull(isVisibility ? this.m_tmpVisibilityFilter : this.m_tmpFilter, sourceFilters);
	var layeredFilters = isVisibility ? this.m_layeredVisibilityFilters : this.m_layeredFilters;
	var layeredFilter = layeredFilters.getIterator();
	while (layeredFilter.hasNext())
	{
		oFF.QFilter.addFilterExpressionRootIfNotNull(layeredFilter.next(), sourceFilters);
	}
	return sourceFilters;
};
oFF.QFilter.prototype.resetEffectiveFilter = function()
{
	this.m_effectiveFilter = oFF.XObjectExt.release(this.m_effectiveFilter);
};
oFF.QFilter.prototype._createEffectiveFilter = function(isVisibility)
{
	var effectiveFilter = this.createFilter();
	var modelCapabilities = this.getModelCapabilities();
	if (oFF.notNull(modelCapabilities) && modelCapabilities.supportsCartesianFilterIntersect())
	{
		effectiveFilter.getModelCapabilities().setSupportsComplexFilter(true);
	}
	effectiveFilter.setName(isVisibility ? oFF.QFilter.EFFECTIVE_VISIBILITY_FILTER_CONTAINER : oFF.QFilter.EFFECTIVE_FILTER_CONTAINER);
	effectiveFilter.setParent(this);
	effectiveFilter.setIsLocked(true);
	return effectiveFilter;
};
oFF.QFilter.prototype.getEffectiveFilter = function()
{
	if (oFF.isNull(this.m_effectiveFilter))
	{
		this.m_effectiveFilter = this._createEffectiveFilter(false);
		this.updateEffectiveFilter(false, false);
	}
	return this.m_effectiveFilter;
};
oFF.QFilter.prototype.getEffectiveVisibilityFilter = function()
{
	if (oFF.isNull(this.m_effectiveVisibilityFilter))
	{
		this.m_effectiveVisibilityFilter = this._createEffectiveFilter(true);
		this.updateEffectiveFilter(false, true);
	}
	return this.m_effectiveVisibilityFilter;
};
oFF.QFilter.prototype.getSelectableDimensions = function()
{
	this.stopEventing();
	var dimList = oFF.QDimensionList.createDimensionList(this.getContext(), this, "Selectable Dimension List");
	var queryModel = this.getContext().getQueryModel();
	var dimensions;
	if (oFF.isNull(queryModel))
	{
		dimensions = this.getDimensionAccessor().getDimensions();
	}
	else
	{
		dimensions = queryModel.getLoadedDimensions();
	}
	var len = dimensions.size();
	for (var i = 0; i < len; i++)
	{
		var dimension = dimensions.get(i);
		if (dimension.isSelectable())
		{
			dimList.add(dimension);
		}
	}
	this.resumeEventing();
	return dimList;
};
oFF.QFilter.prototype.isComponentNode = function()
{
	return true;
};
oFF.QFilter.prototype.getNamedChildren = function()
{
	var map = oFF.XHashMapByString.create();
	if (this.isFixedFilterInitialized())
	{
		map.put("SelectionSpaceContainer", this.getFixedFilter());
	}
	if (this.isDynamicFilterInitialized())
	{
		map.put("SelectionStateContainer", this.getDynamicFilter());
	}
	if (this.isTmpFilterInitialized())
	{
		map.put("SelectionTmpContainer", this.getTmpFilter());
	}
	if (this.isVisibilityFilterInitialized())
	{
		map.put("SelectionVisibilityContainer", this.getVisibilityFilter());
	}
	if (this.isTmpVisibilityFilterInitialized())
	{
		map.put("SelectionVisibilityTmpContainer", this.getTmpVisibilityFilter());
	}
	return map;
};
oFF.QFilter.prototype.applyFilter = function(filterToApply)
{
	oFF.XObjectExt.assertNotNullExt(filterToApply, "filter to apply must not be null");
	var serializedFilter = filterToApply.serializeToElement(oFF.QModelFormat.INA_REPOSITORY);
	oFF.XObjectExt.assertNotNullExt(serializedFilter, "could not serialize filter to apply");
	var deserializeExt = this.deserializeFromElementExt(oFF.QModelFormat.INA_REPOSITORY, serializedFilter);
	oFF.MessageUtil.checkNoError(deserializeExt);
};
oFF.QFilter.prototype.mergeDeepRecursive = function(settings, other)
{
	var otherObj = other;
	if (otherObj.isDynamicFilterInitialized() || this.isDynamicFilterInitialized())
	{
		this.getDynamicFilter().mergeDeepRecursive(settings, otherObj.getDynamicFilter());
	}
	if (otherObj.isFixedFilterInitialized() || this.isFixedFilterInitialized())
	{
		this.getFixedFilter().mergeDeepRecursive(settings, otherObj.getFixedFilter());
	}
};
oFF.QFilter.prototype.isFixedFilterInitialized = function()
{
	return oFF.notNull(this.m_fixedFilter);
};
oFF.QFilter.prototype.isDynamicFilterInitialized = function()
{
	return oFF.notNull(this.m_dynamicFilter);
};
oFF.QFilter.prototype.isVisibilityFilterInitialized = function()
{
	return oFF.notNull(this.m_visibilityFilter);
};
oFF.QFilter.prototype.linkVisibilityFilter = function(filterName, visibilityFilter)
{
	if (this.getModelCapabilities().supportsVisibilityFilter())
	{
		this.m_layeredVisibilityFilters.putLayer(filterName, visibilityFilter);
		this.invalidateEffectiveFilter(true);
	}
};
oFF.QFilter.prototype.linkVisibilityFilterIfApplicable = function(filterName, visibilityFilter)
{
	if (!this.getModelCapabilities().supportsVisibilityFilter())
	{
		return false;
	}
	var isApplicable = oFF.QFilterUtil.isFilterApplicable(visibilityFilter, this.getModelCapabilities());
	if (isApplicable)
	{
		this.linkVisibilityFilter(filterName, visibilityFilter);
	}
	return isApplicable;
};
oFF.QFilter.prototype.linkFilterIfApplicable = function(filterName, filter)
{
	var isApplicable = oFF.QFilterUtil.isFilterApplicable(filter, this.getModelCapabilities());
	if (isApplicable)
	{
		this.linkFilter(filterName, filter);
	}
	return isApplicable;
};
oFF.QFilter.prototype.linkFilter = function(filterName, filter)
{
	this.m_layeredFilters.putLayer(filterName, filter);
	this.invalidateEffectiveFilter(false);
};
oFF.QFilter.prototype.linkFilterExt = function(filterName, filter, isBackProjection, isInternalLinkForLov)
{
	if (isBackProjection)
	{
		if (oFF.isNull(filter))
		{
			var filterLayerToUnlink = this.m_layeredFilters.getLayer(filterName);
			if (oFF.notNull(filterLayerToUnlink))
			{
				this.m_backProjectionFilterIds.removeElement(filterLayerToUnlink.getUniqueId());
			}
		}
		else
		{
			this._resolveConflicts(filter);
			this.m_backProjectionFilterIds.add(filter.getUniqueId());
		}
	}
	if (isInternalLinkForLov)
	{
		if (oFF.isNull(filter))
		{
			this.m_internalLinkedFilterIds.removeElement(filterName);
		}
		else
		{
			this.m_internalLinkedFilterIds.add(filterName);
		}
	}
	this.linkFilter(filterName, filter);
};
oFF.QFilter.prototype.linkFilterExtIfApplicable = function(filterName, filter, isBackProjection, isInternalLinkForLov)
{
	var isApplicable = oFF.QFilterUtil.isFilterApplicable(filter, this.getModelCapabilities());
	if (isApplicable)
	{
		this.linkFilterExt(filterName, filter, isBackProjection, isInternalLinkForLov);
	}
	return isApplicable;
};
oFF.QFilter.prototype._resolveConflicts = function(filter)
{
	if (filter.getCartesianProduct() !== null)
	{
		var externalizedFilterName = this.getExternalizedFilterName();
		var serverFilter = this.m_layeredFilters.getLayer(externalizedFilterName);
		if (oFF.notNull(serverFilter) && serverFilter !== filter)
		{
			var cartesianProduct = serverFilter.getCartesianProduct();
			if (oFF.notNull(cartesianProduct))
			{
				var iterator = filter.getDimensionsUsedInFilter().getIterator();
				while (iterator.hasNext())
				{
					var dimensionName = iterator.next();
					var cartesianList = cartesianProduct.getCartesianListByDimensionName(dimensionName);
					if (oFF.notNull(cartesianList))
					{
						cartesianProduct.removeByDimensionName(dimensionName);
					}
				}
				if (cartesianProduct.isEmpty())
				{
					this.m_layeredFilters.putLayer(externalizedFilterName, null);
				}
			}
		}
	}
};
oFF.QFilter.prototype.getBackProjectionFilterIds = function()
{
	return this.m_backProjectionFilterIds;
};
oFF.QFilter.prototype.getInternalLinkedFilterIds = function()
{
	return this.m_internalLinkedFilterIds;
};
oFF.QFilter.prototype.linkFilterElementIfApplicable = function(filterName, filterElement)
{
	var filterExpression = oFF.QFilterExpression.create(this, this);
	filterExpression.setComplexRoot(filterElement);
	var isApplicable = oFF.QFilterUtil.isFilterApplicable(filterExpression, this.getModelCapabilities());
	if (isApplicable)
	{
		this.linkFilter(filterName, filterExpression);
	}
	return isApplicable;
};
oFF.QFilter.prototype.linkFilterElement = function(filterName, filterElement)
{
	var filterExpression = oFF.QFilterExpression.create(this, this);
	filterExpression.setComplexRoot(filterElement);
	this.linkFilter(filterName, filterExpression);
};
oFF.QFilter.prototype.getLinkedFilter = function(filterName)
{
	return this.m_layeredFilters.getLayer(filterName);
};
oFF.QFilter.prototype.getLinkedVisibilityFilter = function(filterName)
{
	return this.m_layeredVisibilityFilters.getLayer(oFF.QFilter.DEFAULT_FILTER_LAYER);
};
oFF.QFilter.prototype.getZoomDataFilter = function()
{
	if (oFF.isNull(this.m_transientZoomDataFilter) && !this.getModelCapabilities().supportsVisibilityFilter() && this.getModelCapabilities().supportsComplexTupleFilter())
	{
		this.m_transientZoomDataFilter = oFF.QFilterAnd._create(this.getContext(), null);
	}
	return this.m_transientZoomDataFilter;
};
oFF.QFilter.prototype.getTransientZoomDisplayFilter = function()
{
	if (oFF.isNull(this.m_transientZoomDisplayFilter))
	{
		this.m_transientZoomDisplayFilter = oFF.QFilterCartesianProduct._create(this.getContext(), null);
	}
	return this.m_transientZoomDisplayFilter;
};
oFF.QFilter.prototype.getTransientZoomVisibilityFilter = function()
{
	if (oFF.isNull(this.m_transientZoomVisibilityFilter) && this.getModelCapabilities().supportsVisibilityFilter())
	{
		this.m_transientZoomVisibilityFilter = oFF.QFilterCartesianProduct._create(this.getContext(), null);
	}
	return this.m_transientZoomVisibilityFilter;
};
oFF.QFilter.prototype.resetTransientZoomFilters = function()
{
	if (oFF.notNull(this.m_transientZoomDataFilter))
	{
		this.m_transientZoomDataFilter.clear();
	}
	if (oFF.notNull(this.m_transientZoomVisibilityFilter))
	{
		this.m_transientZoomVisibilityFilter.clear();
	}
	if (oFF.notNull(this.m_transientZoomDisplayFilter))
	{
		this.m_transientZoomDisplayFilter.clear();
	}
};
oFF.QFilter.prototype.getExternalizedFilterName = function()
{
	return this.getQueryManager().getInstanceId();
};

oFF.QFilterCapabilityGroup = function() {};
oFF.QFilterCapabilityGroup.prototype = new oFF.QModelComponent();
oFF.QFilterCapabilityGroup.prototype._ff_c = "QFilterCapabilityGroup";

oFF.QFilterCapabilityGroup._createFilterCapabilityGroup = function(context, parentContext, field)
{
	var selectionCapabilities = new oFF.QFilterCapabilityGroup();
	selectionCapabilities.setupSelectionCapabilities(context, parentContext, field);
	return selectionCapabilities;
};
oFF.QFilterCapabilityGroup.prototype.m_fieldName = null;
oFF.QFilterCapabilityGroup.prototype.m_group = null;
oFF.QFilterCapabilityGroup.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originFilterCapabilityGroup = other;
	this.m_fieldName = originFilterCapabilityGroup.m_fieldName;
	this.m_group = originFilterCapabilityGroup.m_group;
};
oFF.QFilterCapabilityGroup.prototype.setupSelectionCapabilities = function(context, parentContext, field)
{
	this.setupModelComponent(context, parentContext);
	if (oFF.notNull(field))
	{
		this.m_fieldName = field.getName();
	}
};
oFF.QFilterCapabilityGroup.prototype.releaseObject = function()
{
	this.m_fieldName = null;
	this.m_group = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QFilterCapabilityGroup.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FILTER_CAPABILITY_GROUP;
};
oFF.QFilterCapabilityGroup.prototype.getGroup = function()
{
	return this.m_group;
};
oFF.QFilterCapabilityGroup.prototype.getFieldName = function()
{
	return this.m_fieldName;
};
oFF.QFilterCapabilityGroup.prototype.getSupportedSetSign = function()
{
	if (oFF.isNull(this.m_group) || this.m_group.getSetSigns() === null)
	{
		return oFF.XListOfNameObject.create();
	}
	return this.m_group.getSetSigns();
};
oFF.QFilterCapabilityGroup.prototype.supportsSetSign = function(setSign)
{
	return oFF.notNull(this.m_group) && this.m_group.getSetSigns().contains(setSign);
};
oFF.QFilterCapabilityGroup.prototype.getSupportedComparisonOperators = function(setSign)
{
	if (oFF.isNull(this.m_group) || this.m_group.getComparisonOperatorsForSign(setSign) === null)
	{
		return oFF.XListOfNameObject.create();
	}
	return this.m_group.getComparisonOperatorsForSign(setSign);
};
oFF.QFilterCapabilityGroup.prototype.isFilterCapabilityGroup = function()
{
	return true;
};
oFF.QFilterCapabilityGroup.prototype.setGroup = function(group)
{
	this.m_group = group;
};
oFF.QFilterCapabilityGroup.prototype.addSupportedSetSign = oFF.noSupport;
oFF.QFilterCapabilityGroup.prototype.getModifiableSupportedComparisonOperators = oFF.noSupport;

oFF.QFilterCellValueOperand = function() {};
oFF.QFilterCellValueOperand.prototype = new oFF.QFilterElement();
oFF.QFilterCellValueOperand.prototype._ff_c = "QFilterCellValueOperand";

oFF.QFilterCellValueOperand._create = function(context, parentNode, lowValue, highValue, comparisonOperator)
{
	var cvo = new oFF.QFilterCellValueOperand();
	cvo.setupCellValueOperand(context, parentNode, lowValue, highValue, comparisonOperator);
	return cvo;
};
oFF.QFilterCellValueOperand.createWithExpression = function(context, selectionContainer, parentNode)
{
	var obj = new oFF.QFilterCellValueOperand();
	obj.setupFilterElement(context, selectionContainer, parentNode);
	obj.setupCellValueOperand(context, parentNode, null, null, oFF.ComparisonOperator.EQUAL);
	return obj;
};
oFF.QFilterCellValueOperand.createWithVariable = function(context, parentNode, lowVariable, highVariable, comparisonOperator)
{
	var cvo = new oFF.QFilterCellValueOperand();
	cvo.setupCellValueOperand(context, parentNode, lowVariable.getName(), null, comparisonOperator);
	cvo.m_lowValue.setVariableValue(lowVariable);
	cvo.m_highValue.setVariableValue(highVariable);
	return cvo;
};
oFF.QFilterCellValueOperand.createForNullSuppression = function(context, parentNode)
{
	var cvo = new oFF.QFilterCellValueOperand();
	cvo.setupCellValueOperand(context, parentNode, null, null, oFF.ComparisonOperator.IS_NULL);
	cvo.setIsExcluding(true);
	return cvo;
};
oFF.QFilterCellValueOperand.prototype.m_isExcluding = false;
oFF.QFilterCellValueOperand.prototype.m_lowValue = null;
oFF.QFilterCellValueOperand.prototype.m_highValue = null;
oFF.QFilterCellValueOperand.prototype.m_operator = null;
oFF.QFilterCellValueOperand.prototype.copyFromInternal = function(other, flags)
{
	oFF.QFilterElement.prototype.copyFromInternal.call( this , other, flags);
	var originFilterCellValueOperand = other;
	this.m_operator = originFilterCellValueOperand.m_operator;
	this.m_isExcluding = originFilterCellValueOperand.m_isExcluding;
	if (oFF.notNull(originFilterCellValueOperand.m_lowValue))
	{
		this.getLowValue().copyFrom(originFilterCellValueOperand.getLowValue(), flags);
	}
	if (oFF.notNull(originFilterCellValueOperand.m_highValue))
	{
		this.getHighValue().copyFrom(originFilterCellValueOperand.getHighValue(), flags);
	}
};
oFF.QFilterCellValueOperand.prototype.setupCellValueOperand = function(context, parentNode, lowValue, highValue, comparisonOperator)
{
	this.setupModelComponent(context, parentNode);
	this.m_isExcluding = false;
	this.setComparisonOperator(comparisonOperator);
	this.m_lowValue = oFF.QFactory.createFilterValueBag(context, null, this);
	this.m_lowValue.setString(lowValue);
	this.m_highValue = oFF.QFactory.createFilterValueBag(context, null, this);
	this.m_highValue.setString(highValue);
};
oFF.QFilterCellValueOperand.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FILTER_CELL_VALUE_OPERAND;
};
oFF.QFilterCellValueOperand.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherCvo = other;
	if (!oFF.XString.isEqual(this.getLow(), otherCvo.getLow()))
	{
		return false;
	}
	if (this.isLowVariable() !== otherCvo.isLowVariable())
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.getHigh(), otherCvo.getHigh()))
	{
		return false;
	}
	if (this.isHighVariable() !== otherCvo.isHighVariable())
	{
		return false;
	}
	if (this.getComparisonOperator() !== otherCvo.getComparisonOperator())
	{
		return false;
	}
	if (this.isExcluding() !== otherCvo.isExcluding())
	{
		return false;
	}
	return true;
};
oFF.QFilterCellValueOperand.prototype.releaseObject = function()
{
	this.m_highValue = oFF.XObjectExt.release(this.m_highValue);
	this.m_lowValue = oFF.XObjectExt.release(this.m_lowValue);
	this.m_operator = null;
	oFF.QFilterElement.prototype.releaseObject.call( this );
};
oFF.QFilterCellValueOperand.prototype.isExcluding = function()
{
	return this.m_isExcluding;
};
oFF.QFilterCellValueOperand.prototype.setIsExcluding = function(isExcluding)
{
	this.m_isExcluding = isExcluding;
};
oFF.QFilterCellValueOperand.prototype.getLow = function()
{
	return this.m_lowValue.getString();
};
oFF.QFilterCellValueOperand.prototype.isLowVariable = function()
{
	return this.m_lowValue.getValueType() === oFF.XValueType.VARIABLE;
};
oFF.QFilterCellValueOperand.prototype.setLow = function(lowValue)
{
	this.m_lowValue.setString(lowValue);
};
oFF.QFilterCellValueOperand.prototype.setLowVariable = function(variable)
{
	if (oFF.isNull(variable))
	{
		this.setLow(null);
	}
	else
	{
		this.m_lowValue.setVariableValue(variable);
	}
};
oFF.QFilterCellValueOperand.prototype.getHigh = function()
{
	return this.m_highValue.getString();
};
oFF.QFilterCellValueOperand.prototype.isHighVariable = function()
{
	return this.m_highValue.getValueType() === oFF.XValueType.VARIABLE;
};
oFF.QFilterCellValueOperand.prototype.setHigh = function(highValue)
{
	this.m_highValue.setString(highValue);
};
oFF.QFilterCellValueOperand.prototype.setHighVariable = function(variable)
{
	if (oFF.isNull(variable))
	{
		this.setHigh(null);
	}
	else
	{
		this.m_highValue.setVariableValue(variable);
	}
};
oFF.QFilterCellValueOperand.prototype.getComparisonOperator = function()
{
	return this.m_operator;
};
oFF.QFilterCellValueOperand.prototype.setComparisonOperator = function(comparisonOperator)
{
	this.m_operator = comparisonOperator;
};
oFF.QFilterCellValueOperand.prototype.getLowValue = function()
{
	return this.m_lowValue;
};
oFF.QFilterCellValueOperand.prototype.getHighValue = function()
{
	return this.m_highValue;
};
oFF.QFilterCellValueOperand.prototype.getValueAt = function(index)
{
	if (index === 0)
	{
		return this.m_lowValue;
	}
	if (index === 1)
	{
		return this.m_highValue;
	}
	return null;
};
oFF.QFilterCellValueOperand.prototype.size = function()
{
	return 2;
};
oFF.QFilterCellValueOperand.prototype.isEmpty = function()
{
	return false;
};
oFF.QFilterCellValueOperand.prototype.hasElements = function()
{
	return true;
};

oFF.QFilterExpression = function() {};
oFF.QFilterExpression.prototype = new oFF.QModelComponent();
oFF.QFilterExpression.prototype._ff_c = "QFilterExpression";

oFF.QFilterExpression.create = function(context, selector)
{
	var filterExp = new oFF.QFilterExpression();
	filterExp.setupFilterExpression(context, selector);
	return filterExp;
};
oFF.QFilterExpression.createTransient = function(context)
{
	var filterExp = new oFF.QFilterExpression();
	filterExp.setupTransientFilterExpression(context);
	return filterExp;
};
oFF.QFilterExpression.compareFilter = function(s1, s2)
{
	if (oFF.isNull(s1) || oFF.isNull(s2))
	{
		throw oFF.XException.createRuntimeException("null comparison");
	}
	if (s1.getComparisonOperator() !== s2.getComparisonOperator())
	{
		return false;
	}
	if (s1.getExactness() !== s2.getExactness())
	{
		return false;
	}
	if (!oFF.QFilterExpression.compareField(s1.getField(), s2.getField()))
	{
		return false;
	}
	if (s1.hasDepth() !== s2.hasDepth())
	{
		return false;
	}
	if (s1.hasDepth() && s1.getDepth() !== s2.getDepth())
	{
		return false;
	}
	if (s1.hasLevelOffset() !== s2.hasLevelOffset())
	{
		return false;
	}
	if (s1.getLevelOffset() !== s2.getLevelOffset())
	{
		return false;
	}
	if (!oFF.QFilterExpression.compareFilterValueBag(s1.getHigh(), s2.getHigh()))
	{
		return false;
	}
	return oFF.QFilterExpression.compareFilterValueBag(s1.getLow(), s2.getLow());
};
oFF.QFilterExpression.compareFilterValueBag = function(b1, b2)
{
	if (b1 === b2)
	{
		return false;
	}
	if (oFF.isNull(b1) || oFF.isNull(b2))
	{
		return false;
	}
	var starWildcard1 = b1.supportsStarWildcard() && b1.isStarWildcardEnabled();
	var starWildcard2 = b2.supportsStarWildcard() && b2.isStarWildcardEnabled();
	return starWildcard1 === starWildcard2 && oFF.QFilterExpression.compareValue(b1.getValue(), b2.getValue());
};
oFF.QFilterExpression.compareValue = function(v1, v2)
{
	if (v1 === v2)
	{
		return true;
	}
	if (oFF.isNull(v1) || oFF.isNull(v2))
	{
		return false;
	}
	if (v1.getValueType() !== v2.getValueType())
	{
		return false;
	}
	return v1.isEqualTo(v2);
};
oFF.QFilterExpression.compareField = function(f1, f2)
{
	if (f1 === f2)
	{
		return true;
	}
	if (oFF.isNull(f1) || oFF.isNull(f2))
	{
		return false;
	}
	return oFF.QFilterExpression.compareDimension(f1.getDimension(), f2.getDimension());
};
oFF.QFilterExpression.compareDimension = function(d1, d2)
{
	if (d1 === d2)
	{
		return true;
	}
	if (oFF.isNull(d1) || oFF.isNull(d2))
	{
		return false;
	}
	if (d1.getQueryModel() !== d2.getQueryModel())
	{
		return false;
	}
	return oFF.XString.isEqual(d1.getName(), d2.getName());
};
oFF.QFilterExpression.prototype.m_filterRootElement = null;
oFF.QFilterExpression.prototype.m_isLocked = false;
oFF.QFilterExpression.prototype.m_isSuppressingNulls = false;
oFF.QFilterExpression.prototype.m_preservedDuringSubmit = false;
oFF.QFilterExpression.prototype.m_cellValueOperands = null;
oFF.QFilterExpression.prototype.m_uniqueId = null;
oFF.QFilterExpression.prototype.m_filterIdsFromVariables = null;
oFF.QFilterExpression.prototype.m_filterCapabilities = null;
oFF.QFilterExpression.prototype.copyFromInternal = function(other, flags)
{
	this.copyFilterExpression(other);
};
oFF.QFilterExpression.prototype.copyFilterExpression = function(origin)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , origin, null);
	if (oFF.notNull(origin.m_filterRootElement))
	{
		this.m_filterRootElement = oFF.QFilterUtil.createFilterElementFromOrigin(origin.m_filterRootElement, this);
	}
	this.m_isSuppressingNulls = origin.m_isSuppressingNulls;
	this.m_isLocked = origin.m_isLocked;
	this.m_uniqueId = origin.m_uniqueId;
	if (oFF.notNull(origin.m_cellValueOperands))
	{
		this.m_cellValueOperands = oFF.XList.create();
		var size = origin.m_cellValueOperands.size();
		for (var i = 0; i < size; i++)
		{
			var origCellValueOp = origin.m_cellValueOperands.get(i);
			var cloneCellValueOp = oFF.QFilterCellValueOperand.createForNullSuppression(this, this);
			cloneCellValueOp.copyFrom(origCellValueOp, null);
			this.m_cellValueOperands.add(cloneCellValueOp);
		}
	}
};
oFF.QFilterExpression.prototype.setupTransientFilterExpression = function(context)
{
	this.setupModelComponent(context, null);
	this.m_isLocked = false;
	this.m_isSuppressingNulls = false;
	this.m_uniqueId = oFF.XGuid.getGuid();
	if (context.getQueryModel() !== null)
	{
		this.m_filterCapabilities = oFF.QFactory.createCapabilitiesDecorator(context.getQueryModel());
	}
};
oFF.QFilterExpression.prototype.setupFilterExpression = function(context, parentNode)
{
	this.setupModelComponent(context, parentNode);
	this.m_isLocked = false;
	this.m_isSuppressingNulls = false;
	this.m_uniqueId = oFF.XGuid.getGuid();
	this.setupCapabilityDecorator(context, parentNode);
};
oFF.QFilterExpression.prototype.setupCapabilityDecorator = function(context, parentNode)
{
	this.m_filterCapabilities = oFF.QFactory.createCapabilitiesDecorator(this);
	if (oFF.isNull(parentNode) || context.getModelCapabilities() === null)
	{
		this.m_filterCapabilities.setSupportsComplexFilter(false);
		this.m_filterCapabilities.setSupportsComplexTupleFilter(false);
		this.m_filterCapabilities.setSupportsCellValueOperand(false);
	}
};
oFF.QFilterExpression.prototype.setParent = function(parent)
{
	if (this.getParent() !== parent)
	{
		oFF.QModelComponent.prototype.setParent.call( this , parent);
		if (!oFF.XString.isEqual(this.getName(), oFF.QFilter.VALUEHELP_FILTER_CONTAINER) && !oFF.XString.isEqual(this.getName(), oFF.QFilter.VALUEHELP_VISIBILITY_FILTER_CONTAINER))
		{
			this.m_filterCapabilities = oFF.XObjectExt.release(this.m_filterCapabilities);
			this.setupCapabilityDecorator(parent, parent);
		}
	}
};
oFF.QFilterExpression.prototype.getModelCapabilities = function()
{
	return this.m_filterCapabilities;
};
oFF.QFilterExpression.prototype.releaseObject = function()
{
	this.m_filterCapabilities = oFF.XObjectExt.release(this.m_filterCapabilities);
	this.m_cellValueOperands = oFF.XObjectExt.release(this.m_cellValueOperands);
	this.m_filterRootElement = null;
	this.m_uniqueId = null;
	this.m_filterIdsFromVariables = oFF.XObjectExt.release(this.m_filterIdsFromVariables);
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QFilterExpression.prototype.getUniqueId = function()
{
	return this.m_uniqueId;
};
oFF.QFilterExpression.prototype.setUniqueId = function(uniqueId)
{
	this.m_uniqueId = uniqueId;
};
oFF.QFilterExpression.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FILTER_EXPRESSION;
};
oFF.QFilterExpression.prototype.isAll = function()
{
	return this.isCartesianProduct() || this.isComplexFilter();
};
oFF.QFilterExpression.prototype.isLocked = function()
{
	return this.m_isLocked;
};
oFF.QFilterExpression.prototype.setIsLocked = function(isLocked)
{
	this.m_isLocked = isLocked;
};
oFF.QFilterExpression.prototype.isCartesianProduct = function()
{
	return oFF.notNull(this.m_filterRootElement) && this.m_filterRootElement.getOlapComponentType() === oFF.FilterComponentType.CARTESIAN_PRODUCT;
};
oFF.QFilterExpression.prototype.isComplexFilter = function()
{
	return oFF.notNull(this.m_filterRootElement) && this.m_filterRootElement.getOlapComponentType() !== oFF.FilterComponentType.CARTESIAN_PRODUCT;
};
oFF.QFilterExpression.prototype.setComplexRoot = function(complexFilter)
{
	var modelCapabilities = this.getModelCapabilities();
	if (oFF.notNull(complexFilter) && !modelCapabilities.supportsMultiComplexFilter() && complexFilter.getOlapComponentType() !== oFF.FilterComponentType.CARTESIAN_PRODUCT)
	{
		throw oFF.XException.createIllegalArgumentException("Only cartesian product allowed!");
	}
	if (oFF.notNull(this.m_filterRootElement))
	{
		this.m_filterRootElement.setParent(null);
	}
	this.m_filterRootElement = complexFilter;
	this.notifyChildAttached(this.m_filterRootElement);
};
oFF.QFilterExpression.prototype.getCartesianProductWithDefault = function()
{
	if (this.isComplexFilter())
	{
		throw oFF.XException.createIllegalStateException("A complex selection already exists");
	}
	if (oFF.isNull(this.m_filterRootElement))
	{
		this.setCartesianProduct(oFF.QFactory.createFilterCartesianProduct(this));
	}
	return this.m_filterRootElement;
};
oFF.QFilterExpression.prototype.getComplexRoot = function()
{
	return this.isComplexFilter() ? this.m_filterRootElement : null;
};
oFF.QFilterExpression.prototype.getCartesianProduct = function()
{
	return this.isCartesianProduct() ? this.m_filterRootElement : null;
};
oFF.QFilterExpression.prototype.getFilterRootElement = function()
{
	return this.m_filterRootElement;
};
oFF.QFilterExpression.prototype.setCartesianProduct = function(cartesianProduct)
{
	this.m_filterRootElement = cartesianProduct;
	this.notifyChildAttached(cartesianProduct);
};
oFF.QFilterExpression.prototype.addSingleMemberFilterByType = function(structureType, memberName, theOperator)
{
	var dimension = this.getDimensionAccessor().getDimensionByType(structureType);
	return oFF.isNull(dimension) ? null : this.addSingleMemberFilterByDimension(dimension, memberName, theOperator);
};
oFF.QFilterExpression.prototype.addSingleMemberFilterByName = function(dimensionName, memberName, theOperator)
{
	var dimension = this.getDimensionAccessor().getDimensionByName(dimensionName);
	return oFF.isNull(dimension) ? null : this.addSingleMemberFilterByDimension(dimension, memberName, theOperator);
};
oFF.QFilterExpression.prototype.addSingleMemberFilterByDimension = function(dimension, memberName, theOperator)
{
	var dimensionMember = dimension.getDimensionMember(memberName);
	return oFF.isNull(dimensionMember) ? null : this.addSingleMemberFilterByDimensionMember(dimensionMember, theOperator);
};
oFF.QFilterExpression.prototype.addSingleMemberFilterByDimensionMember = function(dimensionMember, theOperator)
{
	oFF.XObjectExt.assertNotNullExt(dimensionMember, "The DimensionMember must not be null!");
	var isParentRestrictedMeasure = this.getParentComponent() !== null && this.getParentComponent().getOlapComponentType().isTypeOf(oFF.MemberType.RESTRICTED_MEASURE);
	var isMeasureNotSelectable = dimensionMember.getMemberType().isTypeOf(oFF.MemberType.MEASURE) && !dimensionMember.isSelectionCandidate();
	if (isParentRestrictedMeasure && isMeasureNotSelectable)
	{
		return null;
	}
	var forbiddenDimensionNames = oFF.XListOfString.create();
	var queryModel = this.getQueryModel();
	if (isParentRestrictedMeasure && oFF.notNull(queryModel) && queryModel.getSystemType().isTypeOf(oFF.SystemType.ABAP) && this.getFilterRootElement() !== null)
	{
		var measureDimension = queryModel.getMeasureDimension();
		var cartesianMeasureList = this.getCartesianList(measureDimension);
		if (oFF.notNull(cartesianMeasureList))
		{
			var sizeMeasureList = cartesianMeasureList.size();
			for (var idxMeasureList = 0; idxMeasureList < sizeMeasureList; idxMeasureList++)
			{
				var op = cartesianMeasureList.getOp(idxMeasureList);
				var low = op.getLow();
				var selectedStructure = null;
				var selectedDimensionMember = low.getDimensionMember();
				if (oFF.notNull(selectedDimensionMember) && selectedDimensionMember.getMemberType().isTypeOf(oFF.MemberType.MEASURE))
				{
					selectedStructure = selectedDimensionMember;
				}
				if (oFF.isNull(selectedStructure))
				{
					selectedStructure = measureDimension.getStructureMember(low.getString());
				}
				if (oFF.notNull(selectedStructure))
				{
					forbiddenDimensionNames.addAll(selectedStructure.getDefaultSelectedDimensionNames());
				}
			}
		}
	}
	var dimension = null;
	if (dimensionMember.getDimension() !== null)
	{
		if (this.getQueryModel() !== null)
		{
			dimension = this.getQueryModel().getDimensionByName(dimensionMember.getDimension().getName());
		}
		if (oFF.isNull(dimension))
		{
			dimension = dimensionMember.getDimension();
		}
	}
	if (oFF.isNull(dimension) || dimension.isUniversalDisplayHierarchyDimension())
	{
		return null;
	}
	if (forbiddenDimensionNames.contains(dimension.getName()))
	{
		return null;
	}
	if (!dimension.getKeyField().isFilterable() && oFF.notNull(queryModel) && this.getModelCapabilities().supportsCustomDimensionFilterCapability())
	{
		return null;
	}
	if (oFF.notNull(queryModel) && queryModel.isBlendingModel() && queryModel.getBlendingDefinition().getMappingByAliasName(dimension.getName()).getLinkType() === oFF.BlendingLinkType.COEXIST && dimension.isHierarchyActive())
	{
		throw oFF.XException.createRuntimeException("Adding a hierarchy filter to a coexist blended dimension is currently not supported");
	}
	var cartesianList;
	if (this.isComplexFilter())
	{
		cartesianList = this.getCartesianListWithDefault(dimension);
	}
	else
	{
		var cartesianProduct = this.getCartesianProduct();
		if (oFF.isNull(cartesianProduct))
		{
			cartesianProduct = oFF.QFactory.createFilterCartesianProduct(this);
			this.setCartesianProduct(cartesianProduct);
		}
		cartesianList = cartesianProduct.getCartesianList(dimension);
		if (oFF.isNull(cartesianList))
		{
			cartesianList = dimension.createFilterList();
			cartesianProduct.add(cartesianList);
		}
	}
	if (dimension.isHierarchyActive())
	{
		cartesianList.setHierarchyName(dimension.getHierarchyName());
	}
	else
	{
		cartesianList.setHierarchyName(null);
	}
	var memberFilter = oFF.QFactory.createFilterOperation(this.getContext(), dimension.getKeyField());
	memberFilter.getLow().setDimensionMember(dimensionMember);
	memberFilter.setComparisonOperator(theOperator);
	var size = cartesianList.size();
	for (var i = 0; i < size; i++)
	{
		var sms = cartesianList.getOp(i);
		if (oFF.QFilterExpression.compareFilter(memberFilter, sms))
		{
			if (memberFilter.getSetSign() !== sms.getSetSign())
			{
				sms.setSetSign(memberFilter.getSetSign());
			}
			return sms;
		}
	}
	cartesianList.add(memberFilter);
	return memberFilter;
};
oFF.QFilterExpression.prototype.getCartesianList = function(dimension)
{
	if (this.getFilterRootElement() !== null && oFF.notNull(dimension))
	{
		var children = this.getFilterRootElement().getChildrenIterator();
		while (children.hasNext())
		{
			var component = children.next();
			if (component.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST) && oFF.XString.isEqual(component.getDimensionName(), dimension.getName()))
			{
				return component;
			}
		}
	}
	return null;
};
oFF.QFilterExpression.prototype.getCartesianListWithDefault = function(dimension)
{
	var list = this.getCartesianList(dimension);
	if (oFF.isNull(list))
	{
		list = dimension.createFilterList();
		this.getFilterRootElement().add(list);
	}
	return list;
};
oFF.QFilterExpression.prototype.getConvertedTimeCartesianListWithDefault = function(dimension)
{
	var list = this.getCartesianList(dimension);
	if (oFF.isNull(list))
	{
		list = oFF.QFilterConvertedTimeCartesianList._create(dimension.getContext(), null, dimension.getKeyField().getMetadata(), dimension.isHierarchyActive() ? dimension.getHierarchyName() : null);
		this.getFilterRootElement().add(list);
	}
	else if (list.getOlapComponentType() !== oFF.FilterComponentType.CONVERTED_TIME_CARTESIAN_LIST)
	{
		this.getFilterRootElement().removeElement(list);
		list = oFF.QFilterConvertedTimeCartesianList._createFromCartesianList(list);
		this.getFilterRootElement().add(list);
	}
	return list;
};
oFF.QFilterExpression.prototype.getCartesianListByField = function(field)
{
	if (this.isComplexFilter())
	{
		var dimensionName = field.getDimension().getName();
		var dimensionContext = this.getDimensionAccessor().getDimensionByName(dimensionName);
		if (oFF.isNull(dimensionContext))
		{
			dimensionContext = field.getDimension();
		}
		var list = this.getCartesianListWithDefault(dimensionContext);
		return list.getField() === field ? list : null;
	}
	return this.getCartesianProductWithDefault().getCartesianListByField(field);
};
oFF.QFilterExpression.prototype.removeSingleMemberFilterByName = function(dimensionName, memberName, theOperator)
{
	var dimension = this.getDimensionAccessor().getDimensionByName(dimensionName);
	if (oFF.notNull(dimension))
	{
		this.removeSingleMemberFilterByDimension(dimension, memberName, theOperator);
	}
};
oFF.QFilterExpression.prototype.removeSingleMemberFilterByDimension = function(dimension, memberName, theOperator)
{
	var dimensionMember = dimension.getDimensionMember(memberName);
	this.removeSingleMemberFilterByMember(dimensionMember, theOperator);
};
oFF.QFilterExpression.prototype.removeSingleMemberFilterByMember = function(member, theOperator)
{
	var operation = null;
	var cartesianList = null;
	if (this.isCartesianProduct())
	{
		operation = this.getCartesianProduct();
		cartesianList = operation.getCartesianList(member.getDimension());
	}
	else if (this.isComplexFilter())
	{
		operation = this.getComplexRoot();
		cartesianList = this.getCartesianList(member.getDimension());
	}
	if (oFF.notNull(operation) && oFF.notNull(cartesianList))
	{
		var valueToRemove = member.getKeyFieldValue().getString();
		var len = cartesianList.size();
		for (var i = 0; i < len; i++)
		{
			var sms = cartesianList.getOp(i);
			var valueInFilter = sms.getLow().getString();
			if (oFF.XString.isEqual(valueInFilter, valueToRemove) && sms.getComparisonOperator() === theOperator)
			{
				if (len === 1)
				{
					operation.removeElement(cartesianList);
				}
				else
				{
					cartesianList.removeAt(i);
				}
				return;
			}
		}
	}
};
oFF.QFilterExpression.prototype.isComponentNode = function()
{
	return true;
};
oFF.QFilterExpression.prototype.getIndexedChildren = function()
{
	var list = oFF.XList.create();
	if (oFF.notNull(this.m_filterRootElement))
	{
		list.add(this.m_filterRootElement);
	}
	return list.getIterator();
};
oFF.QFilterExpression.prototype.isSuppressingNulls = function()
{
	return this.m_isSuppressingNulls;
};
oFF.QFilterExpression.prototype.assertSupportsCellValueOperand = function()
{
	oFF.XBooleanUtils.checkTrue(this.getModelCapabilities().supportsCellValueOperand(), "CellValueOperand is not supported");
};
oFF.QFilterExpression.prototype.setIsSuppressingNulls = function(isSuppressingNulls)
{
	if (this.m_isSuppressingNulls !== isSuppressingNulls)
	{
		this.assertSupportsCellValueOperand();
		this.m_isSuppressingNulls = isSuppressingNulls;
		this.notifyPropertyBooleanChanged(oFF.QFilterProperties.QY_IS_SUPPRESSING_NULLS, !isSuppressingNulls, isSuppressingNulls);
	}
};
oFF.QFilterExpression.prototype._loadCellValueOperands = function()
{
	if (oFF.isNull(this.m_cellValueOperands))
	{
		this.m_cellValueOperands = oFF.XList.create();
	}
};
oFF.QFilterExpression.prototype.addNewCellValueFilter = function(lowValue, highValue, comparisonOperator)
{
	this.assertSupportsCellValueOperand();
	this._loadCellValueOperands();
	var cellValueFilter = oFF.QFilterCellValueOperand._create(this.getContext(), this, lowValue, highValue, comparisonOperator);
	this.m_cellValueOperands.add(cellValueFilter);
	this.notifyNodeChanged();
	return cellValueFilter;
};
oFF.QFilterExpression.prototype.removeCellValueFilter = function(cellValueOperand)
{
	this.assertSupportsCellValueOperand();
	this._loadCellValueOperands();
	this.m_cellValueOperands.removeElement(cellValueOperand);
	this.notifyNodeChanged();
};
oFF.QFilterExpression.prototype.getCellValueOperands = function()
{
	this.assertSupportsCellValueOperand();
	this._loadCellValueOperands();
	return this.m_cellValueOperands;
};
oFF.QFilterExpression.prototype.addCellValueFilter = function(cellValueOperand)
{
	this.assertSupportsCellValueOperand();
	this._loadCellValueOperands();
	this.m_cellValueOperands.add(cellValueOperand);
	this.notifyNodeChanged();
};
oFF.QFilterExpression.prototype.clearCellValueFilter = function()
{
	this.assertSupportsCellValueOperand();
	if (oFF.notNull(this.m_cellValueOperands))
	{
		this.m_cellValueOperands.clear();
		this.notifyNodeChanged();
	}
};
oFF.QFilterExpression.prototype.addNewCellValueFilterVariable = function(lowVariable, highVariable, comparisonOperator)
{
	this.assertSupportsCellValueOperand();
	this._loadCellValueOperands();
	var cellValueFilter = oFF.QFilterCellValueOperand.createWithVariable(this.getContext(), this, lowVariable, highVariable, comparisonOperator);
	this.m_cellValueOperands.add(cellValueFilter);
	this.notifyNodeChanged();
	return cellValueFilter;
};
oFF.QFilterExpression.prototype.getFilterExpression = function()
{
	return this;
};
oFF.QFilterExpression.prototype.mergeDynamicFilter = function(otherDynamicFilter)
{
	if (otherDynamicFilter.isCartesianProduct())
	{
		var otherQueryModel = otherDynamicFilter.getQueryModel();
		var queryModel = this.getQueryModel();
		if (oFF.notNull(queryModel) && oFF.notNull(otherQueryModel))
		{
			if (oFF.isNull(this.m_filterIdsFromVariables))
			{
				this.m_filterIdsFromVariables = oFF.XHashSetOfString.create();
			}
			else
			{
				this.m_filterIdsFromVariables.clear();
			}
			var otherCartesianProduct = otherDynamicFilter.getCartesianProduct();
			var size = otherCartesianProduct.size();
			for (var idx = 0; idx < size; idx++)
			{
				var otherCartesianList = otherCartesianProduct.getCartesianChild(idx);
				var dimension = queryModel.getDimensionByName(otherCartesianList.getDimensionName());
				var cartesianList = this.getCartesianList(dimension);
				if (oFF.isNull(cartesianList))
				{
					cartesianList = this.getCartesianProductWithDefault().getCartesianListWithDefault(dimension);
				}
				var idsBeforeMerge = oFF.XHashSetOfString.create();
				var childrenIterator = cartesianList.getIterator();
				while (childrenIterator.hasNext())
				{
					idsBeforeMerge.add(childrenIterator.next().getUniqueId());
				}
				cartesianList.copyFrom(otherCartesianList, null);
				childrenIterator = cartesianList.getIterator();
				while (childrenIterator.hasNext())
				{
					var uniqueId = childrenIterator.next().getUniqueId();
					if (!idsBeforeMerge.contains(uniqueId))
					{
						this.m_filterIdsFromVariables.add(uniqueId);
						this.m_filterIdsFromVariables.add(cartesianList.getUniqueId());
					}
				}
			}
		}
	}
	else
	{
		this.m_filterRootElement = null;
		this.copyFilterExpression(otherDynamicFilter);
	}
};
oFF.QFilterExpression.prototype.mergeDeepRecursive = function(settings, other)
{
	if (this.isPreservedDuringSubmit())
	{
		return;
	}
	var otherObj = other;
	this.m_filterRootElement = null;
	if (oFF.XString.isEqual(this.getName(), oFF.QFilter.DYNAMIC_FILTER_CONTAINER))
	{
		this.mergeDynamicFilter(otherObj);
	}
	else
	{
		this.copyFilterExpression(otherObj);
	}
};
oFF.QFilterExpression.prototype.getFilterById = function(uniqueId)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(uniqueId) && oFF.notNull(this.m_filterRootElement))
	{
		if (oFF.XString.isEqual(this.m_uniqueId, uniqueId))
		{
			return this;
		}
		if (oFF.XString.isEqual(this.m_filterRootElement.getUniqueId(), uniqueId))
		{
			return this.m_filterRootElement;
		}
		return this.getChildById(this.m_filterRootElement, uniqueId);
	}
	return null;
};
oFF.QFilterExpression.prototype.getChildById = function(parent, uniqueId)
{
	var iterator = parent.getChildrenIterator();
	while (iterator.hasNext())
	{
		var filterElement = iterator.next();
		if (oFF.XString.isEqual(filterElement.getUniqueId(), uniqueId))
		{
			return filterElement;
		}
		var element = this.getChildById(filterElement, uniqueId);
		if (oFF.notNull(element))
		{
			return element;
		}
	}
	return null;
};
oFF.QFilterExpression.prototype.removeFilterById = function(uniqueId)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(uniqueId) && oFF.notNull(this.m_filterRootElement) && !oFF.XString.isEqual(this.m_uniqueId, uniqueId))
	{
		if (oFF.XString.isEqual(this.m_filterRootElement.getUniqueId(), uniqueId))
		{
			this.setComplexRoot(null);
		}
		else
		{
			this.removeChildById(this.m_filterRootElement, uniqueId);
		}
	}
};
oFF.QFilterExpression.prototype.removeChildById = function(parent, uniqueId)
{
	var iterator = parent.getChildrenIterator();
	while (iterator.hasNext())
	{
		var filterElement = iterator.next();
		if (oFF.XString.isEqual(filterElement.getUniqueId(), uniqueId))
		{
			parent.removeElement(filterElement);
			return;
		}
		this.removeChildById(filterElement, uniqueId);
	}
};
oFF.QFilterExpression.prototype.getFilterIdsFromVariables = function()
{
	return this.m_filterIdsFromVariables;
};
oFF.QFilterExpression.prototype.getUsedCustomHierarchies = function()
{
	var customHierarchyRepo = this.getOlapEnv().getCustomHierarchyRepository();
	return this.getUsedCustomHierarchiesInternal(this.m_filterRootElement, customHierarchyRepo, oFF.XList.create());
};
oFF.QFilterExpression.prototype.getUsedCustomHierarchiesInternal = function(filterElement, customHierarchyRepo, hierarchies)
{
	if (oFF.notNull(filterElement))
	{
		var children = filterElement.getChildrenIterator();
		while (children.hasNext())
		{
			var element = children.next();
			if (element.getOlapComponentType().isTypeOf(oFF.FilterComponentType.OPERATION) || element.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
			{
				var hierarchyName = element.getHierarchyName();
				var customHierarchyDefinition = oFF.XStringUtils.isNotNullAndNotEmpty(hierarchyName) ? customHierarchyRepo.getCustomHierarchyDefinitionByName(hierarchyName) : null;
				if (oFF.notNull(customHierarchyDefinition) && !hierarchies.contains(customHierarchyDefinition))
				{
					hierarchies.add(customHierarchyDefinition);
				}
			}
			this.getUsedCustomHierarchiesInternal(element, customHierarchyRepo, hierarchies);
		}
	}
	return hierarchies;
};
oFF.QFilterExpression.prototype.containsMeasureBasedFilter = function()
{
	return this.isComplexFilter() && this.containsMeasureBasedFilterInternal(this.m_filterRootElement);
};
oFF.QFilterExpression.prototype.containsMeasureBasedFilterInternal = function(filterElement)
{
	var componentType = filterElement.getComponentType();
	if (componentType.isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA))
	{
		var filterAlgebra = filterElement;
		for (var i = 0; i < filterAlgebra.size(); i++)
		{
			if (this.containsMeasureBasedFilterInternal(filterAlgebra.get(i)))
			{
				return true;
			}
		}
	}
	return componentType.isTypeOf(oFF.FilterComponentType.FILTER_MEASURE_BASED);
};
oFF.QFilterExpression.prototype.getDimensionsUsedInFilter = function()
{
	return oFF.DimensionUsageAnalyzer2.getDimensionsUsedInFilter(this);
};
oFF.QFilterExpression.prototype.hasComplexDimensionSelection = function()
{
	return oFF.DimensionUsageAnalyzer2.hasComplexDimensionSelection(this);
};
oFF.QFilterExpression.prototype.getMemberNamesFromFilter = function(dimName)
{
	return oFF.QFilterUtil.getMemberNamesFromFilter(this, dimName);
};
oFF.QFilterExpression.prototype.setPreserveDuringSubmit = function(preserve)
{
	this.m_preservedDuringSubmit = preserve;
};
oFF.QFilterExpression.prototype.isPreservedDuringSubmit = function()
{
	return this.m_preservedDuringSubmit;
};

oFF.QFilterOperation = function() {};
oFF.QFilterOperation.prototype = new oFF.QFilterElement();
oFF.QFilterOperation.prototype._ff_c = "QFilterOperation";

oFF.QFilterOperation._create = function(context, selectionContainer, parentNode)
{
	var object = new oFF.QFilterOperation();
	object.setupFilterOperation(context, selectionContainer, parentNode);
	return object;
};
oFF.QFilterOperation.prototype.m_comparisonOperator = null;
oFF.QFilterOperation.prototype.m_fieldMd = null;
oFF.QFilterOperation.prototype.m_fieldContext = null;
oFF.QFilterOperation.prototype.m_firstValue = null;
oFF.QFilterOperation.prototype.m_secondValue = null;
oFF.QFilterOperation.prototype.m_thirdValue = null;
oFF.QFilterOperation.prototype.m_dataSource = null;
oFF.QFilterOperation.prototype.m_hierarchyName = null;
oFF.QFilterOperation.prototype.m_hierarchyVersion = null;
oFF.QFilterOperation.prototype.m_hierarchyDueDate = null;
oFF.QFilterOperation.prototype.m_convertToFlatFilter = false;
oFF.QFilterOperation.prototype.m_exactness = 0.0;
oFF.QFilterOperation.prototype.m_levelOffset = 0;
oFF.QFilterOperation.prototype.m_hasLevelOffset = false;
oFF.QFilterOperation.prototype.m_depth = 0;
oFF.QFilterOperation.prototype.m_hasDepth = false;
oFF.QFilterOperation.prototype.m_setSign = null;
oFF.QFilterOperation.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (other === this)
	{
		return true;
	}
	if (other.getComponentType() !== oFF.FilterComponentType.OPERATION)
	{
		return false;
	}
	var xOther = other;
	if (this.getField() !== xOther.getField())
	{
		return false;
	}
	if (this.m_comparisonOperator !== xOther.m_comparisonOperator)
	{
		return false;
	}
	if (this.m_exactness !== xOther.m_exactness)
	{
		return false;
	}
	if (this.m_levelOffset !== xOther.m_levelOffset)
	{
		return false;
	}
	if (this.m_depth !== xOther.m_depth)
	{
		return false;
	}
	if (this.m_setSign !== xOther.m_setSign)
	{
		return false;
	}
	if (this.m_convertToFlatFilter !== xOther.m_convertToFlatFilter)
	{
		return false;
	}
	if (!oFF.XString.isEqual(this.m_hierarchyName, xOther.m_hierarchyName))
	{
		return false;
	}
	var qm = this.getQueryModel();
	if (oFF.notNull(qm) && this.getSession().hasFeature(oFF.FeatureToggleOlap.HIERARCHY_INFO_IN_FILTER) && qm.getSystemType().isTypeOf(oFF.SystemType.ABAP))
	{
		if (!oFF.XObjectExt.areEqual(this.m_hierarchyDueDate, xOther.m_hierarchyDueDate))
		{
			return false;
		}
		if (!oFF.XString.isEqual(this.m_hierarchyVersion, xOther.m_hierarchyVersion))
		{
			return false;
		}
	}
	if (!oFF.XObjectExt.areEqual(this.m_firstValue, xOther.m_firstValue))
	{
		return false;
	}
	if (!oFF.XObjectExt.areEqual(this.m_secondValue, xOther.m_secondValue))
	{
		return false;
	}
	if (!oFF.XObjectExt.areEqual(this.m_thirdValue, xOther.m_thirdValue))
	{
		return false;
	}
	return true;
};
oFF.QFilterOperation.prototype.copyFromInternal = function(other, flags)
{
	oFF.QFilterElement.prototype.copyFromInternal.call( this , other, flags);
	var originFilterOperation = other;
	if (oFF.notNull(originFilterOperation.m_firstValue))
	{
		this.getLow().copyFrom(originFilterOperation.m_firstValue, flags);
	}
	if (oFF.notNull(originFilterOperation.m_secondValue))
	{
		this.getHigh().copyFrom(originFilterOperation.m_secondValue, flags);
	}
	if (oFF.notNull(originFilterOperation.m_thirdValue))
	{
		this.getThird().copyFrom(originFilterOperation.m_thirdValue, flags);
	}
	this.m_comparisonOperator = originFilterOperation.m_comparisonOperator;
	if (oFF.notNull(originFilterOperation.m_fieldMd))
	{
		this.setFieldMetadata(originFilterOperation.getFieldMetadata());
	}
	this.m_setSign = originFilterOperation.m_setSign;
	this.m_hasDepth = originFilterOperation.m_hasDepth;
	this.m_depth = originFilterOperation.m_depth;
	this.m_hasLevelOffset = originFilterOperation.hasLevelOffset();
	this.m_levelOffset = originFilterOperation.m_levelOffset;
	this.m_exactness = originFilterOperation.m_exactness;
	this.m_convertToFlatFilter = originFilterOperation.m_convertToFlatFilter;
	this.m_hierarchyName = originFilterOperation.m_hierarchyName;
	this.m_hierarchyDueDate = oFF.XObjectExt.cloneIfNotNull(originFilterOperation.m_hierarchyDueDate);
	this.m_hierarchyVersion = originFilterOperation.m_hierarchyVersion;
	if (oFF.notNull(originFilterOperation.m_dataSource))
	{
		this.setDataSource(originFilterOperation.m_dataSource);
	}
};
oFF.QFilterOperation.prototype.setupFilterOperation = function(context, filterContainer, parentNode)
{
	oFF.QFilterElement.prototype.setupFilterElement.call( this , context, filterContainer, parentNode);
	this.m_setSign = oFF.SetSign.INCLUDING;
};
oFF.QFilterOperation.prototype.releaseObject = function()
{
	this.m_firstValue = oFF.XObjectExt.release(this.m_firstValue);
	this.m_secondValue = oFF.XObjectExt.release(this.m_secondValue);
	this.m_thirdValue = oFF.XObjectExt.release(this.m_thirdValue);
	this.m_dataSource = oFF.XObjectExt.release(this.m_dataSource);
	this.m_fieldMd = oFF.XObjectExt.release(this.m_fieldMd);
	this.m_fieldContext = oFF.XObjectExt.release(this.m_fieldContext);
	this.m_setSign = null;
	this.m_hierarchyName = null;
	this.m_hierarchyDueDate = oFF.XObjectExt.release(this.m_hierarchyDueDate);
	this.m_hierarchyVersion = null;
	this.m_comparisonOperator = null;
	oFF.QFilterElement.prototype.releaseObject.call( this );
};
oFF.QFilterOperation.prototype.getOlapComponentType = function()
{
	return oFF.FilterComponentType.OPERATION;
};
oFF.QFilterOperation.prototype.setComparisonOperator = function(comparisonOperator)
{
	if (this.m_comparisonOperator !== comparisonOperator)
	{
		this.m_comparisonOperator = comparisonOperator;
		this.notifyNodeChanged();
	}
};
oFF.QFilterOperation.prototype.getComparisonOperator = function()
{
	if (oFF.isNull(this.m_comparisonOperator) && oFF.notNull(this.m_firstValue) && this.m_firstValue.getValue() !== null)
	{
		this.m_comparisonOperator = oFF.ComparisonOperator.EQUAL;
	}
	return this.m_comparisonOperator;
};
oFF.QFilterOperation.prototype.getLow = function()
{
	if (oFF.isNull(this.m_firstValue))
	{
		this.m_firstValue = oFF.QFactory.createFilterValueBag(this.getContext(), this.getFilterExpression(), this);
	}
	return this.m_firstValue;
};
oFF.QFilterOperation.prototype.getHigh = function()
{
	if (oFF.isNull(this.m_secondValue))
	{
		this.m_secondValue = oFF.QFactory.createFilterValueBag(this.getContext(), this.getFilterExpression(), this);
	}
	return this.m_secondValue;
};
oFF.QFilterOperation.prototype.getThird = function()
{
	if (oFF.isNull(this.m_thirdValue))
	{
		this.m_thirdValue = oFF.QFactory.createFilterValueBag(this.getContext(), this.getFilterExpression(), this);
	}
	return this.m_thirdValue;
};
oFF.QFilterOperation.prototype.setField = function(field)
{
	if (oFF.notNull(field))
	{
		this.setFieldMetadata(field.getMetadata());
		if (this.getContext() === null)
		{
			this.setContext(field.getContext());
		}
		this.m_fieldContext = oFF.XWeakReferenceUtil.getWeakRef(field.getContext());
	}
};
oFF.QFilterOperation.prototype.setFieldMetadata = function(fieldMd)
{
	if (oFF.notNull(fieldMd))
	{
		var isKeyType = fieldMd.getPresentationType().isTypeOf(oFF.PresentationType.ABSTRACT_KEY);
		var isVariable = false;
		var isValidFilterForBwF4 = false;
		var context = this.getContext();
		if (oFF.notNull(context))
		{
			var componentType = context.getComponentType();
			isVariable = oFF.notNull(componentType) && (componentType.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE) || componentType.isTypeOf(oFF.OlapComponentType.VARIABLE_MANAGER));
			var dimensionAccessor = context.getDimensionAccessor();
			var dimensionMetadata = fieldMd.getDimensionMetadata();
			var fieldMdCacheKey = fieldMd.getCacheKey();
			var contextCacheKey = oFF.QFactory.createCacheKeyByContext(context);
			var isSameDataSource = oFF.isNull(contextCacheKey) || oFF.XString.isEqual(fieldMdCacheKey.getSystemName(), contextCacheKey.getSystemName()) && oFF.XString.isEqual(fieldMdCacheKey.getDataSourceHashKey(), contextCacheKey.getDataSourceHashKey());
			if (oFF.notNull(dimensionAccessor) && oFF.notNull(dimensionMetadata) && isSameDataSource)
			{
				var dimension = dimensionAccessor.getDimensionByName(dimensionMetadata.getName());
				isValidFilterForBwF4 = oFF.notNull(dimension) && dimension.getSelector().isValidFilterForBwF4(fieldMd, this.getFilterExpression());
			}
		}
		if (!isKeyType && !isVariable && !isValidFilterForBwF4 && !fieldMd.isFilterable())
		{
			throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate3("The field '", fieldMd.getName(), "' is not filterable!"));
		}
		this.m_fieldMd = oFF.XWeakReferenceUtil.getWeakRef(fieldMd);
	}
};
oFF.QFilterOperation.prototype.getField = function()
{
	var fieldMetadata = this.getFieldMetadata();
	if (oFF.isNull(fieldMetadata))
	{
		return null;
	}
	var context = this._getContext();
	var fieldAccessorSingle = context.getFieldAccessorSingle();
	return oFF.notNull(fieldAccessorSingle) ? fieldAccessorSingle.getFieldByName(fieldMetadata.getName()) : null;
};
oFF.QFilterOperation.prototype.getFieldMetadata = function()
{
	if (oFF.isNull(this.m_fieldMd))
	{
		var parentComponent = this.getParentComponent();
		if (oFF.notNull(parentComponent))
		{
			var parentType = parentComponent.getComponentType();
			if (parentType.isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
			{
				var cartesianList = parentComponent;
				this.m_fieldMd = oFF.XWeakReferenceUtil.getWeakRef(cartesianList.getFieldMetadata());
			}
		}
	}
	var hardRef = oFF.XWeakReferenceUtil.getHardRef(this.m_fieldMd);
	if (oFF.isNull(hardRef) && oFF.notNull(this.m_fieldMd))
	{
		var reference = this.m_fieldMd.getReference();
		if (oFF.notNull(reference))
		{
			var olapEnv = this.getOlapEnv();
			if (oFF.notNull(olapEnv))
			{
				var fieldMetadata = olapEnv.getFieldMetadata(reference.getCacheKey());
				this.setFieldMetadata(fieldMetadata);
				return fieldMetadata;
			}
		}
	}
	return hardRef;
};
oFF.QFilterOperation.prototype._getContext = function()
{
	var context = this.getContext();
	if (oFF.notNull(context))
	{
		return context;
	}
	var parent = this.getParent();
	if (oFF.notNull(parent))
	{
		var parentContext = parent.getContext();
		if (oFF.notNull(parentContext))
		{
			return parentContext;
		}
	}
	var filterExpression = this.getFilterExpression();
	if (oFF.notNull(filterExpression))
	{
		var feContext = filterExpression.getContext();
		if (oFF.notNull(feContext))
		{
			return feContext;
		}
	}
	return oFF.XWeakReferenceUtil.getHardRef(this.m_fieldContext);
};
oFF.QFilterOperation.prototype.getDimension = function()
{
	var field = this.getField();
	return oFF.isNull(field) ? null : field.getDimension();
};
oFF.QFilterOperation.prototype.getDimensionName = function()
{
	var fieldMetadata = this.getFieldMetadata();
	if (oFF.notNull(fieldMetadata))
	{
		var dimensionMetadata = fieldMetadata.getDimensionMetadata();
		if (oFF.notNull(dimensionMetadata))
		{
			return dimensionMetadata.getName();
		}
	}
	var dimension = this.getDimension();
	return oFF.notNull(dimension) ? dimension.getName() : null;
};
oFF.QFilterOperation.prototype.getHierarchyDueDate = function()
{
	return this.m_hierarchyDueDate;
};
oFF.QFilterOperation.prototype.getHierarchyVersion = function()
{
	return this.m_hierarchyVersion;
};
oFF.QFilterOperation.prototype.getHierarchyName = function()
{
	return this.m_hierarchyName;
};
oFF.QFilterOperation.prototype.setHierarchyName = function(name)
{
	if (!oFF.XString.isEqual(name, this.m_hierarchyName))
	{
		this.m_hierarchyName = name;
		this.notifyNodeChanged();
	}
};
oFF.QFilterOperation.prototype.setHierarchyInfo = function(hierarchyName, hierarchyDueDate, hierarchyVersion)
{
	var isNotify = false;
	this.setHierarchyName(hierarchyName);
	var qm = this.getQueryModel();
	if (this.getSession().hasFeature(oFF.FeatureToggleOlap.HIERARCHY_INFO_IN_FILTER) && oFF.notNull(qm) && qm.getSystemType().isTypeOf(oFF.SystemType.ABAP))
	{
		if (!oFF.XObjectExt.areEqual(hierarchyDueDate, this.m_hierarchyDueDate))
		{
			this.m_hierarchyDueDate = hierarchyDueDate;
			isNotify = true;
		}
		if (!oFF.XString.isEqual(hierarchyVersion, this.m_hierarchyVersion))
		{
			this.m_hierarchyVersion = hierarchyVersion;
			isNotify = true;
		}
	}
	if (isNotify)
	{
		this.notifyNodeChanged();
	}
};
oFF.QFilterOperation.prototype.getExactness = function()
{
	return this.m_exactness;
};
oFF.QFilterOperation.prototype.setExactness = function(exactness)
{
	this.m_exactness = exactness;
};
oFF.QFilterOperation.prototype.getSetSign = function()
{
	return this.m_setSign;
};
oFF.QFilterOperation.prototype.setSetSign = function(setSign)
{
	if (setSign !== this.m_setSign)
	{
		this.m_setSign = setSign;
		this.notifyNodeChanged();
	}
};
oFF.QFilterOperation.prototype.hasLevelOffsetChanged = function(levelOffset, hasLevelOffSet)
{
	return this.m_levelOffset !== levelOffset || this.m_hasLevelOffset !== hasLevelOffSet;
};
oFF.QFilterOperation.prototype.hasDepthChanged = function(depth, hasDepth)
{
	return this.m_depth !== depth || this.m_hasDepth !== hasDepth;
};
oFF.QFilterOperation.prototype.setLevelOffset = function(levelOffset)
{
	var capabilities = this.getModelCapabilities();
	var supportsHierarchyLevelOffsetFilter = capabilities.supportsHierarchyLevelOffsetFilter();
	var supportsHierarchyTrapezoidFilter = capabilities.supportsHierarchyTrapezoidFilter();
	if (!supportsHierarchyTrapezoidFilter && !supportsHierarchyLevelOffsetFilter)
	{
		throw oFF.XException.createIllegalStateException("LevelOffset is not supported by backend!");
	}
	if (this.hasLevelOffsetChanged(levelOffset, true))
	{
		this.m_levelOffset = levelOffset;
		this.m_hasLevelOffset = true;
		this.notifyNodeChanged();
	}
};
oFF.QFilterOperation.prototype.getLevelOffset = function()
{
	return this.m_levelOffset;
};
oFF.QFilterOperation.prototype.hasLevelOffset = function()
{
	return this.m_hasLevelOffset;
};
oFF.QFilterOperation.prototype.resetLevelOffset = function()
{
	if (this.hasLevelOffsetChanged(0, false))
	{
		this.m_levelOffset = 0;
		this.m_hasLevelOffset = false;
		this.notifyNodeChanged();
	}
};
oFF.QFilterOperation.prototype.setDepth = function(depth)
{
	if (!this.getModelCapabilities().supportsHierarchyTrapezoidFilter())
	{
		throw oFF.XException.createIllegalStateException("Depth is not supported by backend!");
	}
	if (this.hasDepthChanged(depth, true))
	{
		this.m_depth = depth;
		this.m_hasDepth = true;
		this.notifyNodeChanged();
	}
};
oFF.QFilterOperation.prototype.getDepth = function()
{
	return this.m_depth;
};
oFF.QFilterOperation.prototype.hasDepth = function()
{
	return this.m_hasDepth;
};
oFF.QFilterOperation.prototype.resetDepth = function()
{
	if (this.hasDepthChanged(0, false))
	{
		this.m_depth = 0;
		this.m_hasDepth = false;
		this.notifyNodeChanged();
	}
};
oFF.QFilterOperation.prototype.getDataSource = function()
{
	return this.m_dataSource;
};
oFF.QFilterOperation.prototype.setDataSource = function(dataSource)
{
	if (oFF.isNull(this.m_dataSource))
	{
		this.m_dataSource = oFF.QFactory.createDataSource();
	}
	this.m_dataSource.copyFrom(dataSource, null);
};
oFF.QFilterOperation.prototype.isConvertToFlatFilter = function()
{
	return this.m_convertToFlatFilter;
};
oFF.QFilterOperation.prototype.setConvertToFlatFilter = function(convertToFlatFilter)
{
	if (this.m_convertToFlatFilter !== convertToFlatFilter)
	{
		this.m_convertToFlatFilter = convertToFlatFilter;
		this.notifyPropertyBooleanChanged(oFF.QFilterProperties.QY_CONVERT_TO_FLAT_SELECTION_FO, !convertToFlatFilter, convertToFlatFilter);
	}
};
oFF.QFilterOperation.prototype.parseStringValues = function(low, high, comparisonOperator)
{
	this.queueEventing();
	if (oFF.notNull(comparisonOperator))
	{
		this.setComparisonOperator(comparisonOperator);
	}
	if (comparisonOperator === oFF.ComparisonOperator.MATCH || comparisonOperator === oFF.ComparisonOperator.NOT_MATCH)
	{
		this.setLowString(low);
		this.setHighString(high);
	}
	else
	{
		var fieldMd = this.getFieldMetadata();
		var valueAccess = oFF.XValueAccess.createWithType(fieldMd.getValueType());
		valueAccess.parseString(low);
		this._updateValue(this.getLow(), valueAccess.getValue());
		valueAccess.parseString(high);
		this._updateValue(this.getHigh(), valueAccess.getValue());
		oFF.XObjectExt.release(valueAccess);
	}
	this.resumeEventing();
};
oFF.QFilterOperation.prototype._updateValue = function(filterValue, newValue)
{
	filterValue.setValue(oFF.XObjectExt.cloneIfNotNull(newValue));
};
oFF.QFilterOperation.prototype.configureBetweenWithMembers = function(firstMember, secondMember)
{
	this.setComparisonOperator(oFF.ComparisonOperator.BETWEEN);
	this.getLow().setDimensionMember(firstMember);
	this.getHigh().setDimensionMember(secondMember);
};
oFF.QFilterOperation.prototype.configureSingleParameterExpression = function(value, comparisonOperator)
{
	this.setComparisonOperator(comparisonOperator);
	this.getLow().setValue(value);
};
oFF.QFilterOperation.prototype.configureDoubleParameterExpression = function(firstValue, secondValue, comparisonOperator)
{
	this.setComparisonOperator(comparisonOperator);
	this.getLow().setValue(firstValue);
	this.getHigh().setValue(secondValue);
};
oFF.QFilterOperation.prototype.configureTripleParameterExpression = function(firstValue, secondValue, thirdValue, comparisonOperator)
{
	this.setComparisonOperator(comparisonOperator);
	this.getLow().setValue(firstValue);
	this.getHigh().setValue(secondValue);
	this.getThird().setValue(thirdValue);
};
oFF.QFilterOperation.prototype.getValueAt = function(index)
{
	if (index === 0)
	{
		return this.getLow();
	}
	if (index === 1)
	{
		return this.getHigh();
	}
	if (index === 2)
	{
		return this.getThird();
	}
	return null;
};
oFF.QFilterOperation.prototype.size = function()
{
	var comparisonOperator = this.getComparisonOperator();
	return oFF.isNull(comparisonOperator) ? 0 : comparisonOperator.getNumberOfParameters();
};
oFF.QFilterOperation.prototype.isEmpty = function()
{
	return this.size() === 0;
};
oFF.QFilterOperation.prototype.hasElements = function()
{
	return this.size() > 0;
};
oFF.QFilterOperation.prototype.setLowString = function(value)
{
	this.getLow().setString(value);
};
oFF.QFilterOperation.prototype.setHighString = function(value)
{
	this.getHigh().setString(value);
};

oFF.QFilterTuple = function() {};
oFF.QFilterTuple.prototype = new oFF.QFilterElement();
oFF.QFilterTuple.prototype._ff_c = "QFilterTuple";

oFF.QFilterTuple._create = function(context, filterContainer)
{
	var object = new oFF.QFilterTuple();
	object.setupFilterElement(context, filterContainer, null);
	object.m_fieldNames = oFF.XListOfString.create();
	object.m_tuples = oFF.XList.create();
	return object;
};
oFF.QFilterTuple.prototype.m_fieldNames = null;
oFF.QFilterTuple.prototype.m_tuples = null;
oFF.QFilterTuple.prototype.copyFromInternal = function(other, flags)
{
	oFF.QFilterElement.prototype.copyFromInternal.call( this , other, flags);
	var originFilterTuple = other;
	this.setFieldNames(originFilterTuple.m_fieldNames.createListOfStringCopy());
	this.m_tuples = originFilterTuple.m_tuples.createListCopy();
};
oFF.QFilterTuple.prototype.getOlapComponentType = function()
{
	return oFF.FilterComponentType.TUPLE;
};
oFF.QFilterTuple.prototype.setFieldNames = function(fieldNames)
{
	this.m_fieldNames.addAll(fieldNames);
};
oFF.QFilterTuple.prototype.addTupleCriteria = function(tupleCriteria)
{
	if (tupleCriteria.size() !== this.getNumberOfFields())
	{
		throw oFF.XException.createIllegalArgumentException("Tuple Criteria size has to be the same as the number of FieldNames.");
	}
	this.m_tuples.add(tupleCriteria);
};
oFF.QFilterTuple.prototype.releaseObject = function()
{
	this.m_fieldNames = oFF.XObjectExt.release(this.m_fieldNames);
	this.m_tuples = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_tuples);
	oFF.QFilterElement.prototype.releaseObject.call( this );
};
oFF.QFilterTuple.prototype.getNumberOfFields = function()
{
	return this.m_fieldNames.size();
};
oFF.QFilterTuple.prototype.getFieldNames = function()
{
	return this.m_fieldNames;
};
oFF.QFilterTuple.prototype.getTuples = function()
{
	return this.m_tuples;
};

oFF.QFilterValueBag = function() {};
oFF.QFilterValueBag.prototype = new oFF.QFilterElement();
oFF.QFilterValueBag.prototype._ff_c = "QFilterValueBag";

oFF.QFilterValueBag._create = function(context, filterExpression, parentNode)
{
	var object = new oFF.QFilterValueBag();
	object.setupValueBag(context, filterExpression, parentNode);
	return object;
};
oFF.QFilterValueBag.prototype.m_fieldValue = null;
oFF.QFilterValueBag.prototype.m_filterValue = null;
oFF.QFilterValueBag.prototype.m_isStarWildcardEnabled = false;
oFF.QFilterValueBag.prototype.m_isManualInput = false;
oFF.QFilterValueBag.prototype.m_supplements = null;
oFF.QFilterValueBag.prototype.m_filterValueType = null;
oFF.QFilterValueBag.prototype.m_memberNavigations = null;
oFF.QFilterValueBag.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (other === this)
	{
		return true;
	}
	var xOther = other;
	if (!oFF.XString.isEqual(this.m_filterValue, xOther.m_filterValue))
	{
		return false;
	}
	if (this.m_isStarWildcardEnabled !== xOther.m_isStarWildcardEnabled)
	{
		return false;
	}
	if (this.m_isManualInput !== xOther.m_isManualInput)
	{
		return false;
	}
	if (this.m_filterValueType !== xOther.m_filterValueType)
	{
		return false;
	}
	if (!this.m_fieldValue.isEqualTo(xOther.m_fieldValue))
	{
		return false;
	}
	if (!oFF.XObjectExt.areEqual(this.m_memberNavigations, xOther.m_memberNavigations))
	{
		return false;
	}
	if (!oFF.XObjectExt.areEqual(this.m_supplements, xOther.m_supplements))
	{
		return false;
	}
	return true;
};
oFF.QFilterValueBag.prototype.copyFromInternal = function(other, flags)
{
	oFF.QFilterElement.prototype.copyFromInternal.call( this , other, flags);
	var originFilterValueBag = other;
	this.m_filterValue = originFilterValueBag.m_filterValue;
	this.m_fieldValue.copyFrom(originFilterValueBag.m_fieldValue, flags);
	this.m_isStarWildcardEnabled = originFilterValueBag.m_isStarWildcardEnabled;
	this.m_isManualInput = originFilterValueBag.m_isManualInput;
	if (oFF.notNull(originFilterValueBag.m_supplements))
	{
		this.m_supplements.clear();
		oFF.XCollectionUtils.addAllClones(this.m_supplements, originFilterValueBag.m_supplements);
	}
	if (oFF.notNull(originFilterValueBag.m_memberNavigations))
	{
		this.m_memberNavigations = originFilterValueBag.m_memberNavigations.createListCopy();
	}
	this.m_filterValueType = originFilterValueBag.m_filterValueType;
};
oFF.QFilterValueBag.prototype.setupValueBag = function(context, filterExpression, parentNode)
{
	this.setupFilterElement(context, filterExpression, parentNode);
	this.m_supplements = oFF.XList.create();
	this.m_fieldValue = oFF.QFieldValue._create(context);
};
oFF.QFilterValueBag.prototype.releaseObject = function()
{
	this.m_supplements = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_supplements);
	this.m_memberNavigations = oFF.XObjectExt.release(this.m_memberNavigations);
	this.m_fieldValue = oFF.XObjectExt.release(this.m_fieldValue);
	this.m_filterValue = null;
	this.m_filterValueType = null;
	oFF.QFilterElement.prototype.releaseObject.call( this );
};
oFF.QFilterValueBag.prototype.getFilterValueType = function()
{
	return this.m_filterValueType;
};
oFF.QFilterValueBag.prototype.setFilterValueType = function(valueType)
{
	this.m_filterValueType = valueType;
};
oFF.QFilterValueBag.prototype.getValueType = function()
{
	if (oFF.isNull(this.m_filterValueType))
	{
		var value = this.getValue();
		return oFF.isNull(value) ? null : value.getValueType();
	}
	return this.getFilterValueType();
};
oFF.QFilterValueBag.prototype.getFieldValue = function()
{
	return this.m_fieldValue;
};
oFF.QFilterValueBag.prototype.setFieldValue = function(fieldValue)
{
	this.m_fieldValue.setFieldValue(fieldValue);
	this.notifyNodeChanged();
};
oFF.QFilterValueBag.prototype.setDimensionMember = function(member)
{
	if (oFF.isNull(member))
	{
		this.setFieldValue(null);
	}
	else
	{
		var fieldValue = member.getKeyFieldValue();
		if (oFF.isNull(fieldValue))
		{
			var dimension = member.getDimension();
			if (oFF.notNull(dimension))
			{
				fieldValue = member.getFieldValue(dimension.getFlatKeyField());
				if (oFF.isNull(fieldValue))
				{
					fieldValue = member.getFieldValue(dimension.getHierarchyKeyField());
				}
			}
		}
		this.setFieldValue(fieldValue);
	}
};
oFF.QFilterValueBag.prototype.getVariableValue = function()
{
	var value = this.getValue();
	if (oFF.notNull(value))
	{
		var valueType = value.getValueType();
		if (valueType === oFF.XValueType.VARIABLE)
		{
			var varValue = value;
			return varValue.getVariable();
		}
	}
	return null;
};
oFF.QFilterValueBag.prototype.setVariableValue = function(variable)
{
	if (oFF.isNull(variable))
	{
		this.setValue(null);
	}
	else
	{
		this.setValue(variable.newVariableValue());
	}
	this.setFilterValueType(oFF.XValueType.VARIABLE);
};
oFF.QFilterValueBag.prototype.getFilterValue = function()
{
	return this.m_filterValue;
};
oFF.QFilterValueBag.prototype.setFilterValue = function(filterValue)
{
	if (!oFF.XString.isEqual(this.m_filterValue, filterValue))
	{
		this.m_filterValue = filterValue;
		this.notifyNodeChanged();
	}
};
oFF.QFilterValueBag.prototype.getSupplementValueString = function(fieldName)
{
	for (var i = 0; i < this.m_supplements.size(); i++)
	{
		var pair = this.m_supplements.get(i);
		if (oFF.XString.isEqual(pair.getKey().toString(), fieldName))
		{
			return pair.getValue().toString();
		}
	}
	return null;
};
oFF.QFilterValueBag.prototype.getTextSupplement = function(memberFilter)
{
	return this._getSupplementByFieldType(memberFilter, oFF.PresentationType.TEXT);
};
oFF.QFilterValueBag.prototype.getDisplayKeySupplement = function(memberFilter)
{
	return this._getSupplementByFieldType(memberFilter, oFF.PresentationType.DISPLAY_KEY);
};
oFF.QFilterValueBag.prototype._getSupplementByFieldType = function(memberFilter, presentationType)
{
	if (oFF.isNull(memberFilter) || memberFilter.isEmpty())
	{
		return null;
	}
	var supplementValue = null;
	var supplementFields = memberFilter.getSupplementFields();
	for (var i = 0; i < supplementFields.size(); i++)
	{
		var supplementField = supplementFields.get(i);
		if (supplementField.getPresentationType().isTypeOf(presentationType))
		{
			supplementValue = this.getSupplementValueString(supplementField.getName());
			break;
		}
	}
	return supplementValue;
};
oFF.QFilterValueBag.prototype.addSupplementValue = function(fieldName, value)
{
	if (oFF.notNull(fieldName) && oFF.notNull(value))
	{
		var pair = oFF.XKeyValuePair.create();
		pair.setKeyValue(oFF.XStringValue.create(fieldName), oFF.XStringValue.create(value));
		this.m_supplements.add(pair);
	}
};
oFF.QFilterValueBag.prototype.getSupplementValues = function()
{
	return this.m_supplements.getValuesAsReadOnlyList();
};
oFF.QFilterValueBag.prototype.isManualInput = function()
{
	return this.m_isManualInput;
};
oFF.QFilterValueBag.prototype.setIsManualInput = function(isManualInput)
{
	this.m_isManualInput = isManualInput;
};
oFF.QFilterValueBag.prototype.getMemberNavigations = function()
{
	if (oFF.isNull(this.m_memberNavigations))
	{
		this.m_memberNavigations = oFF.XList.create();
	}
	return this.m_memberNavigations;
};
oFF.QFilterValueBag.prototype.setMultiPolygon = function(value)
{
	this.setValue(value);
};
oFF.QFilterValueBag.prototype.getMultiPolygon = function()
{
	return this.getValue();
};
oFF.QFilterValueBag.prototype.setLineString = function(value)
{
	this.setValue(value);
};
oFF.QFilterValueBag.prototype.getLineString = function()
{
	return this.getValue();
};
oFF.QFilterValueBag.prototype.setMultiLineString = function(value)
{
	this.setValue(value);
};
oFF.QFilterValueBag.prototype.getMultiLineString = function()
{
	return this.getValue();
};
oFF.QFilterValueBag.prototype.setMultiPoint = function(value)
{
	this.setValue(value);
};
oFF.QFilterValueBag.prototype.getMultiPoint = function()
{
	return this.getValue();
};
oFF.QFilterValueBag.prototype.getNull = oFF.noSupport;
oFF.QFilterValueBag.prototype.getString = function()
{
	if (this.getValue() === null)
	{
		return null;
	}
	if (this.getValueType().isSpatial())
	{
		return this.getValue().toWKT();
	}
	else if (this.getValueType().isVariable())
	{
		var variable = this.getValue();
		return variable.getVariable().getName();
	}
	return this.getValue().toString();
};
oFF.QFilterValueBag.prototype.setString = function(value)
{
	this.setValue(oFF.XStringValue.create(value));
};
oFF.QFilterValueBag.prototype.getInteger = function()
{
	return oFF.XValueUtil.getInteger(this.getValue(), false, false);
};
oFF.QFilterValueBag.prototype.setInteger = function(value)
{
	this.assertNumeric(value);
	this.setValue(oFF.XIntegerValue.create(value));
};
oFF.QFilterValueBag.prototype.getLong = function()
{
	return oFF.XValueUtil.getLong(this.getValue(), false, false);
};
oFF.QFilterValueBag.prototype.setLong = function(value)
{
	this.assertNumeric(value);
	this.setValue(oFF.XLongValue.create(value));
};
oFF.QFilterValueBag.prototype.getDouble = function()
{
	return oFF.XValueUtil.getDouble(this.getValue(), false, false);
};
oFF.QFilterValueBag.prototype.assertNumeric = function(value)
{
	if (oFF.XMath.isNaN(value))
	{
		throw oFF.XException.createIllegalArgumentException("The value must not be NaN!");
	}
};
oFF.QFilterValueBag.prototype.setDouble = function(value)
{
	this.assertNumeric(value);
	this.setValue(oFF.XDoubleValue.create(value));
};
oFF.QFilterValueBag.prototype.getDecFloat = function()
{
	return oFF.XValueUtil.getDecFloat(this.getValue(), false, false);
};
oFF.QFilterValueBag.prototype.setDecFloat = function(value)
{
	this.setValue(value);
};
oFF.QFilterValueBag.prototype.getGeometry = function()
{
	var value = this.getValue();
	return value;
};
oFF.QFilterValueBag.prototype.getPolygon = function()
{
	return this.getValue();
};
oFF.QFilterValueBag.prototype.setPolygon = function(value)
{
	this.setValue(value);
};
oFF.QFilterValueBag.prototype.getPoint = function()
{
	return this.getValue();
};
oFF.QFilterValueBag.prototype.setPoint = function(value)
{
	this.setValue(value);
};
oFF.QFilterValueBag.prototype.getDate = function()
{
	return this.getValue();
};
oFF.QFilterValueBag.prototype.setDate = function(value)
{
	this.setValue(value);
};
oFF.QFilterValueBag.prototype.getTime = function()
{
	return this.getValue();
};
oFF.QFilterValueBag.prototype.setTime = function(value)
{
	this.setValue(value);
};
oFF.QFilterValueBag.prototype.getDateTime = function()
{
	return this.getValue();
};
oFF.QFilterValueBag.prototype.setDateTime = function(value)
{
	this.setValue(value);
};
oFF.QFilterValueBag.prototype.getTimeSpan = function()
{
	return this.getValue();
};
oFF.QFilterValueBag.prototype.setTimeSpan = function(value)
{
	this.setValue(value);
};
oFF.QFilterValueBag.prototype.getBoolean = function()
{
	return oFF.XValueUtil.getBoolean(this.getValue(), false, false);
};
oFF.QFilterValueBag.prototype.setBoolean = function(value)
{
	this.setValue(oFF.XBooleanValue.create(value));
};
oFF.QFilterValueBag.prototype.getDimensionMember = function()
{
	if (this.m_filterValueType === oFF.XValueType.VARIABLE)
	{
		var varValue = this.getVariableValue();
		if (varValue.getVariableType() === oFF.VariableType.DIMENSION_MEMBER_VARIABLE)
		{
			var dimvar = varValue;
			return dimvar.getDimensionMember();
		}
	}
	return oFF.isNull(this.m_fieldValue) ? null : this.m_fieldValue.getDimensionMember();
};
oFF.QFilterValueBag.prototype.getValue = function()
{
	return this.m_fieldValue.getValue();
};
oFF.QFilterValueBag.prototype.setValue = function(value)
{
	this.m_fieldValue.setValue(value);
	this.notifyNodeChanged();
};
oFF.QFilterValueBag.prototype.hasValue = function()
{
	return this.m_fieldValue.hasValue();
};
oFF.QFilterValueBag.prototype.isStarWildcardEnabled = function()
{
	return this.m_isStarWildcardEnabled;
};
oFF.QFilterValueBag.prototype.setIsStarWildcardEnabled = function(isEnabled)
{
	if (this.m_isStarWildcardEnabled !== isEnabled)
	{
		this.m_isStarWildcardEnabled = isEnabled;
		this.notifyNodeChanged();
	}
};
oFF.QFilterValueBag.prototype.getDimension = function()
{
	return oFF.isNull(this.m_fieldValue) ? null : this.m_fieldValue.getDimension();
};
oFF.QFilterValueBag.prototype.getField = function()
{
	return oFF.isNull(this.m_fieldValue) ? null : this.m_fieldValue.getField();
};
oFF.QFilterValueBag.prototype.getFormattedValue = function()
{
	return oFF.isNull(this.m_fieldValue) ? null : this.m_fieldValue.getFormattedValue();
};
oFF.QFilterValueBag.prototype.supportsStarWildcard = function()
{
	return false;
};

oFF.QFilterVirtualDatasource = function() {};
oFF.QFilterVirtualDatasource.prototype = new oFF.QFilterElement();
oFF.QFilterVirtualDatasource.prototype._ff_c = "QFilterVirtualDatasource";

oFF.QFilterVirtualDatasource._create = function(context, filterContainer)
{
	var object = new oFF.QFilterVirtualDatasource();
	object.setupFilterElement(context, filterContainer, null);
	return object;
};
oFF.QFilterVirtualDatasource.prototype.m_schemaName = null;
oFF.QFilterVirtualDatasource.prototype.m_packageName = null;
oFF.QFilterVirtualDatasource.prototype.m_objectName = null;
oFF.QFilterVirtualDatasource.prototype.copyFromInternal = function(other, flags)
{
	oFF.QFilterElement.prototype.copyFromInternal.call( this , other, flags);
	var originFilterVirtualDatasource = other;
	this.m_schemaName = originFilterVirtualDatasource.getSchemaName();
	this.m_packageName = originFilterVirtualDatasource.getPackageName();
	this.m_objectName = originFilterVirtualDatasource.getObjectName();
};
oFF.QFilterVirtualDatasource.prototype.releaseObject = function()
{
	this.m_schemaName = null;
	this.m_packageName = null;
	this.m_objectName = null;
	oFF.QFilterElement.prototype.releaseObject.call( this );
};
oFF.QFilterVirtualDatasource.prototype.setDetails = function(schemaName, packageName, objectName)
{
	this.m_schemaName = schemaName;
	this.m_packageName = packageName;
	this.m_objectName = objectName;
};
oFF.QFilterVirtualDatasource.prototype.getSchemaName = function()
{
	return this.m_schemaName;
};
oFF.QFilterVirtualDatasource.prototype.getPackageName = function()
{
	return this.m_packageName;
};
oFF.QFilterVirtualDatasource.prototype.getObjectName = function()
{
	return this.m_objectName;
};
oFF.QFilterVirtualDatasource.prototype.getOlapComponentType = function()
{
	return oFF.FilterComponentType.VIRTUAL_DATASOURCE;
};

oFF.QFormulaItemAttribute = function() {};
oFF.QFormulaItemAttribute.prototype = new oFF.QBlendableFormulaItem();
oFF.QFormulaItemAttribute.prototype._ff_c = "QFormulaItemAttribute";

oFF.QFormulaItemAttribute._createMember = function(context, parentNode)
{
	var formula = new oFF.QFormulaItemAttribute();
	formula.setupFormulaAttribute(context, parentNode);
	return formula;
};
oFF.QFormulaItemAttribute.prototype.m_fieldName = null;
oFF.QFormulaItemAttribute.prototype.setupFormulaAttribute = function(context, parentNode)
{
	this.setupModelComponent(context, parentNode);
	this.m_fieldName = null;
};
oFF.QFormulaItemAttribute.prototype.releaseObject = function()
{
	this.m_fieldName = null;
	oFF.QBlendableFormulaItem.prototype.releaseObject.call( this );
};
oFF.QFormulaItemAttribute.prototype.cloneOlapComponent = function(context, parent)
{
	var newItem = oFF.QFormulaItemAttribute._createMember(context, parent);
	newItem.copyFormulaItemAttribute(this);
	return newItem;
};
oFF.QFormulaItemAttribute.prototype.copyFormulaItemAttribute = function(origin)
{
	this.copyFrom(origin, null);
	this.copyBlendingFormulaItem(origin);
	this.m_fieldName = origin.m_fieldName;
};
oFF.QFormulaItemAttribute.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FORMULA_ITEM_ATTRIBUTE;
};
oFF.QFormulaItemAttribute.prototype.setFieldByName = function(fieldName)
{
	this.m_fieldName = fieldName;
	this.notifyNodeChanged();
};
oFF.QFormulaItemAttribute.prototype.getFieldName = function()
{
	return this.m_fieldName;
};

oFF.QFormulaItemMember = function() {};
oFF.QFormulaItemMember.prototype = new oFF.QBlendableFormulaItem();
oFF.QFormulaItemMember.prototype._ff_c = "QFormulaItemMember";

oFF.QFormulaItemMember._createMember = function(context, parentNode)
{
	var formula = new oFF.QFormulaItemMember();
	formula.setupModelComponent(context, parentNode);
	return formula;
};
oFF.QFormulaItemMember.prototype.m_memberName = null;
oFF.QFormulaItemMember.prototype.m_dimensionName = null;
oFF.QFormulaItemMember.prototype.m_memberVariable = null;
oFF.QFormulaItemMember.prototype.m_previous = false;
oFF.QFormulaItemMember.prototype.m_booked = false;
oFF.QFormulaItemMember.prototype.cloneOlapComponent = function(context, parent)
{
	var newItem = oFF.QFormulaItemMember._createMember(context, parent);
	newItem.copyFormulaItemMember(this);
	return newItem;
};
oFF.QFormulaItemMember.prototype.copyFormulaItemMember = function(origin)
{
	this.copyFrom(origin, null);
	this.m_memberName = origin.m_memberName;
	this.m_dimensionName = origin.m_dimensionName;
	this.m_booked = origin.m_booked;
	this.m_previous = origin.m_previous;
	if (oFF.notNull(origin.m_memberVariable))
	{
		this.setVariable(this.getContext().getVariableContainer().getVariables().getByKey(origin.getVariable().getName()));
	}
	this.copyBlendingFormulaItem(origin);
};
oFF.QFormulaItemMember.prototype.releaseObject = function()
{
	this.m_memberName = null;
	this.m_dimensionName = null;
	this.m_memberVariable = null;
	this.m_previous = false;
	this.m_booked = false;
	oFF.QBlendableFormulaItem.prototype.releaseObject.call( this );
};
oFF.QFormulaItemMember.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FORMULA_ITEM_MEMBER;
};
oFF.QFormulaItemMember.prototype.setMember = function(member)
{
	this.setMemberName(member.getName());
};
oFF.QFormulaItemMember.prototype.setMemberName = function(name)
{
	this._setMemberName(name);
	this._setBooked(false);
	this._setPrevious(false);
	this.m_memberVariable = null;
};
oFF.QFormulaItemMember.prototype.getMemberName = function()
{
	return this.m_memberName;
};
oFF.QFormulaItemMember.prototype.setVariable = function(variable)
{
	this.m_memberVariable = oFF.XWeakReferenceUtil.getWeakRef(variable);
	this._setBooked(false);
	this._setPrevious(false);
	this._setMemberName(null);
	this.setDimensionName(variable.getDimension().getName());
};
oFF.QFormulaItemMember.prototype.getVariable = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_memberVariable);
};
oFF.QFormulaItemMember.prototype.getDimensionName = function()
{
	return this.m_dimensionName;
};
oFF.QFormulaItemMember.prototype.setDimension = function(dimension)
{
	if (oFF.isNull(dimension))
	{
		this.setDimensionName(null);
	}
	else
	{
		this.setDimensionName(dimension.getName());
	}
};
oFF.QFormulaItemMember.prototype.setDimensionName = function(dimensionName)
{
	if (!oFF.XString.isEqual(this.m_dimensionName, dimensionName))
	{
		this.m_dimensionName = dimensionName;
		this.notifyNodeChanged();
	}
};
oFF.QFormulaItemMember.prototype.isPrevious = function()
{
	return this.m_previous;
};
oFF.QFormulaItemMember.prototype.setPrevious = function()
{
	this._setPrevious(true);
	this._setBooked(false);
	this._setMemberName(null);
	this.m_memberVariable = null;
};
oFF.QFormulaItemMember.prototype.isBooked = function()
{
	return this.m_booked;
};
oFF.QFormulaItemMember.prototype.setBooked = function()
{
	this.m_memberVariable = null;
	this.m_previous = false;
	this.m_booked = true;
	this.m_memberName = null;
};
oFF.QFormulaItemMember.prototype._setMemberName = function(name)
{
	if (!oFF.XString.isEqual(this.m_memberName, name))
	{
		this.m_memberName = name;
		this.notifyNodeChanged();
	}
};
oFF.QFormulaItemMember.prototype._setBooked = function(booked)
{
	if (this.m_booked !== booked)
	{
		this.m_booked = booked;
		this.notifyNodeChanged();
	}
};
oFF.QFormulaItemMember.prototype._setPrevious = function(previous)
{
	if (this.m_previous !== previous)
	{
		this.m_previous = previous;
		this.notifyNodeChanged();
	}
};

oFF.QLeveledHierarchy = function() {};
oFF.QLeveledHierarchy.prototype = new oFF.QModelComponent();
oFF.QLeveledHierarchy.prototype._ff_c = "QLeveledHierarchy";

oFF.QLeveledHierarchy.create = function(context, dimension, name)
{
	var object = new oFF.QLeveledHierarchy();
	object.setupLeveledHierarchy(context, dimension, name);
	if (oFF.notNull(dimension))
	{
		object.m_dimensionName = dimension.getName();
	}
	return object;
};
oFF.QLeveledHierarchy.prototype.m_dateFrom = null;
oFF.QLeveledHierarchy.prototype.m_dateTo = null;
oFF.QLeveledHierarchy.prototype.m_dueDate = null;
oFF.QLeveledHierarchy.prototype.m_hierarchyDescription = null;
oFF.QLeveledHierarchy.prototype.m_hierId = null;
oFF.QLeveledHierarchy.prototype.m_hierType = null;
oFF.QLeveledHierarchy.prototype.m_isRemote = false;
oFF.QLeveledHierarchy.prototype.m_isModeled = false;
oFF.QLeveledHierarchy.prototype.m_level = null;
oFF.QLeveledHierarchy.prototype.m_objectVersion = null;
oFF.QLeveledHierarchy.prototype.m_owner = null;
oFF.QLeveledHierarchy.prototype.m_uniqueName = null;
oFF.QLeveledHierarchy.prototype.m_version = null;
oFF.QLeveledHierarchy.prototype.m_versionDescription = null;
oFF.QLeveledHierarchy.prototype.m_hierarchyType = null;
oFF.QLeveledHierarchy.prototype.m_dimensionName = null;
oFF.QLeveledHierarchy.prototype.getDimensionName = function()
{
	return this.m_dimensionName;
};
oFF.QLeveledHierarchy.prototype.setDimensionName = function(dimensionName)
{
	this.m_dimensionName = dimensionName;
};
oFF.QLeveledHierarchy.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var xOther = other;
	return oFF.XString.isEqual(this.getHierarchyUniqueName(), xOther.getHierarchyUniqueName()) && oFF.XString.isEqual(this.getHierarchyName(), xOther.getHierarchyName()) && oFF.XString.isEqual(this.getDimensionName(), xOther.getDimensionName()) && oFF.XObjectExt.areEqual(this.getDateFrom(), xOther.getDateFrom()) && oFF.XObjectExt.areEqual(this.getDateTo(), xOther.getDateTo()) && oFF.XString.isEqual(this.getHierarchyVersion(), xOther.getHierarchyVersion());
};
oFF.QLeveledHierarchy.prototype.cloneOlapComponent = function(context, parent)
{
	var dimension = parent;
	if (oFF.notNull(context) && this.getDimension() !== null && oFF.isNull(dimension))
	{
		dimension = context.getDimensionByName(this.getDimension().getName());
	}
	var clone = oFF.QLeveledHierarchy.create(context, dimension, this.getName());
	clone.setDateFrom(oFF.XObjectExt.cloneIfNotNull(this.getDateFrom()));
	clone.setDateTo(oFF.XObjectExt.cloneIfNotNull(this.getDateTo()));
	clone.setHierarchyDueDate(oFF.XObjectExt.cloneIfNotNull(this.getHierarchyDueDate()));
	clone.setHierarchyDescription(this.getHierarchyDescription());
	clone.setHierarchyUniqueName(this.getHierarchyUniqueName());
	clone.setHierId(this.getHierId());
	clone.setHierType(this.getHierType());
	clone.setIsRemote(this.isRemote());
	clone.setIsModeled(this.isModeled());
	clone.setObjectVersion(this.getObjectVersion());
	clone.setOwner(this.getOwner());
	clone.setHierarchyVersion(this.getHierarchyVersion());
	clone.setVersionDescription(this.getVersionDescription());
	clone.setHierarchyType(this.getHierarchyType());
	clone.setDimensionName(this.getDimensionName());
	oFF.XCollectionUtils.addAllClones(clone.getAllLevelBase(), this.m_level);
	return clone;
};
oFF.QLeveledHierarchy.prototype.setupLeveledHierarchy = function(context, dimension, name)
{
	oFF.QModelComponent.prototype.setupModelComponentWithName.call( this , context, dimension, name);
	this.m_level = oFF.XList.create();
};
oFF.QLeveledHierarchy.prototype.releaseObject = function()
{
	this.m_level = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_level);
	this.m_dateFrom = oFF.XObjectExt.release(this.m_dateFrom);
	this.m_dateTo = oFF.XObjectExt.release(this.m_dateTo);
	this.m_dueDate = oFF.XObjectExt.release(this.m_dueDate);
	this.m_hierarchyDescription = null;
	this.m_hierId = null;
	this.m_hierType = null;
	this.m_objectVersion = null;
	this.m_owner = null;
	this.m_uniqueName = null;
	this.m_version = null;
	this.m_versionDescription = null;
	this.m_hierarchyType = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QLeveledHierarchy.prototype.getAllLevel = function()
{
	return this.m_level;
};
oFF.QLeveledHierarchy.prototype.getHierarchyLevels = function()
{
	return this.getAllLevel();
};
oFF.QLeveledHierarchy.prototype.getAllLevelBase = function()
{
	return this.m_level;
};
oFF.QLeveledHierarchy.prototype.getAllHierarchyLevelNames = function(excludedLevelTypes)
{
	var dimensionLevelNames = oFF.XListOfString.create();
	var levels = this.getHierarchyLevels();
	for (var i = 0; i < levels.size(); i++)
	{
		var level = levels.get(i);
		if (!excludedLevelTypes.contains(level.getLevelType()))
		{
			dimensionLevelNames.add(level.getLevelDimensionName());
		}
	}
	return dimensionLevelNames;
};
oFF.QLeveledHierarchy.prototype.getDateFrom = function()
{
	return this.m_dateFrom;
};
oFF.QLeveledHierarchy.prototype.getDateTo = function()
{
	return this.m_dateTo;
};
oFF.QLeveledHierarchy.prototype.getDimension = function()
{
	return this.getParentComponent();
};
oFF.QLeveledHierarchy.prototype.getHierarchyDueDate = function()
{
	return this.m_dueDate;
};
oFF.QLeveledHierarchy.prototype.getDueDate = function()
{
	return this.m_dueDate;
};
oFF.QLeveledHierarchy.prototype.getHierarchyDescription = function()
{
	return this.m_hierarchyDescription;
};
oFF.QLeveledHierarchy.prototype.getHierarchyName = function()
{
	return this.getName();
};
oFF.QLeveledHierarchy.prototype.getHierarchyUniqueName = function()
{
	return this.m_uniqueName;
};
oFF.QLeveledHierarchy.prototype.getHierId = function()
{
	return this.m_hierId;
};
oFF.QLeveledHierarchy.prototype.getHierType = function()
{
	return this.m_hierType;
};
oFF.QLeveledHierarchy.prototype.getLevel = function(level)
{
	var lvlIt = this.m_level.getIterator();
	while (lvlIt.hasNext())
	{
		var lvl = lvlIt.next();
		if (lvl.getLevelNumber() === level)
		{
			oFF.XObjectExt.release(lvlIt);
			return lvl;
		}
	}
	oFF.XObjectExt.release(lvlIt);
	return null;
};
oFF.QLeveledHierarchy.prototype.getLevelByType = function(type)
{
	var lvlIt = this.m_level.getIterator();
	while (lvlIt.hasNext())
	{
		var lvl = lvlIt.next();
		if (lvl.getLevelType().isEqualTo(type))
		{
			oFF.XObjectExt.release(lvlIt);
			return lvl;
		}
	}
	oFF.XObjectExt.release(lvlIt);
	return null;
};
oFF.QLeveledHierarchy.prototype.getObjectVersion = function()
{
	return this.m_objectVersion;
};
oFF.QLeveledHierarchy.prototype.getOwner = function()
{
	return this.m_owner;
};
oFF.QLeveledHierarchy.prototype.getHierarchyVersion = function()
{
	return this.m_version;
};
oFF.QLeveledHierarchy.prototype.getVersion = function()
{
	return this.m_version;
};
oFF.QLeveledHierarchy.prototype.getVersionDescription = function()
{
	return this.m_versionDescription;
};
oFF.QLeveledHierarchy.prototype.isCustomHierarchy = function()
{
	return false;
};
oFF.QLeveledHierarchy.prototype.isRemote = function()
{
	return this.m_isRemote;
};
oFF.QLeveledHierarchy.prototype.isModeled = function()
{
	return this.m_isModeled;
};
oFF.QLeveledHierarchy.prototype.setIsModeled = function(isModeled)
{
	if (this.m_isModeled !== isModeled)
	{
		this.m_isModeled = isModeled;
		this.notifyPropertyBooleanChanged(oFF.QHierarchyProperties.QY_IS_MODELED, !isModeled, isModeled);
	}
};
oFF.QLeveledHierarchy.prototype.setDateFrom = function(dateFrom)
{
	this.m_dateFrom = dateFrom;
};
oFF.QLeveledHierarchy.prototype.setDateTo = function(dateTo)
{
	this.m_dateTo = dateTo;
};
oFF.QLeveledHierarchy.prototype.setHierarchyDueDate = function(dueDate)
{
	this.m_dueDate = dueDate;
};
oFF.QLeveledHierarchy.prototype.setHierarchyDescription = function(hierarchyDescription)
{
	this.m_hierarchyDescription = hierarchyDescription;
};
oFF.QLeveledHierarchy.prototype.setHierarchyUniqueName = function(uniqueName)
{
	this.m_uniqueName = uniqueName;
};
oFF.QLeveledHierarchy.prototype.setHierId = function(hierId)
{
	this.m_hierId = hierId;
};
oFF.QLeveledHierarchy.prototype.setHierType = function(hierType)
{
	this.m_hierType = hierType;
};
oFF.QLeveledHierarchy.prototype.setIsRemote = function(isRemote)
{
	this.m_isRemote = isRemote;
};
oFF.QLeveledHierarchy.prototype.setObjectVersion = function(objectVersion)
{
	this.m_objectVersion = objectVersion;
};
oFF.QLeveledHierarchy.prototype.setOwner = function(owner)
{
	this.m_owner = owner;
};
oFF.QLeveledHierarchy.prototype.setHierarchyVersion = function(version)
{
	this.m_version = version;
};
oFF.QLeveledHierarchy.prototype.setHierarchyName = function(name)
{
	this.setName(name);
};
oFF.QLeveledHierarchy.prototype.setVersionDescription = function(versionDescription)
{
	this.m_versionDescription = versionDescription;
};
oFF.QLeveledHierarchy.prototype.getHierarchyType = function()
{
	return this.m_hierarchyType;
};
oFF.QLeveledHierarchy.prototype.setHierarchyType = function(hierarchyType)
{
	this.m_hierarchyType = hierarchyType;
};
oFF.QLeveledHierarchy.prototype.supportsHierarchyLevels = function()
{
	return oFF.XCollectionUtils.hasElements(this.m_level);
};
oFF.QLeveledHierarchy.prototype.getMostGranularLevel = function()
{
	var lowestLevel = null;
	for (var i = 0; i < this.m_level.size(); i++)
	{
		var level = this.m_level.get(i);
		if (oFF.isNull(lowestLevel) || level.getLevelType().getLevelIndex() > lowestLevel.getLevelType().getLevelIndex())
		{
			lowestLevel = level;
		}
	}
	return lowestLevel;
};
oFF.QLeveledHierarchy.prototype.getAllLevelTypes = function()
{
	var result = oFF.XSetOfNameObject.create();
	var levels = this.getAllLevel();
	for (var i = 0; i < levels.size(); i++)
	{
		result.add(levels.get(i).getLevelType());
	}
	return result;
};

oFF.QKeyRefList = function() {};
oFF.QKeyRefList.prototype = new oFF.DfAbstractList();
oFF.QKeyRefList.prototype._ff_c = "QKeyRefList";

oFF.QKeyRefList.create = function(storage, type)
{
	var newObj = new oFF.QKeyRefList();
	newObj.m_list = oFF.XCollectionFactory.createNamedList(type);
	newObj.m_storage = storage;
	return newObj;
};
oFF.QKeyRefList.prototype.m_list = null;
oFF.QKeyRefList.prototype.m_storage = null;
oFF.QKeyRefList.prototype.releaseObject = function()
{
	oFF.XObjectExt.release(this.m_list);
	oFF.DfAbstractList.prototype.releaseObject.call( this );
};
oFF.QKeyRefList.prototype.moveElement = function(fromIndex, toIndex)
{
	this.m_list.moveElement(fromIndex, toIndex);
};
oFF.QKeyRefList.prototype.sortByComparator = function(comparator)
{
	var keyRefComparator = oFF.QKeyRefComparator.create(comparator);
	this.m_list.sortByComparator(keyRefComparator);
};
oFF.QKeyRefList.prototype.sortByDirection = function(sortDirection)
{
	this.m_list.sortByDirection(sortDirection);
};
oFF.QKeyRefList.prototype.createListCopy = function()
{
	return oFF.XListUtils.sublist(this, oFF.XList.create(), 0, this.size() - 1);
};
oFF.QKeyRefList.prototype.sublist = function(beginIndex, endIndex)
{
	return oFF.XListUtils.sublist(this, oFF.XList.create(), beginIndex, endIndex);
};
oFF.QKeyRefList.prototype.insert = function(index, element)
{
	var keyRef = oFF.QKeyRefProxy.createProxy(this.m_storage, element);
	this.m_list.insert(index, keyRef);
};
oFF.QKeyRefList.prototype.removeAt = function(index)
{
	var keyRef = this.m_list.removeAt(index);
	return keyRef.get();
};
oFF.QKeyRefList.prototype.add = function(element)
{
	var keyRef = oFF.QKeyRefProxy.createProxy(this.m_storage, element);
	this.m_list.add(keyRef);
};
oFF.QKeyRefList.prototype.getValuesAsReadOnlyList = function()
{
	return this.createListCopy();
};
oFF.QKeyRefList.prototype.getIterator = function()
{
	return this.getValuesAsReadOnlyList().getIterator();
};
oFF.QKeyRefList.prototype.size = function()
{
	return this.m_list.size();
};
oFF.QKeyRefList.prototype.hasElements = function()
{
	return this.m_list.hasElements();
};
oFF.QKeyRefList.prototype.clear = function()
{
	this.m_list.clear();
};
oFF.QKeyRefList.prototype.get = function(index)
{
	var proxy = this.m_list.get(index);
	return proxy.get();
};
oFF.QKeyRefList.prototype.set = function(index, element)
{
	this.m_list.set(index, oFF.QKeyRefProxy.createProxy(this.m_storage, element));
};
oFF.QKeyRefList.prototype.createArrayCopy = function()
{
	var target = oFF.XArray.create(this.size());
	oFF.XArrayUtils.copyFromObjectArray(this, target, 0, 0, this.size());
	return target;
};
oFF.QKeyRefList.prototype.getByKey = function(key)
{
	var keyRef = this.m_list.getByKey(key);
	if (oFF.isNull(keyRef))
	{
		return null;
	}
	return keyRef.get();
};
oFF.QKeyRefList.prototype.containsKey = function(key)
{
	return this.m_list.containsKey(key);
};
oFF.QKeyRefList.prototype.getKeysAsReadOnlyListOfString = function()
{
	return this.m_list.getKeysAsReadOnlyListOfString();
};
oFF.QKeyRefList.prototype.getKeysAsIteratorOfString = function()
{
	return this.m_list.getKeysAsIteratorOfString();
};
oFF.QKeyRefList.prototype.insertKeyRef = function(index, keyRef)
{
	this.m_list.insert(index, oFF.QKeyRefProxy.createProxyWithRef(this.m_storage, keyRef));
};
oFF.QKeyRefList.prototype.addKeyRef = function(keyRef)
{
	this.m_list.add(oFF.QKeyRefProxy.createProxyWithRef(this.m_storage, keyRef));
};
oFF.QKeyRefList.prototype.removeKeyRef = oFF.noSupport;

oFF.QDataSource = function() {};
oFF.QDataSource.prototype = new oFF.QModelComponent();
oFF.QDataSource.prototype._ff_c = "QDataSource";

oFF.QDataSource.META_OBJECT_TYPE = "meta_object_type";
oFF.QDataSource.TEXT = "text";
oFF.QDataSource.PACKAGE_NAME = "package_name";
oFF.QDataSource.SCHEMA_NAME = "schema_name";
oFF.QDataSource.NAME = "name";
oFF.QDataSource.ENVIRONMENT = "environment";
oFF.QDataSource.MODEL = "model";
oFF.QDataSource.DATA_AREA = "data_area";
oFF.QDataSource.SYSTEM_NAME = "system_name";
oFF.QDataSource.INSTANCE_ID = "instance_id";
oFF.QDataSource.RRI_NAME = "RRI_NAME";
oFF.QDataSource.RRI_VALUE = "RRI_VALUE";
oFF.QDataSource.SOURCE_QUERY = "source_query";
oFF.QDataSource.SOURCE_QUERY_INA = "sourceQuery";
oFF.QDataSource.RUN_AS_USER = "run_as_user";
oFF.QDataSource.USER = "user";
oFF.QDataSource.ALIAS = "alias";
oFF.QDataSource.URI_PACKAGE_NAME = "package";
oFF.QDataSource.URI_SCHEMA_NAME = "schema";
oFF.QDataSource.URI_NAME = "name";
oFF.QDataSource.MICRO_CUBE_NAME = "micro_cube_name";
oFF.QDataSource.CREATED_BY = "created_by";
oFF.QDataSource.CREATED_ON = "created_on";
oFF.QDataSource.LAST_DATA_UPDATE_BY = "last_data_updated_by";
oFF.QDataSource.LAST_DATA_UPDATE_ON = "last_data_updated_on";
oFF.QDataSource.DATA_ROLLUP_MAX = "data_rollup_max";
oFF.QDataSource.DATA_ROLLUP_MIN = "data_rollup_min";
oFF.QDataSource.DUE_DATE = "due_date";
oFF.QDataSource.VALIDATION_HASH = "validationHash";
oFF.QDataSource.create = function()
{
	var newDataSource = new oFF.QDataSource();
	newDataSource.setupDataSource(null);
	return newDataSource;
};
oFF.QDataSource.createWithContext = function(context)
{
	var newObject = new oFF.QDataSource();
	newObject.setupDataSource(context);
	return newObject;
};
oFF.QDataSource.prototype.m_properties = null;
oFF.QDataSource.prototype.m_multiSources = null;
oFF.QDataSource.prototype.m_blendingSources = null;
oFF.QDataSource.prototype.m_mappings = null;
oFF.QDataSource.prototype.m_extendedDimensions = null;
oFF.QDataSource.prototype.m_microCube = null;
oFF.QDataSource.prototype.m_genericServiceDescription = null;
oFF.QDataSource.prototype.m_blendingDefinition = null;
oFF.QDataSource.prototype.m_parentCubeInfo = null;
oFF.QDataSource.prototype.setupDataSource = function(context)
{
	this.setupModelComponent(context, null);
	this.m_multiSources = oFF.XList.create();
	this.m_blendingSources = oFF.XList.create();
	this.m_mappings = oFF.PrFactory.createList();
	this.m_properties = oFF.XProperties.create();
	this.m_extendedDimensions = null;
	this.m_microCube = null;
	this.m_genericServiceDescription = null;
};
oFF.QDataSource.prototype.releaseObject = function()
{
	this.m_multiSources = oFF.XObjectExt.release(this.m_multiSources);
	this.m_blendingSources = oFF.XObjectExt.release(this.m_blendingSources);
	this.m_properties = oFF.XObjectExt.release(this.m_properties);
	this.m_extendedDimensions = oFF.XObjectExt.release(this.m_extendedDimensions);
	this.m_mappings = oFF.XObjectExt.release(this.m_mappings);
	this.m_extendedDimensions = null;
	this.m_microCube = null;
	this.m_genericServiceDescription = null;
	this.m_blendingDefinition = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QDataSource.prototype.clear = function()
{
	if (oFF.notNull(this.m_multiSources))
	{
		this.m_multiSources.clear();
	}
	if (oFF.notNull(this.m_blendingSources))
	{
		this.m_blendingSources = oFF.XList.create();
	}
	if (oFF.notNull(this.m_properties))
	{
		this.m_properties.clear();
	}
	if (!oFF.PrUtils.isListEmpty(this.m_mappings))
	{
		this.m_mappings.clear();
	}
	this.m_extendedDimensions = null;
	this.m_microCube = null;
	this.m_genericServiceDescription = null;
	this.m_blendingDefinition = null;
	this.m_parentCubeInfo = null;
};
oFF.QDataSource.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.DATA_SOURCE;
};
oFF.QDataSource.prototype.cloneOlapComponent = function(context, parent)
{
	var dataSourceClone = oFF.QFactory.createDataSource();
	dataSourceClone.copyFrom(this, null);
	return dataSourceClone;
};
oFF.QDataSource.prototype.copyFromInternal = function(other, flags)
{
	var otherDataSource = other;
	oFF.QModelComponent.prototype.copyFromInternal.call( this , otherDataSource, flags);
	this.clear();
	this.m_properties = oFF.XProperties.createByMapCopy(otherDataSource.getProperties());
	var multiSources = otherDataSource.getMultiSources();
	if (oFF.notNull(multiSources))
	{
		var multiSourceSize = multiSources.size();
		for (var multiSourceIndex = 0; multiSourceIndex < multiSourceSize; multiSourceIndex++)
		{
			var multiSource = multiSources.get(multiSourceIndex);
			this.m_multiSources.add(multiSource.cloneOlapComponent(null, null));
		}
	}
	var otherMappings = otherDataSource.getMappings();
	if (!oFF.PrUtils.isListEmpty(otherMappings))
	{
		this.m_mappings.copyFrom(otherMappings, null);
	}
	var otherExtendedDimensions = otherDataSource.getExtendedDimensions();
	if (oFF.notNull(otherExtendedDimensions))
	{
		var myExtendedDimensions = this.getExtendedDimensionsBase();
		myExtendedDimensions.clear();
		var otherExtendedDimensionsSize = otherExtendedDimensions.size();
		for (var extDimIdx = 0; extDimIdx < otherExtendedDimensionsSize; extDimIdx++)
		{
			myExtendedDimensions.add(otherExtendedDimensions.get(extDimIdx));
		}
	}
	if (otherDataSource.isBasedOnMicroCube())
	{
		this.setMicroCube(otherDataSource.getMicroCube());
	}
	this.m_genericServiceDescription = oFF.PrUtils.createDeepCopyExt(otherDataSource.getGenericServiceDescription(), this.m_genericServiceDescription);
	var blendingDefinition = otherDataSource.getBlendingDefinition();
	this.m_blendingDefinition = oFF.XObjectExt.cloneIfNotNull(blendingDefinition);
	var otherCubeInfo = otherDataSource;
	var parentCubeInfo = otherCubeInfo.getParentCubeInfo();
	if (oFF.notNull(parentCubeInfo))
	{
		var parentCubeInfoClone = parentCubeInfo.clone();
		this.setParentCubeInfo(parentCubeInfoClone);
	}
};
oFF.QDataSource.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherDataSource = other;
	if (!oFF.XString.isEqual(this.getFullQualifiedName(), otherDataSource.getFullQualifiedName()))
	{
		return false;
	}
	if (!oFF.XObjectExt.areEqual(this.getExtendedDimensions(), otherDataSource.getExtendedDimensions()))
	{
		return false;
	}
	if (!this.getMappings().isEqualTo(otherDataSource.getMappings()))
	{
		return false;
	}
	if (!this.getMultiSources().isEqualTo(otherDataSource.getMultiSources()))
	{
		return false;
	}
	if (!this.getProperties().isEqualTo(otherDataSource.getProperties()))
	{
		return false;
	}
	if (!this.getCustomProperties().isEqualTo(otherDataSource.getCustomProperties()))
	{
		return false;
	}
	return true;
};
oFF.QDataSource.prototype.getRunAsUser = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.RUN_AS_USER);
};
oFF.QDataSource.prototype.setRunAsUser = function(runAsUser)
{
	this.m_properties.put(oFF.QDataSource.RUN_AS_USER, runAsUser);
};
oFF.QDataSource.prototype.getType = function()
{
	var type = this.m_properties.getByKey(oFF.QDataSource.META_OBJECT_TYPE);
	if (oFF.isNull(type))
	{
		return null;
	}
	return oFF.MetaObjectType.lookup(type);
};
oFF.QDataSource.prototype.setType = function(type)
{
	if (oFF.notNull(type))
	{
		this.m_properties.put(oFF.QDataSource.META_OBJECT_TYPE, type.getName());
	}
};
oFF.QDataSource.prototype.getInstanceId = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.INSTANCE_ID);
};
oFF.QDataSource.prototype.setInstanceId = function(instanceId)
{
	this.m_properties.put(oFF.QDataSource.INSTANCE_ID, instanceId);
};
oFF.QDataSource.prototype.getSystemName = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.SYSTEM_NAME);
};
oFF.QDataSource.prototype.setSystemName = function(systemName)
{
	this.m_properties.put(oFF.QDataSource.SYSTEM_NAME, systemName);
};
oFF.QDataSource.prototype.getSchemaName = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.SCHEMA_NAME);
};
oFF.QDataSource.prototype.setSchemaName = function(schemaName)
{
	this.m_properties.put(oFF.QDataSource.SCHEMA_NAME, schemaName);
};
oFF.QDataSource.prototype.getPackageName = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.PACKAGE_NAME);
};
oFF.QDataSource.prototype.setPackageName = function(packageName)
{
	this.m_properties.put(oFF.QDataSource.PACKAGE_NAME, packageName);
};
oFF.QDataSource.prototype.getAlias = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.ALIAS);
};
oFF.QDataSource.prototype.setAlias = function(alias)
{
	this.m_properties.put(oFF.QDataSource.ALIAS, alias);
};
oFF.QDataSource.prototype.getObjectName = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.NAME);
};
oFF.QDataSource.prototype.setObjectName = function(objectName)
{
	this.m_properties.put(oFF.QDataSource.NAME, objectName);
};
oFF.QDataSource.prototype.setText = function(text)
{
	this.m_properties.put(oFF.QDataSource.TEXT, text);
};
oFF.QDataSource.prototype.getText = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.TEXT);
};
oFF.QDataSource.prototype.getName = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.NAME);
};
oFF.QDataSource.prototype.setName = function(name)
{
	this.m_properties.put(oFF.QDataSource.NAME, name);
};
oFF.QDataSource.prototype.getEnvironmentName = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.ENVIRONMENT);
};
oFF.QDataSource.prototype.setEnvironmentName = function(environmentName)
{
	this.m_properties.put(oFF.QDataSource.ENVIRONMENT, environmentName);
};
oFF.QDataSource.prototype.getModelName = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.MODEL);
};
oFF.QDataSource.prototype.setModelName = function(modelName)
{
	this.m_properties.put(oFF.QDataSource.MODEL, modelName);
};
oFF.QDataSource.prototype.getDataArea = function()
{
	var dataArea = this.m_properties.getByKey(oFF.QDataSource.DATA_AREA);
	if (oFF.XString.isEqual(dataArea, oFF.PlanningConstants.DATA_AREA_DEFAULT))
	{
		return null;
	}
	return dataArea;
};
oFF.QDataSource.prototype.setDataArea = function(dataArea)
{
	this.m_properties.put(oFF.QDataSource.DATA_AREA, dataArea);
};
oFF.QDataSource.prototype.getRriName = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.RRI_NAME);
};
oFF.QDataSource.prototype.getRriValue = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.RRI_VALUE);
};
oFF.QDataSource.prototype.setRriName = function(rriName)
{
	this.m_properties.put(oFF.QDataSource.RRI_NAME, rriName);
};
oFF.QDataSource.prototype.setRriValue = function(rriValue)
{
	this.m_properties.put(oFF.QDataSource.RRI_VALUE, rriValue);
};
oFF.QDataSource.prototype.getValidationHash = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.VALIDATION_HASH);
};
oFF.QDataSource.prototype.setValidationHash = function(validationHash)
{
	this.m_properties.put(oFF.QDataSource.VALIDATION_HASH, validationHash);
};
oFF.QDataSource.prototype.setSourceQuery = function(sourceQuery)
{
	this.m_properties.put(oFF.QDataSource.SOURCE_QUERY, sourceQuery);
};
oFF.QDataSource.prototype.getSourceQuery = function()
{
	return this.m_properties.getStringByKey(oFF.QDataSource.SOURCE_QUERY);
};
oFF.QDataSource.prototype.setCustomProperties = function(properties)
{
	if (oFF.notNull(properties))
	{
		var sourceQuery = properties.getStringByKey(oFF.QDataSource.SOURCE_QUERY_INA);
		if (oFF.notNull(sourceQuery))
		{
			this.setSourceQuery(sourceQuery);
		}
	}
};
oFF.QDataSource.prototype.addCustomProperty = function(name, value)
{
	if (oFF.XString.isEqual(name, oFF.QDataSource.SOURCE_QUERY_INA))
	{
		this.setSourceQuery(value);
	}
};
oFF.QDataSource.prototype.getCustomProperties = function()
{
	var properties = oFF.XProperties.create();
	var sourceQuery = this.getSourceQuery();
	if (oFF.notNull(sourceQuery))
	{
		properties.put(oFF.QDataSource.SOURCE_QUERY_INA, sourceQuery);
	}
	return properties;
};
oFF.QDataSource.prototype.getProperties = function()
{
	return this.m_properties;
};
oFF.QDataSource.prototype.getPropertiesBase = function()
{
	return this.m_properties;
};
oFF.QDataSource.prototype.getAsScope = function()
{
	var schemaName = this.getSchemaName();
	var asScope;
	if (oFF.XStringUtils.isNullOrEmpty(schemaName))
	{
		asScope = this.getAsMinimalScope();
	}
	else
	{
		asScope = oFF.XStringUtils.concatenate3(schemaName, ".", this.getAsMinimalScope());
	}
	return asScope;
};
oFF.QDataSource.prototype.getAsMinimalScope = function()
{
	var catalogName = this.getPackageName();
	var asMinimalScope;
	if (oFF.XStringUtils.isNullOrEmpty(catalogName))
	{
		asMinimalScope = this.getObjectName();
	}
	else
	{
		asMinimalScope = oFF.XStringUtils.concatenate3(catalogName, "/", this.getObjectName());
	}
	return asMinimalScope;
};
oFF.QDataSource.prototype.getCacheKeyName2 = function()
{
	var cacheKeyName = this.getCacheKeyName();
	var extendedDimensions = this.getExtendedDimensions();
	if (oFF.notNull(extendedDimensions) && extendedDimensions.size() > 0)
	{
		var extCubeDefBuffer = oFF.XStringBuffer.create();
		extCubeDefBuffer.append(cacheKeyName);
		extCubeDefBuffer.append("~");
		extCubeDefBuffer.append(extendedDimensions.toString());
		cacheKeyName = extCubeDefBuffer.toString();
		cacheKeyName = oFF.XSha1.createSHA1(cacheKeyName);
	}
	return cacheKeyName;
};
oFF.QDataSource.prototype.getCacheKeyName = function()
{
	var type = this.getType();
	var cacheKeyName;
	if (type === oFF.MetaObjectType.MULTI_SOURCE || type === oFF.MetaObjectType.BLENDING)
	{
		cacheKeyName = oFF.PrUtils.serialize(this.getFQNMulti(true, true), true, false, 0);
	}
	else
	{
		cacheKeyName = this.getFQNSingle(true, true);
	}
	var hashKey = oFF.XSha1.createSHA1(cacheKeyName);
	return hashKey;
};
oFF.QDataSource.prototype.getFullQualifiedName = function()
{
	return this.getFullQualifiedNameExt(false);
};
oFF.QDataSource.prototype.getFullQualifiedNameExt = function(includeProperties)
{
	var type = this.getType();
	var fqn;
	if (type === oFF.MetaObjectType.MULTI_SOURCE || type === oFF.MetaObjectType.BLENDING)
	{
		fqn = oFF.PrUtils.serialize(this.getFQNMulti(includeProperties, false), true, false, 0);
	}
	else
	{
		fqn = this.getFQNSingle(includeProperties, false);
	}
	return fqn;
};
oFF.QDataSource.prototype.getFQNMulti = function(includeProperties, isCacheKeyContext)
{
	var rootStructure = oFF.PrFactory.createStructure();
	rootStructure.putString("DataSource", this.getFQNSingle(includeProperties, isCacheKeyContext));
	var sources = rootStructure.putNewList("Sources");
	var multiSources = this.getMultiSources();
	var multiSourcesSize = multiSources.size();
	for (var i = 0; i < multiSourcesSize; i++)
	{
		var multiSource = multiSources.get(i);
		if (multiSource.getType() === oFF.MetaObjectType.MULTI_SOURCE || multiSource.getType() === oFF.MetaObjectType.BLENDING)
		{
			sources.add(multiSource.getFQNMulti(includeProperties, isCacheKeyContext));
		}
		else
		{
			sources.addString(multiSource.getFQNSingle(includeProperties, isCacheKeyContext));
		}
	}
	rootStructure.put("Mappings", oFF.PrFactory.createListDeepCopy(this.getMappings()));
	return rootStructure;
};
oFF.QDataSource.prototype.getFQNSingle = function(includeProperties, isCacheKeyContext)
{
	var buffer = oFF.XStringBuffer.create();
	var runAsUser = this.getRunAsUser();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(runAsUser))
	{
		buffer.append("<").append(runAsUser).append(">");
	}
	var alias = this.getAlias();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(alias))
	{
		buffer.append("~").append(alias).append("~");
	}
	var environmentName = this.getEnvironmentName();
	var hasEnvironmentName = oFF.XStringUtils.isNotNullAndNotEmpty(environmentName);
	var modelName = this.getModelName();
	var hasModelName = oFF.XStringUtils.isNotNullAndNotEmpty(modelName);
	var dataArea = this.getDataArea();
	var hasDataArea = oFF.XStringUtils.isNotNullAndNotEmpty(dataArea);
	var type = this.getType();
	if (hasEnvironmentName || hasModelName || hasDataArea)
	{
		buffer.append("$[");
		if (hasEnvironmentName)
		{
			buffer.append(environmentName);
		}
		buffer.append("][");
		if (hasModelName)
		{
			buffer.append(modelName);
		}
		buffer.append("]");
		if (hasDataArea)
		{
			buffer.append("[").append(dataArea).append("]");
		}
		if (oFF.notNull(type))
		{
			buffer.append("/");
		}
	}
	if (oFF.notNull(type))
	{
		buffer.append(type.getName());
		buffer.append(":");
	}
	var schemaName = this.getSchemaName();
	var hasSchemaName = oFF.XStringUtils.isNotNullAndNotEmpty(schemaName);
	var catalogName = this.getPackageName();
	var hasCatalogName = oFF.XStringUtils.isNotNullAndNotEmpty(catalogName);
	var objectName = this.getObjectName();
	var hasObjectName = oFF.XStringUtils.isNotNullAndNotEmpty(objectName);
	if (oFF.notNull(type) || hasSchemaName || hasCatalogName || hasObjectName)
	{
		buffer.append("[");
		if (hasSchemaName)
		{
			buffer.append(this.escape(schemaName));
		}
		buffer.append("][");
		if (hasCatalogName)
		{
			buffer.append(this.escape(catalogName));
		}
		buffer.append("][");
		if (hasObjectName)
		{
			buffer.append(this.escape(objectName));
		}
		buffer.append("]");
	}
	if (includeProperties === true)
	{
		var copy = this.m_properties.createMapOfStringByStringCopy();
		copy.remove(oFF.QDataSource.META_OBJECT_TYPE);
		copy.remove(oFF.QDataSource.SCHEMA_NAME);
		copy.remove(oFF.QDataSource.PACKAGE_NAME);
		copy.remove(oFF.QDataSource.NAME);
		copy.remove(oFF.QDataSource.ENVIRONMENT);
		copy.remove(oFF.QDataSource.MODEL);
		copy.remove(oFF.QDataSource.DATA_AREA);
		copy.remove(oFF.QDataSource.RUN_AS_USER);
		copy.remove(oFF.QDataSource.ALIAS);
		if (isCacheKeyContext)
		{
			copy.remove(oFF.QDataSource.INSTANCE_ID);
			copy.remove(oFF.QDataSource.SYSTEM_NAME);
			copy.remove(oFF.QDataSource.TEXT);
			copy.remove(oFF.QDataSource.RRI_NAME);
			copy.remove(oFF.QDataSource.RRI_VALUE);
			copy.remove(oFF.QDataSource.VALIDATION_HASH);
		}
		var remainingKeys = copy.getKeysAsReadOnlyListOfString();
		if (remainingKeys.size() > 0)
		{
			buffer.append("?");
			for (var i = 0; i < remainingKeys.size(); i++)
			{
				if (i > 0)
				{
					buffer.append("&");
				}
				var key = remainingKeys.get(i);
				var value = copy.getByKey(key);
				var escaped = oFF.XHttpUtils.encodeURIComponent(value);
				buffer.append(key).append("=").append(escaped);
			}
		}
	}
	return buffer.toString();
};
oFF.QDataSource.prototype.extendWithDataSource = function(datasource)
{
	if (oFF.notNull(datasource))
	{
		this.extendProperties(this.m_properties, datasource.getProperties());
		this.m_properties.remove(oFF.QDataSource.CREATED_BY);
		this.m_properties.remove(oFF.QDataSource.CREATED_ON);
		this.m_properties.remove(oFF.QDataSource.LAST_DATA_UPDATE_BY);
		this.m_properties.remove(oFF.QDataSource.LAST_DATA_UPDATE_ON);
		this.m_properties.remove(oFF.QDataSource.DATA_ROLLUP_MAX);
		this.m_properties.remove(oFF.QDataSource.DATA_ROLLUP_MIN);
		this.m_properties.remove(oFF.QDataSource.DUE_DATE);
		this.m_properties.remove(oFF.QDataSource.USER);
		if (this.getType() === oFF.MetaObjectType.MULTI_SOURCE && datasource.getType() === oFF.MetaObjectType.MULTI_SOURCE || this.getType() === oFF.MetaObjectType.BLENDING && datasource.getType() === oFF.MetaObjectType.BLENDING)
		{
			var multisources = datasource.getMultiSources();
			var existingMultiSources = this.getMultiSourcesBase();
			if (oFF.notNull(multisources))
			{
				var multiSourcesSize = multisources.size();
				for (var multiSourceIndex = 0; multiSourceIndex < multiSourcesSize; multiSourceIndex++)
				{
					var multisource = multisources.get(multiSourceIndex);
					if (existingMultiSources.size() > multiSourceIndex)
					{
						var existingMultiSource = existingMultiSources.get(multiSourceIndex);
						existingMultiSource.extendWithDataSource(multisource);
					}
					else
					{
						existingMultiSources.insert(multiSourceIndex, multisource.cloneOlapComponent(null, null));
					}
				}
			}
			var mappings = datasource.getMappings();
			var existingMappings = this.getMappings();
			var len = oFF.PrUtils.getListSize(mappings, 0);
			for (var mappingIndex = 0; mappingIndex < len; mappingIndex++)
			{
				if (oFF.PrUtils.getListSize(existingMappings, 0) > mappingIndex)
				{
					existingMappings.set(mappingIndex, oFF.PrUtils.createDeepCopy(oFF.PrUtils.getElement(mappings, mappingIndex)));
				}
				else
				{
					existingMappings.add(oFF.PrUtils.createDeepCopy(oFF.PrUtils.getElement(mappings, mappingIndex)));
				}
			}
		}
		var extendedDimensions = datasource.getExtendedDimensions();
		if (oFF.notNull(extendedDimensions))
		{
			var extendedDimensionsBase = this.getExtendedDimensionsBase();
			extendedDimensionsBase.clear();
			extendedDimensionsBase.addAll(extendedDimensions);
		}
	}
};
oFF.QDataSource.prototype.extendProperties = function(properties, externalDsProperties)
{
	var externalDsKeyIterator = externalDsProperties.getKeysAsIteratorOfString();
	while (externalDsKeyIterator.hasNext())
	{
		var key = externalDsKeyIterator.next();
		if (oFF.XStringUtils.isNullOrEmpty(properties.getByKey(key)))
		{
			properties.put(key, externalDsProperties.getByKey(key));
		}
	}
};
oFF.QDataSource.prototype.setByUri = function(uri)
{
	this.setSystemName(uri.getHost());
	var type = oFF.XString.substring(uri.getPath(), 1, -1);
	var metaObjectType = oFF.MetaObjectType.lookup(type);
	this.setType(metaObjectType);
	var queryElements = uri.getQueryElements();
	var set = oFF.XSetOfNameObject.create();
	var queryElementsSize = queryElements.size();
	for (var i = 0; i < queryElementsSize; i++)
	{
		set.add(queryElements.get(i));
	}
	if (set.containsKey(oFF.QDataSource.URI_NAME))
	{
		this.setName(set.getByKey(oFF.QDataSource.URI_NAME).getValue());
	}
	if (set.containsKey(oFF.QDataSource.URI_PACKAGE_NAME))
	{
		this.setPackageName(set.getByKey(oFF.QDataSource.URI_PACKAGE_NAME).getValue());
	}
	if (set.containsKey(oFF.QDataSource.URI_SCHEMA_NAME))
	{
		this.setSchemaName(set.getByKey(oFF.QDataSource.URI_SCHEMA_NAME).getValue());
	}
};
oFF.QDataSource.prototype.setFullQualifiedName = function(name)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(name) && oFF.XString.startsWith(name, "{") && oFF.XString.endsWith(name, "}"))
	{
		var multiSource;
		if (oFF.XString.containsString(name, "'"))
		{
			multiSource = oFF.XString.replace(name, "'", "\"");
		}
		else
		{
			multiSource = name;
		}
		var jsonParser = oFF.JsonParserFactory.newInstance();
		var jsonElement = jsonParser.parse(multiSource);
		oFF.MessageUtil.checkNoError(jsonParser);
		oFF.XObjectExt.release(jsonParser);
		this.setByJson(jsonElement);
	}
	else
	{
		this.setFQNSingle(name);
	}
};
oFF.QDataSource.prototype.setByJson = function(element)
{
	var jsonStructure = oFF.XJson.extractJsonContent(element);
	if (oFF.PrUtils.getStringProperty(jsonStructure, "DataSource") !== null)
	{
		this.setFQNMulti(jsonStructure);
	}
	else
	{
		this.clear();
		var importer = oFF.QInAImportFactory.createForRepository(null, null);
		var dataSource = importer.importDataSource(jsonStructure);
		oFF.XObjectExt.assertNotNullExt(dataSource, "illegal name");
		this.extendWithDataSource(dataSource);
	}
};
oFF.QDataSource.prototype.setFQNMulti = function(multiStructure)
{
	this.setFQNSingle(oFF.PrUtils.getStringValueProperty(multiStructure, "DataSource", null));
	var type = this.getType();
	if (oFF.isNull(type))
	{
		this.setType(oFF.MetaObjectType.MULTI_SOURCE);
	}
	else
	{
		if (type !== oFF.MetaObjectType.MULTI_SOURCE && type !== oFF.MetaObjectType.BLENDING)
		{
			throw oFF.XException.createRuntimeException("illegal type");
		}
	}
	var sources = oFF.PrUtils.getListProperty(multiStructure, "Sources");
	if (oFF.notNull(sources))
	{
		var sourcesSize = sources.size();
		for (var i = 0; i < sourcesSize; i++)
		{
			var multiSource = oFF.QFactory.createDataSource();
			var source = sources.get(i);
			if (source.getType() === oFF.PrElementType.STRING)
			{
				multiSource.setFQNSingle(source.getString());
			}
			else
			{
				multiSource.setFQNMulti(source);
			}
			this.getMultiSourcesBase().add(multiSource);
		}
	}
	this.setMappings(oFF.PrUtils.getListProperty(multiStructure, "Mappings"));
};
oFF.QDataSource.prototype.setFQNSingle = function(name)
{
	if (oFF.notNull(name))
	{
		var fqn = name;
		if (oFF.XString.startsWith(fqn, "<"))
		{
			var startRunAsUserIndex = 1;
			var endRunAsUserIndex = oFF.XString.indexOfFrom(fqn, ">", startRunAsUserIndex);
			if (endRunAsUserIndex === -1)
			{
				return;
			}
			this.setRunAsUser(oFF.XString.substring(fqn, startRunAsUserIndex, endRunAsUserIndex));
			fqn = oFF.XString.substring(fqn, endRunAsUserIndex + 1, oFF.XString.size(fqn));
		}
		if (oFF.XString.startsWith(fqn, "~"))
		{
			var startAliasIndex = 1;
			var endAliasIndex = oFF.XString.indexOfFrom(fqn, "~", startAliasIndex);
			if (endAliasIndex === -1)
			{
				return;
			}
			this.setAlias(oFF.XString.substring(fqn, startAliasIndex, endAliasIndex));
			fqn = oFF.XString.substring(fqn, endAliasIndex + 1, oFF.XString.size(fqn));
		}
		var len = oFF.XString.size(fqn);
		var startIndex0 = 0;
		if (oFF.XString.startsWith(fqn, "$["))
		{
			var startIndex1 = startIndex0 + 2;
			var endIndex1 = this.searchEnd(fqn, startIndex1);
			var environmentName = this.unescape(oFF.XString.substring(fqn, startIndex1, endIndex1));
			this.setEnvironmentName(environmentName);
			var startIndex2 = endIndex1 + 1;
			if (startIndex2 >= len)
			{
				return;
			}
			var charAt2 = oFF.XString.getCharAt(fqn, startIndex2);
			if (charAt2 === 47)
			{
				startIndex0 = startIndex2 + 1;
			}
			else if (charAt2 === 91)
			{
				startIndex2++;
				var endIndex2 = this.searchEnd(fqn, startIndex2);
				var modelName = this.unescape(oFF.XString.substring(fqn, startIndex2, endIndex2));
				this.setModelName(modelName);
				var startIndex3 = endIndex2 + 1;
				if (startIndex3 >= len)
				{
					return;
				}
				var charAt3 = oFF.XString.getCharAt(fqn, startIndex3);
				if (charAt3 === 47)
				{
					startIndex0 = startIndex3 + 1;
				}
				else
				{
					startIndex3++;
					var endIndex3 = this.searchEnd(fqn, startIndex3);
					var dataArea = this.unescape(oFF.XString.substring(fqn, startIndex3, endIndex3));
					this.setDataArea(dataArea);
					startIndex0 = endIndex3 + 2;
				}
			}
			else
			{
				return;
			}
		}
		if (startIndex0 < len)
		{
			var endIndex = oFF.XString.indexOfFrom(fqn, ":", startIndex0);
			var typeValue = oFF.MetaObjectType.lookup(oFF.XString.substring(fqn, startIndex0, endIndex));
			this.setType(typeValue);
			var startIndex5 = endIndex + 2;
			if (this.isBracketNext(fqn, endIndex, len) && startIndex5 < len)
			{
				endIndex = this.searchEnd(fqn, startIndex5);
				var name5 = this.unescape(oFF.XString.substring(fqn, startIndex5, endIndex));
				var startIndex6 = endIndex + 2;
				if (this.isBracketNext(fqn, endIndex, len) && startIndex6 < len)
				{
					endIndex = this.searchEnd(fqn, startIndex6);
					var name6 = this.unescape(oFF.XString.substring(fqn, startIndex6, endIndex));
					var startIndex7 = endIndex + 2;
					if (this.isBracketNext(fqn, endIndex, len) && startIndex7 < len)
					{
						endIndex = this.searchEnd(fqn, startIndex7);
						var name7 = this.unescape(oFF.XString.substring(fqn, startIndex7, endIndex));
						this.setSchemaName(name5);
						this.setPackageName(name6);
						this.setObjectName(name7);
					}
					else
					{
						this.setPackageName(name5);
						this.setObjectName(name6);
					}
				}
				else
				{
					this.setObjectName(name5);
				}
			}
			startIndex0 = endIndex + 1;
		}
		if (startIndex0 < len)
		{
			var query = oFF.XString.substring(fqn, startIndex0, -1);
			if (oFF.XString.startsWith(query, "?"))
			{
				var queryAsUri = oFF.XUri.createFromUrl(query);
				var queryMap = queryAsUri.getQueryMap();
				this.m_properties.putAll(queryMap);
			}
		}
	}
};
oFF.QDataSource.prototype.isBracketNext = function(fqn, index, len)
{
	if (index + 1 < len)
	{
		var c = oFF.XString.getCharAt(fqn, index + 1);
		return c === 91;
	}
	else
	{
		return false;
	}
};
oFF.QDataSource.prototype.searchEnd = function(name, startPosition)
{
	var position = startPosition;
	var len = oFF.XString.size(name);
	while (position < len)
	{
		var x1 = oFF.XString.indexOfFrom(name, "]", position);
		var x2 = oFF.XString.indexOfFrom(name, "]]", position);
		if (x2 === -1)
		{
			if (x1 === -1)
			{
				throw oFF.XException.createRuntimeException("#1 Qualified name format error");
			}
			return x1;
		}
		if (x1 < x2)
		{
			return x1;
		}
		position = x2 + 2;
	}
	throw oFF.XException.createRuntimeException("#2 Qualified name format error");
};
oFF.QDataSource.prototype.escape = function(value)
{
	var first = oFF.XString.replace(value, "[", "[[");
	return oFF.XString.replace(first, "]", "]]");
};
oFF.QDataSource.prototype.unescape = function(value)
{
	var first = oFF.XString.replace(value, "[[", "[");
	return oFF.XString.replace(first, "]]", "]");
};
oFF.QDataSource.prototype.isEmpty = function()
{
	return this.m_properties.isEmpty();
};
oFF.QDataSource.prototype.hasElements = function()
{
	return this.m_properties.hasElements();
};
oFF.QDataSource.prototype.size = function()
{
	return this.m_properties.size();
};
oFF.QDataSource.prototype.getMultiSources = function()
{
	return this.m_multiSources;
};
oFF.QDataSource.prototype.getMultiSourcesBase = function()
{
	return this.m_multiSources;
};
oFF.QDataSource.prototype.getMappings = function()
{
	return this.m_mappings;
};
oFF.QDataSource.prototype.setMappings = function(mappings)
{
	if (oFF.PrUtils.isListEmpty(mappings))
	{
		if (this.m_mappings.size() !== 0)
		{
			this.m_mappings.clear();
		}
	}
	else
	{
		this.m_mappings.copyFrom(mappings, null);
	}
};
oFF.QDataSource.prototype.hasText = function()
{
	return oFF.notNull(this.m_properties) && this.m_properties.containsKey(oFF.QDataSource.TEXT);
};
oFF.QDataSource.prototype.getExtendedDimensions = function()
{
	return this.m_extendedDimensions;
};
oFF.QDataSource.prototype.getExtendedDimensionsBase = function()
{
	if (oFF.isNull(this.m_extendedDimensions))
	{
		this.m_extendedDimensions = oFF.XList.create();
	}
	return this.m_extendedDimensions;
};
oFF.QDataSource.prototype.getBlendingSources = function()
{
	return this.m_blendingSources;
};
oFF.QDataSource.prototype.setBlendingSources = function(sources)
{
	oFF.XObjectExt.release(this.m_blendingSources);
	this.m_blendingSources = sources;
};
oFF.QDataSource.prototype.isBasedOnMicroCube = function()
{
	return this.getMicroCubeName() !== null || this.getMicroCube() !== null;
};
oFF.QDataSource.prototype.getMicroCubeName = function()
{
	return this.m_properties.getByKey(oFF.QDataSource.MICRO_CUBE_NAME);
};
oFF.QDataSource.prototype.setMicroCubeName = function(microCubeName)
{
	this.m_properties.put(oFF.QDataSource.MICRO_CUBE_NAME, microCubeName);
};
oFF.QDataSource.prototype.getMicroCube = function()
{
	return this.m_microCube;
};
oFF.QDataSource.prototype.setMicroCube = function(microCube)
{
	this.m_microCube = microCube;
	if (oFF.notNull(microCube))
	{
		this.setMicroCubeName(microCube.getQueryManager().getNameForMicroCubeUse());
	}
};
oFF.QDataSource.prototype.setGenericServiceDescription = function(genericServiceDescription)
{
	this.m_genericServiceDescription = genericServiceDescription;
};
oFF.QDataSource.prototype.getGenericServiceDescription = function()
{
	return this.m_genericServiceDescription;
};
oFF.QDataSource.prototype.addNewExtendedDimension = function(name, joinFieldName, joinFieldNameExternal)
{
	var extDim = oFF.QExtendedDimension.create(name, joinFieldName, joinFieldNameExternal);
	this.getExtendedDimensionsBase().add(extDim);
	return extDim;
};
oFF.QDataSource.prototype.getBlendingDefinition = function()
{
	return this.m_blendingDefinition;
};
oFF.QDataSource.prototype.setBlendingDefinition = function(blendingDefinition)
{
	this.m_blendingDefinition = blendingDefinition;
};
oFF.QDataSource.prototype.getUpdatedOn = function()
{
	var isoFormat = this.m_properties.getStringByKey(oFF.QDataSource.LAST_DATA_UPDATE_ON);
	var dateTime = null;
	if (oFF.notNull(isoFormat))
	{
		dateTime = oFF.XDateTime.createDateTimeFromIsoFormat(isoFormat);
	}
	return dateTime;
};
oFF.QDataSource.prototype.setLastUpdateOn = function(lastUpdateOn)
{
	if (oFF.notNull(lastUpdateOn))
	{
		var isoFormat = lastUpdateOn.toIsoFormat();
		this.m_properties.putString(oFF.QDataSource.LAST_DATA_UPDATE_ON, isoFormat);
	}
	else
	{
		this.m_properties.remove(oFF.QDataSource.LAST_DATA_UPDATE_ON);
	}
};
oFF.QDataSource.prototype.setLastUpdateBy = function(userName)
{
	this.m_properties.putString(oFF.QDataSource.LAST_DATA_UPDATE_BY, userName);
};
oFF.QDataSource.prototype.getUpdatedBy = function()
{
	return this.m_properties.getStringByKey(oFF.QDataSource.LAST_DATA_UPDATE_BY);
};
oFF.QDataSource.prototype.getCreatedOn = function()
{
	var isoFormat = this.m_properties.getStringByKey(oFF.QDataSource.CREATED_ON);
	var dateTime = null;
	if (oFF.notNull(isoFormat))
	{
		dateTime = oFF.XDateTime.createDateTimeFromIsoFormat(isoFormat);
	}
	return dateTime;
};
oFF.QDataSource.prototype.setCreatedOn = function(createdOn)
{
	if (oFF.notNull(createdOn))
	{
		var isoFormat = createdOn.toIsoFormat();
		this.m_properties.putString(oFF.QDataSource.CREATED_ON, isoFormat);
	}
	else
	{
		this.m_properties.remove(oFF.QDataSource.CREATED_ON);
	}
};
oFF.QDataSource.prototype.setCreatedBy = function(userName)
{
	this.m_properties.putString(oFF.QDataSource.CREATED_BY, userName);
};
oFF.QDataSource.prototype.getCreatedBy = function()
{
	return this.m_properties.getStringByKey(oFF.QDataSource.CREATED_BY);
};
oFF.QDataSource.prototype.getDueDate = function()
{
	var isoFormat = this.m_properties.getStringByKey(oFF.QDataSource.DUE_DATE);
	var dateTime = null;
	if (oFF.notNull(isoFormat))
	{
		dateTime = oFF.XDateTime.createDateTimeFromIsoFormat(isoFormat);
	}
	return dateTime;
};
oFF.QDataSource.prototype.setDueDate = function(dueDate)
{
	if (oFF.notNull(dueDate))
	{
		var isoFormat = dueDate.toIsoFormat();
		this.m_properties.putString(oFF.QDataSource.DUE_DATE, isoFormat);
	}
	else
	{
		this.m_properties.remove(oFF.QDataSource.DUE_DATE);
	}
};
oFF.QDataSource.prototype.getDataRollUpMax = function()
{
	var isoFormat = this.m_properties.getStringByKey(oFF.QDataSource.DATA_ROLLUP_MAX);
	var dateTime = null;
	if (oFF.notNull(isoFormat))
	{
		dateTime = oFF.XDateTime.createDateTimeFromIsoFormat(isoFormat);
	}
	return dateTime;
};
oFF.QDataSource.prototype.setDataRollUpMax = function(dataRollUpMax)
{
	if (oFF.notNull(dataRollUpMax))
	{
		var isoFormat = dataRollUpMax.toIsoFormat();
		this.m_properties.putString(oFF.QDataSource.DATA_ROLLUP_MAX, isoFormat);
	}
	else
	{
		this.m_properties.remove(oFF.QDataSource.DATA_ROLLUP_MAX);
	}
};
oFF.QDataSource.prototype.getDataRollUpMin = function()
{
	var isoFormat = this.m_properties.getStringByKey(oFF.QDataSource.DATA_ROLLUP_MIN);
	var dateTime = null;
	if (oFF.notNull(isoFormat))
	{
		dateTime = oFF.XDateTime.createDateTimeFromIsoFormat(isoFormat);
	}
	return dateTime;
};
oFF.QDataSource.prototype.setDataRollUpMin = function(dataRollUpMin)
{
	if (oFF.notNull(dataRollUpMin))
	{
		var isoFormat = dataRollUpMin.toIsoFormat();
		this.m_properties.putString(oFF.QDataSource.DATA_ROLLUP_MIN, isoFormat);
	}
	else
	{
		this.m_properties.remove(oFF.QDataSource.DATA_ROLLUP_MIN);
	}
};
oFF.QDataSource.prototype.getUserName = function()
{
	return this.m_properties.getStringByKey(oFF.QDataSource.USER);
};
oFF.QDataSource.prototype.setUserName = function(userName)
{
	this.m_properties.putString(oFF.QDataSource.USER, userName);
};
oFF.QDataSource.prototype.getParentCubeInfo = function()
{
	return this.m_parentCubeInfo;
};
oFF.QDataSource.prototype.setParentCubeInfo = function(cubeInfo)
{
	this.m_parentCubeInfo = cubeInfo;
};
oFF.QDataSource.prototype.toString = function()
{
	return this.getFullQualifiedName();
};

oFF.QueryModel = function() {};
oFF.QueryModel.prototype = new oFF.QModelComponent();
oFF.QueryModel.prototype._ff_c = "QueryModel";

oFF.QueryModel.HAS_USER_DEFINED_MEASURES = "HasUserDefinedMeasures";
oFF.QueryModel.IS_PLANNING = "IsPlanning";
oFF.QueryModel.LEADING_STRUCTURE = "LeadingStructure";
oFF.QueryModel.LEADING_STRUCTURE_ACCOUNT = "AccountStructure";
oFF.QueryModel.LEADING_STRUCTURE_MEASURE = "MeasureStructure";
oFF.QueryModel.create = function(application, manager, capabilities)
{
	var query = new oFF.QueryModel();
	query.setupQuery(application, manager, capabilities);
	query.setNotificationListener(manager);
	return query;
};
oFF.QueryModel.prototype.m_preQueries = null;
oFF.QueryModel.prototype.m_isMetadataExportReduced = false;
oFF.QueryModel.prototype.m_isBasicMeasureAggretionExportedInRepo = false;
oFF.QueryModel.prototype.m_isBasicMeasureSettingsExportedInRepo = false;
oFF.QueryModel.prototype.m_olapEnv = null;
oFF.QueryModel.prototype.m_queryManager = null;
oFF.QueryModel.prototype.m_axesManager = null;
oFF.QueryModel.prototype.m_dimensionManager = null;
oFF.QueryModel.prototype.m_exceptionAggregationManager = null;
oFF.QueryModel.prototype.m_filterManager = null;
oFF.QueryModel.prototype.m_drillManager = null;
oFF.QueryModel.prototype.m_variableManager = null;
oFF.QueryModel.prototype.m_sortManager = null;
oFF.QueryModel.prototype.m_vizManager = null;
oFF.QueryModel.prototype.m_exceptionManager = null;
oFF.QueryModel.prototype.m_formulaExceptionManager = null;
oFF.QueryModel.prototype.m_conditionManager = null;
oFF.QueryModel.prototype.m_primaryCalculationManager = null;
oFF.QueryModel.prototype.m_resultStructureController = null;
oFF.QueryModel.prototype.m_universalDisplayHierarchies = null;
oFF.QueryModel.prototype.m_spatialClustering = null;
oFF.QueryModel.prototype.m_queryCellManager = null;
oFF.QueryModel.prototype.m_explainQueryContext = null;
oFF.QueryModel.prototype.m_queryCapabilities = null;
oFF.QueryModel.prototype.m_metadataProperties = null;
oFF.QueryModel.prototype.m_datasetEpmObject = null;
oFF.QueryModel.prototype.m_definitionName = null;
oFF.QueryModel.prototype.m_keepOriginalTexts = false;
oFF.QueryModel.prototype.m_dataSource = null;
oFF.QueryModel.prototype.m_baseDataSource = null;
oFF.QueryModel.prototype.m_dataSourceOrigin = null;
oFF.QueryModel.prototype.m_cubeInformation = null;
oFF.QueryModel.prototype.m_infoProvider = null;
oFF.QueryModel.prototype.m_serverBaseSerializationKey = null;
oFF.QueryModel.prototype.m_isF4IgnoreQueryDynamicFilter = false;
oFF.QueryModel.prototype.m_dataCells = null;
oFF.QueryModel.prototype.m_supportsDataEntryReadOnly = false;
oFF.QueryModel.prototype.m_dataEntryEnabled = false;
oFF.QueryModel.prototype.m_dataEntryReadOnly = false;
oFF.QueryModel.prototype.m_planningMode = null;
oFF.QueryModel.prototype.m_hasProcessingStep = false;
oFF.QueryModel.prototype.m_exportFixedFilter = false;
oFF.QueryModel.prototype.m_exportVariables = false;
oFF.QueryModel.prototype.m_uniqueHierarchyNames = null;
oFF.QueryModel.prototype.m_optimizerHints = null;
oFF.QueryModel.prototype.m_isBatchForMicroCube = false;
oFF.QueryModel.prototype.m_deactivateCumulative = false;
oFF.QueryModel.prototype.m_exportEachMeasure = false;
oFF.QueryModel.prototype.m_currencyTranslationManager = null;
oFF.QueryModel.prototype.m_keyRefStorage = null;
oFF.QueryModel.prototype.m_isMetadataUpdatedByAutoSubmit = false;
oFF.QueryModel.prototype.m_transientObjectsGenerated = false;
oFF.QueryModel.prototype.m_isReturnTupleCountTotal = false;
oFF.QueryModel.prototype.m_serializationInitial = null;
oFF.QueryModel.prototype.m_serializationCurrent = null;
oFF.QueryModel.prototype.m_widgetId = null;
oFF.QueryModel.prototype.cloneOlapComponent = function(context, parent)
{
	var olapEnv = context.getOlapEnv();
	var queryManager = context.getQueryManager();
	var capabilities = queryManager.getCapabilitiesBase();
	var clone = oFF.QueryModel.create(olapEnv, queryManager, capabilities);
	clone.copyQueryModel(this, null);
	return clone;
};
oFF.QueryModel.prototype.copyQueryModel = function(origin, cloneMode)
{
	this.stopEventing();
	this.m_widgetId = origin.m_widgetId;
	if (cloneMode !== oFF.QueryCloneMode.MICRO_CUBE)
	{
		oFF.QModelComponent.prototype.copyFrom.call( this , origin, null);
		this.m_dataSource.copyFrom(origin.m_dataSource, null);
		if (oFF.notNull(origin.m_baseDataSource))
		{
			this.setBaseDataSource(origin.m_baseDataSource);
			this.setInfoProvider(oFF.QInfoProvider.createInfoProvider(this, this.m_baseDataSource.getObjectName(), this.m_baseDataSource.getObjectName(), null));
		}
	}
	if (this.m_queryCapabilities !== origin.m_queryCapabilities)
	{
		this.m_queryCapabilities = origin.m_queryCapabilities;
	}
	this.m_deactivateCumulative = origin.m_deactivateCumulative;
	this.m_isMetadataExportReduced = origin.m_isMetadataExportReduced;
	this.m_isBasicMeasureAggretionExportedInRepo = origin.m_isBasicMeasureAggretionExportedInRepo;
	this.m_isBasicMeasureSettingsExportedInRepo = origin.m_isBasicMeasureSettingsExportedInRepo;
	this.m_definitionName = origin.m_definitionName;
	this.m_keepOriginalTexts = origin.m_keepOriginalTexts;
	this.m_exportFixedFilter = origin.m_exportFixedFilter;
	this.m_exportVariables = origin.m_exportVariables;
	this.m_exportEachMeasure = origin.m_exportEachMeasure;
	this.m_isF4IgnoreQueryDynamicFilter = origin.m_isF4IgnoreQueryDynamicFilter;
	this.m_isReturnTupleCountTotal = origin.m_isReturnTupleCountTotal;
	if (oFF.notNull(this.m_currencyTranslationManager) && oFF.notNull(origin.m_currencyTranslationManager))
	{
		this.m_currencyTranslationManager.copyFrom(origin.m_currencyTranslationManager, null);
	}
	this.m_resultStructureController.copyFrom(origin.m_resultStructureController, null);
	this.m_dimensionManager.copyFrom(origin.m_dimensionManager, null);
	if (cloneMode !== oFF.QueryCloneMode.MICRO_CUBE)
	{
		this.m_variableManager.copyFrom(origin.m_variableManager, null);
	}
	this.m_dimensionManager.copyDimensionManagerMember(origin.m_dimensionManager);
	this.m_filterManager.copyFrom(origin.m_filterManager, null);
	this.m_axesManager.copyFrom(origin.m_axesManager, null);
	this.m_sortManager.copyFrom(origin.m_sortManager, null);
	if (oFF.isNull(origin.m_exceptionAggregationManager))
	{
		this.m_exceptionAggregationManager = null;
	}
	else
	{
		this._loadExceptionAggregationManager();
		if (oFF.notNull(this.m_exceptionAggregationManager))
		{
			this.m_exceptionAggregationManager.copyFrom(origin.m_exceptionAggregationManager, null);
		}
	}
	if (oFF.notNull(this.m_vizManager) && oFF.notNull(origin.m_vizManager))
	{
		this.getVizManager().copyVizManager(origin.m_vizManager);
	}
	this.m_drillManager.copyDrillManager(origin.m_drillManager);
	this.m_universalDisplayHierarchies.copyFrom(origin.m_universalDisplayHierarchies, null);
	if (oFF.notNull(origin.m_exceptionManager))
	{
		this.getExceptionManager().copyFrom(origin.m_exceptionManager, null);
	}
	if (oFF.notNull(origin.m_formulaExceptionManager))
	{
		this.getFormulaExceptionManager().copyFrom(origin.m_formulaExceptionManager, null);
	}
	if (oFF.notNull(origin.m_conditionManager))
	{
		this.getConditionManagerBase().copyFrom(origin.m_conditionManager, null);
	}
	if (oFF.notNull(origin.m_dataCells))
	{
		this.m_dataCells = oFF.QDataCellList.createQueryDataCellList(this);
		var size = origin.m_dataCells.size();
		for (var i = 0; i < size; i++)
		{
			var originDataCell = origin.m_dataCells.get(i);
			var cloneDataCell = this.m_dataCells.newQueryDataCell(originDataCell.getName());
			cloneDataCell.copyFrom(originDataCell, null);
		}
	}
	this.m_uniqueHierarchyNames = origin.m_uniqueHierarchyNames.createSetCopy();
	this.m_metadataProperties = oFF.XProperties.createByMapCopy(origin.m_metadataProperties);
	this.m_supportsDataEntryReadOnly = origin.m_supportsDataEntryReadOnly;
	this.m_dataEntryEnabled = origin.m_dataEntryEnabled;
	this.m_dataEntryReadOnly = origin.m_dataEntryReadOnly;
	this.m_planningMode = origin.m_planningMode;
	if (cloneMode !== oFF.QueryCloneMode.MICRO_CUBE)
	{
		if (oFF.notNull(origin.m_optimizerHints))
		{
			this.m_optimizerHints = oFF.XHashMapByString.create();
			var engineIt = origin.m_optimizerHints.getKeysAsIteratorOfString();
			while (engineIt.hasNext())
			{
				var engineName = engineIt.next();
				this.m_optimizerHints.put(engineName, origin.m_optimizerHints.getByKey(engineName).createMapOfStringByStringCopy());
			}
		}
		if (oFF.notNull(origin.m_preQueries))
		{
			this.m_preQueries = oFF.XListOfNameObject.create();
			this.m_preQueries.addAll(origin.m_preQueries);
		}
	}
	if (oFF.notNull(origin.m_spatialClustering))
	{
		this.m_spatialClustering = origin.m_spatialClustering.clone();
	}
	if (oFF.notNull(origin.m_queryCellManager))
	{
		this.m_queryCellManager = origin.m_queryCellManager.cloneOlapComponent(this, this);
	}
	if (oFF.notNull(origin.m_datasetEpmObject))
	{
		this.m_datasetEpmObject = origin.m_datasetEpmObject.clone();
	}
	this.resumeEventing();
};
oFF.QueryModel.prototype.setupQuery = function(olapEnv, queryManager, capabilities)
{
	this.setupModelComponent(olapEnv.getContext(), null);
	this.m_olapEnv = oFF.XWeakReferenceUtil.getWeakRef(olapEnv);
	if (oFF.isNull(capabilities))
	{
		this.m_queryCapabilities = oFF.QCapabilities.create();
	}
	else
	{
		this.m_queryCapabilities = capabilities;
	}
	this.m_dataSource = oFF.QFactory.createDataSourceExt(this);
	this.m_queryManager = oFF.XWeakReferenceUtil.getWeakRef(queryManager);
	this.m_keyRefStorage = oFF.QKeyRefStorage.create(oFF.KeyRefConstants.MAIN_STORAGE);
	this.m_keyRefStorage.setSubKefRefStore(this.getOlapEnv().getClientQueryObjectManager().getKeyRefStorage());
	this.m_dimensionManager = oFF.QDimensionManager.create(this);
	this.m_drillManager = oFF.QDrillManager.create(this, this);
	this.m_sortManager = oFF.QSortingManager.create(this);
	this.m_metadataProperties = oFF.XProperties.create();
	this.m_axesManager = oFF.QAxesManager.create(this);
	this.m_filterManager = oFF.QFactory.createFilterForQueryModel(this);
	this.m_variableManager = oFF.QVariableManager.create(this);
	this.m_resultStructureController = oFF.QFactory.createResultStructureController(this, this, oFF.QModelLevel.QUERY);
	this.m_uniqueHierarchyNames = oFF.XHashSetOfString.create();
	this.m_universalDisplayHierarchies = oFF.QUniversalDisplayHierarchies.create(this, this);
	this.m_currencyTranslationManager = oFF.QCurrencyTranslationManager.create(this);
	this.m_planningMode = oFF.PlanningMode.FOR_PRIVATE_VERSIONS_ONLY;
	this.m_exportFixedFilter = true;
	this.m_exportVariables = true;
	this.m_exportEachMeasure = true;
	this.m_isBasicMeasureAggretionExportedInRepo = true;
	this.m_isBasicMeasureSettingsExportedInRepo = true;
	this.m_isF4IgnoreQueryDynamicFilter = false;
	this.m_isMetadataUpdatedByAutoSubmit = false;
	this.setReturnTupleCountTotal(true);
	this.m_datasetEpmObject = null;
};
oFF.QueryModel.prototype.releaseObject = function()
{
	if (!this.isReleased())
	{
		this.m_widgetId = null;
		this.m_preQueries = oFF.XObjectExt.release(this.m_preQueries);
		this.m_definitionName = null;
		this.m_infoProvider = null;
		if (this.m_queryCapabilities.supportsCeScenarioParams())
		{
			this.m_optimizerHints = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_optimizerHints);
		}
		this.m_resultStructureController = oFF.XObjectExt.release(this.m_resultStructureController);
		this.m_uniqueHierarchyNames = oFF.XObjectExt.release(this.m_uniqueHierarchyNames);
		this.m_dataSource = null;
		this.m_cubeInformation = null;
		this.m_dimensionManager = oFF.XObjectExt.release(this.m_dimensionManager);
		this.m_drillManager = oFF.XObjectExt.release(this.m_drillManager);
		this.m_exceptionAggregationManager = oFF.XObjectExt.release(this.m_exceptionAggregationManager);
		this.m_sortManager = oFF.XObjectExt.release(this.m_sortManager);
		this.m_vizManager = oFF.XObjectExt.release(this.m_vizManager);
		this.m_metadataProperties = oFF.XObjectExt.release(this.m_metadataProperties);
		this.m_axesManager = oFF.XObjectExt.release(this.m_axesManager);
		this.m_exceptionManager = oFF.XObjectExt.release(this.m_exceptionManager);
		this.m_formulaExceptionManager = oFF.XObjectExt.release(this.m_formulaExceptionManager);
		this.m_conditionManager = oFF.XObjectExt.release(this.m_conditionManager);
		this.m_filterManager = oFF.XObjectExt.release(this.m_filterManager);
		this.m_primaryCalculationManager = oFF.XObjectExt.release(this.m_primaryCalculationManager);
		this.m_dataCells = oFF.XObjectExt.release(this.m_dataCells);
		this.m_variableManager = oFF.XObjectExt.release(this.m_variableManager);
		this.m_universalDisplayHierarchies = oFF.XObjectExt.release(this.m_universalDisplayHierarchies);
		this.m_spatialClustering = oFF.XObjectExt.release(this.m_spatialClustering);
		this.m_queryCellManager = oFF.XObjectExt.release(this.m_queryCellManager);
		this.m_explainQueryContext = oFF.XObjectExt.release(this.m_explainQueryContext);
		this.m_serverBaseSerializationKey = null;
		this.m_queryCapabilities = null;
		this.m_currencyTranslationManager = oFF.XObjectExt.release(this.m_currencyTranslationManager);
		this.m_datasetEpmObject = oFF.XObjectExt.release(this.m_datasetEpmObject);
		oFF.QModelComponent.prototype.releaseObject.call( this );
	}
};
oFF.QueryModel.prototype.isBlendingModel = function()
{
	return this.getQueryManager().getMode() === oFF.QueryManagerMode.BLENDING;
};
oFF.QueryModel.prototype.assertHierarchyUniqueName = function(usedHierarchyUniqueName, isActivated)
{
	if (isActivated)
	{
		if (this.m_uniqueHierarchyNames.contains(usedHierarchyUniqueName))
		{
			throw oFF.XException.createIllegalStateException(oFF.XStringUtils.concatenate3("The hierarchy unique name '", usedHierarchyUniqueName, "' is already activated!"));
		}
		this.m_uniqueHierarchyNames.add(usedHierarchyUniqueName);
	}
	else
	{
		this.m_uniqueHierarchyNames.removeElement(usedHierarchyUniqueName);
	}
};
oFF.QueryModel.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.QUERY_MODEL;
};
oFF.QueryModel.prototype.getDynamicAxis = function()
{
	return this.m_axesManager.getDynamicAxis();
};
oFF.QueryModel.prototype.getColumnsAxis = function()
{
	return this.m_axesManager.getColumnsAxis();
};
oFF.QueryModel.prototype.getRowsAxis = function()
{
	return this.m_axesManager.getRowsAxis();
};
oFF.QueryModel.prototype.getFreeAxis = function()
{
	return this.m_axesManager.getFreeAxis();
};
oFF.QueryModel.prototype.getRepositoryAxis = function()
{
	return this.m_axesManager.getRepositoryAxis();
};
oFF.QueryModel.prototype.getVirtualAxis = function()
{
	return this.m_axesManager.getVirtualAxis();
};
oFF.QueryModel.prototype.getTechnicalAxis = function()
{
	return this.m_axesManager.getTechnicalAxis();
};
oFF.QueryModel.prototype.getFilterAxis = function()
{
	return this.m_axesManager.getFilterAxis();
};
oFF.QueryModel.prototype.getAxis = function(axisType)
{
	return this.m_axesManager.getAxis(axisType);
};
oFF.QueryModel.prototype.getAxisBase = function(axis)
{
	return this.m_axesManager.getAxisBase(axis);
};
oFF.QueryModel.prototype.getFilter = function()
{
	return this.m_filterManager;
};
oFF.QueryModel.prototype.getFilterBase = function()
{
	return this.m_filterManager;
};
oFF.QueryModel.prototype.getMetadataProperties = function()
{
	return this.m_metadataProperties;
};
oFF.QueryModel.prototype.getMetadataPropertiesBase = function()
{
	return this.m_metadataProperties;
};
oFF.QueryModel.prototype.setMetadataPropertiesBase = function(properties)
{
	this.m_metadataProperties = properties;
};
oFF.QueryModel.prototype.setCubeInfo = function(cubeInfo)
{
	this.m_cubeInformation = cubeInfo;
	if (oFF.notNull(cubeInfo))
	{
		var text = cubeInfo.getText();
		if (oFF.notNull(text))
		{
			this.setText(cubeInfo.getText());
		}
		if (true)
		{
			var dataSourceBase = this.getDataSourceBase();
			dataSourceBase.extendWithDataSource(cubeInfo);
			this.setName(dataSourceBase.getFullQualifiedName());
		}
		else
		{
			var dataSource = this.getDataSourceBase();
			if (dataSource.getType() === null)
			{
				dataSource.extendWithDataSource(cubeInfo);
				this.setName(cubeInfo.getFullQualifiedName());
			}
			else
			{
				if (oFF.notNull(text))
				{
					dataSource.setText(text);
				}
				var validationHash = cubeInfo.getValidationHash();
				if (oFF.notNull(validationHash))
				{
					dataSource.setValidationHash(validationHash);
				}
			}
		}
	}
};
oFF.QueryModel.prototype.getCubeInfo = function()
{
	return this.m_cubeInformation;
};
oFF.QueryModel.prototype.getDataSourceOrigin = function()
{
	return this.m_dataSourceOrigin;
};
oFF.QueryModel.prototype.setDataSourceOrigin = function(dataSourceOrigin)
{
	this.m_dataSourceOrigin = dataSourceOrigin;
};
oFF.QueryModel.prototype.getDataSource = function()
{
	return this.getDataSourceBase();
};
oFF.QueryModel.prototype.getDataSourceBase = function()
{
	return this.m_dataSource;
};
oFF.QueryModel.prototype.setDataSource = function(dataSource)
{
	var dataSourceBase = this.getDataSourceBase();
	dataSourceBase.extendWithDataSource(dataSource);
	this.setName(dataSourceBase.getFullQualifiedName());
};
oFF.QueryModel.prototype.getBaseDataSource = function()
{
	return this.m_baseDataSource;
};
oFF.QueryModel.prototype.setBaseDataSource = function(baseDatasource)
{
	this.m_baseDataSource = baseDatasource;
};
oFF.QueryModel.prototype.getNonStructureCount = function()
{
	return this.m_dimensionManager.getNonStructureCount();
};
oFF.QueryModel.prototype.getDimensionNameByType = function(type)
{
	return this.m_dimensionManager.getDimensionNameByType(type);
};
oFF.QueryModel.prototype.getQueryManager = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_queryManager);
};
oFF.QueryModel.prototype.getQueryManagerBase = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_queryManager);
};
oFF.QueryModel.prototype.getInfoProvider = function()
{
	return this.m_infoProvider;
};
oFF.QueryModel.prototype.setInfoProvider = function(infoProvider)
{
	this.m_infoProvider = infoProvider;
};
oFF.QueryModel.prototype.getDataArea = function()
{
	return this.getDataSource().getDataArea();
};
oFF.QueryModel.prototype.setResultVisibilityByElement = function(element, visibility)
{
	this.m_resultStructureController.setResultVisibilityByElement(element, visibility);
};
oFF.QueryModel.prototype.setResultVisibilityByElementAndAlignment = function(alignment, element, visibility)
{
	this.m_resultStructureController.setResultVisibilityByElementAndAlignment(alignment, element, visibility);
};
oFF.QueryModel.prototype.getResultVisibility = function()
{
	return this.m_resultStructureController.getResultVisibility();
};
oFF.QueryModel.prototype.setResultVisibility = function(visibility)
{
	this.m_resultStructureController.setResultVisibility(visibility);
};
oFF.QueryModel.prototype.clearResultVisibilitySettings = function()
{
	this.m_resultStructureController.clearResultVisibilitySettings();
};
oFF.QueryModel.prototype.getResultVisibilitySettings = function()
{
	return this.m_resultStructureController.getResultVisibilitySettings();
};
oFF.QueryModel.prototype.getResultVisibilityByElement = function(element)
{
	return this.m_resultStructureController.getResultVisibilityByElement(element);
};
oFF.QueryModel.prototype.getResultVisibilityByElementAndAlignment = function(alignment, element)
{
	return this.m_resultStructureController.getResultVisibilityByElementAndAlignment(alignment, element);
};
oFF.QueryModel.prototype.getResultAlignment = function()
{
	return this.m_resultStructureController.getResultAlignment();
};
oFF.QueryModel.prototype.setResultAlignment = function(alignment)
{
	this.m_resultStructureController.setResultAlignment(alignment);
};
oFF.QueryModel.prototype.getParentResultStructureController = function()
{
	return null;
};
oFF.QueryModel.prototype.getResultStructureController = function()
{
	return this.m_resultStructureController;
};
oFF.QueryModel.prototype.getResultStructureControllerBase = function()
{
	return this.m_resultStructureController;
};
oFF.QueryModel.prototype.getResultStructureChildren = function()
{
	var list = oFF.XList.create();
	list.add(this.getRowsAxis().getResultStructureControllerBase());
	list.add(this.getColumnsAxis().getResultStructureControllerBase());
	return list.getIterator();
};
oFF.QueryModel.prototype.isTotalsAlignmentOnDefault = function()
{
	return this.m_resultStructureController.isTotalsAlignmentOnDefault();
};
oFF.QueryModel.prototype.isTotalsVisibilityOnDefault = function()
{
	return this.m_resultStructureController.isTotalsVisibilityOnDefault();
};
oFF.QueryModel.prototype.isTotalsStructureOnDefault = function()
{
	return this.m_resultStructureController.isTotalsStructureOnDefault();
};
oFF.QueryModel.prototype.restoreTotalsAlignment = function(restoreAction, recurseChildren)
{
	this.m_resultStructureController.restoreTotalsAlignment(restoreAction, recurseChildren);
};
oFF.QueryModel.prototype.restoreTotalsVisibility = function(restoreAction, recurseChildren)
{
	this.m_resultStructureController.restoreTotalsVisibility(restoreAction, recurseChildren);
};
oFF.QueryModel.prototype.getModelLevel = function()
{
	return this.m_resultStructureController.getModelLevel();
};
oFF.QueryModel.prototype.getDrillManager = function()
{
	return this.m_drillManager;
};
oFF.QueryModel.prototype.getDrillManagerBase = function()
{
	return this.m_drillManager;
};
oFF.QueryModel.prototype._getExceptionAggregationManagerBase = function()
{
	this._loadExceptionAggregationManager();
	return this.m_exceptionAggregationManager;
};
oFF.QueryModel.prototype._loadExceptionAggregationManager = function()
{
	if (this.m_queryCapabilities.supportsExceptionAggregationDimsFormulas() && oFF.isNull(this.m_exceptionAggregationManager))
	{
		this.m_exceptionAggregationManager = oFF.QExceptionAggregationManager._create(this);
	}
};
oFF.QueryModel.prototype.getSortingManager = function()
{
	return this.m_sortManager;
};
oFF.QueryModel.prototype.getSortingManagerBase = function()
{
	return this.m_sortManager;
};
oFF.QueryModel.prototype.getVizManager = function()
{
	if (oFF.isNull(this.m_vizManager) && !this.isReleased())
	{
		this.m_vizManager = oFF.QVizManager.create(this);
	}
	return this.m_vizManager;
};
oFF.QueryModel.prototype.hasVariables = function()
{
	return this.m_variableManager.hasVariables();
};
oFF.QueryModel.prototype.hasInputEnabledVariables = function()
{
	return this.m_variableManager.hasInputEnabledVariables();
};
oFF.QueryModel.prototype.clearExternalVariablesRepresentations = function()
{
	this.m_variableManager.clearExternalVariablesRepresentations();
};
oFF.QueryModel.prototype.hasMandatoryVariables = function()
{
	return this.m_variableManager.hasMandatoryVariables();
};
oFF.QueryModel.prototype.getVariables = function()
{
	return this.m_variableManager.getVariables();
};
oFF.QueryModel.prototype.getInputEnabledVariables = function()
{
	return this.m_variableManager.getInputEnabledVariables();
};
oFF.QueryModel.prototype.getInputEnabledAndNonTechnicalVariables = function()
{
	return this.m_variableManager.getInputEnabledAndNonTechnicalVariables();
};
oFF.QueryModel.prototype.setWinControlInAutoSubmitByType = function(variableType, isWinControlInAutoSubmit, isLimitToExitVariable)
{
	this.queueEventing();
	var variables = this.getDimensionMemberVariables();
	for (var i = 0; i < variables.size(); i++)
	{
		var variable = variables.get(i);
		if (variable.getVariableType() === variableType && (!isLimitToExitVariable || variable.isEnforcedDynamicValue()))
		{
			variable.setWinControlInAutoSubmit(isWinControlInAutoSubmit);
		}
	}
	this.resumeEventing();
};
oFF.QueryModel.prototype.isDataEntryReadOnly = function()
{
	return this.m_dataEntryReadOnly;
};
oFF.QueryModel.prototype.setDataEntryReadOnly = function(dataEntryReadOnly)
{
	if (!this.supportsDataEntryReadOnly() && !dataEntryReadOnly)
	{
		return;
	}
	if (this.m_dataEntryReadOnly === dataEntryReadOnly)
	{
		return;
	}
	this.m_dataEntryReadOnly = dataEntryReadOnly;
	this.notifyNodeChanged();
};
oFF.QueryModel.prototype.isDataEntryEnabled = function()
{
	return this.m_dataEntryEnabled;
};
oFF.QueryModel.prototype.setDataEntryEnabled = function(dataEntryEnabled)
{
	this.m_dataEntryEnabled = dataEntryEnabled;
};
oFF.QueryModel.prototype.getPlanningMode = function()
{
	return this.m_planningMode;
};
oFF.QueryModel.prototype.setPlanningMode = function(planningMode)
{
	if (this.m_planningMode !== planningMode)
	{
		this.m_planningMode = planningMode;
		this.notifyNodeChanged();
	}
};
oFF.QueryModel.prototype.getExceptionManager = function()
{
	if (oFF.isNull(this.m_exceptionManager) && !this.isReleased())
	{
		this.m_exceptionManager = oFF.QExceptionManager.createExceptionManager(this);
	}
	return this.m_exceptionManager;
};
oFF.QueryModel.prototype.getFormulaExceptionManager = function()
{
	if (oFF.isNull(this.m_formulaExceptionManager) && !this.isReleased())
	{
		this.m_formulaExceptionManager = oFF.QFormulaExceptionManager.createFormulaExceptionManager(this);
	}
	return this.m_formulaExceptionManager;
};
oFF.QueryModel.prototype.getFormulaExceptionManagerBase = function()
{
	return this.getFormulaExceptionManager();
};
oFF.QueryModel.prototype.getPrimaryCalculationManager = function()
{
	if (oFF.isNull(this.m_primaryCalculationManager))
	{
		this.m_primaryCalculationManager = oFF.QCalculationManager.createCalculationManager(this.getPrimaryCalculationDimension());
	}
	return this.m_primaryCalculationManager;
};
oFF.QueryModel.prototype.lazyLoadQueryDataCells = function()
{
	if (oFF.isNull(this.m_dataCells))
	{
		this.m_dataCells = oFF.QDataCellList.createQueryDataCellList(this);
	}
};
oFF.QueryModel.prototype.getQueryDataCells = function()
{
	this.lazyLoadQueryDataCells();
	return this.m_dataCells;
};
oFF.QueryModel.prototype.getQueryDataCellsBase = function()
{
	this.lazyLoadQueryDataCells();
	return this.m_dataCells;
};
oFF.QueryModel.prototype.getQueryDataCell = function(name)
{
	return oFF.isNull(this.m_dataCells) ? null : this.m_dataCells.getByKey(name);
};
oFF.QueryModel.prototype.isComponentNode = function()
{
	return true;
};
oFF.QueryModel.prototype.getNamedChildren = function()
{
	var children = oFF.XHashMapByString.create();
	children.put("AxesManager", this.getAxesManager());
	children.put("FilterManager", this.getFilter());
	if (this.getQueryManager().supportsDirectVariableTransfer())
	{
		children.put("VariableManager", this.getVariableManager());
	}
	children.put("DimensionManager", this.getDimensionManagerBase());
	children.put("ResultStructureController", this.getResultStructureController());
	children.put("DrillManager", this.getDrillManager());
	children.put("ExceptionAggregationManager", this._getExceptionAggregationManagerBase());
	children.put("SortManager", this.getSortingManager());
	children.put("ExceptionManager", this.getExceptionManager());
	children.put("FormulaExceptionManager", this.getFormulaExceptionManager());
	children.put("ConditionManager", this.getConditionManager());
	children.put("UniversalDisplayHierarchies", this.getUniversalDisplayHierarchies());
	children.put("CurrencyTranslationManager", this.getCurrencyTranslationManager());
	return children;
};
oFF.QueryModel.prototype.getVariableManager = function()
{
	return this.m_variableManager;
};
oFF.QueryModel.prototype.getVariableContainer = function()
{
	return this.m_variableManager;
};
oFF.QueryModel.prototype.getVariableManagerBase = function()
{
	return this.m_variableManager;
};
oFF.QueryModel.prototype.getQueryModel = function()
{
	return this;
};
oFF.QueryModel.prototype.onModelChangeBeforeBroadcast = function(changedNodes)
{
	var size = changedNodes.size();
	for (var i = 0; i < size; i++)
	{
		var changedNode = changedNodes.get(i);
		var componentType = changedNode.getComponentType();
		if (oFF.notNull(componentType) && (componentType.isTypeOf(oFF.OlapComponentType.AXIS) || componentType.isTypeOf(oFF.OlapComponentType.DIMENSION_MANAGER) || componentType.isTypeOf(oFF.OlapComponentType.UNIVERSAL_DISPLAY_HIERARCHY)))
		{
			this.m_drillManager.removeInvalidDrillOperations(changedNode);
			break;
		}
	}
	oFF.QModelComponent.prototype.onModelChangeBeforeBroadcast.call( this , changedNodes);
};
oFF.QueryModel.prototype.getDefinitionName = function()
{
	return this.m_definitionName;
};
oFF.QueryModel.prototype.setDefinitionName = function(definitionName)
{
	this.m_definitionName = definitionName;
};
oFF.QueryModel.prototype.isBasedOnMicroCube = function()
{
	return this.getDataSource().isBasedOnMicroCube();
};
oFF.QueryModel.prototype.isBatchModeForMicroCube = function()
{
	return this.m_isBatchForMicroCube;
};
oFF.QueryModel.prototype.setBatchModeForMicroCube = function(state)
{
	this.m_isBatchForMicroCube = state;
};
oFF.QueryModel.prototype.getExtendedDimensions = function()
{
	var dataSource = this.getDataSource();
	if (oFF.isNull(dataSource))
	{
		return null;
	}
	return dataSource.getExtendedDimensions();
};
oFF.QueryModel.prototype.assertNotBlendingMode = function()
{
	if (this.isBlendingModel())
	{
		oFF.noSupport();
	}
};
oFF.QueryModel.prototype.assertBlendingMode = function()
{
	if (!this.isBlendingModel())
	{
		oFF.noSupport();
	}
};
oFF.QueryModel.prototype.getBlendingSources = function()
{
	this.assertBlendingMode();
	var blendingDefinition = this.getBlendingDefinition();
	if (oFF.isNull(blendingDefinition))
	{
		return null;
	}
	return blendingDefinition.getSources();
};
oFF.QueryModel.prototype.getBlendingDefinition = function()
{
	this.assertBlendingMode();
	return this.getDataSource().getBlendingDefinition();
};
oFF.QueryModel.prototype.getVariableMode = function()
{
	var queryManager = this.getQueryManager();
	if (oFF.isNull(queryManager))
	{
		return null;
	}
	return queryManager.getVariableMode();
};
oFF.QueryModel.prototype.getMdResultStructureControllerBase = function()
{
	return this.m_resultStructureController;
};
oFF.QueryModel.prototype.getServerBaseSerialization = function()
{
	var cacheKey = this.m_serverBaseSerializationKey;
	return this.getOlapEnv().getQueryMetadata(cacheKey);
};
oFF.QueryModel.prototype.setServerBaseSerialization = function(modelFormat, origin, serialization)
{
	if (oFF.isNull(this.m_serializationInitial))
	{
		this.m_serializationInitial = serialization;
	}
	this.m_serializationCurrent = serialization;
	var queryManager = this.getQueryManagerBase();
	if (oFF.notNull(serialization) && oFF.notNull(queryManager))
	{
		var cacheKey = this.setServerBaseSerializationKey();
		if (this.isPartialResponse())
		{
			return;
		}
		var cubeContainer = this.getOlapEnv().getCubeContainer(cacheKey);
		if (cubeContainer.getDataSource() === null)
		{
			cubeContainer.setDataSource(this.getDataSource());
		}
		if (!queryManager.isMetadataCached())
		{
			this.getOlapEnv().setQueryMetadata(cacheKey, serialization);
			var cacheKeyForBaseCloningObj = oFF.QCacheKey.createCopyWithKey2(cacheKey, oFF.QueryCloneMode.BASE_STATE.getName());
			this.getOlapEnv().setQueryMetadata(cacheKeyForBaseCloningObj, serialization);
			queryManager.setIsMetadataCached(true);
		}
		else
		{
			var olapEnv = this.getOlapEnv();
			olapEnv.overwriteQueryMetadata(cacheKey, serialization);
		}
	}
};
oFF.QueryModel.prototype.getServerBaseSerializationForBaseState = function()
{
	var cacheKey = oFF.QCacheKey.createCopyWithKey2(this.m_serverBaseSerializationKey, oFF.QueryCloneMode.BASE_STATE.getName());
	return this.getOlapEnv().getQueryMetadata(cacheKey);
};
oFF.QueryModel.prototype.getMetadata = function()
{
	return this.m_serializationCurrent;
};
oFF.QueryModel.prototype.isPartialResponse = function()
{
	var queryManager = this.getQueryManager();
	return oFF.XCollectionUtils.hasElements(queryManager.getQueryServiceConfig().getRequiredDimensions()) && this.getModelCapabilities().supportsDetailedResponseExpansion();
};
oFF.QueryModel.prototype.setServerBaseSerializationKey = function()
{
	if (oFF.isNull(this.m_serverBaseSerializationKey))
	{
		var dataSource = this.getDataSourceBase();
		if (this.isBasedOnMicroCube())
		{
			this.m_serverBaseSerializationKey = dataSource.getMicroCube().getServerBaseSerializationKey();
		}
		else
		{
			this.m_serverBaseSerializationKey = oFF.QFactory.createCacheKeyByContext(this);
		}
	}
	return this.m_serverBaseSerializationKey;
};
oFF.QueryModel.prototype.getServerBaseSerializationKey = function()
{
	return this.m_serverBaseSerializationKey;
};
oFF.QueryModel.prototype.lazyLoadConditionManager = function()
{
	if (oFF.isNull(this.m_conditionManager))
	{
		this.m_conditionManager = oFF.QConditionManager.create(this, this);
	}
};
oFF.QueryModel.prototype.getConditionManager = function()
{
	if (this.m_queryCapabilities.supportsConditions())
	{
		this.lazyLoadConditionManager();
		return this.m_conditionManager;
	}
	return null;
};
oFF.QueryModel.prototype.getConditionManagerBase = function()
{
	if (this.m_queryCapabilities.supportsConditions())
	{
		this.lazyLoadConditionManager();
		return this.m_conditionManager;
	}
	return null;
};
oFF.QueryModel.prototype.getContext = function()
{
	return this;
};
oFF.QueryModel.prototype.getInputEnabledVariable = function(name)
{
	return this.getVariableContainer().getInputEnabledVariable(name);
};
oFF.QueryModel.prototype.getVariable = function(name)
{
	return this.getVariableContainer().getVariable(name);
};
oFF.QueryModel.prototype.getHierarchyNodeVariable = function(name)
{
	return this.getVariableContainer().getHierarchyNodeVariable(name);
};
oFF.QueryModel.prototype.getHierarchyNameVariable = function(name)
{
	return this.getVariableContainer().getHierarchyNameVariable(name);
};
oFF.QueryModel.prototype.getHierarchyNameVariables = function()
{
	return this.getVariableContainer().getHierarchyNameVariables();
};
oFF.QueryModel.prototype.getDimensionMemberVariables = function()
{
	return this.getVariableContainer().getDimensionMemberVariables();
};
oFF.QueryModel.prototype.getDimensionByName = function(name)
{
	return this.m_dimensionManager.getDimensionByName(name);
};
oFF.QueryModel.prototype.getDimensionByNameFromExistingMetadata = function(name)
{
	return this.m_dimensionManager.getDimensionByNameFromExistingMetadata(name);
};
oFF.QueryModel.prototype.getDimensionByNameFromExistingMetadataOrFormulaCalcDim = function(name)
{
	return this.m_dimensionManager.getDimensionByNameFromExistingMetadataOrFormulaCalcDim(name);
};
oFF.QueryModel.prototype.addDimension = function(dimension)
{
	this.m_dimensionManager.addDimension(dimension);
};
oFF.QueryModel.prototype.removeDimension = function(dimension)
{
	this.m_dimensionManager.removeDimension(dimension);
};
oFF.QueryModel.prototype.getDimensionNames = function()
{
	return this.m_dimensionManager.getDimensionNames();
};
oFF.QueryModel.prototype.getLoadedDimensions = function()
{
	return this.m_dimensionManager.getLoadedDimensions();
};
oFF.QueryModel.prototype.getDimensions = function()
{
	return this.m_dimensionManager.getDimensions();
};
oFF.QueryModel.prototype.getDimensionByType = function(type)
{
	return this.m_dimensionManager.getDimensionByType(type);
};
oFF.QueryModel.prototype.getStructureCount = function()
{
	return this.m_dimensionManager.getStructureCount();
};
oFF.QueryModel.prototype.getDimensionCount = function()
{
	return this.m_dimensionManager.getDimensionCount();
};
oFF.QueryModel.prototype.getNonMeasureDimension = function()
{
	return this.m_dimensionManager.getNonMeasureDimension();
};
oFF.QueryModel.prototype.getNonMeasureDimension2 = function()
{
	return this.m_dimensionManager.getNonMeasureDimension2();
};
oFF.QueryModel.prototype.getMeasureDimension = function()
{
	return this.m_dimensionManager.getMeasureDimension();
};
oFF.QueryModel.prototype.getPrimaryCalculationDimension = function()
{
	return this.m_dimensionManager.getPrimaryCalculationDimension();
};
oFF.QueryModel.prototype.getSecondaryCalculationDimension = function()
{
	return this.m_dimensionManager.getSecondaryCalculationDimension();
};
oFF.QueryModel.prototype.getAccountDimension = function()
{
	return this.m_dimensionManager.getAccountDimension();
};
oFF.QueryModel.prototype.getFieldByNameOrAlias = function(name)
{
	return this.m_dimensionManager.getFieldByNameOrAlias(name);
};
oFF.QueryModel.prototype.getFieldByName = function(name)
{
	return this.m_dimensionManager.getFieldByName(name);
};
oFF.QueryModel.prototype.convertToFieldLayoutType = function(type)
{
	this.m_dimensionManager.convertToFieldLayoutType(type);
};
oFF.QueryModel.prototype.getAxesManager = function()
{
	return this.m_axesManager;
};
oFF.QueryModel.prototype.getDimensionManagerBase = function()
{
	return this.m_dimensionManager;
};
oFF.QueryModel.prototype.getDimensionAccessor = function()
{
	return this.m_dimensionManager;
};
oFF.QueryModel.prototype.getFieldAccessorSingle = function()
{
	return this.m_dimensionManager;
};
oFF.QueryModel.prototype.getOlapEnv = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_olapEnv);
};
oFF.QueryModel.prototype.getOlapSystemContainer = function()
{
	var systemName = this.getDataSource().getSystemName();
	return this.getOlapEnv().getSystemContainer(systemName);
};
oFF.QueryModel.prototype.setKeepOriginalTexts = function(keepOriginalTexts)
{
	if (this.m_queryCapabilities.supportsKeepOriginalTexts())
	{
		this.m_keepOriginalTexts = keepOriginalTexts;
	}
};
oFF.QueryModel.prototype.isKeepingOriginalTexts = function()
{
	if (this.m_queryCapabilities.supportsKeepOriginalTexts())
	{
		return this.m_keepOriginalTexts;
	}
	return false;
};
oFF.QueryModel.prototype.ignoreQueryDynamicFilterInValueHelp = function()
{
	if (this.getSystemType().isTypeOf(oFF.SystemType.BW))
	{
		this.m_isF4IgnoreQueryDynamicFilter = true;
	}
};
oFF.QueryModel.prototype.isValueHelpIgnoreQueryDynamicFilter = function()
{
	return this.m_isF4IgnoreQueryDynamicFilter;
};
oFF.QueryModel.prototype.getSystemType = function()
{
	return this.m_queryCapabilities.getSystemType();
};
oFF.QueryModel.prototype.getSystemDescription = function()
{
	return this.getQueryManager().getSystemDescription();
};
oFF.QueryModel.prototype.getSystemName = function()
{
	return this.getQueryManager().getSystemName();
};
oFF.QueryModel.prototype.getOptimizerHintsByExecutionEngine = function(executionEngine)
{
	if (!this.getModelCapabilities().supportsCeScenarioParams() || oFF.isNull(this.m_optimizerHints))
	{
		return null;
	}
	return this.m_optimizerHints.getByKey(executionEngine.getName());
};
oFF.QueryModel.prototype.addOptimizerHint = function(executionEngine, hintKey, hintValue)
{
	if (this.getModelCapabilities().supportsCeScenarioParams())
	{
		if (oFF.isNull(this.m_optimizerHints))
		{
			this.m_optimizerHints = oFF.XHashMapByString.create();
		}
		var optimizerHintsByEngine = this.m_optimizerHints.getByKey(executionEngine.getName());
		if (oFF.isNull(optimizerHintsByEngine))
		{
			optimizerHintsByEngine = oFF.XHashMapOfStringByString.create();
			this.m_optimizerHints.put(executionEngine.getName(), optimizerHintsByEngine);
			this.notifyNodeChanged();
		}
		optimizerHintsByEngine.put(hintKey, hintValue);
	}
};
oFF.QueryModel.prototype.removeOptimizerHint = function(executionEngine, hintKey)
{
	if (this.getModelCapabilities().supportsCeScenarioParams() && oFF.notNull(this.m_optimizerHints))
	{
		var optimizerHintsByEngine = this.m_optimizerHints.getByKey(executionEngine.getName());
		if (oFF.notNull(optimizerHintsByEngine))
		{
			optimizerHintsByEngine.remove(hintKey);
			this.notifyNodeChanged();
		}
	}
};
oFF.QueryModel.prototype.setOptimizedExportMode = function(isActive)
{
	this.m_isMetadataExportReduced = isActive;
};
oFF.QueryModel.prototype.isOptimizedExportModeActive = function()
{
	return this.m_isMetadataExportReduced;
};
oFF.QueryModel.prototype.hasProcessingStep = function()
{
	return this.m_hasProcessingStep;
};
oFF.QueryModel.prototype.setHasProcessingStep = function(hasProcessingStep)
{
	this.m_hasProcessingStep = hasProcessingStep;
};
oFF.QueryModel.prototype.isNode = function()
{
	return true;
};
oFF.QueryModel.prototype.getChildSetState = function()
{
	return oFF.ChildSetState.COMPLETE;
};
oFF.QueryModel.prototype.hasChildren = function()
{
	return true;
};
oFF.QueryModel.prototype.getChildElements = function()
{
	var list = oFF.XList.create();
	list.add(this.getDataSource());
	list.add(this.m_dimensionManager);
	return list;
};
oFF.QueryModel.prototype.processChildFetch = oFF.noSupport;
oFF.QueryModel.prototype.getModelCapabilitiesBase = function()
{
	return this.m_queryCapabilities;
};
oFF.QueryModel.prototype.getModelCapabilities = function()
{
	return this.m_queryCapabilities;
};
oFF.QueryModel.prototype.mergeDeepRecursive = function(settings, other)
{
	var otherQm = other;
	var otherDataSource = otherQm.getDataSource();
	var text = otherDataSource.getText();
	this.getDataSourceBase().setText(text);
	this.setText(text);
	this.setCubeInfo(otherQm.getCubeInfo());
	this.setMetadataPropertiesBase(otherQm.getMetadataProperties().clone());
	this.m_dimensionManager.mergeDeepRecursive(settings, otherQm.getDimensionManagerBase());
	this.m_filterManager.mergeDeepRecursive(settings, otherQm.getFilter());
	var otherExcepAggrMgr = otherQm._getExceptionAggregationManagerBase();
	if (oFF.isNull(otherExcepAggrMgr))
	{
		this.m_exceptionAggregationManager = null;
	}
	else
	{
		this._loadExceptionAggregationManager();
		if (oFF.notNull(this.m_exceptionAggregationManager))
		{
			this.m_exceptionAggregationManager.mergeDeepRecursive(settings, otherExcepAggrMgr);
		}
	}
	if (oFF.notNull(this.m_conditionManager))
	{
		this.m_conditionManager.mergeDeepRecursive(settings, otherQm.getConditionManager());
	}
	if (oFF.notNull(this.m_exceptionManager))
	{
		this.m_exceptionManager.mergeDeepRecursive(settings, otherQm.getExceptionManager());
	}
	if (oFF.notNull(this.m_formulaExceptionManager))
	{
		this.m_formulaExceptionManager.mergeDeepRecursive(settings, otherQm.getFormulaExceptionManager());
	}
	this.m_variableManager.mergeDeepRecursive(settings, otherQm.getVariableManager());
	this.m_sortManager.mergeDeepRecursive(settings, otherQm.getSortingManager());
	this.m_universalDisplayHierarchies.mergeDeepRecursive(settings, otherQm.getUniversalDisplayHierarchies());
};
oFF.QueryModel.prototype.addNewCalculatedDimensionWithName = function(calculatedDimensionName)
{
	return this.m_dimensionManager.addNewCalculatedDimensionWithName(calculatedDimensionName);
};
oFF.QueryModel.prototype.removeCalculatedDimensionByName = function(calculatedDimensionName)
{
	var calculatedDimension = this.getDimensionByName(calculatedDimensionName);
	if (oFF.notNull(calculatedDimension))
	{
		this.getConvenienceCommands().clearFiltersByDimension(calculatedDimension);
		this.m_dimensionManager.removeCalculatedDimensionByName(calculatedDimensionName);
	}
};
oFF.QueryModel.prototype.clearCalculatedDimensions = function()
{
	this.m_dimensionManager.clearAllCalculatedDimensions();
};
oFF.QueryModel.prototype.addNewCalculatedDimensionWithNameAndPreQueryName = function(calculatedDimensionName, preQueryName)
{
	this.assertNotBlendingMode();
	var newCalculatedDimension = this.addNewCalculatedDimensionWithName(calculatedDimensionName);
	newCalculatedDimension.setPreQueryName(preQueryName);
	return newCalculatedDimension;
};
oFF.QueryModel.prototype.addPreQueryWithName = function(preQuery, preQueryName)
{
	if (oFF.isNull(preQuery))
	{
		this.removePreQueryByName(preQueryName);
		return;
	}
	this.assertNoPreQueryCycle(preQuery, this);
	var newPreQuery = oFF.XNameWeakGenericPair.create(preQueryName, preQuery);
	if (oFF.isNull(this.m_preQueries))
	{
		this.m_preQueries = oFF.XListOfNameObject.create();
	}
	this.m_preQueries.add(newPreQuery);
};
oFF.QueryModel.prototype.assertNoPreQueryCycle = function(preQuery, mainQuery)
{
	if (preQuery.isReleased())
	{
		throw oFF.XException.createIllegalStateException("A pre query must not be released!");
	}
	var preQueries = preQuery.getPreQueries();
	if (oFF.notNull(preQueries))
	{
		var sizePreQueries = preQueries.size();
		for (var idxPreQueries = 0; idxPreQueries < sizePreQueries; idxPreQueries++)
		{
			this.assertNoPreQueryCycle(preQueries.get(idxPreQueries).getObject(), mainQuery);
		}
	}
	if (mainQuery === preQuery)
	{
		throw oFF.XException.createIllegalArgumentException("Cylce of pre queries and main query detected!");
	}
};
oFF.QueryModel.prototype.getPreQueryByName = function(preQueryName)
{
	if (oFF.isNull(this.m_preQueries))
	{
		return null;
	}
	var preQuery = this.m_preQueries.getByKey(preQueryName);
	if (oFF.isNull(preQuery))
	{
		return null;
	}
	return preQuery.getObject();
};
oFF.QueryModel.prototype.getPreQueries = function()
{
	return oFF.isNull(this.m_preQueries) ? null : this.m_preQueries.getValuesAsReadOnlyList();
};
oFF.QueryModel.prototype.removePreQueryByName = function(preQueryName)
{
	if (oFF.notNull(this.m_preQueries))
	{
		this.m_preQueries.removeElement(this.m_preQueries.getByKey(preQueryName));
	}
};
oFF.QueryModel.prototype.clearPreQueries = function()
{
	if (oFF.notNull(this.m_preQueries))
	{
		this.m_preQueries.clear();
	}
};
oFF.QueryModel.prototype.getUniversalDisplayHierarchiesBase = function()
{
	return this.m_universalDisplayHierarchies;
};
oFF.QueryModel.prototype.getUniversalDisplayHierarchies = function()
{
	return this.m_universalDisplayHierarchies;
};
oFF.QueryModel.prototype.setExportFixedFilter = function(exportFixedFilter)
{
	if (this.getQueryManager().supportsServerState())
	{
		this.m_exportFixedFilter = exportFixedFilter;
	}
	return this.m_exportFixedFilter;
};
oFF.QueryModel.prototype.isExportingFixedFilter = function()
{
	return this.m_exportFixedFilter;
};
oFF.QueryModel.prototype.setExportVariables = function(exportVariables)
{
	if (this.getQueryManager().supportsServerState())
	{
		this.m_exportVariables = exportVariables;
	}
	return this.m_exportVariables;
};
oFF.QueryModel.prototype.isExportingVariables = function()
{
	return this.m_exportVariables;
};
oFF.QueryModel.prototype.deactivateCumulative = function()
{
	this.m_deactivateCumulative = true;
};
oFF.QueryModel.prototype.isCumulativeDeactive = function()
{
	return this.m_deactivateCumulative;
};
oFF.QueryModel.prototype.setExportEachMeasure = function(exportEachMeasure)
{
	if (this.getQueryManager().supportsServerState())
	{
		this.m_exportEachMeasure = exportEachMeasure;
	}
	return this.m_exportEachMeasure;
};
oFF.QueryModel.prototype.isExportingEachMeasure = function()
{
	return this.m_exportEachMeasure;
};
oFF.QueryModel.prototype.addQueryModelIdToMessages = function(messages)
{
	if (oFF.XCollectionUtils.hasElements(messages))
	{
		var instanceId = oFF.XStringValue.create(this.getDataSource().getInstanceId());
		var messageCount = messages.size();
		for (var i = 0; i < messageCount; i++)
		{
			var message = messages.get(i);
			if (message.getExtendedInfo() === null)
			{
				message.setExtendendInfoType(oFF.ExtendedInfoType.QUERY_MODEL_ID);
				message.setExtendendInfo(instanceId);
			}
		}
	}
};
oFF.QueryModel.prototype.getMeasureCurrencyTranslations = function()
{
	return this.m_currencyTranslationManager.getMeasureCurrencyTranslations();
};
oFF.QueryModel.prototype.getMaxNumberOfTranslations = function()
{
	return this.m_currencyTranslationManager.getMaxNumberOfTranslations();
};
oFF.QueryModel.prototype.getDefaultCurrency = function()
{
	return this.m_currencyTranslationManager.getDefaultCurrency();
};
oFF.QueryModel.prototype.getCurrencyTranslationDetails = function()
{
	return this.m_currencyTranslationManager.getCurrencyTranslationDetails();
};
oFF.QueryModel.prototype.getCurrencyTranslationEnabledType = function()
{
	return this.m_currencyTranslationManager.getCurrencyTranslationEnabledType();
};
oFF.QueryModel.prototype.resetCurrencyTranslationDetails = function()
{
	this.m_currencyTranslationManager.resetCurrencyTranslationDetails();
};
oFF.QueryModel.prototype.getCurrencyTranslationDetailsReset = function()
{
	return this.m_currencyTranslationManager.getCurrencyTranslationDetailsReset();
};
oFF.QueryModel.prototype.addNewMeasureCurrencyTranslation = function(name, description)
{
	return this.m_currencyTranslationManager.addNewMeasureCurrencyTranslation(name, description);
};
oFF.QueryModel.prototype.getMeasureCurrencyTranslation = function(currencyTranslationName)
{
	return this.m_currencyTranslationManager.getMeasureCurrencyTranslation(currencyTranslationName);
};
oFF.QueryModel.prototype.removeMeasureCurrencyTranslationByName = function(name)
{
	this.m_currencyTranslationManager.removeMeasureCurrencyTranslationByName(name);
};
oFF.QueryModel.prototype.clearMeasureCurrencyTranslations = function()
{
	this.m_currencyTranslationManager.clearMeasureCurrencyTranslations();
};
oFF.QueryModel.prototype.supportsCurrencyTranslation = function()
{
	return this.m_currencyTranslationManager.supportsCurrencyTranslation();
};
oFF.QueryModel.prototype.supportsMeasureBasedCurrencyTranslation = function()
{
	return this.m_currencyTranslationManager.supportsMeasureBasedCurrencyTranslation();
};
oFF.QueryModel.prototype.supportsGlobalQueryCurrencyTranslation = function()
{
	return this.m_currencyTranslationManager.supportsGlobalQueryCurrencyTranslation();
};
oFF.QueryModel.prototype.supportsSimpleFixedTargetCurrencyTranslation = function()
{
	return this.m_currencyTranslationManager.supportsSimpleFixedTargetCurrencyTranslation();
};
oFF.QueryModel.prototype.getQueryCurrencyTranslation = function()
{
	return this.m_currencyTranslationManager.getQueryCurrencyTranslation();
};
oFF.QueryModel.prototype.getAvailableCurrencyTranslationObjects = function()
{
	return this.m_currencyTranslationManager.getAvailableCurrencyTranslationObjects();
};
oFF.QueryModel.prototype.getAvailableCurrencies = function()
{
	return this.m_currencyTranslationManager.getAvailableCurrencies();
};
oFF.QueryModel.prototype.getAvailableRateNames = function()
{
	return this.m_currencyTranslationManager.getAvailableRateNames();
};
oFF.QueryModel.prototype.getAvailableRateTypes = function()
{
	return this.m_currencyTranslationManager.getAvailableRateTypes();
};
oFF.QueryModel.prototype.getAvailableRateVersions = function()
{
	return this.m_currencyTranslationManager.getAvailableRateVersions();
};
oFF.QueryModel.prototype.getAvailableCategories = function()
{
	return this.m_currencyTranslationManager.getAvailableCategories();
};
oFF.QueryModel.prototype.setupBwCatalogs = function(syncType, listener)
{
	this.m_currencyTranslationManager.setupBwCatalogs(syncType, listener);
};
oFF.QueryModel.prototype.getCurrencyRateTableId = function()
{
	return this.m_currencyTranslationManager.getCurrencyRateTableId();
};
oFF.QueryModel.prototype.getCurrencyTranslationManager = function()
{
	return this.m_currencyTranslationManager;
};
oFF.QueryModel.prototype.getCurrencyTranslationManagerBase = function()
{
	return this.m_currencyTranslationManager;
};
oFF.QueryModel.prototype.generateTransientObjects = function()
{
	this.stopEventing();
	var messageManager = oFF.MessageManager.createMessageManagerExt(this.getSession());
	if (this.m_transientObjectsGenerated)
	{
		this.destroyTransientObjects();
	}
	this.m_transientObjectsGenerated = true;
	this.generateTransientFromFilter(messageManager);
	this.generateTransientFromFormulaExceptions(messageManager);
	this.generateTransientCustomMembers(messageManager);
	this.generateFormulaCalcDimPreQueries(messageManager);
	this.generateTransientFromCells(messageManager);
	this.generateTransientFromSort(messageManager);
	if (this.isBlendingModel())
	{
		var blendingSources = this.getBlendingDefinition().getSources();
		for (var i = 0; i < blendingSources.size(); i++)
		{
			blendingSources.get(i).getQueryModel().generateTransientObjects();
		}
	}
	this.resumeEventing();
	if (messageManager.hasErrors())
	{
		this.destroyTransientObjects();
		throw oFF.XException.createRuntimeException(messageManager.getErrors().get(0).getText());
	}
	this.getQueryManager().addAllMessages(messageManager);
};
oFF.QueryModel.prototype.generateTransientFromCells = function(messageManager)
{
	var queryCellManager = this.getQueryCellManager();
	if (oFF.notNull(queryCellManager))
	{
		queryCellManager.generateTransientObjects(this, messageManager);
	}
};
oFF.QueryModel.prototype.generateFormulaCalcDimPreQueries = function(messageManager)
{
	var dimensions = this.getLoadedDimensions();
	var dimensionsToProcess = oFF.XList.create();
	var dimensionsIterator = dimensions.getIterator();
	while (dimensionsIterator.hasNext())
	{
		var dimension = dimensionsIterator.next();
		if (dimension.getDimensionType().isTypeOf(oFF.DimensionType.FORMULA_CALCULATED_DIMENSION))
		{
			dimensionsToProcess.add(dimension);
		}
	}
	var dimensionsToProcessIter = dimensionsToProcess.getIterator();
	while (dimensionsToProcessIter.hasNext())
	{
		var formulaCalcDim = dimensionsToProcessIter.next();
		formulaCalcDim.generateTransientObjects(this, messageManager);
	}
};
oFF.QueryModel.prototype.generateTransientCustomMembers = function(messageManager)
{
	if (!this.isBlendingModel())
	{
		var accountDim = this.getAccountDimension();
		var membersToProcess = oFF.XListOfNameObject.create();
		if (oFF.notNull(accountDim))
		{
			membersToProcess.addAll(accountDim.getLoadedStructureMembers());
		}
		var measureDim = this.getMeasureDimension();
		if (oFF.notNull(measureDim))
		{
			membersToProcess.addAll(this.getMeasureDimension().getLoadedStructureMembers());
		}
		var secondaryStructureDimName = this.getDimensionNameByType(oFF.DimensionType.SECONDARY_STRUCTURE);
		if (oFF.notNull(secondaryStructureDimName))
		{
			var dimensionReferences = this.getDimensionAccessor().getDimensionReferences();
			if (!dimensionReferences.containsKey(secondaryStructureDimName))
			{
				var secondaryStructure = this.getDimensionByName(secondaryStructureDimName);
				if (oFF.notNull(secondaryStructure))
				{
					membersToProcess.addAll(secondaryStructure.getLoadedStructureMembers());
				}
			}
		}
		var membersToProcessIter = membersToProcess.getIterator();
		while (membersToProcessIter.hasNext())
		{
			var structureMember = membersToProcessIter.next();
			structureMember.generateTransientObjects(this, messageManager);
		}
	}
};
oFF.QueryModel.prototype.generateTransientFromFilter = function(messageManager)
{
	var filter = this.getFilter();
	if (filter.isDynamicFilterInitialized())
	{
		this.generateTransientFromFilterElement(filter.getDynamicFilter().getFilterRootElement(), messageManager);
	}
	var externalFilters = filter.getLinkedFilters();
	var filterIt = externalFilters.getKeysAsIteratorOfString();
	while (filterIt.hasNext())
	{
		var filterElement = externalFilters.getByKey(filterIt.next()).getFilterRootElement();
		this.generateTransientFromFilterElement(filterElement, messageManager);
	}
	return true;
};
oFF.QueryModel.prototype.generateTransientFromSort = function(messageManager)
{
	if (!this.isBlendingModel())
	{
		var sortingManager = this.getSortingManager();
		var sortingOperations = sortingManager.getSortingOperations();
		var size = sortingOperations.size();
		for (var i = 0; i < size; i++)
		{
			var sortOp = sortingOperations.get(i);
			var sortingType = sortOp.getSortingType();
			if (sortingType === oFF.SortType.DATA_CELL_VALUE || sortingType === oFF.SortType.COMPLEX)
			{
				var elementPath = sortOp.getElementPath();
				var pathSize = elementPath.size();
				for (var idxPath = 0; idxPath < pathSize; idxPath++)
				{
					var dimElement = elementPath.get(idxPath);
					var memberName = dimElement.getSelectValue();
					var dimensionContext = dimElement.getDimension();
					var isPrimaryStructure = dimensionContext === this.getPrimaryCalculationDimension();
					if (isPrimaryStructure && oFF.notNull(memberName) && dimensionContext.getStructureMemberByAliasOrMember(memberName) === null)
					{
						var storageName = this.getQueryManager().getClientQueryObjectStorageName();
						if (oFF.notNull(storageName))
						{
							var structureMember = this.getOlapEnv().getClientQueryObjectManager().getStructuredMember(memberName, storageName, isPrimaryStructure);
							if (oFF.notNull(structureMember))
							{
								structureMember.generateTransientObjects(this, messageManager);
								structureMember.getTagging().put(oFF.QTransientConstants.TAG_IS_TRANSIENT, "");
								dimensionContext.addMeasure(structureMember);
							}
						}
					}
				}
			}
		}
	}
};
oFF.QueryModel.prototype.generateTransientFromFilterElement = function(filterElement, messageManager)
{
	if (oFF.notNull(filterElement))
	{
		var componentType = filterElement.getComponentType();
		if (componentType.isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA))
		{
			var filterCollection = filterElement;
			var size = filterCollection.size();
			for (var i = 0; i < size; i++)
			{
				this.generateTransientFromFilterElement(filterCollection.get(i), messageManager);
			}
		}
		else if (componentType === oFF.FilterComponentType.FILTER_ACROSS_MODELS || componentType === oFF.FilterComponentType.FILTER_MEASURE_BASED)
		{
			var transientFilterElement = filterElement;
			transientFilterElement.generateTransientObjects(this, messageManager);
			var transientCalcDim = transientFilterElement.getTransientDimensionsForQueryModel(this);
			oFF.XCollectionUtils.addAll(this.getFreeAxis(), transientCalcDim);
			if (componentType === oFF.FilterComponentType.FILTER_ACROSS_MODELS)
			{
				this.addDependentSharedCalcDimsFromLinks(filterElement);
			}
		}
		else if (componentType === oFF.FilterComponentType.OPERATION)
		{
			var filterOperation = filterElement;
			var dimensionName = filterOperation.getDimensionName();
			var keyRefStorage;
			var context = filterOperation.getContext();
			var storageName = null;
			if (oFF.notNull(context))
			{
				if (context.getComponentType() === oFF.OlapComponentType.QUERY_MANAGER)
				{
					keyRefStorage = filterOperation.getQueryModel().getKeyRefStorage();
				}
				else
				{
					keyRefStorage = context.getKeyRefStorage();
				}
				if (oFF.notNull(keyRefStorage))
				{
					storageName = keyRefStorage.getName();
				}
			}
			this._addDependentSharedCalcDim(this, dimensionName, storageName);
		}
	}
	return true;
};
oFF.QueryModel.prototype.addDependentSharedCalcDimsFromLinks = function(filterAcrossModels)
{
	var links = filterAcrossModels.getLinks();
	var linkIt = links.getIterator();
	while (linkIt.hasNext())
	{
		var dimensionLink = linkIt.next();
		var thisSide = dimensionLink.getFirstPart().getFieldKey().isSameDataSourceAsContext(this) ? dimensionLink.getFirstPart() : dimensionLink.getSecondPart();
		var storageName = oFF.QFilterAcrossModelsLinkUtil.getSharedLinkStorageName(links, thisSide);
		this._addDependentSharedCalcDim(this, thisSide.getFieldKey().getKey2(), storageName);
	}
};
oFF.QueryModel.prototype._addDependentSharedCalcDim = function(context, dimensionName, storageName)
{
	var calcDim = this._generateDependentFormulaCalcDim(context, dimensionName, storageName);
	if (oFF.notNull(calcDim))
	{
		this.addDimension(calcDim);
		this.getFreeAxis().insert(0, calcDim);
	}
	return calcDim;
};
oFF.QueryModel.prototype._generateDependentFormulaCalcDim = function(context, dimensionName, storageName)
{
	var dimensionAccessor = context.getDimensionAccessor();
	var dimension = dimensionAccessor.getDimensionByName(dimensionName);
	if (oFF.notNull(dimension))
	{
		return null;
	}
	var olapEnvironment = context.getOlapEnv();
	var clientQueryObjectManager = olapEnvironment.getClientQueryObjectManager();
	var formulaCalcDimProperties = clientQueryObjectManager.getFormulaCalcDimProperties(dimensionName, storageName);
	if (oFF.isNull(formulaCalcDimProperties))
	{
		return null;
	}
	var newFormulaCalculatedDimension = oFF.QFactory.createFormulaCalculatedDimension(context, formulaCalcDimProperties.getName());
	newFormulaCalculatedDimension.setPropertiesKeyRef(formulaCalcDimProperties);
	newFormulaCalculatedDimension.getTagging().put(oFF.QTransientConstants.TAG_IS_TRANSIENT, "");
	return newFormulaCalculatedDimension;
};
oFF.QueryModel.prototype.generateTransientFromFormulaExceptions = function(messageManager)
{
	if (oFF.notNull(this.m_formulaExceptionManager))
	{
		this.m_formulaExceptionManager.generateTransientObjects(this, messageManager);
	}
};
oFF.QueryModel.prototype.destroyTransientObjects = function()
{
	this.m_transientObjectsGenerated = false;
	if (!this.isReleased())
	{
		this.stopEventing();
		this.destroyTransientFormulaCalcPrequeries();
		this.destroyTransientFromFilter();
		this.destroyTransientFromFormulaExceptions();
		this.destroyTransientCustomMembers();
		this.destroyTransientFromCells();
		if (this.isBlendingModel())
		{
			var blendingSources = this.getBlendingDefinition().getSources();
			for (var i = 0; i < blendingSources.size(); i++)
			{
				blendingSources.get(i).getQueryModel().destroyTransientObjects();
			}
		}
		this.resumeEventing();
	}
};
oFF.QueryModel.prototype.destroyTransientFromCells = function()
{
	var queryCellManager = this.getQueryCellManager();
	if (oFF.notNull(queryCellManager))
	{
		queryCellManager.destroyTransientObjects(this);
	}
};
oFF.QueryModel.prototype.destroyTransientFormulaCalcPrequeries = function()
{
	var dimensions = this.getLoadedDimensions();
	var dimensionsIterator = dimensions.getIterator();
	while (dimensionsIterator.hasNext())
	{
		var dimension = dimensionsIterator.next();
		if (dimension.getDimensionType().isTypeOf(oFF.DimensionType.FORMULA_CALCULATED_DIMENSION))
		{
			var formulaCalcDim = dimension;
			formulaCalcDim.destroyTransientObjects(this);
		}
	}
};
oFF.QueryModel.prototype.destroyTransientFromFilter = function()
{
	var filter = this.getFilter();
	if (filter.isDynamicFilterInitialized())
	{
		this.destroyTransientFromFilterElement(filter.getDynamicFilter().getFilterRootElement());
	}
	var externalFilters = filter.getLinkedFilters();
	var filterIt = externalFilters.getKeysAsIteratorOfString();
	while (filterIt.hasNext())
	{
		var filterElement = externalFilters.getByKey(filterIt.next()).getFilterRootElement();
		this.destroyTransientFromFilterElement(filterElement);
	}
};
oFF.QueryModel.prototype.destroyTransientFromFilterElement = function(filterElement)
{
	if (oFF.notNull(filterElement) && !filterElement.isReleased())
	{
		var componentType = filterElement.getComponentType();
		if (componentType.isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA))
		{
			var filterCollection = filterElement;
			var size = filterCollection.size();
			for (var i = 0; i < size; i++)
			{
				this.destroyTransientFromFilterElement(filterCollection.get(i));
			}
		}
		else if (componentType === oFF.FilterComponentType.FILTER_ACROSS_MODELS || componentType === oFF.FilterComponentType.FILTER_MEASURE_BASED)
		{
			filterElement.destroyTransientObjects(this);
		}
	}
};
oFF.QueryModel.prototype.destroyTransientCustomMembers = function()
{
	if (!this.isBlendingModel())
	{
		var accountDim = this.getAccountDimension();
		var membersToProcess = oFF.XListOfNameObject.create();
		if (oFF.notNull(accountDim))
		{
			membersToProcess.addAll(accountDim.getLoadedStructureMembers());
		}
		var measureDim = this.getMeasureDimension();
		if (oFF.notNull(measureDim))
		{
			membersToProcess.addAll(this.getMeasureDimension().getLoadedStructureMembers());
		}
		var secondaryStructureDimName = this.getDimensionNameByType(oFF.DimensionType.SECONDARY_STRUCTURE);
		if (oFF.notNull(secondaryStructureDimName))
		{
			var dimensionReferences = this.getDimensionAccessor().getDimensionReferences();
			if (!dimensionReferences.containsKey(secondaryStructureDimName))
			{
				var secondaryStructure = this.getDimensionByName(secondaryStructureDimName);
				if (oFF.notNull(secondaryStructure))
				{
					membersToProcess.addAll(secondaryStructure.getLoadedStructureMembers());
				}
			}
		}
		var membersToProcessIter = membersToProcess.getIterator();
		while (membersToProcessIter.hasNext())
		{
			var structureMember = membersToProcessIter.next();
			if (!structureMember.isReleased())
			{
				structureMember.destroyTransientObjects(this);
			}
		}
	}
};
oFF.QueryModel.prototype.destroyTransientFromFormulaExceptions = function()
{
	if (oFF.notNull(this.m_formulaExceptionManager))
	{
		this.m_formulaExceptionManager.destroyTransientObjects(this);
	}
};
oFF.QueryModel.prototype.clearAllOptimizerHints = function()
{
	if (oFF.isNull(this.m_optimizerHints) || !this.m_optimizerHints.hasElements())
	{
		return;
	}
	this.clearOptimizerHintsByEngine(oFF.ExecutionEngine.MDS);
	this.clearOptimizerHintsByEngine(oFF.ExecutionEngine.CALC_ENGINE);
	this.clearOptimizerHintsByEngine(oFF.ExecutionEngine.SQL);
};
oFF.QueryModel.prototype.clearOptimizerHintsByEngine = function(engine)
{
	var hintsForEngine = this.m_optimizerHints.getByKey(engine.getName());
	if (oFF.notNull(hintsForEngine) && hintsForEngine.hasElements())
	{
		hintsForEngine.clear();
	}
};
oFF.QueryModel.prototype.isBasicMeasureAggregationExportedInRepo = function()
{
	return this.m_isBasicMeasureAggretionExportedInRepo;
};
oFF.QueryModel.prototype.setBasicMeasureAggregationExportForRepo = function(isAggregationExported)
{
	this.m_isBasicMeasureAggretionExportedInRepo = isAggregationExported;
};
oFF.QueryModel.prototype.getRowsAxisDef = function()
{
	return this.getRowsAxis();
};
oFF.QueryModel.prototype.getColumnsAxisDef = function()
{
	return this.getColumnsAxis();
};
oFF.QueryModel.prototype.getAxisDef = function(axis)
{
	return this.getAxis(axis);
};
oFF.QueryModel.prototype.setClientInfo = function(version, identifier, component)
{
	this.getApplication().setClientInfo(version, identifier, component);
};
oFF.QueryModel.prototype.setWidgetId = function(widgetId)
{
	this.m_widgetId = widgetId;
};
oFF.QueryModel.prototype.getWidgetId = function()
{
	return this.m_widgetId;
};
oFF.QueryModel.prototype.setStoryId = function(storyId)
{
	this.getApplication().setStoryId(storyId);
};
oFF.QueryModel.prototype.getStoryId = function()
{
	return this.getApplication().getStoryId();
};
oFF.QueryModel.prototype.setStoryName = function(storyName)
{
	this.getApplication().setStoryName(storyName);
};
oFF.QueryModel.prototype.getStoryName = function()
{
	return this.getApplication().getStoryName();
};
oFF.QueryModel.prototype.setLanguageLocale = function(languageLocale)
{
	this.getApplication().setLanguageLocale(languageLocale);
};
oFF.QueryModel.prototype.getLanguageLocale = function()
{
	return this.getApplication().getLanguageLocale();
};
oFF.QueryModel.prototype.clearClientInfo = function()
{
	this.getApplication().clearClientInfo();
	this.m_widgetId = null;
};
oFF.QueryModel.prototype.getClientVersion = function()
{
	return this.getApplication().getClientVersion();
};
oFF.QueryModel.prototype.getClientIdentifier = function()
{
	return this.getApplication().getClientIdentifier();
};
oFF.QueryModel.prototype.getClientComponent = function()
{
	return this.getApplication().getClientComponent();
};
oFF.QueryModel.prototype.getKeyRefStorage = function()
{
	return this.m_keyRefStorage;
};
oFF.QueryModel.prototype.supportsResultAlignment = function()
{
	return this.m_resultStructureController.supportsResultAlignment();
};
oFF.QueryModel.prototype.supportsResultVisibility = function()
{
	return this.m_resultStructureController.supportsResultVisibility();
};
oFF.QueryModel.prototype.supportsTotals = function()
{
	return this.m_resultStructureController.supportsTotals();
};
oFF.QueryModel.prototype.supportsDataEntryReadOnly = function()
{
	return this.m_supportsDataEntryReadOnly;
};
oFF.QueryModel.prototype.setSupportsDataEntryReadOnly = function(supportsDataEntryReadOnly)
{
	this.m_supportsDataEntryReadOnly = supportsDataEntryReadOnly;
};
oFF.QueryModel.prototype.supportsDimensionLazyLoad = function()
{
	return this.getQueryManager().getInitSettings().supportsDimensionLazyLoad();
};
oFF.QueryModel.prototype.isBasicMeasureSettingsExportedInRepo = function()
{
	return this.m_isBasicMeasureSettingsExportedInRepo;
};
oFF.QueryModel.prototype.setBasicMeasureSettingsExportedInRepo = function(isSettingsExported)
{
	this.m_isBasicMeasureSettingsExportedInRepo = isSettingsExported;
};
oFF.QueryModel.prototype.getSpatialClusterSettings = function()
{
	return this.m_spatialClustering;
};
oFF.QueryModel.prototype.setSpatialClusterSettings = function(spatialClusterSettings)
{
	if (this.getModelCapabilities().supportsSpatialClustering())
	{
		this.m_spatialClustering = spatialClusterSettings;
	}
};
oFF.QueryModel.prototype.getQueryCellManager = function()
{
	if (oFF.isNull(this.m_queryCellManager) && this.getModelCapabilities().supportsUniversalModel())
	{
		this.m_queryCellManager = oFF.QQueryCellManager.create(this, this);
	}
	return this.m_queryCellManager;
};
oFF.QueryModel.prototype.getDatasetEpmObject = function()
{
	return this.m_datasetEpmObject;
};
oFF.QueryModel.prototype.setDatasetEpmObject = function(datasetEpmObject)
{
	this.m_datasetEpmObject = datasetEpmObject;
};
oFF.QueryModel.prototype.getDatasetId = function()
{
	if (this.getDatasetEpmObject() !== null)
	{
		return this.getDatasetEpmObject().getDatasetId();
	}
	return null;
};
oFF.QueryModel.prototype.hasUserDefinedMeasures = function()
{
	return this.getMetadataProperties().getBooleanByKeyExt(oFF.QueryModel.HAS_USER_DEFINED_MEASURES, false);
};
oFF.QueryModel.prototype.isPlanning = function()
{
	return this.getMetadataProperties().getBooleanByKeyExt(oFF.QueryModel.IS_PLANNING, false);
};
oFF.QueryModel.prototype.isLeadingStructureAccount = function()
{
	return oFF.XString.isEqual(oFF.QueryModel.LEADING_STRUCTURE_ACCOUNT, this.getMetadataProperties().getStringByKey(oFF.QueryModel.LEADING_STRUCTURE));
};
oFF.QueryModel.prototype.isLeadingStructureMeasure = function()
{
	return oFF.XString.isEqual(oFF.QueryModel.LEADING_STRUCTURE_MEASURE, this.getMetadataProperties().getStringByKey(oFF.QueryModel.LEADING_STRUCTURE));
};
oFF.QueryModel.prototype.setIsMetadataUpdatedByAutoSubmit = function(isMetadataUpdated)
{
	this.m_isMetadataUpdatedByAutoSubmit = isMetadataUpdated;
};
oFF.QueryModel.prototype.isMetadataUpdatedByAutoSubmit = function()
{
	return this.m_isMetadataUpdatedByAutoSubmit;
};
oFF.QueryModel.prototype.isAutoVariableSubmitActive = function()
{
	return this.getQueryManagerBase().isAutoVariableSubmitActive();
};
oFF.QueryModel.prototype.setReturnTupleCountTotal = function(returnTupleCountTotal)
{
	if (this.getModelCapabilities().supportsPagingTupleCountBeforeSlicing() && this.m_isReturnTupleCountTotal !== returnTupleCountTotal)
	{
		this.m_isReturnTupleCountTotal = returnTupleCountTotal;
		this.notifyNodeChanged();
	}
};
oFF.QueryModel.prototype.isReturnTupleCountTotal = function()
{
	return this.m_isReturnTupleCountTotal;
};
oFF.QueryModel.prototype.setModCounter = function(modCounter)
{
	this.updateModCounter(modCounter);
};
oFF.QueryModel.prototype.getDueDate = function()
{
	var cubeInfo = this.getCubeInfo();
	if (oFF.isNull(cubeInfo))
	{
		return null;
	}
	return cubeInfo.getDueDate();
};
oFF.QueryModel.prototype.metadataUpdateEventing = function()
{
	this.setDeltaPhase(oFF.QDeltaOperationPhase.NOTIFY_PAUSE_MODCOUNTER);
};
oFF.QueryModel.prototype.isInQueryModelMergeFlow = function()
{
	return this.m_currentDeltaPhase === oFF.QDeltaOperationPhase.NOTIFY_PAUSE_MODCOUNTER;
};
oFF.QueryModel.prototype.isUniversalAccountModel = function()
{
	return this.hasUserDefinedMeasures() && this.getAccountDimension() !== null;
};
oFF.QueryModel.prototype.hasExplainQueryContext = function()
{
	return oFF.notNull(this.m_explainQueryContext) && this.m_explainQueryContext.isSet();
};
oFF.QueryModel.prototype.getExplainQueryContext = function()
{
	if (oFF.isNull(this.m_explainQueryContext))
	{
		this.m_explainQueryContext = oFF.QExplainQueryContext.create(this, this);
	}
	return this.m_explainQueryContext;
};
oFF.QueryModel.prototype.setIgnoreAutoVariableSubmit = function(ignoreAutoVariableSubmit)
{
	this.getQueryManager().getInitSettings().setIsExecuteAutoVariableSubmit(!ignoreAutoVariableSubmit);
};
oFF.QueryModel.prototype.isIgnoreAutoVariableSubmit = function()
{
	return !this.getQueryManager().getInitSettings().isExecuteAutoVariableSubmit();
};

oFF.QResultStructureControllerGeneric = function() {};
oFF.QResultStructureControllerGeneric.prototype = new oFF.QModelComponent();
oFF.QResultStructureControllerGeneric.prototype._ff_c = "QResultStructureControllerGeneric";

oFF.QResultStructureControllerGeneric.prototype.m_supportsTotals = null;
oFF.QResultStructureControllerGeneric.prototype.m_isAlignmentDefault = false;
oFF.QResultStructureControllerGeneric.prototype.m_isVisibilityDefault = false;
oFF.QResultStructureControllerGeneric.prototype.m_isStructureDefault = false;
oFF.QResultStructureControllerGeneric.prototype.m_modelLevel = null;
oFF.QResultStructureControllerGeneric.prototype.setupGenericController = function(context, parentNode, location)
{
	oFF.QModelComponent.prototype.setupModelComponent.call( this , context, parentNode);
	this.m_modelLevel = location;
	this.m_supportsTotals = oFF.TriStateBool._DEFAULT;
	this.m_isAlignmentDefault = true;
	this.m_isVisibilityDefault = true;
	this.m_isStructureDefault = true;
};
oFF.QResultStructureControllerGeneric.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originResultStructureControllerGen = other;
	this.m_supportsTotals = originResultStructureControllerGen.m_supportsTotals;
	this.m_isAlignmentDefault = originResultStructureControllerGen.m_isAlignmentDefault;
	this.m_isVisibilityDefault = originResultStructureControllerGen.m_isVisibilityDefault;
	this.m_isStructureDefault = originResultStructureControllerGen.m_isStructureDefault;
	this.m_modelLevel = originResultStructureControllerGen.m_modelLevel;
};
oFF.QResultStructureControllerGeneric.prototype.releaseObject = function()
{
	this.m_supportsTotals = null;
	this.m_modelLevel = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QResultStructureControllerGeneric.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.TOTALS;
};
oFF.QResultStructureControllerGeneric.prototype.getParentController = function()
{
	var context = this.getResultStructureController();
	return context.getParentResultStructureController();
};
oFF.QResultStructureControllerGeneric.prototype.getResultStructureController = function()
{
	return this.getParentComponent();
};
oFF.QResultStructureControllerGeneric.prototype.supportsResultAlignment = function()
{
	if (oFF.isNull(this.m_modelLevel))
	{
		return false;
	}
	var level = this.m_modelLevel.getLevel();
	var supportedLevel;
	var modelCapabilities = this.getModelCapabilities();
	if (oFF.notNull(modelCapabilities))
	{
		supportedLevel = modelCapabilities.getSupportedResultAlignmentLevel();
	}
	else
	{
		supportedLevel = oFF.QModelLevel.NONE;
	}
	return level <= supportedLevel.getLevel();
};
oFF.QResultStructureControllerGeneric.prototype.supportsResultVisibility = function()
{
	if (oFF.isNull(this.m_modelLevel))
	{
		return false;
	}
	var level = this.m_modelLevel.getLevel();
	var supportedLevel;
	var modelCapabilities = this.getModelCapabilities();
	if (oFF.notNull(modelCapabilities))
	{
		supportedLevel = modelCapabilities.getSupportedResultVisibilityLevel();
	}
	else
	{
		supportedLevel = oFF.QModelLevel.NONE;
	}
	return level <= supportedLevel.getLevel();
};
oFF.QResultStructureControllerGeneric.prototype.getModelLevel = function()
{
	return this.m_modelLevel;
};
oFF.QResultStructureControllerGeneric.prototype.supportsTotals = function()
{
	if (this.m_supportsTotals === oFF.TriStateBool._DEFAULT)
	{
		var parentController = this.getParentController();
		if (oFF.notNull(parentController))
		{
			return parentController.supportsTotals();
		}
	}
	return this.m_supportsTotals.getBoolean();
};
oFF.QResultStructureControllerGeneric.prototype.setSupportsTotals = function(supportsTotals)
{
	this.m_supportsTotals = oFF.TriStateBool.lookup(supportsTotals);
};
oFF.QResultStructureControllerGeneric.prototype.setResultVisibility = function(visibility)
{
	this.setResultVisibilityByElement(oFF.ResultStructureElement.TOTAL, visibility);
};
oFF.QResultStructureControllerGeneric.prototype.getResultVisibility = function()
{
	return this.getResultVisibilityByElement(oFF.ResultStructureElement.TOTAL);
};
oFF.QResultStructureControllerGeneric.prototype.getResultVisibilityByElement = function(element)
{
	return this.getResultVisibilityByElementAndAlignment(this.getResultAlignment(), element);
};
oFF.QResultStructureControllerGeneric.prototype.isTotalsAlignmentOnDefault = function()
{
	return this.m_isAlignmentDefault;
};
oFF.QResultStructureControllerGeneric.prototype.isTotalsVisibilityOnDefault = function()
{
	return this.m_isVisibilityDefault;
};
oFF.QResultStructureControllerGeneric.prototype.isTotalsStructureOnDefault = function()
{
	return this.m_isStructureDefault;
};
oFF.QResultStructureControllerGeneric.prototype.supportsAdvancedResultStructure = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.isNull(queryModel))
	{
		return false;
	}
	return queryModel.getModelCapabilities().getResultStructureReorderingCapability() === oFF.ReorderingCapability.FULL;
};
oFF.QResultStructureControllerGeneric.prototype.restoreTotalsAlignment = function(restoreAction, recurseChildren)
{
	if (this.supportsResultAlignment())
	{
		this.queueEventing();
		var targetIsDefault = restoreAction === oFF.RestoreAction.DEFAULT_VALUE;
		var isChanged = this.m_isAlignmentDefault !== targetIsDefault || restoreAction === oFF.RestoreAction.COPY;
		if (isChanged)
		{
			this.m_isAlignmentDefault = true;
			this.internalSetTotalsAlignmentDefault(!targetIsDefault);
			this.m_isAlignmentDefault = targetIsDefault;
			this.notifyNodeChanged();
		}
		if (recurseChildren)
		{
			var resultStructureController = this.getResultStructureController();
			var children = resultStructureController.getResultStructureChildren();
			if (oFF.notNull(children))
			{
				while (children.hasNext())
				{
					var child = children.next();
					child.restoreTotalsAlignment(oFF.RestoreAction.DEFAULT_VALUE, true);
				}
				oFF.XObjectExt.release(children);
			}
		}
		this.resumeEventing();
	}
};
oFF.QResultStructureControllerGeneric.prototype.restoreTotalsVisibility = function(restoreAction, recurseChildren)
{
	if (this.supportsResultVisibility())
	{
		this.queueEventing();
		var targetIsDefault = restoreAction === oFF.RestoreAction.DEFAULT_VALUE;
		var isChanged = this.m_isVisibilityDefault !== targetIsDefault || restoreAction === oFF.RestoreAction.COPY;
		if (isChanged)
		{
			this.m_isVisibilityDefault = true;
			this.internalSetTotalsVisibilityDefault(!targetIsDefault);
			this.m_isVisibilityDefault = targetIsDefault;
			this.notifyNodeChanged();
		}
		if (recurseChildren)
		{
			var resultStructureController = this.getResultStructureController();
			var children = resultStructureController.getResultStructureChildren();
			if (oFF.notNull(children))
			{
				while (children.hasNext())
				{
					var child = children.next();
					child.restoreTotalsVisibility(oFF.RestoreAction.DEFAULT_VALUE, true);
				}
				oFF.XObjectExt.release(children);
			}
		}
		this.resumeEventing();
	}
};

oFF.QComplexAndDataCellSorting = function() {};
oFF.QComplexAndDataCellSorting.prototype = new oFF.QGenericSorting();
oFF.QComplexAndDataCellSorting.prototype._ff_c = "QComplexAndDataCellSorting";

oFF.QComplexAndDataCellSorting.createPathUniqueName = function(elementPath)
{
	var buffer = oFF.XStringBuffer.create();
	if (oFF.notNull(elementPath))
	{
		for (var i = 0; i < elementPath.size(); i++)
		{
			if (i > 0)
			{
				buffer.append("/");
			}
			var element = elementPath.get(i);
			buffer.append("[").append(element.getDimension().getName()).append("]");
			buffer.append("{").append(element.getSelectHierarchyName()).append("} ");
			buffer.append("(").append(element.getSelectValue()).append(")");
		}
	}
	return buffer.toString();
};
oFF.QComplexAndDataCellSorting.prototype.m_elementPath = null;
oFF.QComplexAndDataCellSorting.prototype.m_usedInRanking = false;
oFF.QComplexAndDataCellSorting.prototype.m_appliedTopOnIndividualDimension = false;
oFF.QComplexAndDataCellSorting.prototype.copyFromInternal = function(other, flags)
{
	oFF.QGenericSorting.prototype.copyFromInternal.call( this , other, flags);
	var originComplexAndDataCellSorting = other;
	var queryModel = this.getQueryModel();
	var temp = oFF.XList.create();
	var size = originComplexAndDataCellSorting.m_elementPath.size();
	for (var i = 0; i < size; i++)
	{
		var origElement = originComplexAndDataCellSorting.m_elementPath.get(i);
		temp.add(oFF.QFactory.createDimensionElement(queryModel.getFieldByName(origElement.getSelectField().getName()), origElement.getSelectHierarchyName(), origElement.getSelectValue()));
	}
	this.m_elementPath = temp;
	this.m_usedInRanking = originComplexAndDataCellSorting.usedInRanking();
};
oFF.QComplexAndDataCellSorting.prototype.setupSorting = function(parentNode, path)
{
	oFF.QGenericSorting.prototype.setupGenericSorting.call( this , parentNode);
	this.m_elementPath = path;
};
oFF.QComplexAndDataCellSorting.prototype.releaseObject = function()
{
	this.m_elementPath = null;
	oFF.QGenericSorting.prototype.releaseObject.call( this );
};
oFF.QComplexAndDataCellSorting.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.COMPLEX_SORTING;
};
oFF.QComplexAndDataCellSorting.prototype.getSortingType = function()
{
	return oFF.SortType.COMPLEX;
};
oFF.QComplexAndDataCellSorting.prototype.getPathUniqueName = function()
{
	return oFF.QComplexAndDataCellSorting.createPathUniqueName(this.m_elementPath);
};
oFF.QComplexAndDataCellSorting.prototype.getElementPath = function()
{
	return this.m_elementPath;
};
oFF.QComplexAndDataCellSorting.prototype.getTargetDimension = function()
{
	return null;
};
oFF.QComplexAndDataCellSorting.prototype.setTargetDimension = function(targetDimension) {};
oFF.QComplexAndDataCellSorting.prototype.setUsedInRanking = function(usedInRanking)
{
	this.m_usedInRanking = usedInRanking;
};
oFF.QComplexAndDataCellSorting.prototype.usedInRanking = function()
{
	return this.m_usedInRanking;
};
oFF.QComplexAndDataCellSorting.prototype.setAppliedTopOnIndividualDimension = function(appliedTopOnIndividualDimension)
{
	this.m_appliedTopOnIndividualDimension = appliedTopOnIndividualDimension;
};
oFF.QComplexAndDataCellSorting.prototype.appliedTopOnIndividualDimension = function()
{
	return this.m_appliedTopOnIndividualDimension;
};

oFF.QDimensionSorting = function() {};
oFF.QDimensionSorting.prototype = new oFF.QGenericSorting();
oFF.QDimensionSorting.prototype._ff_c = "QDimensionSorting";

oFF.QDimensionSorting.create = function(parentNode, dimension)
{
	var sorting = new oFF.QDimensionSorting();
	sorting.setupSorting(parentNode, dimension);
	return sorting;
};
oFF.QDimensionSorting.prototype.m_dimension = null;
oFF.QDimensionSorting.prototype.m_sortingType = null;
oFF.QDimensionSorting.prototype.copyFromInternal = function(other, flags)
{
	oFF.QGenericSorting.prototype.copyFromInternal.call( this , other, flags);
	this.m_sortingType = other.m_sortingType;
};
oFF.QDimensionSorting.prototype.setupSorting = function(parentNode, dimension)
{
	oFF.QGenericSorting.prototype.setupGenericSorting.call( this , parentNode);
	this.setDimension(dimension);
	if (this.supportsSortType(oFF.SortType.MEMBER_KEY))
	{
		this.m_sortingType = oFF.SortType.MEMBER_KEY;
	}
	else
	{
		this.m_sortingType = null;
	}
};
oFF.QDimensionSorting.prototype.releaseObject = function()
{
	this.m_dimension = oFF.XObjectExt.release(this.m_dimension);
	this.m_sortingType = null;
	oFF.QGenericSorting.prototype.releaseObject.call( this );
};
oFF.QDimensionSorting.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.DIMENSION_SORTING;
};
oFF.QDimensionSorting.prototype.getDimension = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_dimension);
};
oFF.QDimensionSorting.prototype.setDimension = function(dimension)
{
	this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
};
oFF.QDimensionSorting.prototype.getSortingType = function()
{
	return this.m_sortingType;
};
oFF.QDimensionSorting.prototype.setSortByHierarchy = function()
{
	this.setSortType(oFF.SortType.HIERARCHY);
};
oFF.QDimensionSorting.prototype.setSortByFilter = function()
{
	this.setSortType(oFF.SortType.FILTER);
};
oFF.QDimensionSorting.prototype.setSortingPresentationType = function(activePresentationType)
{
	this.setSortByPresentation(activePresentationType);
};
oFF.QDimensionSorting.prototype.setSortByPresentation = function(presentationType)
{
	if (presentationType.isTypeOf(oFF.PresentationType.KEY))
	{
		this.setSortType(oFF.SortType.MEMBER_KEY);
	}
	else if (presentationType.isTypeOf(oFF.PresentationType.TEXT))
	{
		this.setSortType(oFF.SortType.MEMBER_TEXT);
	}
};
oFF.QDimensionSorting.prototype.setSortType = function(sortType)
{
	if (this.m_sortingType === sortType)
	{
		return false;
	}
	if (!sortType.isTypeOf(oFF.SortType.ABSTRACT_DIMENSION_SORT))
	{
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("Supports only subtype of dimension sorting: ", sortType.getName()));
	}
	if (!this.supportsSortType(sortType))
	{
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate2("Sorting type not supported: ", sortType.getName()));
	}
	this.m_sortingType = sortType;
	this.notifyNodeChanged();
	return true;
};
oFF.QDimensionSorting.prototype.getSortingPresentationType = function()
{
	var sortingType = this.getSortingType();
	if (sortingType === oFF.SortType.MEMBER_KEY)
	{
		return oFF.PresentationType.KEY;
	}
	else if (sortingType === oFF.SortType.MEMBER_TEXT)
	{
		return oFF.PresentationType.TEXT;
	}
	return null;
};
oFF.QDimensionSorting.prototype.supportsSortByHierarchy = function()
{
	return this.supportsSortType(oFF.SortType.HIERARCHY);
};
oFF.QDimensionSorting.prototype.supportsSortByFilter = function()
{
	return this.supportsSortType(oFF.SortType.FILTER);
};
oFF.QDimensionSorting.prototype.supportsSortByPresentation = function(presentationType)
{
	if (presentationType.isTypeOf(oFF.PresentationType.KEY))
	{
		return this.supportsSortType(oFF.SortType.MEMBER_KEY);
	}
	else if (presentationType.isTypeOf(oFF.PresentationType.TEXT))
	{
		return this.supportsSortType(oFF.SortType.MEMBER_TEXT);
	}
	return false;
};
oFF.QDimensionSorting.prototype.supportsSortType = function(sortType)
{
	return this.getQueryModel().getModelCapabilities().supportsDimensionSorting(this.getDimension(), sortType);
};
oFF.QDimensionSorting.prototype.setSortByKey = function()
{
	this.setSortByPresentation(oFF.PresentationType.KEY);
};
oFF.QDimensionSorting.prototype.setSortByText = function()
{
	this.setSortByPresentation(oFF.PresentationType.TEXT);
};
oFF.QDimensionSorting.prototype.supportsDimension = function()
{
	return true;
};
oFF.QDimensionSorting.prototype.toString = function()
{
	var buffer = oFF.XStringBuffer.create();
	buffer.append(this.getOlapComponentType().getName());
	buffer.append(" - Dim: ");
	var dimension = this.getDimension();
	if (oFF.isNull(dimension))
	{
		buffer.append("[no dimension defined]");
	}
	else
	{
		buffer.append(dimension.getName());
	}
	buffer.append(" - Type: ");
	buffer.append(this.m_sortingType.getName());
	buffer.append(" - Dir: ");
	buffer.append(this.getDirection().getName());
	return buffer.toString();
};

oFF.QFieldSorting = function() {};
oFF.QFieldSorting.prototype = new oFF.QGenericSorting();
oFF.QFieldSorting.prototype._ff_c = "QFieldSorting";

oFF.QFieldSorting.create = function(parentNode, field)
{
	var sorting = new oFF.QFieldSorting();
	sorting.setupSorting(parentNode, field);
	return sorting;
};
oFF.QFieldSorting.prototype.m_field = null;
oFF.QFieldSorting.prototype.setupSorting = function(parentNode, field)
{
	oFF.QGenericSorting.prototype.setupGenericSorting.call( this , parentNode);
	this.m_field = oFF.XWeakReferenceUtil.getWeakRef(field);
};
oFF.QFieldSorting.prototype.releaseObject = function()
{
	this.m_field = oFF.XObjectExt.release(this.m_field);
	oFF.QGenericSorting.prototype.releaseObject.call( this );
};
oFF.QFieldSorting.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FIELD_SORTING;
};
oFF.QFieldSorting.prototype.getSortingType = function()
{
	return oFF.SortType.FIELD;
};
oFF.QFieldSorting.prototype.getField = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_field);
};

oFF.QMeasureSorting = function() {};
oFF.QMeasureSorting.prototype = new oFF.QGenericSorting();
oFF.QMeasureSorting.prototype._ff_c = "QMeasureSorting";

oFF.QMeasureSorting.create = function(parentNode, structureMember)
{
	var sorting = new oFF.QMeasureSorting();
	sorting.setupSorting(parentNode, structureMember);
	return sorting;
};
oFF.QMeasureSorting.prototype.m_measureMember = null;
oFF.QMeasureSorting.prototype.m_keyRefMember = null;
oFF.QMeasureSorting.prototype.m_measure = null;
oFF.QMeasureSorting.prototype.m_structureMember = null;
oFF.QMeasureSorting.prototype.copyFromInternal = function(other, flags)
{
	oFF.QGenericSorting.prototype.copyFromInternal.call( this , other, flags);
	var originMeasureSorting = other;
	var queryModel = this.getQueryModel();
	if (oFF.notNull(originMeasureSorting.m_measure))
	{
		this.setDimension(queryModel.getDimensionByNameFromExistingMetadata(originMeasureSorting.getDimension().getName()));
	}
	if (oFF.notNull(originMeasureSorting.m_structureMember))
	{
		var structureMember = queryModel.getNonMeasureDimension().getStructureMember(originMeasureSorting.getStructure().getName());
		this.setStructure(structureMember);
	}
	if (oFF.notNull(originMeasureSorting.m_keyRefMember))
	{
		this.setStructureMember(originMeasureSorting.getMeasure());
	}
};
oFF.QMeasureSorting.prototype.setupSorting = function(parentNode, structureMember)
{
	oFF.QGenericSorting.prototype.setupGenericSorting.call( this , parentNode);
	this.setStructureMember(structureMember);
};
oFF.QMeasureSorting.prototype.releaseObject = function()
{
	this.m_measureMember = oFF.XObjectExt.release(this.m_measureMember);
	this.m_keyRefMember = oFF.XObjectExt.release(this.m_keyRefMember);
	this.m_measure = oFF.XObjectExt.release(this.m_measure);
	this.m_structureMember = oFF.XObjectExt.release(this.m_structureMember);
	oFF.QGenericSorting.prototype.releaseObject.call( this );
};
oFF.QMeasureSorting.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.MEASURE_SORTING;
};
oFF.QMeasureSorting.prototype.getSortingType = function()
{
	return oFF.SortType.MEASURE;
};
oFF.QMeasureSorting.prototype.getMeasure = function()
{
	if (oFF.notNull(this.m_keyRefMember) && this.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(this.m_keyRefMember) !== null)
	{
		return this.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(this.m_keyRefMember);
	}
	else
	{
		return oFF.XWeakReferenceUtil.getHardRef(this.m_measureMember);
	}
};
oFF.QMeasureSorting.prototype.setStructureMember = function(member)
{
	if (member.getStorageGroupName() !== null && !oFF.XString.isEqual(member.getStorageName(), oFF.KeyRefConstants.MAIN_STORAGE) && member.getMemberType() !== oFF.MemberType.BASIC_MEASURE)
	{
		this.m_keyRefMember = oFF.QFactory.createKeyRef(member.getStorageName(), member.getStorageGroupName(), member.getStorageObjectName());
	}
	else
	{
		this.m_measureMember = oFF.XWeakReferenceUtil.getWeakRef(member);
	}
};
oFF.QMeasureSorting.prototype.getDimension = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_measure);
};
oFF.QMeasureSorting.prototype.setDimension = function(dimension)
{
	this.m_measure = oFF.XWeakReferenceUtil.getWeakRef(dimension);
};
oFF.QMeasureSorting.prototype.supportsDimension = function()
{
	return true;
};
oFF.QMeasureSorting.prototype.getStructure = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_structureMember);
};
oFF.QMeasureSorting.prototype.setStructure = function(structureMember)
{
	this.m_structureMember = oFF.XWeakReferenceUtil.getWeakRef(structureMember);
	this.notifyNodeChanged();
};

oFF.QVariable = function() {};
oFF.QVariable.prototype = new oFF.QVariableModelComponent();
oFF.QVariable.prototype._ff_c = "QVariable";

oFF.QVariable.prototype.m_variableContext = null;
oFF.QVariable.prototype.m_valueType = null;
oFF.QVariable.prototype.m_variableOrder = 0;
oFF.QVariable.prototype.m_dependentVariablesNames = null;
oFF.QVariable.prototype.m_dependentVariables = null;
oFF.QVariable.prototype.m_affectedVariables = null;
oFF.QVariable.prototype.m_isInputEnabled = false;
oFF.QVariable.prototype.m_isMandatory = false;
oFF.QVariable.prototype.m_isInitialValueAllowed = false;
oFF.QVariable.prototype.m_isDynamic = false;
oFF.QVariable.prototype.m_externalVariable = null;
oFF.QVariable.prototype.m_nameExternal = null;
oFF.QVariable.prototype.m_customVariable = false;
oFF.QVariable.prototype.m_processingType = null;
oFF.QVariable.prototype.getNameExternal = function()
{
	return this.m_nameExternal;
};
oFF.QVariable.prototype.setNameExternal = function(nameExternal)
{
	this.m_nameExternal = nameExternal;
};
oFF.QVariable.prototype.setupVariable = function(context, variableContext, valueType, name, description)
{
	oFF.QVariableModelComponent.prototype.setupModelComponentWithName.call( this , context, variableContext.getModelComponentBase(), name);
	this.setText(description);
	this.m_variableContext = variableContext;
	this.m_valueType = valueType;
	this.m_dependentVariables = oFF.XListOfNameObject.create();
	this.m_dependentVariablesNames = oFF.XListOfString.create();
};
oFF.QVariable.prototype.releaseObject = function()
{
	this.m_variableContext = null;
	this.m_valueType = null;
	this.m_processingType = null;
	this.m_affectedVariables = oFF.XObjectExt.release(this.m_affectedVariables);
	this.m_externalVariable = oFF.XObjectExt.release(this.m_externalVariable);
	this.m_dependentVariables = oFF.XObjectExt.release(this.m_dependentVariables);
	this.m_dependentVariablesNames = oFF.XObjectExt.release(this.m_dependentVariablesNames);
	this.m_nameExternal = null;
	oFF.QVariableModelComponent.prototype.releaseObject.call( this );
};
oFF.QVariable.prototype.copyVariableDependencies = function(origin)
{
	var size = origin.m_dependentVariables.size();
	for (var i = 0; i < size; i++)
	{
		this.m_dependentVariables.add(this.m_variableContext.getVariableBaseByName(origin.m_dependentVariables.get(i).getName()));
	}
};
oFF.QVariable.prototype.cloneOlapComponent = function(context, parent)
{
	var cloneVar = oFF.QFactory.createVariable(context, this.getQueryModel().getVariableManager(), this);
	cloneVar.copyFrom(this, null);
	return cloneVar;
};
oFF.QVariable.prototype.copyFromInternal = function(other, flags)
{
	oFF.QVariableModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var originVariable = other;
	this.m_dependentVariablesNames = originVariable.m_dependentVariablesNames.createListOfStringCopy();
	this.m_valueType = originVariable.m_valueType;
	this.m_variableOrder = originVariable.m_variableOrder;
	this.m_isInputEnabled = originVariable.m_isInputEnabled;
	this.m_isMandatory = originVariable.m_isMandatory;
	this.m_isInitialValueAllowed = originVariable.m_isInitialValueAllowed;
	this.m_nameExternal = originVariable.m_nameExternal;
	this.m_isDynamic = originVariable.m_isDynamic;
	this.m_customVariable = originVariable.m_customVariable;
	this.m_processingType = originVariable.m_processingType;
};
oFF.QVariable.prototype.getVariableContext = function()
{
	return this.m_variableContext;
};
oFF.QVariable.prototype.setValueByString = function(value)
{
	this.setValueByStringExt(value, false);
};
oFF.QVariable.prototype.getOlapComponentType = function()
{
	return this.getVariableType();
};
oFF.QVariable.prototype.getValueType = function()
{
	return this.m_valueType;
};
oFF.QVariable.prototype.setValueType = function(type)
{
	this.m_valueType = type;
};
oFF.QVariable.prototype.isInputEnabled = function()
{
	return this.m_isInputEnabled;
};
oFF.QVariable.prototype.setInputEnabled = function(inputEnabled)
{
	this.m_isInputEnabled = inputEnabled;
};
oFF.QVariable.prototype.isMandatory = function()
{
	return this.m_isMandatory;
};
oFF.QVariable.prototype.setMandatory = function(mandatory)
{
	this.m_isMandatory = mandatory;
};
oFF.QVariable.prototype.isInitialValueAllowed = function()
{
	return this.m_isInitialValueAllowed;
};
oFF.QVariable.prototype.setInitialValueAllowed = function(initialValueAllowed)
{
	this.m_isInitialValueAllowed = initialValueAllowed;
};
oFF.QVariable.prototype.getVariableOrder = function()
{
	return this.m_variableOrder;
};
oFF.QVariable.prototype.setVariableOrder = function(orderIndex)
{
	this.m_variableOrder = orderIndex;
};
oFF.QVariable.prototype.getDependentVariables = function()
{
	return this.m_dependentVariables;
};
oFF.QVariable.prototype.addDependentVariable = function(variable)
{
	if (!this.m_dependentVariables.contains(variable))
	{
		this.m_dependentVariables.add(variable);
	}
};
oFF.QVariable.prototype.getAffectedVariables = function()
{
	if (oFF.isNull(this.m_affectedVariables))
	{
		this.m_affectedVariables = this.resolveAffectedVariables();
	}
	return this.m_affectedVariables;
};
oFF.QVariable.prototype.resolveAffectedVariables = function()
{
	var affectedVariabes = oFF.XListOfNameObject.create();
	var variables = this.getVariableContext().getVariables();
	for (var i = 0; i < this.getVariableContext().getVariables().size(); i++)
	{
		var dependentVariable = variables.get(i);
		if (dependentVariable.getDependentVariables().containsKey(this.getName()))
		{
			affectedVariabes.add(dependentVariable);
		}
	}
	return affectedVariabes;
};
oFF.QVariable.prototype.getExternalRepresentation = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_externalVariable);
};
oFF.QVariable.prototype.clearAndDeregisterExternalVariable = function()
{
	var externalVariable = this.getExternalRepresentation();
	if (oFF.notNull(externalVariable))
	{
		externalVariable.removeSecondaryParent(this);
		this.m_externalVariable = null;
	}
};
oFF.QVariable.prototype.setExternalRepresentation = function(variable)
{
	this.clearAndDeregisterExternalVariable();
	if (oFF.notNull(variable))
	{
		this.m_externalVariable = oFF.XWeakReferenceUtil.getWeakRef(variable);
		variable.addSecondaryParent(this);
	}
	this.setDeltaPhase(oFF.QDeltaOperationPhase.NOTIFY_PAUSE_MODCOUNTER);
	this.notifyNodeChanged();
	this.resumeEventing();
};
oFF.QVariable.prototype.hasExternalRepresentation = function()
{
	return this.getExternalRepresentation() !== null;
};
oFF.QVariable.prototype.addDependentVariableName = function(name)
{
	this.m_dependentVariablesNames.add(name);
};
oFF.QVariable.prototype.getDependentVariablesNames = function()
{
	return this.m_dependentVariablesNames;
};
oFF.QVariable.prototype.getVariableContainer = function()
{
	return this.m_variableContext;
};
oFF.QVariable.prototype.setIsDynamicVariable = function(isDynamic)
{
	this.m_isDynamic = isDynamic;
};
oFF.QVariable.prototype.isDynamicVariable = function()
{
	return this.m_isDynamic;
};
oFF.QVariable.prototype.isTechnicalVariable = function()
{
	return oFF.QTechnicalVariableNames.isTechnicalVariableName(this.getName());
};
oFF.QVariable.prototype.isDynamicOrExitVariable = function()
{
	if (this.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE) && this.getConvenienceCommands() !== null && this.getConvenienceCommands().isBw())
	{
		return this.isEnforcedDynamicValue();
	}
	return this.m_isDynamic;
};
oFF.QVariable.prototype.newVariableValue = function()
{
	return oFF.QFactory.createVariableValue(this);
};
oFF.QVariable.prototype.setCustomVariable = function(customVariable)
{
	this.m_customVariable = customVariable;
};
oFF.QVariable.prototype.isCustomVariable = function()
{
	return this.m_customVariable;
};
oFF.QVariable.prototype.setProcessingType = function(processingType)
{
	this.m_processingType = processingType;
};
oFF.QVariable.prototype.getProcessingType = function()
{
	return this.m_processingType;
};

oFF.QVariableProcessor = function() {};
oFF.QVariableProcessor.prototype = new oFF.QVariableModelComponent();
oFF.QVariableProcessor.prototype._ff_c = "QVariableProcessor";

oFF.QVariableProcessor.createVariableProcessor = function(context, dataSource, provider, requestor)
{
	var variableProcessor = new oFF.QVariableProcessor();
	variableProcessor.setupVariableProcessor(context, dataSource, provider, requestor);
	return variableProcessor;
};
oFF.QVariableProcessor.prototype.m_requestor = null;
oFF.QVariableProcessor.prototype.m_provider = null;
oFF.QVariableProcessor.prototype.m_datasource = null;
oFF.QVariableProcessor.prototype.m_variables = null;
oFF.QVariableProcessor.prototype.m_isSubmitted = false;
oFF.QVariableProcessor.prototype.m_directVariableTransfer = false;
oFF.QVariableProcessor.prototype.m_variableProcessorState = null;
oFF.QVariableProcessor.prototype.m_variableProcessorPreviousState = null;
oFF.QVariableProcessor.prototype.setupVariableProcessor = function(context, dataSource, provider, requestor)
{
	oFF.QVariableModelComponent.prototype.setupModelComponent.call( this , context, null);
	this.m_requestor = requestor;
	this.m_provider = provider;
	this.m_datasource = dataSource;
	this.m_variableProcessorState = oFF.VariableProcessorState.INITIAL;
	this.m_isSubmitted = false;
};
oFF.QVariableProcessor.prototype.releaseObject = function()
{
	this.m_datasource = null;
	this.m_requestor = null;
	this.m_provider = null;
	this.m_variableProcessorState = null;
	this.m_variableProcessorPreviousState = null;
	this.m_variables = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_variables);
	oFF.QVariableModelComponent.prototype.releaseObject.call( this );
};
oFF.QVariableProcessor.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.VARIABLE_CONTAINER;
};
oFF.QVariableProcessor.prototype.getDimensionAccessor = function()
{
	return this.m_requestor.getDimensionAccessor();
};
oFF.QVariableProcessor.prototype.hasVariables = function()
{
	return oFF.XCollectionUtils.hasElements(this.getVariables());
};
oFF.QVariableProcessor.prototype.hasInputEnabledVariables = function()
{
	return oFF.QVariableUtils.hasInputEnabledVariables(this.getVariables());
};
oFF.QVariableProcessor.prototype.clearExternalVariablesRepresentations = function()
{
	this.queueEventing();
	oFF.QVariableUtils.clearExternalVariablesRepresentations(this.getVariables());
	this.resumeEventing();
};
oFF.QVariableProcessor.prototype.hasMandatoryVariables = function()
{
	return oFF.QVariableUtils.hasMandatoryVariables(this.getVariables());
};
oFF.QVariableProcessor.prototype.getVariables = function()
{
	if (this.m_requestor.hasVariables() && oFF.isNull(this.m_variables))
	{
		this.addVariableRuntimeInformation();
	}
	return this.m_variables;
};
oFF.QVariableProcessor.prototype.setWinControlInAutoSubmitByType = function(variableType, isWinControlInAutoSubmit, isLimitToExitVariable)
{
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		queryModel.setWinControlInAutoSubmitByType(variableType, isWinControlInAutoSubmit, isLimitToExitVariable);
	}
};
oFF.QVariableProcessor.prototype.getInputEnabledVariables = function()
{
	return oFF.QVariableUtils.getInputEnabledVariables(this.getVariables());
};
oFF.QVariableProcessor.prototype.getInputEnabledAndNonTechnicalVariables = function()
{
	return oFF.QVariableUtils.getInputEnabledAndNonTechnicalVariables(this.getVariables());
};
oFF.QVariableProcessor.prototype.addVariableRuntimeInformation = function()
{
	this.m_variables = oFF.XListOfNameObject.create();
	if (this.m_provider.isVariableValuesRuntimeNeeded())
	{
		var extResult = this.m_provider.processRetrieveVariableRuntimeInformation(oFF.SyncType.BLOCKING, null, null);
		oFF.MessageUtil.checkNoError(extResult);
	}
	else
	{
		if (this.m_requestor.hasVariables())
		{
			this.m_variables.addAll(this.m_requestor.getVariables());
		}
	}
};
oFF.QVariableProcessor.prototype.addVariable = function(variable)
{
	this.m_variables.add(variable);
};
oFF.QVariableProcessor.prototype.getVariableBaseAt = function(index)
{
	if (this.m_requestor.hasVariables() && oFF.isNull(this.m_variables))
	{
		this.addVariableRuntimeInformation();
	}
	return this.m_variables.get(index);
};
oFF.QVariableProcessor.prototype.getVariableBaseByName = function(name)
{
	if (this.m_requestor.hasVariables() && oFF.isNull(this.m_variables))
	{
		this.addVariableRuntimeInformation();
	}
	return this.m_variables.getByKey(name);
};
oFF.QVariableProcessor.prototype.clearVariables = function()
{
	if (oFF.notNull(this.m_variables))
	{
		this.m_variables.clear();
	}
};
oFF.QVariableProcessor.prototype.removeVariable = function(name)
{
	if (oFF.notNull(this.m_variables))
	{
		var variable = this.m_variables.getByKey(name);
		this.m_variables.removeElement(variable);
	}
};
oFF.QVariableProcessor.prototype.submitVariables = function(syncType, listener, customIdentifier)
{
	return this.m_provider.processVariableSubmit(syncType, listener, customIdentifier);
};
oFF.QVariableProcessor.prototype.supportsReInitVariables = function()
{
	return this.m_provider.supportsReInitVariables();
};
oFF.QVariableProcessor.prototype.supportsVariableMasking = function()
{
	return this.m_provider.supportsVariableMasking();
};
oFF.QVariableProcessor.prototype.reInitVariablesAfterSubmit = function(syncType, listener, customIdentifier)
{
	return this.m_provider.processReInitVariableAfterSubmit(syncType, listener, customIdentifier);
};
oFF.QVariableProcessor.prototype.cancelReInitVariables = function(syncType, listener, customIdentifier)
{
	return this.m_provider.processVariableCancel(syncType, listener, customIdentifier);
};
oFF.QVariableProcessor.prototype.isSubmitted = function()
{
	return this.m_isSubmitted;
};
oFF.QVariableProcessor.prototype.transferVariables = function(syncType, listener, customIdentifier)
{
	return this.m_provider.processSetGetVariableValues(syncType, listener, customIdentifier);
};
oFF.QVariableProcessor.prototype.transferVariablesByVariable = function(variable, syncType, listener, customIdentifier)
{
	if (this.getVariables().contains(variable))
	{
		return this.m_provider.processSetGetVariableValues(syncType, listener, customIdentifier);
	}
	return null;
};
oFF.QVariableProcessor.prototype.getModelComponentBase = function()
{
	return this;
};
oFF.QVariableProcessor.prototype.supportsDirectVariableTransfer = function()
{
	var queryModel = this.getQueryModelBase();
	if (oFF.isNull(queryModel))
	{
		return false;
	}
	var queryManager = queryModel.getQueryManagerBase();
	if (oFF.isNull(queryManager))
	{
		return false;
	}
	return queryManager.supportsDirectVariableTransfer();
};
oFF.QVariableProcessor.prototype.setDirectVariableTransferEnabled = function(directVariableTransfer)
{
	if (this.m_directVariableTransfer === directVariableTransfer)
	{
		return;
	}
	if (!this.supportsDirectVariableTransfer())
	{
		return;
	}
	this.m_directVariableTransfer = directVariableTransfer;
	this.m_provider.setDirectVariableTransfer(directVariableTransfer);
	this.m_provider.setIsVariableSubmitNeeded(!this.m_directVariableTransfer);
	this.getModelComponentBase().notifyNodeChanged();
};
oFF.QVariableProcessor.prototype.isDirectVariableTransferEnabled = function()
{
	return this.m_directVariableTransfer;
};
oFF.QVariableProcessor.prototype.supportsCheckVariables = function()
{
	return this.isDirectVariableTransferEnabled();
};
oFF.QVariableProcessor.prototype.checkVariables = function(syncType, listener, customIdentifier)
{
	return this.m_provider.processCheckVariables(syncType, listener, customIdentifier);
};
oFF.QVariableProcessor.prototype.getVariableContainer = function()
{
	return this;
};
oFF.QVariableProcessor.prototype.getVariableContainerBase = function()
{
	return this;
};
oFF.QVariableProcessor.prototype.getVariableMode = function()
{
	if (this.m_directVariableTransfer)
	{
		return oFF.VariableMode.DIRECT_VALUE_TRANSFER;
	}
	return oFF.VariableMode.SUBMIT_AND_REINIT;
};
oFF.QVariableProcessor.prototype.getInputEnabledVariable = function(name)
{
	return oFF.QVariableUtils.getInputEnabledVariable(this.getVariables(), name);
};
oFF.QVariableProcessor.prototype.getVariable = function(name)
{
	return this.getVariableBaseByName(name);
};
oFF.QVariableProcessor.prototype.getHierarchyNodeVariable = function(name)
{
	return oFF.QVariableUtils.getVariableByType(this.getVariables(), name, oFF.VariableType.HIERARCHY_NODE_VARIABLE);
};
oFF.QVariableProcessor.prototype.getHierarchyNameVariable = function(name)
{
	return oFF.QVariableUtils.getVariableByType(this.getVariables(), name, oFF.VariableType.HIERARCHY_NAME_VARIABLE);
};
oFF.QVariableProcessor.prototype.getHierarchyNameVariables = function()
{
	return oFF.QVariableUtils.getHierarchyNameVariables(this.getVariables());
};
oFF.QVariableProcessor.prototype.getDimensionMemberVariables = function()
{
	return oFF.QVariableUtils.getDimensionMemberVariables(this.getVariables());
};
oFF.QVariableProcessor.prototype.getVariableProcessorState = function()
{
	return this.m_variableProcessorState;
};
oFF.QVariableProcessor.prototype.setVariableProcessorState = function(variableProcessorState)
{
	this.m_variableProcessorPreviousState = this.m_variableProcessorState;
	this.m_variableProcessorState = variableProcessorState;
	if (this.m_variableProcessorState === oFF.VariableProcessorState.SUBMITTED)
	{
		this.m_isSubmitted = true;
	}
};
oFF.QVariableProcessor.prototype.returnToPreviousProcessorState = function()
{
	if (this.m_variableProcessorPreviousState !== oFF.VariableProcessorState.CHANGEABLE_REINIT && this.m_variableProcessorPreviousState !== oFF.VariableProcessorState.CHANGEABLE_STARTUP && this.m_variableProcessorPreviousState !== oFF.VariableProcessorState.SUBMITTED)
	{
		oFF.XObjectExt.assertNotNullExt(this.m_variableProcessorPreviousState, "Not allowed to return to previous state: [null]");
		throw oFF.XException.createIllegalStateException(oFF.XStringUtils.concatenate2("Not allowed to return to previous state: ", this.m_variableProcessorPreviousState.getName()));
	}
	this.m_variableProcessorState = this.m_variableProcessorPreviousState;
	this.m_variableProcessorPreviousState = null;
	this.m_isSubmitted = false;
};
oFF.QVariableProcessor.prototype.registerVariableProcessorStateChangedListener = function(listener, customIdentifier) {};
oFF.QVariableProcessor.prototype.unregisterVariableProcessorStateChangedListener = function(listener) {};
oFF.QVariableProcessor.prototype.getSelectionTagging = function()
{
	return null;
};
oFF.QVariableProcessor.prototype.isSubmitNeeded = function()
{
	return this.getVariableProcessorState().isSubmitNeeded();
};
oFF.QVariableProcessor.prototype.isReinitNeeded = function()
{
	return this.getVariableProcessorState().isReinitNeeded();
};
oFF.QVariableProcessor.prototype.isCancelNeeded = function()
{
	return this.getVariableProcessorState().isCancelNeeded();
};
oFF.QVariableProcessor.prototype.activateVariableVariant = function(variableVariant, syncType, listener, customIdentifier)
{
	return this.m_provider.processActivateVariableVariant(variableVariant, syncType, listener, customIdentifier);
};
oFF.QVariableProcessor.prototype.deleteVariableVariant = function(variableVariant, syncType, listener, customIdentifier)
{
	return this.m_provider.processDeleteVariableVariant(variableVariant, syncType, listener, customIdentifier);
};
oFF.QVariableProcessor.prototype.updateVariableVariantValues = function(variableVariant, syncType, listener, customIdentifier)
{
	return this.m_provider.processUpdateVariableVariantValues(variableVariant, syncType, listener, customIdentifier);
};
oFF.QVariableProcessor.prototype.saveVariableVariant = function(variableVariant, syncType, listener, customIdentifier)
{
	return this.m_provider.processSaveVariableVariant(variableVariant, syncType, listener, customIdentifier);
};
oFF.QVariableProcessor.prototype.emptyVariableDefinition = function(syncType, listener, customIdentifier)
{
	return this.m_provider.processSetGetVariableValues(syncType, listener, customIdentifier);
};
oFF.QVariableProcessor.prototype.updateDynamicVariables = function(syncType, listener, customIdentifier)
{
	this.m_provider.processUpdateDynamicVariables(syncType, listener, customIdentifier);
};
oFF.QVariableProcessor.prototype.resetExitOrUpdateDynamicVariable = function(syncType, listener, customIdentifier, overwriteDefaultForInputEnabledVar)
{
	this.m_provider.processResetExitOrDynamicVariable(syncType, listener, customIdentifier, overwriteDefaultForInputEnabledVar);
};
oFF.QVariableProcessor.prototype.getVariableVariants = function()
{
	return this.getQueryManager() !== null ? this.getQueryManager().getVariableVariants() : null;
};
oFF.QVariableProcessor.prototype.getDataSource = function()
{
	return this.m_datasource;
};
oFF.QVariableProcessor.prototype.supportsMaintainsVariableVariants = function()
{
	return this.getQueryManager() !== null && this.getQueryManager().supportsMaintainsVariableVariants();
};

oFF.QOptionListElement = function() {};
oFF.QOptionListElement.prototype = new oFF.QVariableModelComponent();
oFF.QOptionListElement.prototype._ff_c = "QOptionListElement";

oFF.QOptionListElement.createOptionListElement = function(context, variable, name, text)
{
	var element = new oFF.QOptionListElement();
	element.setupOptionListElement(context, variable, name, text);
	return element;
};
oFF.QOptionListElement.prototype.setupOptionListElement = function(context, variable, name, text)
{
	oFF.QVariableModelComponent.prototype.setupModelComponentWithName.call( this , context, variable, name);
	this.setText(text);
};
oFF.QOptionListElement.prototype.toString = function()
{
	return this.getName();
};

oFF.QAttribute = function() {};
oFF.QAttribute.prototype = new oFF.QFieldContainer();
oFF.QAttribute.prototype._ff_c = "QAttribute";

oFF.QAttribute.createAttribute = function(context, dimension)
{
	var attribute = new oFF.QAttribute();
	attribute.setupFieldContainer(context, dimension);
	return attribute;
};
oFF.QAttribute.prototype.m_childAttributes = null;
oFF.QAttribute.prototype.copyFromInternal = function(other, flags)
{
	var originAttribute = other;
	var dimension = this.getDimension();
	var origFields = originAttribute.getFields();
	var sizeFields = origFields.size();
	for (var iField = 0; iField < sizeFields; iField++)
	{
		this.addFieldInternal(dimension.getFieldByName(origFields.getFieldAt(iField).getName()));
	}
	this.copyFieldContainer(originAttribute, false);
	if (oFF.notNull(originAttribute.m_childAttributes))
	{
		var context = this.getContext();
		var size = originAttribute.m_childAttributes.size();
		for (var i = 0; i < size; i++)
		{
			var origChild = originAttribute.m_childAttributes.get(i);
			var cloneChild = oFF.QAttribute.createAttribute(context, dimension);
			cloneChild.copyFrom(origChild, flags);
			this.addChildAttribute(cloneChild);
		}
	}
};
oFF.QAttribute.prototype.addDefaultResultSetField = function(field)
{
	oFF.QFieldContainer.prototype.addDefaultResultSetField.call( this , field);
	this.m_selectorFields.addInternal(field);
	this.m_resultSetFields.addInternal(field);
};
oFF.QAttribute.prototype.addField = function(field)
{
	oFF.QFieldContainer.prototype.addField.call( this , field);
	field.setAttribute(this);
};
oFF.QAttribute.prototype.addFieldInternal = function(field)
{
	oFF.QFieldContainer.prototype.addFieldInternal.call( this , field);
	field.setAttribute(this);
};
oFF.QAttribute.prototype.releaseObject = function()
{
	this.m_childAttributes = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_childAttributes);
	oFF.QFieldContainer.prototype.releaseObject.call( this );
};
oFF.QAttribute.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.ATTRIBUTE;
};
oFF.QAttribute.prototype.getFieldLayoutType = function()
{
	return oFF.FieldLayoutType.ATTRIBUTE_BASED;
};
oFF.QAttribute.prototype.getChildAttributes = function()
{
	return this.m_childAttributes;
};
oFF.QAttribute.prototype.addChildAttribute = function(childAttribute)
{
	if (oFF.isNull(this.m_childAttributes))
	{
		this.m_childAttributes = oFF.XList.create();
	}
	this.m_childAttributes.add(childAttribute);
};

oFF.QCalculatedDimension = function() {};
oFF.QCalculatedDimension.prototype = new oFF.QDimension();
oFF.QCalculatedDimension.prototype._ff_c = "QCalculatedDimension";

oFF.QCalculatedDimension._createCalculatedDimension = function(context, parentNode, calculatedDimensionName)
{
	var dim = new oFF.QCalculatedDimension();
	dim.assertCalcDimSupport(context);
	dim.setName(calculatedDimensionName);
	dim.setupDimension(context, parentNode);
	dim.setupCalculatedDimension(context);
	return dim;
};
oFF.QCalculatedDimension.prototype.m_preQueryName = null;
oFF.QCalculatedDimension.prototype.m_joinType = null;
oFF.QCalculatedDimension.prototype.m_joinFields = null;
oFF.QCalculatedDimension.prototype.m_fieldMappings = null;
oFF.QCalculatedDimension.prototype.m_supportedFieldLayoutType = null;
oFF.QCalculatedDimension.prototype.m_supportedAxesTypes = null;
oFF.QCalculatedDimension.prototype.m_calcMetadata = null;
oFF.QCalculatedDimension.prototype.m_calcDimCapabilities = null;
oFF.QCalculatedDimension.prototype.getModelCapabilities = function()
{
	return this.m_calcDimCapabilities;
};
oFF.QCalculatedDimension.prototype.setParent = function(parent)
{
	oFF.QDimension.prototype.setParent.call( this , parent);
	this.m_calcDimCapabilities.updateContext(this);
};
oFF.QCalculatedDimension.prototype.assertCalcDimSupport = function(context)
{
	if (!context.getModelCapabilities().supportsCalculatedDimensions())
	{
		throw oFF.XException.createRuntimeException("CalculatedDimensions are not supported");
	}
};
oFF.QCalculatedDimension.prototype.setDimensionType = function(type)
{
	this.getMetadataBase().setDimensionType(type);
};
oFF.QCalculatedDimension.prototype.supportsTotals = function()
{
	return this.m_resultStructureController.supportsTotals();
};
oFF.QCalculatedDimension.prototype.copyFromInternal = function(other, flags)
{
	this.copyCalculatedDimension(other);
};
oFF.QCalculatedDimension.prototype.copyCalculatedDimension = function(other)
{
	oFF.QDimension.prototype.copyDimension.call( this , other);
	this.m_preQueryName = other.m_preQueryName;
	this.m_joinType = other.m_joinType;
	var size = other.m_joinFields.size();
	var idx;
	for (idx = 0; idx < size; idx++)
	{
		var otherJoinFields = other.m_joinFields.get(idx);
		this.m_joinFields.add(oFF.QFieldNamePair.create(otherJoinFields.getLocaleFieldName(), otherJoinFields.getReferencedFieldName()));
	}
	size = other.m_fieldMappings.size();
	for (idx = 0; idx < size; idx++)
	{
		var otherFieldMapping = other.m_fieldMappings.get(idx);
		this.m_fieldMappings.add(oFF.QFieldNamePair.create(otherFieldMapping.getLocaleFieldName(), otherFieldMapping.getReferencedFieldName()));
	}
};
oFF.QCalculatedDimension.prototype.setupCalculatedDimension = function(context)
{
	var cacheKey = oFF.QCacheKey.createByContextForDimension(context, this.getName(), null);
	var metadata = oFF.QDimensionMetadata.create(cacheKey);
	metadata.setDimensionType(oFF.DimensionType.CALCULATED_DIMENSION);
	metadata.setIsGroupingDimension(false);
	metadata.addSupportedAxis(oFF.AxisType.ROWS);
	metadata.addSupportedAxis(oFF.AxisType.COLUMNS);
	metadata.addSupportedAxis(oFF.AxisType.FREE);
	metadata.addSupportedAxis(oFF.AxisType.REPOSITORY);
	metadata.setDefaultAxisType(oFF.AxisType.FREE);
	this.setMetadata(metadata);
	this.m_calcMetadata = metadata;
	this.m_joinType = oFF.JoinType.LEFT_OUTER;
	this.m_joinFields = oFF.XList.create();
	this.m_fieldMappings = oFF.XList.create();
	this.m_readModeManager.addSupportedReadMode(oFF.QContextType.RESULT_SET, oFF.QMemberReadMode.BOOKED);
	this.m_readModeManager.addSupportedReadMode(oFF.QContextType.RESULT_SET, oFF.QMemberReadMode.MASTER);
	this.m_readModeManager.setReadModeDefault(oFF.QContextType.RESULT_SET, oFF.QMemberReadMode.BOOKED, true);
	this.m_readModeManager.addSupportedReadMode(oFF.QContextType.SELECTOR, oFF.QMemberReadMode.BOOKED);
	this.m_readModeManager.addSupportedReadMode(oFF.QContextType.SELECTOR, oFF.QMemberReadMode.MASTER);
	this.m_readModeManager.setReadModeDefault(oFF.QContextType.SELECTOR, oFF.QMemberReadMode.BOOKED, true);
	this.m_calcDimCapabilities = oFF.QFactory.createCapabilitiesDecorator(this);
	this.m_calcDimCapabilities.setSupportsHierarchyMetadata(false);
	this.m_calcDimCapabilities.setSupportsHierarchyLevelMetadata(false);
	this.m_calcDimCapabilities.setSupportsDimensionHierarchyLevels(false);
	this.getHierarchyManagerBase().setDefaultHierarchyName("");
};
oFF.QCalculatedDimension.prototype.setSelectorFieldLayoutType = function(type)
{
	if (oFF.notNull(this.m_selectorFieldLayoutType) && oFF.notNull(type))
	{
		this.assertSupportsFieldLayoutType(type);
		if (this.m_selectorFieldLayoutType !== type)
		{
			this.m_selectorFieldLayoutType = type;
			this.notifyNodeChanged();
		}
	}
};
oFF.QCalculatedDimension.prototype.releaseObject = function()
{
	this.m_preQueryName = null;
	this.m_joinType = null;
	this.m_supportedAxesTypes = oFF.XObjectExt.release(this.m_supportedAxesTypes);
	this.m_joinFields = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_joinFields);
	this.m_fieldMappings = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_fieldMappings);
	this.m_supportedFieldLayoutType = oFF.XObjectExt.release(this.m_supportedFieldLayoutType);
	oFF.QDimension.prototype.releaseObject.call( this );
	this.m_calcMetadata = oFF.XObjectExt.release(this.m_calcMetadata);
};
oFF.QCalculatedDimension.prototype.setPreQueryName = function(preQueryName)
{
	this.m_preQueryName = preQueryName;
};
oFF.QCalculatedDimension.prototype.getPreQueryName = function()
{
	return this.m_preQueryName;
};
oFF.QCalculatedDimension.prototype.setJoinType = function(joinType)
{
	this.m_joinType = joinType;
};
oFF.QCalculatedDimension.prototype.getJoinType = function()
{
	return this.m_joinType;
};
oFF.QCalculatedDimension.prototype.getJoinFields = function()
{
	return this.m_joinFields;
};
oFF.QCalculatedDimension.prototype.addJoinFieldByString = function(localeFieldName, referencedFieldName)
{
	this.addJoinField(oFF.QFieldNamePair.create(localeFieldName, referencedFieldName));
};
oFF.QCalculatedDimension.prototype.addJoinField = function(joinField)
{
	if (!this.m_joinFields.contains(joinField))
	{
		this.m_joinFields.add(joinField);
	}
};
oFF.QCalculatedDimension.prototype.clearJoinFields = function()
{
	this.m_joinFields.clear();
};
oFF.QCalculatedDimension.prototype.removeJoinFieldAt = function(index)
{
	this.m_joinFields.removeAt(index);
};
oFF.QCalculatedDimension.prototype.getFieldMappings = function()
{
	return this.m_fieldMappings;
};
oFF.QCalculatedDimension.prototype.addFieldMappingByString = function(localeFieldName, referencedFieldName)
{
	this.addFieldMapping(oFF.QFieldNamePair.create(localeFieldName, referencedFieldName));
};
oFF.QCalculatedDimension.prototype.addFieldMapping = function(fieldMapping)
{
	if (!this.m_fieldMappings.contains(fieldMapping))
	{
		this.m_fieldMappings.add(fieldMapping);
		var presentation = oFF.PresentationType.UNDEFINED;
		if (this.m_fieldMappings.size() === 1)
		{
			presentation = oFF.PresentationType.KEY;
		}
		this.addNewCalcFieldInternal(fieldMapping.getLocaleFieldName(), presentation);
	}
};
oFF.QCalculatedDimension.prototype.addNewCalcFieldInternal = function(fieldName, presentation)
{
	var newField = this.getFieldContainerBase().addNewField(presentation, fieldName, null);
	this.addFieldToParent(newField);
	return newField;
};
oFF.QCalculatedDimension.prototype.addFieldToParent = function(newField)
{
	this.getFieldContainerBase().addDefaultResultSetField(newField);
	this.getResultSetFields().add(newField);
	var parentComp = this.getParentComponent();
	if (oFF.notNull(parentComp))
	{
		if (parentComp.getComponentType() === oFF.OlapComponentType.DIMENSION_MANAGER)
		{
			parentComp.addField(newField, this);
		}
		else if (parentComp.getComponentType().isTypeOf(oFF.DimensionType.CALCULATED_DIMENSION))
		{
			parentComp.addFieldToParent(newField);
		}
	}
};
oFF.QCalculatedDimension.prototype.clearFieldMappings = function()
{
	this.queueEventing();
	this.getFieldContainerBase().clearAllFields();
	this.m_fieldMappings.clear();
	this.resumeEventing();
};
oFF.QCalculatedDimension.prototype.removeFieldMappingAt = function(index)
{
	var fieldContainerBase = this.getFieldContainerBase();
	fieldContainerBase.removeFieldByName(this.m_fieldMappings.get(index).getLocaleFieldName());
	this.m_fieldMappings.removeAt(index);
	if (index === 0 && this.m_fieldMappings.size() > 0)
	{
		var newKeyFieldPair = this.m_fieldMappings.get(0);
		fieldContainerBase.removeFieldByName(newKeyFieldPair.getLocaleFieldName());
		this.m_fieldMappings.removeAt(0);
		this.addFieldMapping(newKeyFieldPair);
	}
};
oFF.QCalculatedDimension.prototype.validateJoinFields = function(queryModel, messageManager)
{
	if (this.getJoinType() === oFF.JoinType.INNER)
	{
		var joinFieldNames = oFF.XHashSetOfString.create();
		for (var idxJoinField = 0; idxJoinField < this.m_joinFields.size(); idxJoinField++)
		{
			var fieldNamePair = this.m_joinFields.get(idxJoinField);
			joinFieldNames.add(fieldNamePair.getLocaleFieldName());
		}
		var structureMembers = oFF.XListOfNameObject.create();
		var accountDimension = queryModel.getAccountDimension();
		if (oFF.isNull(accountDimension))
		{
			structureMembers.addAll(queryModel.getPrimaryCalculationDimension().getLoadedStructureMembers());
		}
		else
		{
			structureMembers.addAll(queryModel.getPrimaryCalculationDimension().getLoadedStructureMembers());
			structureMembers.addAll(queryModel.getSecondaryCalculationDimension().getLoadedStructureMembers());
		}
		var calculationNames = oFF.XHashSetOfString.create();
		for (var idxStructureMember = 0; idxStructureMember < structureMembers.size(); idxStructureMember++)
		{
			var structureMember = structureMembers.get(idxStructureMember);
			if (structureMember.getMemberType() !== oFF.MemberType.BASIC_MEASURE)
			{
				if (structureMember.isIgnoringAllExternalDimensions())
				{
					calculationNames.add(structureMember.getAliasOrMemberName());
				}
				else
				{
					var ignoredExternalDimensions = oFF.XListOfString.create();
					ignoredExternalDimensions.addAll(structureMember.getIgnoredExternalDimensions());
					if (structureMember.getMemberType() === oFF.MemberType.VARIANCE)
					{
						ignoredExternalDimensions.addAll(structureMember.getBaseIgnoredExternalDimensions());
						ignoredExternalDimensions.addAll(structureMember.getReferenceIgnoredExternalDimensions());
					}
					for (var idxIgnoredDim = 0; idxIgnoredDim < ignoredExternalDimensions.size(); idxIgnoredDim++)
					{
						if (joinFieldNames.contains(ignoredExternalDimensions.get(idxIgnoredDim)))
						{
							calculationNames.add(structureMember.getAliasOrMemberName());
							break;
						}
					}
				}
			}
		}
		if (calculationNames.size() > 0)
		{
			var names = calculationNames.getValuesAsReadOnlyListOfString();
			var message = names.get(0);
			for (var idxName = 1; idxName < names.size(); idxName++)
			{
				message = oFF.XStringUtils.concatenate3(message, ",", names.get(idxName));
			}
			messageManager.addWarning(oFF.ErrorCodes.JOIN_FIELD_SET_AS_IGNORED_EXTERNAL_DIMENSION, message);
		}
	}
};

oFF.QDimensionMember = function() {};
oFF.QDimensionMember.prototype = new oFF.QAbstractDimensionMember();
oFF.QDimensionMember.prototype._ff_c = "QDimensionMember";

oFF.QDimensionMember.createDimensionMember = function(context, dimension)
{
	var member = new oFF.QDimensionMember();
	member.setupDimensionMember(context, dimension);
	return member;
};
oFF.QDimensionMember.prototype.m_attributeMemberMap = null;
oFF.QDimensionMember.prototype.m_nameValueException = null;
oFF.QDimensionMember.prototype.m_resultVisibility = null;
oFF.QDimensionMember.prototype.copyFromInternal = function(other, flags)
{
	var originDimensionMember = other;
	oFF.QAbstractDimensionMember.prototype.copyAbstractDimensionMember.call( this , originDimensionMember);
	var context = this.getContext();
	var it = originDimensionMember.m_attributeMemberMap.getKeysAsIteratorOfString();
	while (it.hasNext())
	{
		var key = it.next();
		var cloneFieldValue = originDimensionMember.m_attributeMemberMap.getByKey(key).cloneOlapComponent(context, this);
		this.m_attributeMemberMap.put(key, cloneFieldValue);
	}
	this.m_nameValueException = originDimensionMember.m_nameValueException;
	this.m_resultVisibility = originDimensionMember.m_resultVisibility;
};
oFF.QDimensionMember.prototype.setupDimensionMember = function(context, dimension)
{
	this.setupAbstractDimensionMember(context, dimension);
	this.setType(oFF.MemberType.MEMBER);
	this.m_attributeMemberMap = oFF.XHashMapByString.create();
};
oFF.QDimensionMember.prototype.releaseObject = function()
{
	this.m_attributeMemberMap = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_attributeMemberMap);
	this.m_nameValueException = null;
	this.m_resultVisibility = null;
	oFF.QAbstractDimensionMember.prototype.releaseObject.call( this );
};
oFF.QDimensionMember.prototype.isEqualTo = function(other)
{
	if (oFF.isNull(other))
	{
		return false;
	}
	if (this === other)
	{
		return true;
	}
	var otherMember = other;
	return oFF.XString.isEqual(this.getName(), otherMember.getName()) && oFF.XString.isEqual(this.getText(), otherMember.getText());
};
oFF.QDimensionMember.prototype.compareTo = function(objectToCompare)
{
	if (oFF.isNull(objectToCompare))
	{
		return -1;
	}
	if (objectToCompare === this)
	{
		return 0;
	}
	var otherMember = objectToCompare;
	var compare = oFF.XString.compare(this.getName(), otherMember.getName());
	if (compare === 0)
	{
		compare = oFF.XString.compare(this.getText(), otherMember.getText());
	}
	return compare;
};
oFF.QDimensionMember.prototype.getFormattedValue = function()
{
	var dimension = this.getDimension();
	if (oFF.notNull(dimension))
	{
		var attributeByType = dimension.getFirstFieldByType(oFF.PresentationType.KEY);
		if (oFF.notNull(attributeByType))
		{
			var attributeMember = this.m_attributeMemberMap.getByKey(attributeByType.getName());
			if (oFF.notNull(attributeMember))
			{
				return attributeMember.getFormattedValue();
			}
		}
	}
	return null;
};
oFF.QDimensionMember.prototype.getValue = function()
{
	var keyField = this.getDimension().getKeyField();
	if (oFF.notNull(keyField))
	{
		var fieldValue = this.getFieldValue(keyField);
		if (oFF.notNull(fieldValue))
		{
			var value = fieldValue.getValue();
			if (oFF.notNull(value))
			{
				return value;
			}
		}
	}
	var name = this.getName();
	if (oFF.isNull(name))
	{
		return null;
	}
	if (oFF.notNull(keyField))
	{
		var valueType = keyField.getValueType();
		if (valueType === oFF.XValueType.INTEGER)
		{
			return oFF.XIntegerValue.create(oFF.XInteger.convertFromString(name));
		}
		else if (valueType === oFF.XValueType.DATE)
		{
			return oFF.XDate.createDateFromIsoFormat(name);
		}
		else if (valueType === oFF.XValueType.DATE_TIME)
		{
			return oFF.XDateTime.createDateTimeFromIsoFormat(name);
		}
		else if (valueType === oFF.XValueType.TIME)
		{
			return oFF.XTime.createTimeFromIsoFormat(name);
		}
	}
	return oFF.XStringValue.create(name);
};
oFF.QDimensionMember.prototype.getFieldValue = function(field)
{
	return oFF.isNull(field) ? null : this.m_attributeMemberMap.getByKey(field.getName());
};
oFF.QDimensionMember.prototype.getAllFieldValues = function()
{
	return this.m_attributeMemberMap;
};
oFF.QDimensionMember.prototype.getResultSetFieldValues = function()
{
	var rsAttributeMembers = oFF.XList.create();
	var resultSetAttributes = this.getDimension().getResultSetFields();
	for (var i = 0; i < resultSetAttributes.size(); i++)
	{
		var field = resultSetAttributes.getFieldAt(i);
		var fieldValue = this.getFieldValue(field);
		rsAttributeMembers.add(fieldValue);
	}
	return rsAttributeMembers;
};
oFF.QDimensionMember.prototype.addFieldValue = function(fieldValue)
{
	this.addFieldValueInternal(fieldValue);
};
oFF.QDimensionMember.prototype.createAndAddField = function(field)
{
	var newMember = oFF.QFieldValue.create(field.getContext(), field, this);
	this.addFieldValueInternal(newMember);
	return newMember;
};
oFF.QDimensionMember.prototype.createAndAddFieldWithXvalue = function(field, value)
{
	var newMember = oFF.QFieldValue.createWithValue(field.getContext(), field, this, value);
	this.addFieldValueInternal(newMember);
	return newMember;
};
oFF.QDimensionMember.prototype.createAndAddFieldWithValue = function(field, value)
{
	if (oFF.notNull(value) && value.getValueType() !== null)
	{
		return this.createAndAddFieldWithXvalue(field, value.clone());
	}
	return null;
};
oFF.QDimensionMember.prototype.createAndAddFieldValueWithString = function(field, value)
{
	return this.createAndAddFieldWithXvalue(field, oFF.XStringValue.create(value));
};
oFF.QDimensionMember.prototype.createAndAddFieldValueWithInteger = function(field, value)
{
	return this.createAndAddFieldWithXvalue(field, oFF.XIntegerValue.create(value));
};
oFF.QDimensionMember.prototype.createAndAddFieldValueWithLong = function(field, value)
{
	return this.createAndAddFieldWithXvalue(field, oFF.XLongValue.create(value));
};
oFF.QDimensionMember.prototype.createAndAddFieldValueWithDouble = function(field, value)
{
	return this.createAndAddFieldWithXvalue(field, oFF.XDoubleValue.create(value));
};
oFF.QDimensionMember.prototype.createAndAddFieldValueWithDate = function(field, value)
{
	return this.createAndAddFieldWithXvalue(field, value);
};
oFF.QDimensionMember.prototype.createAndAddFieldValueWithTime = function(field, value)
{
	return this.createAndAddFieldWithXvalue(field, value);
};
oFF.QDimensionMember.prototype.createAndAddFieldValueWithBoolean = function(field, value)
{
	return this.createAndAddFieldWithXvalue(field, oFF.XBooleanValue.create(value));
};
oFF.QDimensionMember.prototype.getText = function()
{
	var dimension = this.getDimension();
	if (oFF.notNull(dimension) && dimension.hasAlternativeFieldValuesDefined())
	{
		var textField = dimension.getTextField();
		if (oFF.notNull(textField))
		{
			var textFieldName = textField.getName();
			var name = this.getName();
			var hierarchyAssignedAndActive = dimension.isHierarchyAssignedAndActive();
			var altFieldValue = dimension.getAlternativeFieldValueLanguageOption(hierarchyAssignedAndActive, name, textFieldName);
			if (oFF.notNull(altFieldValue))
			{
				return altFieldValue.getStringRepresentation();
			}
			altFieldValue = dimension.getAlternativeFieldValue(hierarchyAssignedAndActive, name, textFieldName, null);
			if (oFF.notNull(altFieldValue))
			{
				return altFieldValue.getStringRepresentation();
			}
		}
	}
	return oFF.QAbstractDimensionMember.prototype.getText.call( this );
};
oFF.QDimensionMember.prototype.addFieldValueInternal = function(newValue)
{
	var fieldName = newValue.getField().getName();
	var dimension = this.getDimension();
	if (oFF.notNull(dimension) && dimension.hasAlternativeFieldValuesDefined())
	{
		var altFieldValue = dimension.getAlternativeFieldValueLanguageOption(dimension.isHierarchyAssignedAndActive(), this.getName(), fieldName);
		if (oFF.notNull(altFieldValue))
		{
			newValue.setValue(altFieldValue);
			newValue.setFormattedValue(altFieldValue.getStringRepresentation());
		}
	}
	this.m_attributeMemberMap.put(fieldName, newValue);
};
oFF.QDimensionMember.prototype.createFilterOperation = function()
{
	return oFF.QFactory.createFilterOperation(this.getContext(), this.getDimension().getKeyField());
};
oFF.QDimensionMember.prototype.getValueAsString = function()
{
	return oFF.XValueUtil.getString(this.getValue());
};
oFF.QDimensionMember.prototype._assertPresentationTypeSelf = function(presentation)
{
	if (presentation !== oFF.PresentationType.SELF)
	{
		oFF.noSupport();
	}
};
oFF.QDimensionMember.prototype.getIntByPresentation = function(presentation)
{
	this._assertPresentationTypeSelf(presentation);
	return this.getInteger();
};
oFF.QDimensionMember.prototype.getDoubleByPresentation = function(presentation)
{
	this._assertPresentationTypeSelf(presentation);
	return this.getDouble();
};
oFF.QDimensionMember.prototype.getDateByPresentation = function(presentation)
{
	this._assertPresentationTypeSelf(presentation);
	return this.getDate();
};
oFF.QDimensionMember.prototype.getStringByPresentation = function(presentation)
{
	this._assertPresentationTypeSelf(presentation);
	return this.getString();
};
oFF.QDimensionMember.prototype.getTimeSpanByPresentation = function(presentation)
{
	this._assertPresentationTypeSelf(presentation);
	return this.getTimeSpan();
};
oFF.QDimensionMember.prototype.getPolygonByPresentation = function(presentation)
{
	this._assertPresentationTypeSelf(presentation);
	return this.getPolygon();
};
oFF.QDimensionMember.prototype.getKeyFieldValue = function()
{
	var keyField = this.getDimension().getKeyField();
	return this.getFieldValue(keyField);
};
oFF.QDimensionMember.prototype.getBoolean = function()
{
	return false;
};
oFF.QDimensionMember.prototype.getSelectValue = function()
{
	var fieldValue = this.getFieldValue(this.getSelectField());
	return fieldValue.getSelectValue();
};
oFF.QDimensionMember.prototype.getSelectField = function()
{
	return this.getDimension().getFlatKeyField();
};
oFF.QDimensionMember.prototype.getSelectHierarchyName = function()
{
	return null;
};
oFF.QDimensionMember.prototype.setResultVisibility = function(memberVisibility)
{
	if (!this.getModelCapabilities().supportsMemberVisibility())
	{
		oFF.noSupport();
	}
	if (this.m_resultVisibility !== memberVisibility)
	{
		var oldValue = this.m_resultVisibility;
		this.m_resultVisibility = memberVisibility;
		this.notifyPropertyConstantChanged(oFF.QDimensionMemberProperties.QY_VISIBILITY, oldValue, memberVisibility);
	}
};
oFF.QDimensionMember.prototype.getResultVisibility = function()
{
	return this.m_resultVisibility;
};
oFF.QDimensionMember.prototype.getDimensionMemberNameValueException = function()
{
	return this.m_nameValueException;
};
oFF.QDimensionMember.prototype.setDimensionMemberNameValueException = function(valueException)
{
	this.m_nameValueException = valueException;
};
oFF.QDimensionMember.prototype.hasValue = function()
{
	return this.getKeyFieldValue() !== null;
};
oFF.QDimensionMember.prototype.mergeDeepRecursive = function(settings, other)
{
	var otherMember = other;
	var keys = otherMember.m_attributeMemberMap.getKeysAsIteratorOfString();
	while (keys.hasNext())
	{
		var key = keys.next();
		var otherValue = otherMember.m_attributeMemberMap.getByKey(key);
		var myValue = this.m_attributeMemberMap.getByKey(key);
		if (oFF.notNull(myValue))
		{
			myValue.mergeDeepRecursive(settings, otherValue);
		}
	}
	this.setText(otherMember.getText());
};
oFF.QDimensionMember.prototype.loadBLOBForField = function(syncType, listener, customIdentifier, field)
{
	var fieldValue = this.getFieldValue(field);
	return this.getQueryManager().processBLOB(syncType, listener, customIdentifier, fieldValue.getFormattedValueForImageRequest());
};

oFF.QDimensionMemberResult = function() {};
oFF.QDimensionMemberResult.prototype = new oFF.QAbstractDimensionMember();
oFF.QDimensionMemberResult.prototype._ff_c = "QDimensionMemberResult";

oFF.QDimensionMemberResult.QY_TOTAL = "Total";
oFF.QDimensionMemberResult.QY_TOTAL_INCLUDING = "Total Including";
oFF.QDimensionMemberResult.QY_TOTAL_REMAINING = "Total Remaining";
oFF.QDimensionMemberResult.createQDimensionMember = function(context, dimension, resultMemberType)
{
	var member = new oFF.QDimensionMemberResult();
	member.setupQDimensionMember(context, dimension, resultMemberType);
	return member;
};
oFF.QDimensionMemberResult.prototype.m_resultStructureElement = null;
oFF.QDimensionMemberResult.prototype.m_value = null;
oFF.QDimensionMemberResult.prototype.m_fieldValues = null;
oFF.QDimensionMemberResult.prototype.setupQDimensionMember = function(context, dimension, resultMemberType)
{
	this.setupAbstractDimensionMember(context, dimension);
	this.setType(resultMemberType);
	var literalFieldValue = oFF.QFieldValue.createLiteral(this.getContext(), dimension.getKeyField());
	literalFieldValue.setValue(this.m_value);
	this.m_fieldValues = oFF.XHashMapByString.create();
	this.m_fieldValues.put(dimension.getKeyField().getName(), literalFieldValue);
};
oFF.QDimensionMemberResult.prototype.releaseObject = function()
{
	this.m_resultStructureElement = null;
	this.m_value = oFF.XObjectExt.release(this.m_value);
	this.m_fieldValues = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_fieldValues);
	oFF.QAbstractDimensionMember.prototype.releaseObject.call( this );
};
oFF.QDimensionMemberResult.prototype.setType = function(type)
{
	if (!type.isTypeOf(oFF.MemberType.RESULT))
	{
		throw oFF.XException.createIllegalStateException("Invalid member type for result member!");
	}
	if (type === oFF.MemberType.RESULT)
	{
		this.m_value = oFF.XStringValue.create(oFF.QDimensionMemberResult.QY_TOTAL);
	}
	else if (type === oFF.MemberType.CONDITION_RESULT)
	{
		this.m_value = oFF.XStringValue.create(oFF.QDimensionMemberResult.QY_TOTAL_INCLUDING);
	}
	else
	{
		this.m_value = oFF.XStringValue.create(oFF.QDimensionMemberResult.QY_TOTAL_REMAINING);
	}
	this.m_memberType = type;
	this.m_resultStructureElement = oFF.ResultStructureElement.getStructureElementByMemberType(type);
};
oFF.QDimensionMemberResult.prototype.getFormattedValue = function()
{
	return this.m_value.getString();
};
oFF.QDimensionMemberResult.prototype.getIntByPresentation = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getDoubleByPresentation = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getDateByPresentation = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getStringByPresentation = function(presentation)
{
	return this.m_value.getString();
};
oFF.QDimensionMemberResult.prototype.getPolygonByPresentation = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getTimeSpanByPresentation = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getFieldValue = function(field)
{
	return this.m_fieldValues.getValuesAsReadOnlyList().get(0);
};
oFF.QDimensionMemberResult.prototype.getKeyFieldValue = function()
{
	return this.m_fieldValues.getValuesAsReadOnlyList().get(0);
};
oFF.QDimensionMemberResult.prototype.getPropertiesValue = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getStructureValue = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getStructureListValue = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getErrorValue = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getValueType = function()
{
	return oFF.XValueType.STRING;
};
oFF.QDimensionMemberResult.prototype.getValue = function()
{
	return this.m_value;
};
oFF.QDimensionMemberResult.prototype.getDate = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getTime = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getGeometry = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getPolygon = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getPoint = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getTimeSpan = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getString = function()
{
	return this.m_value.getString();
};
oFF.QDimensionMemberResult.prototype.getDouble = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getInteger = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getLong = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.createAndAddField = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.createAndAddFieldWithValue = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithString = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithBoolean = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithInteger = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithLong = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithDouble = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithDate = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.createAndAddFieldValueWithTime = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.createFilterOperation = function()
{
	return null;
};
oFF.QDimensionMemberResult.prototype.getAllFieldValues = function()
{
	return this.m_fieldValues;
};
oFF.QDimensionMemberResult.prototype.getResultSetFieldValues = function()
{
	return this.m_fieldValues.getValuesAsReadOnlyList();
};
oFF.QDimensionMemberResult.prototype.addFieldValue = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getValueAsString = function()
{
	return this.m_value.getString();
};
oFF.QDimensionMemberResult.prototype.getBoolean = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getSelectValue = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getSelectField = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getSelectHierarchyName = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getDateTime = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getMultiPolygon = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getLineString = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getMultiLineString = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getNull = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.setResultVisibility = function(memberVisibility)
{
	this.getDimension().setResultVisibilityByElement(this.m_resultStructureElement, memberVisibility);
};
oFF.QDimensionMemberResult.prototype.getResultVisibility = function()
{
	return this.getDimension().getResultVisibilityByElement(this.m_resultStructureElement);
};
oFF.QDimensionMemberResult.prototype.getDimensionMemberNameValueException = function()
{
	return oFF.ValueException.NORMAL;
};
oFF.QDimensionMemberResult.prototype.setDimensionMemberNameValueException = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.getMultiPoint = oFF.noSupport;
oFF.QDimensionMemberResult.prototype.hasValue = function()
{
	return oFF.notNull(this.m_value);
};
oFF.QDimensionMemberResult.prototype.loadBLOBForField = oFF.noSupport;

oFF.QFieldFormulaCalc = function() {};
oFF.QFieldFormulaCalc.prototype = new oFF.QFieldCalcDim();
oFF.QFieldFormulaCalc.prototype._ff_c = "QFieldFormulaCalc";

oFF.QFieldFormulaCalc._createFormulaCalcField = function(context, dimension, presentationType, fieldName)
{
	var formulaCalcField = new oFF.QFieldFormulaCalc();
	formulaCalcField.setupFieldCalcDim(context, dimension, presentationType, fieldName);
	return formulaCalcField;
};
oFF.QFieldFormulaCalc.prototype.m_formulaItem = null;
oFF.QFieldFormulaCalc.prototype.m_autoSignFlip = false;
oFF.QFieldFormulaCalc.prototype.m_measureMemberName = null;
oFF.QFieldFormulaCalc.prototype.releaseObject = function()
{
	oFF.QFieldCalcDim.prototype.releaseObject.call( this );
	this.m_formulaItem = oFF.XObjectExt.release(this.m_formulaItem);
	this.m_measureMemberName = null;
};
oFF.QFieldFormulaCalc.prototype.copyFromInternal = function(other, flags)
{
	oFF.QFieldCalcDim.prototype.copyFromInternal.call( this , other, flags);
	var origField = other;
	if (origField.getFormulaItem() !== null)
	{
		var formulaItem = origField.getFormulaItem();
		this.m_formulaItem = formulaItem.cloneOlapComponent(this, this);
	}
	this.m_autoSignFlip = origField.m_autoSignFlip;
	this.m_measureMemberName = origField.m_measureMemberName;
};
oFF.QFieldFormulaCalc.prototype.getFormulaItem = function()
{
	return this.m_formulaItem;
};
oFF.QFieldFormulaCalc.prototype.setFormulaItem = function(formula)
{
	var elementBase = formula;
	if (oFF.notNull(elementBase))
	{
		elementBase.setParent(this);
	}
	this.m_formulaItem = formula;
	this.notifyNodeChanged();
};
oFF.QFieldFormulaCalc.prototype.isAutoSignFlip = function()
{
	return this.m_autoSignFlip;
};
oFF.QFieldFormulaCalc.prototype.setAutoSignFlip = function(autoSignFlip)
{
	if (this.m_autoSignFlip !== autoSignFlip)
	{
		this.m_autoSignFlip = autoSignFlip;
		this.notifyPropertyBooleanChanged(oFF.QFieldProperties.QY_AUTO_SIGN_FLIP, !autoSignFlip, autoSignFlip);
	}
};
oFF.QFieldFormulaCalc.prototype.setCrossCalculationMeasure = function(measureMemberName)
{
	this.m_measureMemberName = measureMemberName;
	this.notifyNodeChanged();
};
oFF.QFieldFormulaCalc.prototype.getCrossCalculationMeasure = function()
{
	return this.m_measureMemberName;
};

oFF.QFilterAcrossModels = function() {};
oFF.QFilterAcrossModels.prototype = new oFF.AbstractTransientFilter();
oFF.QFilterAcrossModels.prototype._ff_c = "QFilterAcrossModels";

oFF.QFilterAcrossModels.QUERY_MANAGER_NO_MATCH = 0;
oFF.QFilterAcrossModels.QUERY_MANAGER_SAME_DATA_SOURCE = 1;
oFF.QFilterAcrossModels.QUERY_MANAGER_MATCHING_DIMENSIONS = 2;
oFF.QFilterAcrossModels.QUERY_MANAGER_ACCOUNT_DIMENSION_MATCH = 3;
oFF.QFilterAcrossModels.QUERY_MANAGER_DATASET_ID_EXISTS = 4;
oFF.QFilterAcrossModels.QUERY_MANAGER_MATCHES_NAME = 5;
oFF.QFilterAcrossModels.LINK_FILTER_PREFIX = "__transient|";
oFF.QFilterAcrossModels.createFilterAcrossModels = function(context, name)
{
	var filterAcrossModels = new oFF.QFilterAcrossModels();
	filterAcrossModels.setupFilterAcrossModels(context, name);
	return filterAcrossModels;
};
oFF.QFilterAcrossModels.prototype.m_links = null;
oFF.QFilterAcrossModels.prototype.m_measureNames = null;
oFF.QFilterAcrossModels.prototype.m_secondaryMeasureNames = null;
oFF.QFilterAcrossModels.prototype.m_secondaryQueryManager = null;
oFF.QFilterAcrossModels.prototype.m_secondaryQueryManagerBaseKey = null;
oFF.QFilterAcrossModels.prototype.m_lov = null;
oFF.QFilterAcrossModels.prototype.m_preparationListener = null;
oFF.QFilterAcrossModels.prototype.m_queryModelTransientDimensions = null;
oFF.QFilterAcrossModels.prototype.m_cachedTransientFiltersWithSharedContext = null;
oFF.QFilterAcrossModels.prototype.m_preferPrequeryBasedStrategy = false;
oFF.QFilterAcrossModels.prototype.m_maxLovRows = null;
oFF.QFilterAcrossModels.prototype.m_messageManager = null;
oFF.QFilterAcrossModels.prototype.setupFilterAcrossModels = function(context, name)
{
	this.setupTransientFilter(context, name);
	this.m_measureNames = oFF.XHashSetOfString.create();
	this.m_secondaryMeasureNames = oFF.XHashSetOfString.create();
	this.m_links = oFF.XList.create();
	this.m_preferPrequeryBasedStrategy = false;
	this.m_queryModelTransientDimensions = oFF.XHashMapByString.create();
	this.m_maxLovRows = null;
	this.m_messageManager = oFF.MessageManager.createMessageManagerExt(context.getSession());
};
oFF.QFilterAcrossModels.prototype.copyFromInternal = function(other, flags)
{
	oFF.AbstractTransientFilter.prototype.copyFromInternal.call( this , other, flags);
	var originFilterAcrossModels = other;
	oFF.XCollectionUtils.addAllClones(this.m_links, originFilterAcrossModels.m_links);
	this.m_measureNames.clear();
	this.m_measureNames.addAll(originFilterAcrossModels.m_measureNames);
	this.m_secondaryMeasureNames.clear();
	this.m_secondaryMeasureNames.addAll(originFilterAcrossModels.m_secondaryMeasureNames);
	this.m_preferPrequeryBasedStrategy = originFilterAcrossModels.m_preferPrequeryBasedStrategy;
	if (oFF.notNull(originFilterAcrossModels.m_maxLovRows))
	{
		this.m_maxLovRows = oFF.XIntegerValue.create(originFilterAcrossModels.m_maxLovRows.getInteger());
	}
};
oFF.QFilterAcrossModels.prototype.getOlapComponentType = function()
{
	return oFF.FilterComponentType.FILTER_ACROSS_MODELS;
};
oFF.QFilterAcrossModels.prototype.releaseObject = function()
{
	this.destroyTransientObjects(this.getContext());
	this.m_links = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_links);
	this.m_measureNames = oFF.XObjectExt.release(this.m_measureNames);
	this.m_secondaryMeasureNames = oFF.XObjectExt.release(this.m_secondaryMeasureNames);
	this.m_secondaryQueryManager = oFF.XObjectExt.release(this.m_secondaryQueryManager);
	this.m_secondaryQueryManagerBaseKey = null;
	this.m_lov = oFF.XObjectExt.release(this.m_lov);
	this.m_preparationListener = null;
	this.m_queryModelTransientDimensions = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_queryModelTransientDimensions);
	this.m_cachedTransientFiltersWithSharedContext = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_cachedTransientFiltersWithSharedContext);
	this.m_maxLovRows = oFF.XObjectExt.release(this.m_maxLovRows);
	this.m_messageManager = oFF.XObjectExt.release(this.m_messageManager);
	oFF.AbstractTransientFilter.prototype.releaseObject.call( this );
};
oFF.QFilterAcrossModels.prototype.processLovQueriesExecution = function(context, syncType, queryExecutedListener, customIdentifier)
{
	if (!context.getSession().hasFeature(oFF.FeatureToggleOlap.LOV_BASED_FILTER_ACROSS_MODELS) || !this.hasLinks())
	{
		return null;
	}
	this.setContext(context);
	if (this.usePrequeryBasedTransientObjectGenerator())
	{
		return null;
	}
	return this.createAndProcessLovQueriesExecution(syncType, queryExecutedListener, customIdentifier);
};
oFF.QFilterAcrossModels.prototype.hasLinks = function()
{
	return oFF.XCollectionUtils.hasElements(this.m_links);
};
oFF.QFilterAcrossModels.prototype.isLovValid = function()
{
	return oFF.notNull(this.m_lov) && !this.m_lov.isReleased();
};
oFF.QFilterAcrossModels.prototype.supportsPrequeryBasedFilterAcrossModels = function()
{
	return this.getContext().getModelCapabilities().supportsPrequeryBasedFilteringAcrossModelsExt(this.setupIfNotExistsAndGetSecondaryContext().getModelCapabilities()) && this.doAllLinkedDimensionsSupportPrequeryBasedFilterAcrossModels();
};
oFF.QFilterAcrossModels.prototype.doAllLinkedDimensionsSupportPrequeryBasedFilterAcrossModels = function()
{
	for (var i = 0; i < this.m_links.size(); i++)
	{
		var link = this.m_links.get(i);
		var first = link.getFirstPart();
		var second = link.getSecondPart();
		if (!this.doesLinkPartSupportPrequeryBasedFilterAcrossModels(first) || !this.doesLinkPartSupportPrequeryBasedFilterAcrossModels(second))
		{
			return false;
		}
	}
	return true;
};
oFF.QFilterAcrossModels.prototype.doesLinkPartSupportPrequeryBasedFilterAcrossModels = function(linkPart)
{
	var linkPartContext = null;
	if (linkPart.isSameDataSourceOrDatasetIdAsContext(this.getContext()))
	{
		linkPartContext = this.getContext();
	}
	else
	{
		linkPartContext = this.setupIfNotExistsAndGetSecondaryContext();
	}
	var linkedDimension = this.getDimensionOrCalcDim(linkPartContext, linkPart.getDimensionName());
	return !oFF.QFilterAcrossModelsDimensionUtil.isTimeStampDimension(linkedDimension) && (!linkPart.isHierarchical() || oFF.QFilterAcrossModelsDimensionUtil.getHierarchyLevelCount(linkedDimension, linkPart.getHierarchyName()) <= 1);
};
oFF.QFilterAcrossModels.prototype.getDimensionOrCalcDim = function(context, dimensionName)
{
	return oFF.QFilterAcrossModelsDimensionUtil.getDimensionOrCalcDim(context, dimensionName, oFF.QFilterAcrossModelsLinkUtil.getAnySharedLinkStorageName(this.getLinks()));
};
oFF.QFilterAcrossModels.prototype.createAndProcessLovQueriesExecution = function(syncType, queryExecutedListener, customIdentifier)
{
	if (!this.isLovValid())
	{
		this.m_lov = oFF.QFilterAcrossModelsLov.create(this.m_links, this.setupIfNotExistsAndGetSecondaryContext().getQueryManager(), this.m_layeredFilters.toReadOnly(), this.getContext().getQueryManager(), this.m_measureNames, this.m_secondaryMeasureNames, this.m_maxLovRows);
	}
	var lovAction = oFF.QFilterAcrossModelsLovAction.createAction(this.m_lov);
	return lovAction.processSyncAction(syncType, queryExecutedListener, customIdentifier);
};
oFF.QFilterAcrossModels.prototype.usePrequeryBasedTransientObjectGenerator = function()
{
	var secondaryContext = this.setupIfNotExistsAndGetSecondaryContext();
	var sourceFilters = this.m_layeredFilters.toReadOnly().getValuesAsReadOnlyList();
	return !this.getContext().getSession().hasFeature(oFF.FeatureToggleOlap.LOV_BASED_FILTER_ACROSS_MODELS) || this.supportsPrequeryBasedFilterAcrossModels() && (this.m_preferPrequeryBasedStrategy || !oFF.QFilterAcrossModelsFilterUtil.areAllFiltersDirect(secondaryContext, this.m_links, sourceFilters) || oFF.QFilterAcrossModelsFilterUtil.hasSourceFilterLinkedOnDescription(secondaryContext, this.m_links, sourceFilters) || !this.hasSourceFilters());
};
oFF.QFilterAcrossModels.prototype.generateTransientObjects = function(context, messageManager)
{
	if (!context.getSession().hasFeature(oFF.FeatureToggleOlap.LOV_BASED_FILTER_ACROSS_MODELS) && !context.getModelCapabilities().supportsPrequeryBasedFilteringAcrossModels())
	{
		messageManager.addError(oFF.ErrorCodes.INVALID_OPERATOR, "Context doesn't supports Filtering Across Models!");
		return;
	}
	if (!this.hasLinks())
	{
		return;
	}
	var queryModel = context.getQueryModel();
	if (queryModel.getDimensionByName(this.getName()) !== null)
	{
		this.m_transientRefCount++;
		return;
	}
	this.m_transientRefCount = 1;
	this.setContext(context);
	var secondaryContext = this.setupIfNotExistsAndGetSecondaryContext();
	if (!oFF.QFilterAcrossModelsLinkUtil.areLinksValid(this.getLinks(), secondaryContext, context))
	{
		messageManager.addWarning(oFF.ErrorCodes.FILTER_ACROSS_MODEL_INVALID_DIMENSION_HIERARCHY, oFF.ErrorMessages.FILTER_ACROSS_MODEL_INVALID_DIMENSION_HIERARCHY);
		return;
	}
	var generator = null;
	if (this.usePrequeryBasedTransientObjectGenerator())
	{
		generator = oFF.QFilterAcrossModelsPrequeryBasedTransientObjectGenerator.createFilterAcrossModelsPrequeryBasedTransientObjectGenerator(this, this.getName(), secondaryContext, context, this.m_messageManager, this.m_links, this.m_layeredFilters, this.m_measureNames, this.m_secondaryMeasureNames);
	}
	else
	{
		generator = oFF.QFilterAcrossModelsLovBasedTransientObjectGenerator.createFilterAcrossModelsLovBasedTransientObjectGenerator(this, this.getName(), secondaryContext, context, this.m_messageManager, this.m_links, this.m_layeredFilters, this.m_measureNames, this.m_secondaryMeasureNames, this.m_lov);
	}
	var transientDimensions = generator.generateTransientDimensions();
	var addedTransientDimensionNames = oFF.XListOfString.create();
	for (var i = 0; i < transientDimensions.size(); i++)
	{
		var transientDimension = transientDimensions.get(i);
		if (transientDimension.getDimensionType().isTypeOf(oFF.DimensionType.FORMULA_CALCULATED_DIMENSION))
		{
			this.addCalcDimAndDependencies(transientDimension, queryModel, secondaryContext.getQueryModel(), this.m_messageManager);
			addedTransientDimensionNames.add(transientDimension.getName());
		}
	}
	if (addedTransientDimensionNames.size() > 0)
	{
		this.m_queryModelTransientDimensions.put(queryModel.getQueryManager().getInstanceId(), addedTransientDimensionNames);
	}
	if (context.getSession().hasFeature(oFF.FeatureToggleOlap.LOV_BASED_FILTER_ACROSS_MODELS))
	{
		var targetTransientFilters = this.generateTargetTransientFilters(generator);
		for (var j = 0; j < targetTransientFilters.size(); j++)
		{
			queryModel.getFilter().linkFilter(this.getLinkFilterKey(j), targetTransientFilters.get(j));
		}
	}
	messageManager.copyAllMessages(this.m_messageManager);
	oFF.XObjectExt.release(generator);
};
oFF.QFilterAcrossModels.prototype.generateTargetTransientFilters = function(generator)
{
	var sharedQueryManagerForTargetContext = this.getContext().getOlapEnv().getSharedQueryManager(this.getContext().getQueryModel().getDatasetId());
	var sharedContextValid = oFF.notNull(sharedQueryManagerForTargetContext) && !sharedQueryManagerForTargetContext.isReleased();
	var targetTransientFilters;
	if (this.shouldGenerateTransientFilters())
	{
		if (sharedContextValid)
		{
			generator.setTargetContext(sharedQueryManagerForTargetContext);
		}
		targetTransientFilters = generator.generateTransientFilters();
		if (sharedContextValid)
		{
			this.m_cachedTransientFiltersWithSharedContext = targetTransientFilters;
			targetTransientFilters = this.copyFiltersForTargetContext(targetTransientFilters);
		}
	}
	else
	{
		targetTransientFilters = this.copyFiltersForTargetContext(this.m_cachedTransientFiltersWithSharedContext);
	}
	return targetTransientFilters;
};
oFF.QFilterAcrossModels.prototype.shouldGenerateTransientFilters = function()
{
	if (oFF.isNull(this.m_cachedTransientFiltersWithSharedContext) || this.m_cachedTransientFiltersWithSharedContext.isReleased())
	{
		return true;
	}
	if (this.m_cachedTransientFiltersWithSharedContext.size() > 0)
	{
		var filter = this.m_cachedTransientFiltersWithSharedContext.get(0);
		return filter.getContext() === null || filter.getContext().isReleased();
	}
	return false;
};
oFF.QFilterAcrossModels.prototype.copyFiltersForTargetContext = function(transientFilters)
{
	var result = oFF.XList.create();
	for (var i = 0; i < transientFilters.size(); i++)
	{
		var target = this.getContext().getQueryModel().getFilter().createFilter();
		target.copyFrom(transientFilters.get(i), null);
		result.add(target);
	}
	return result;
};
oFF.QFilterAcrossModels.prototype.hasSourceFilters = function()
{
	return this.m_layeredFilters.getIterator().hasNext();
};
oFF.QFilterAcrossModels.prototype.getTransientFilter = oFF.noSupport;
oFF.QFilterAcrossModels.prototype.setupIfNotExistsAndGetSecondaryContext = function()
{
	var secondaryLinkPart = this.getFirstSecondaryFieldLink(this.getContext());
	if (oFF.isNull(this.m_secondaryQueryManager) || !secondaryLinkPart.isSameDataSourceOrDatasetIdAsContext(this.m_secondaryQueryManager))
	{
		return this.setupAndGetSecondaryContext(this.getContext(), secondaryLinkPart);
	}
	return this.m_secondaryQueryManager;
};
oFF.QFilterAcrossModels.prototype.setupAndGetSecondaryContext = function(context, secondaryLink)
{
	var olapEnv = context.getOlapEnv();
	var application = olapEnv.getApplication();
	var isBatching = application.getConnectionPool().isBatchModeEnabled(secondaryLink.getSystemName());
	if (isBatching)
	{
		var transientQueryManager = olapEnv.getTransientQueryManager(this.getName());
		if (oFF.notNull(transientQueryManager))
		{
			return transientQueryManager.getContext();
		}
	}
	var linkedDimensions = this.getLinkedDimensionsForContext(secondaryLink);
	if (!this.setupSecondaryQueryManager(olapEnv, secondaryLink, linkedDimensions))
	{
		this.m_secondaryQueryManager = oFF.XObjectExt.release(this.m_secondaryQueryManager);
		var createQueryManager = olapEnv.processQueryManagerCreationWithDataSourceName(oFF.SyncType.BLOCKING, null, null, secondaryLink.getSystemName(), secondaryLink.getCubeName());
		oFF.MessageUtil.checkNoError(createQueryManager);
		this.m_secondaryQueryManager = createQueryManager.getData();
	}
	if (!context.getSession().hasFeature(oFF.FeatureToggleOlap.LOV_BASED_FILTER_ACROSS_MODELS) && !this.m_secondaryQueryManager.getModelCapabilities().supportsPrequeryBasedFilteringAcrossModels())
	{
		this.m_secondaryQueryManager = oFF.XObjectExt.release(this.m_secondaryQueryManager);
		return null;
	}
	if (isBatching)
	{
		olapEnv.putTransientQueryManager(this.getName(), this.m_secondaryQueryManager);
	}
	this.m_secondaryQueryManager.getConvenienceCommands().resetPreserveCustomMembersAndCalcDims();
	var dimensionAccessor = this.m_secondaryQueryManager.getDimensionAccessor();
	var queryModel = this.m_secondaryQueryManager.getQueryModel();
	var rowsAxis = queryModel.getRowsAxis();
	for (var i = 0; i < linkedDimensions.size(); i++)
	{
		var linkedDimension = dimensionAccessor.getDimensionByName(linkedDimensions.get(i));
		rowsAxis.add(linkedDimension);
	}
	var freeAxis = queryModel.getFreeAxis();
	for (var k = freeAxis.size() - 1; k >= 0; k--)
	{
		var dim = freeAxis.get(k);
		if (dim.getDimensionType().isTypeOf(oFF.DimensionType.CALCULATED_DIMENSION) && dim.getFilter() === null && !this.hasLinkedFilterOnDimension(dim))
		{
			queryModel.removePreQueryByName(dim.getPreQueryName());
			queryModel.removeCalculatedDimensionByName(dim.getName());
		}
	}
	return this.m_secondaryQueryManager.getContext();
};
oFF.QFilterAcrossModels.prototype.setupSecondaryQueryManager = function(olapEnv, secondaryLink, linkedDimensions)
{
	var queryManagerByDataSource = this.getQueryManagerByDimensionLink(secondaryLink, linkedDimensions, olapEnv);
	if (oFF.notNull(queryManagerByDataSource))
	{
		if (queryManagerByDataSource !== this.m_secondaryQueryManager)
		{
			this.m_secondaryQueryManager = oFF.XObjectExt.release(this.m_secondaryQueryManager);
			this.m_secondaryQueryManager = queryManagerByDataSource.cloneQueryManagerExt(oFF.QueryCloneMode.CURRENT_STATE);
			this.ensureAccountHierarchySetAndActive();
		}
		return true;
	}
	return false;
};
oFF.QFilterAcrossModels.prototype.ensureAccountHierarchySetAndActive = function()
{
	var queryModel = this.m_secondaryQueryManager.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var accountDimension = queryModel.getAccountDimension();
		if (oFF.notNull(accountDimension) && !accountDimension.isHierarchyActive())
		{
			if (oFF.XStringUtils.isNullOrEmpty(accountDimension.getHierarchyName()))
			{
				accountDimension.setHierarchyName(accountDimension.getDefaultHierarchyName());
			}
			accountDimension.setHierarchyActive(true);
		}
	}
};
oFF.QFilterAcrossModels.prototype.getQueryManagerByDimensionLink = function(dimensionLinkPart, requiredDimensions, olapEnv)
{
	var resultCandidate = this.m_secondaryQueryManager;
	var fittingLevel = this.isFittingQueryManager(dimensionLinkPart, this.m_secondaryQueryManagerBaseKey, resultCandidate, requiredDimensions);
	if (fittingLevel === oFF.QFilterAcrossModels.QUERY_MANAGER_MATCHES_NAME)
	{
		return resultCandidate;
	}
	var newResultCandidate = olapEnv.getSharedQueryManager(dimensionLinkPart.getQueryManagerKey());
	if (oFF.notNull(newResultCandidate) && !newResultCandidate.isReleased() && newResultCandidate.getQueryModel() !== null && !newResultCandidate.getQueryModel().isReleased())
	{
		this.m_secondaryQueryManagerBaseKey = dimensionLinkPart.getQueryManagerKey();
		return newResultCandidate;
	}
	var newFittingLevel;
	var queryManagers = olapEnv.getAllAreaQueryManager();
	var size = queryManagers.size();
	for (var i = 0; i < size; i++)
	{
		newResultCandidate = queryManagers.get(i);
		newFittingLevel = this.isFittingQueryManager(dimensionLinkPart, newResultCandidate.getName(), newResultCandidate, requiredDimensions);
		if (newFittingLevel > fittingLevel)
		{
			fittingLevel = newFittingLevel;
			resultCandidate = newResultCandidate;
		}
		if (fittingLevel === oFF.QFilterAcrossModels.QUERY_MANAGER_MATCHES_NAME)
		{
			break;
		}
	}
	if (fittingLevel === oFF.QFilterAcrossModels.QUERY_MANAGER_NO_MATCH)
	{
		resultCandidate = null;
	}
	return resultCandidate;
};
oFF.QFilterAcrossModels.prototype.isFittingQueryManager = function(dimensionLinkPart, queryManagerKey, queryManager, requiredDimensions)
{
	var result = oFF.QFilterAcrossModels.QUERY_MANAGER_NO_MATCH;
	if (oFF.notNull(queryManager) && !queryManager.isReleased())
	{
		var queryModel = queryManager.getQueryModel();
		if (oFF.notNull(queryModel) && !queryModel.isReleased() && queryModel.getDimensionNames().size() > 0)
		{
			if (oFF.XStringUtils.isNotNullAndNotEmpty(queryManagerKey) && oFF.XString.isEqual(queryManagerKey, dimensionLinkPart.getQueryManagerKey()))
			{
				result = oFF.QFilterAcrossModels.QUERY_MANAGER_MATCHES_NAME;
				this.m_secondaryQueryManagerBaseKey = dimensionLinkPart.getQueryManagerKey();
			}
			else if (dimensionLinkPart.isSameDataSourceOrDatasetIdAsContext(queryManager))
			{
				result = oFF.QFilterAcrossModels.QUERY_MANAGER_SAME_DATA_SOURCE;
				if (this.queryContainsDimensions(queryModel.getDimensionNames(), requiredDimensions))
				{
					result = oFF.QFilterAcrossModels.QUERY_MANAGER_MATCHING_DIMENSIONS;
					if (queryModel.getAccountDimension() === null || queryModel.getAccountDimension().isHierarchyActive())
					{
						result = oFF.QFilterAcrossModels.QUERY_MANAGER_ACCOUNT_DIMENSION_MATCH;
						if (oFF.XStringUtils.isNotNullAndNotEmpty(queryModel.getDatasetId()))
						{
							result = oFF.QFilterAcrossModels.QUERY_MANAGER_DATASET_ID_EXISTS;
						}
					}
				}
			}
		}
	}
	return result;
};
oFF.QFilterAcrossModels.prototype.queryContainsDimensions = function(availableDimensions, requiredDimensions)
{
	for (var i = 0; i < requiredDimensions.size(); i++)
	{
		if (!availableDimensions.contains(requiredDimensions.get(i)))
		{
			return false;
		}
	}
	return true;
};
oFF.QFilterAcrossModels.prototype.hasLinkedFilterOnDimension = function(dimension)
{
	var linkedFiltersIt = this.m_layeredFilters.getIterator();
	while (linkedFiltersIt.hasNext())
	{
		if (dimension.isUsedInFilter(linkedFiltersIt.next()))
		{
			oFF.XObjectExt.release(linkedFiltersIt);
			return true;
		}
	}
	oFF.XObjectExt.release(linkedFiltersIt);
	return false;
};
oFF.QFilterAcrossModels.prototype.getLinkedDimensionsForContext = function(context)
{
	return oFF.QFilterAcrossModelsLinkUtil.getLinkedDimensionsForContext(this.m_links, context);
};
oFF.QFilterAcrossModels.prototype.getFirstSecondaryFieldLink = function(context)
{
	return oFF.QFilterAcrossModelsLinkUtil.getFirstSecondaryLinkPartForContext(this.m_links, context);
};
oFF.QFilterAcrossModels.prototype.getLinkFilterKey = function(idx)
{
	return oFF.XStringUtils.concatenateWithInt(oFF.XStringUtils.concatenate3(oFF.QFilterAcrossModels.LINK_FILTER_PREFIX, this.getName(), "|"), idx);
};
oFF.QFilterAcrossModels.prototype.getLinks = function()
{
	return this.m_links;
};
oFF.QFilterAcrossModels.prototype.addLink = function(link)
{
	if (!this.m_links.contains(link))
	{
		this.m_links.add(link);
		this.clearCachedQueryDependentObjectsAndNotifyNodeChanged();
	}
};
oFF.QFilterAcrossModels.prototype.addNewLink = function(first, second)
{
	this.addLink(oFF.QDimensionLink.createDimensionLink(this, this, first, second, false));
};
oFF.QFilterAcrossModels.prototype.addNewSharedLink = function(context, first, second)
{
	this.addLink(oFF.QDimensionLink.createDimensionLink(context, this, first, second, false));
};
oFF.QFilterAcrossModels.prototype.addNewLinkFromParts = function(first, second)
{
	var link = oFF.QDimensionLink.createDimensionLinkFromParts(this, this, first, second, false);
	this.addLink(link);
	return link;
};
oFF.QFilterAcrossModels.prototype.addMeasureName = function(measureName)
{
	this.m_measureNames.add(measureName);
	this.clearCachedQueryDependentObjectsAndNotifyNodeChanged();
};
oFF.QFilterAcrossModels.prototype.removeMeasureName = function(measureName)
{
	this.m_measureNames.removeElement(measureName);
	this.clearCachedQueryDependentObjectsAndNotifyNodeChanged();
};
oFF.QFilterAcrossModels.prototype.getMeasureNames = function()
{
	return this.m_measureNames.getValuesAsReadOnlyListOfString();
};
oFF.QFilterAcrossModels.prototype.addSecondaryMeasureName = function(measureName)
{
	this.m_secondaryMeasureNames.add(measureName);
	this.clearCachedQueryDependentObjectsAndNotifyNodeChanged();
};
oFF.QFilterAcrossModels.prototype.removeSecondaryMeasureName = function(measureName)
{
	this.m_secondaryMeasureNames.removeElement(measureName);
	this.clearCachedQueryDependentObjectsAndNotifyNodeChanged();
};
oFF.QFilterAcrossModels.prototype.getSecondaryMeasureNames = function()
{
	return this.m_secondaryMeasureNames.getValuesAsReadOnlyListOfString();
};
oFF.QFilterAcrossModels.prototype.clearCachedQueryDependentObjects = function()
{
	if (this.getContext() !== null && this.getContext().getSession().hasFeature(oFF.FeatureToggleOlap.LOV_BASED_FILTER_ACROSS_MODELS))
	{
		oFF.AbstractTransientFilter.prototype.clearCachedQueryDependentObjects.call( this );
		this.m_secondaryQueryManager = oFF.XObjectExt.release(this.m_secondaryQueryManager);
		this.m_lov = oFF.XObjectExt.release(this.m_lov);
		this.m_cachedTransientFiltersWithSharedContext = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_cachedTransientFiltersWithSharedContext);
		this.m_messageManager.clearMessages();
	}
};
oFF.QFilterAcrossModels.prototype.setPreferPrequeryBasedStrategy = function(preferPrequeryBasedStrategy)
{
	this.m_preferPrequeryBasedStrategy = preferPrequeryBasedStrategy;
	this.clearCachedQueryDependentObjectsAndNotifyNodeChanged();
};
oFF.QFilterAcrossModels.prototype.getPreferPrequeryBasedStrategy = function()
{
	return this.m_preferPrequeryBasedStrategy;
};
oFF.QFilterAcrossModels.prototype.prepare = function(syncType, listener, customIdentifier)
{
	var context = this.getContext();
	var olapEnv = context.getOlapEnv();
	var secondaryLink = this.getFirstSecondaryFieldLink(context);
	var linkedDimensions = this.getLinkedDimensionsForContext(secondaryLink);
	if (this.setupSecondaryQueryManager(olapEnv, secondaryLink, linkedDimensions))
	{
		var result = oFF.SyncActionExtRes.createSyncAction(this.m_secondaryQueryManager, null);
		if (oFF.notNull(listener))
		{
			listener.onFAMPreparationFinished(result, this.m_secondaryQueryManager, customIdentifier);
		}
		return result;
	}
	else
	{
		this.m_secondaryQueryManager = oFF.XObjectExt.release(this.m_secondaryQueryManager);
		this.m_preparationListener = listener;
		return olapEnv.processQueryManagerCreationWithDataSourceName(syncType, this, customIdentifier, secondaryLink.getSystemName(), secondaryLink.getCubeName());
	}
};
oFF.QFilterAcrossModels.prototype.onQueryManagerCreated = function(extResult, queryManager, customIdentifier)
{
	this.m_secondaryQueryManager = queryManager;
	if (oFF.notNull(this.m_preparationListener))
	{
		this.m_preparationListener.onFAMPreparationFinished(oFF.ExtResult.create(queryManager, extResult), queryManager, customIdentifier);
	}
};
oFF.QFilterAcrossModels.prototype.destroyTransientObjects = function(context)
{
	this.m_transientRefCount--;
	if (this.m_transientRefCount <= 0)
	{
		this.destroyTransientFromExternalFilters(context);
		if (oFF.notNull(context) && context.getQueryModel() !== null && this.m_queryModelTransientDimensions.containsKey(context.getQueryManager().getInstanceId()))
		{
			var transientDimensionNames = this.m_queryModelTransientDimensions.getByKey(context.getQueryManager().getInstanceId());
			for (var i = 0; i < transientDimensionNames.size(); i++)
			{
				var dimensionName = transientDimensionNames.get(i);
				var dimension = context.getQueryModel().getDimensionByName(dimensionName);
				if (dimension.getDimensionType().isTypeOf(oFF.DimensionType.FORMULA_CALCULATED_DIMENSION))
				{
					context.getQueryModel().getFilter().linkFilter(dimensionName, null);
					this.removeCalcDimByName(dimensionName, context);
				}
			}
			this.m_queryModelTransientDimensions.remove(context.getQueryManager().getInstanceId());
		}
	}
	if (oFF.notNull(context) && context.getQueryModel() !== null && context.getSession().hasFeature(oFF.FeatureToggleOlap.LOV_BASED_FILTER_ACROSS_MODELS))
	{
		var counter = 0;
		while (context.getQueryModel().getFilter().getLinkedFilter(this.getLinkFilterKey(counter)) !== null)
		{
			var transientFilter = context.getQueryModel().getFilter().getLinkedFilter(this.getLinkFilterKey(counter));
			context.getQueryModel().getFilter().linkFilter(this.getLinkFilterKey(counter), null);
			oFF.XObjectExt.release(transientFilter);
			counter++;
		}
	}
};
oFF.QFilterAcrossModels.prototype.getTransientDimensionsForQueryModel = function(queryModel)
{
	var transientObjects = oFF.XList.create();
	if (!this.m_queryModelTransientDimensions.containsKey(queryModel.getQueryManager().getInstanceId()))
	{
		return transientObjects;
	}
	var transientDimensionNames = this.m_queryModelTransientDimensions.getByKey(queryModel.getQueryManager().getInstanceId());
	for (var i = 0; i < transientDimensionNames.size(); i++)
	{
		var dimension = queryModel.getDimensionByName(transientDimensionNames.get(i));
		if (oFF.notNull(dimension) && !dimension.isReleased() && dimension.getDimensionType().isTypeOf(oFF.DimensionType.FORMULA_CALCULATED_DIMENSION))
		{
			transientObjects.add(dimension);
		}
	}
	return transientObjects;
};
oFF.QFilterAcrossModels.prototype.setMaxLovRows = function(maxLovRows)
{
	this.m_maxLovRows = maxLovRows;
};

oFF.QFilterMeasureBased = function() {};
oFF.QFilterMeasureBased.prototype = new oFF.AbstractTransientFilter();
oFF.QFilterMeasureBased.prototype._ff_c = "QFilterMeasureBased";

oFF.QFilterMeasureBased.createFilterMeasureBased = function(context, name)
{
	var mbf = new oFF.QFilterMeasureBased();
	mbf.setupTransientFilter(context, name);
	mbf.m_dimensionContext = oFF.XListOfString.create();
	return mbf;
};
oFF.QFilterMeasureBased.prototype.m_formula = null;
oFF.QFilterMeasureBased.prototype.m_dimensionContext = null;
oFF.QFilterMeasureBased.prototype.m_measureMemberName = null;
oFF.QFilterMeasureBased.prototype.getOlapComponentType = function()
{
	return oFF.FilterComponentType.FILTER_MEASURE_BASED;
};
oFF.QFilterMeasureBased.prototype.releaseObject = function()
{
	this.destroyTransientObjects(this.getContext());
	this.m_formula = oFF.XObjectExt.release(this.m_formula);
	this.m_dimensionContext = oFF.XObjectExt.release(this.m_dimensionContext);
	this.m_measureMemberName = null;
	oFF.AbstractTransientFilter.prototype.releaseObject.call( this );
};
oFF.QFilterMeasureBased.prototype.setFormula = function(formula)
{
	if (oFF.notNull(formula) && formula.getOlapComponentType() === oFF.OlapComponentType.FORMULA_FUNCTION)
	{
		this.m_formula = oFF.QFactory.createFormulaFunction(this.getContext());
		this.m_formula.copyFormulaItemFunction(formula);
	}
};
oFF.QFilterMeasureBased.prototype.getFormula = function()
{
	return this.m_formula;
};
oFF.QFilterMeasureBased.prototype.copyFromInternal = function(other, flags)
{
	oFF.AbstractTransientFilter.prototype.copyFromInternal.call( this , other, flags);
	var originMeasureBasedFilter = other;
	this.setFormula(originMeasureBasedFilter.m_formula);
	this.m_dimensionContext.clear();
	this.m_dimensionContext.addAll(originMeasureBasedFilter.m_dimensionContext);
	this.m_measureMemberName = originMeasureBasedFilter.m_measureMemberName;
};
oFF.QFilterMeasureBased.prototype.destroyTransientObjects = function(context)
{
	this._removeDependentSharedMeasures(context);
	this.destroyTransientFromExternalFilters(context);
	this.m_transientRefCount--;
	if (this.m_transientRefCount <= 0)
	{
		this.removeCalcDimByName(this.getName(), context);
	}
};
oFF.QFilterMeasureBased.prototype.generateTransientObjects = function(context, messageManager)
{
	if (!context.getModelCapabilities().supportsFilterMeasureBased())
	{
		messageManager.addError(oFF.ErrorCodes.INVALID_OPERATOR, "Context doesn't supports Filtering Measure Based!");
		return;
	}
	if (oFF.isNull(this.m_formula))
	{
		return;
	}
	var queryModel = context.getQueryModel();
	if (queryModel.getDimensionByName(this.getName()) !== null)
	{
		this.m_transientRefCount++;
		return;
	}
	this.m_transientRefCount = 1;
	this._addDependentSharedMeasures(context, messageManager);
	var formulaCalcDim = oFF.QFactory.createFilterMeasureBasedCalculatedDimension(queryModel, this.getName());
	var calcField = formulaCalcDim.addNewFormulaCalcField(oFF.PresentationType.KEY, formulaCalcDim.getName());
	var transientFormula = oFF.QFactory.createFormulaFunction(context);
	transientFormula.copyFormulaItemFunction(this.m_formula);
	calcField.setFormulaItem(transientFormula);
	var dimensionContext = this.m_dimensionContext.getIterator();
	while (dimensionContext.hasNext())
	{
		var dimension = queryModel.getDimensionByName(dimensionContext.next());
		formulaCalcDim.addAggregationFieldName(dimension.getKeyField().getName());
	}
	calcField.setCrossCalculationMeasure(this.getCrossCalculationMeasure());
	this.setFilterContext(formulaCalcDim);
	queryModel.addDimension(formulaCalcDim);
	var filterIterator = this.m_layeredFilters.getIterator();
	while (filterIterator.hasNext())
	{
		var filterElement = filterIterator.next().getFilterRootElement();
		if (oFF.isNull(filterElement))
		{
			continue;
		}
		var componentType = filterElement.getComponentType();
		if (componentType !== oFF.FilterComponentType.FILTER_ACROSS_MODELS && componentType !== oFF.FilterComponentType.FILTER_MEASURE_BASED)
		{
			this.checkCalcDimFilter(filterElement, formulaCalcDim, queryModel);
		}
	}
};
oFF.QFilterMeasureBased.prototype._removeDependentSharedMeasures = function(context)
{
	var formulaMembers = oFF.FormulaItemUtils.getFormulaMembers(this.m_formula);
	if (formulaMembers.hasElements())
	{
		var clientQueryObjectManager = this.getOlapEnv().getClientQueryObjectManager();
		var queryModel = context.getQueryModel();
		var primaryCalculationDimension = queryModel.getPrimaryCalculationDimension();
		var iterator = formulaMembers.getIterator();
		while (iterator.hasNext())
		{
			var formulaMember = iterator.next();
			var structureMemberName = formulaMember.getMemberName();
			var structureMember = primaryCalculationDimension.getStructureMemberByAliasOrMember(structureMemberName);
			if (oFF.isNull(structureMember))
			{
				continue;
			}
			var sharedStructureMember = clientQueryObjectManager.getClientQueryObjectByKeyRef(structureMember);
			if (oFF.isNull(sharedStructureMember))
			{
				continue;
			}
			var tagging = sharedStructureMember.getTagging();
			if (tagging.containsKey(oFF.QTransientConstants.TAG_IS_TRANSIENT))
			{
				tagging.remove(oFF.QTransientConstants.TAG_IS_TRANSIENT);
				structureMember.destroyTransientObjects(context);
				primaryCalculationDimension.removeMeasure(structureMemberName);
			}
		}
	}
};
oFF.QFilterMeasureBased.prototype._addDependentSharedMeasures = function(context, messageManager)
{
	var formulaMembers = oFF.FormulaItemUtils.getFormulaMembers(this.m_formula);
	if (formulaMembers.hasElements())
	{
		var clientQueryObjectManager = this.getOlapEnv().getClientQueryObjectManager();
		var queryModel = context.getQueryModel();
		var primaryCalculationDimension = queryModel.getPrimaryCalculationDimension();
		var iterator = formulaMembers.getIterator();
		while (iterator.hasNext())
		{
			var formulaMember = iterator.next();
			var formulaMemberName = formulaMember.getMemberName();
			if (primaryCalculationDimension.getStructureMemberByAliasOrMember(formulaMemberName) !== null)
			{
				continue;
			}
			var structuredMember = clientQueryObjectManager.getStructuredMember(formulaMemberName, formulaMember.getStorageName(), true);
			if (oFF.notNull(structuredMember))
			{
				primaryCalculationDimension.addMeasure(structuredMember);
				structuredMember.generateTransientObjects(context, messageManager);
				structuredMember.getTagging().put(oFF.QTransientConstants.TAG_IS_TRANSIENT, "");
			}
		}
	}
};
oFF.QFilterMeasureBased.prototype.addDimensionContext = function(dimensionName)
{
	if (!this.m_dimensionContext.contains(dimensionName))
	{
		this.m_dimensionContext.add(dimensionName);
	}
};
oFF.QFilterMeasureBased.prototype.removeDimensionContext = function(dimensionName)
{
	this.m_dimensionContext.removeElement(dimensionName);
};
oFF.QFilterMeasureBased.prototype.getDimensionContext = function()
{
	return this.m_dimensionContext;
};
oFF.QFilterMeasureBased.prototype.setCrossCalculationMeasure = function(measureMemberName)
{
	this.m_measureMemberName = measureMemberName;
	this.notifyNodeChanged();
};
oFF.QFilterMeasureBased.prototype.getCrossCalculationMeasure = function()
{
	return this.m_measureMemberName;
};
oFF.QFilterMeasureBased.prototype.getTransientFilter = function()
{
	return null;
};

oFF.QResultStructureController = function() {};
oFF.QResultStructureController.prototype = new oFF.QResultStructureControllerGeneric();
oFF.QResultStructureController.prototype._ff_c = "QResultStructureController";

oFF.QResultStructureController._create = function(context, parentNode, location)
{
	var controller = new oFF.QResultStructureController();
	controller.setupController(context, parentNode, location);
	return controller;
};
oFF.QResultStructureController.prototype.m_alignment = null;
oFF.QResultStructureController.prototype.m_structure = null;
oFF.QResultStructureController.prototype.m_visibility = null;
oFF.QResultStructureController.prototype.setupController = function(context, parentNode, location)
{
	oFF.QResultStructureControllerGeneric.prototype.setupGenericController.call( this , context, parentNode, location);
	this.m_alignment = null;
	this.m_visibility = oFF.XSetOfNameObject.create();
};
oFF.QResultStructureController.prototype.copyFromInternal = function(other, flags)
{
	oFF.QResultStructureControllerGeneric.prototype.copyFromInternal.call( this , other, flags);
	var originResultStructureController = other;
	this.m_alignment = originResultStructureController.m_alignment;
	if (oFF.notNull(originResultStructureController.m_structure))
	{
		this.m_structure = oFF.QResultStructure.createResultStructure(this.getContext(), this);
		this.m_structure.copyFrom(originResultStructureController.m_structure, flags);
	}
	this.m_visibility = originResultStructureController.m_visibility.clone();
};
oFF.QResultStructureController.prototype.releaseObject = function()
{
	this.m_structure = oFF.XObjectExt.release(this.m_structure);
	this.m_visibility = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_visibility);
	this.m_alignment = null;
	oFF.QResultStructureControllerGeneric.prototype.releaseObject.call( this );
};
oFF.QResultStructureController.prototype.internalSetTotalsAlignmentDefault = function(copy)
{
	if (copy)
	{
		this.m_alignment = this.getResultAlignment();
	}
	else
	{
		this.m_alignment = null;
	}
};
oFF.QResultStructureController.prototype.setResultAlignment = function(alignment)
{
	this.setResultAlignmentBase(alignment, true);
};
oFF.QResultStructureController.prototype.setResultAlignmentBase = function(alignment, recurseChildren)
{
	if (oFF.isNull(alignment))
	{
		return false;
	}
	if (!this.supportsResultAlignment())
	{
		return false;
	}
	this.restoreTotalsAlignment(oFF.RestoreAction.CONDITIONAL_COPY, recurseChildren);
	if (this.m_alignment === alignment)
	{
		return false;
	}
	this.m_alignment = alignment;
	if (this.m_alignment === oFF.ResultAlignment.STRUCTURE)
	{
		this.getAdvancedResultStructure();
	}
	this.notifyNodeChanged();
	return true;
};
oFF.QResultStructureController.prototype.getResultAlignment = function()
{
	if (this.isTotalsAlignmentOnDefault())
	{
		var parentController = this.getParentController();
		if (oFF.notNull(parentController))
		{
			return parentController.getResultAlignment();
		}
	}
	if (!this.supportsResultAlignment())
	{
		return null;
	}
	this.initAlignment();
	return this.m_alignment;
};
oFF.QResultStructureController.prototype.initAlignment = function()
{
	if (oFF.isNull(this.m_alignment))
	{
		var lDefaultAlignment = oFF.ResultAlignment.BOTTOM;
		var ltSupportedResultAlignments = this.getModelCapabilities().getSupportedResultAlignments();
		if (ltSupportedResultAlignments.contains(lDefaultAlignment))
		{
			this.m_alignment = lDefaultAlignment;
		}
		else if (ltSupportedResultAlignments.hasElements())
		{
			this.m_alignment = ltSupportedResultAlignments.get(0);
		}
		else
		{
			this.m_alignment = oFF.ResultAlignment.NONE;
		}
	}
};
oFF.QResultStructureController.prototype.putOrChangeVisbility = function(alignment, element, visibility)
{
	var key = oFF.QVisibilityTriplet.getVisibilityKey(alignment, element);
	var triplet = this.m_visibility.getByKey(key);
	if (oFF.isNull(triplet))
	{
		this.m_visibility.add(oFF.QVisibilityTriplet.create(alignment, element, visibility));
		this.notifyNodeChanged();
	}
	else
	{
		if (triplet.getVisibility() !== visibility)
		{
			triplet.setVisibility(visibility);
			this.notifyNodeChanged();
		}
	}
};
oFF.QResultStructureController.prototype.internalSetTotalsVisibilityDefault = function(copy)
{
	this.queueEventing();
	if (copy)
	{
		this.putOrChangeVisbility(oFF.ResultAlignment.TOP, oFF.ResultStructureElement.TOTAL, this.getResultVisibilityByElementAndAlignment(oFF.ResultAlignment.TOP, oFF.ResultStructureElement.TOTAL));
		this.putOrChangeVisbility(oFF.ResultAlignment.TOP, oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS, this.getResultVisibilityByElementAndAlignment(oFF.ResultAlignment.TOP, oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS));
		this.putOrChangeVisbility(oFF.ResultAlignment.TOP, oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS, this.getResultVisibilityByElementAndAlignment(oFF.ResultAlignment.TOP, oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS));
		this.putOrChangeVisbility(oFF.ResultAlignment.BOTTOM, oFF.ResultStructureElement.TOTAL, this.getResultVisibilityByElementAndAlignment(oFF.ResultAlignment.TOP, oFF.ResultStructureElement.TOTAL));
		this.putOrChangeVisbility(oFF.ResultAlignment.BOTTOM, oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS, this.getResultVisibilityByElementAndAlignment(oFF.ResultAlignment.TOP, oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS));
		this.putOrChangeVisbility(oFF.ResultAlignment.BOTTOM, oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS, this.getResultVisibilityByElementAndAlignment(oFF.ResultAlignment.TOP, oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS));
	}
	else
	{
		this.m_visibility.clear();
	}
	this.resumeEventing();
};
oFF.QResultStructureController.prototype.setResultVisibilityByElement = function(element, visibility)
{
	if (this.getResultAlignment() === oFF.ResultAlignment.STRUCTURE)
	{
		this.setResultVisibilityByElementAndAlignment(oFF.ResultAlignment.STRUCTURE, element, visibility);
	}
	else
	{
		this.setResultVisibilityByElementAndAlignment(oFF.ResultAlignment.TOP, element, visibility);
		this.setResultVisibilityByElementAndAlignment(oFF.ResultAlignment.BOTTOM, element, visibility);
	}
};
oFF.QResultStructureController.prototype.setResultVisibilityByElementAndAlignment = function(alignment, element, visibility)
{
	if (alignment === oFF.ResultAlignment.STRUCTURE)
	{
		this.restoreTotalsVisibility(oFF.RestoreAction.CONDITIONAL_COPY, true);
		var advancedResultStructure = this.getAdvancedResultStructure();
		var size = advancedResultStructure.size();
		for (var i = 0; i < size; i++)
		{
			var item = advancedResultStructure.get(i);
			if (element === item.getResultStructureElement())
			{
				item.setResultVisibility(visibility);
			}
		}
	}
	else if (alignment === oFF.ResultAlignment.TOPBOTTOM)
	{
		this.setResultVisibilityByElementAndAlignment(oFF.ResultAlignment.TOP, element, visibility);
		this.setResultVisibilityByElementAndAlignment(oFF.ResultAlignment.BOTTOM, element, visibility);
	}
	else
	{
		this.restoreTotalsVisibility(oFF.RestoreAction.CONDITIONAL_COPY, true);
		this.putOrChangeVisbility(alignment, element, visibility);
	}
};
oFF.QResultStructureController.prototype.getResultVisibilityByElementAndAlignment = function(alignment, element)
{
	if (this.isTotalsVisibilityOnDefault() || this.m_visibility.isEmpty())
	{
		var lParentController = this.getParentController();
		if (oFF.notNull(lParentController))
		{
			return lParentController.getResultVisibilityByElement(element);
		}
	}
	if (!this.supportsResultVisibility() || this.m_visibility.isEmpty())
	{
		return oFF.ResultVisibility.HIDDEN;
	}
	var result = null;
	if (alignment === oFF.ResultAlignment.TOPBOTTOM)
	{
		var topTriplet = this.m_visibility.getByKey(oFF.QVisibilityTriplet.getVisibilityKey(oFF.ResultAlignment.TOP, element));
		var bottomTriplet = this.m_visibility.getByKey(oFF.QVisibilityTriplet.getVisibilityKey(oFF.ResultAlignment.BOTTOM, element));
		if (oFF.notNull(topTriplet) && oFF.notNull(bottomTriplet) && topTriplet.getVisibility() === bottomTriplet.getVisibility())
		{
			result = topTriplet.getVisibility();
		}
	}
	else
	{
		var key = oFF.QVisibilityTriplet.getVisibilityKey(alignment, element);
		var triplet = this.m_visibility.getByKey(key);
		if (oFF.notNull(triplet))
		{
			result = triplet.getVisibility();
		}
	}
	if (oFF.isNull(result))
	{
		return oFF.ResultVisibility.HIDDEN;
	}
	return result;
};
oFF.QResultStructureController.prototype.getResultVisibilitySettings = function()
{
	if (this.m_visibility.isEmpty())
	{
		return null;
	}
	return oFF.XIteratorWrapper.create(this.m_visibility.getIterator());
};
oFF.QResultStructureController.prototype.clearResultVisibilitySettings = function()
{
	if (this.m_visibility.hasElements())
	{
		this.m_visibility.clear();
		this.notifyNodeChanged();
	}
};
oFF.QResultStructureController.prototype.getTotalsStructure = function()
{
	var resultAlignment = this.getResultAlignment();
	if (resultAlignment === oFF.ResultAlignment.STRUCTURE)
	{
		oFF.XObjectExt.assertNotNullExt(this.m_structure, "Structure must be available at this point in time");
		return this.m_structure;
	}
	var list = oFF.XList.create();
	if (resultAlignment === oFF.ResultAlignment.TOP || resultAlignment === oFF.ResultAlignment.TOPBOTTOM)
	{
		var topVisibility = this.getResultVisibilityByElementAndAlignment(oFF.ResultAlignment.TOP, oFF.ResultStructureElement.TOTAL);
		list.add(oFF.QResultStructureItem.createResultStructureItem(this.getContext(), this, oFF.ResultStructureElement.TOTAL, topVisibility));
		topVisibility = this.getResultVisibilityByElementAndAlignment(oFF.ResultAlignment.TOP, oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS);
		list.add(oFF.QResultStructureItem.createResultStructureItem(this.getContext(), this, oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS, topVisibility));
		topVisibility = this.getResultVisibilityByElementAndAlignment(oFF.ResultAlignment.TOP, oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS);
		list.add(oFF.QResultStructureItem.createResultStructureItem(this.getContext(), this, oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS, topVisibility));
	}
	list.add(oFF.QResultStructureItem.createResultStructureItem(this.getContext(), this, oFF.ResultStructureElement.MEMBERS, oFF.ResultVisibility.VISIBLE));
	if (resultAlignment === oFF.ResultAlignment.BOTTOM || resultAlignment === oFF.ResultAlignment.TOPBOTTOM)
	{
		var bottomVisibility = this.getResultVisibilityByElementAndAlignment(oFF.ResultAlignment.BOTTOM, oFF.ResultStructureElement.TOTAL);
		list.add(oFF.QResultStructureItem.createResultStructureItem(this.getContext(), this, oFF.ResultStructureElement.TOTAL, bottomVisibility));
		bottomVisibility = this.getResultVisibilityByElementAndAlignment(oFF.ResultAlignment.BOTTOM, oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS);
		list.add(oFF.QResultStructureItem.createResultStructureItem(this.getContext(), this, oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS, bottomVisibility));
		bottomVisibility = this.getResultVisibilityByElementAndAlignment(oFF.ResultAlignment.BOTTOM, oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS);
		list.add(oFF.QResultStructureItem.createResultStructureItem(this.getContext(), this, oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS, bottomVisibility));
	}
	return list;
};
oFF.QResultStructureController.prototype.getAdvancedResultStructure = function()
{
	if (!this.supportsAdvancedResultStructure())
	{
		oFF.noSupport();
	}
	if (oFF.isNull(this.m_structure))
	{
		this.m_structure = oFF.QResultStructure.createResultStructure(this.getContext(), this);
		var lResultAlignment = this.getResultAlignment();
		this.m_structure.applyInitialDefaultResultStructure(lResultAlignment);
	}
	return this.m_structure;
};

oFF.QComplexSorting = function() {};
oFF.QComplexSorting.prototype = new oFF.QComplexAndDataCellSorting();
oFF.QComplexSorting.prototype._ff_c = "QComplexSorting";

oFF.QComplexSorting.create = function(parentNode, path)
{
	var sorting = new oFF.QComplexSorting();
	sorting.setupSorting(parentNode, path);
	return sorting;
};
oFF.QComplexSorting.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.COMPLEX_SORTING;
};
oFF.QComplexSorting.prototype.getSortingType = function()
{
	return oFF.SortType.COMPLEX;
};

oFF.QDataCellSorting = function() {};
oFF.QDataCellSorting.prototype = new oFF.QComplexAndDataCellSorting();
oFF.QDataCellSorting.prototype._ff_c = "QDataCellSorting";

oFF.QDataCellSorting.create = function(parentNode, path)
{
	var sorting = new oFF.QDataCellSorting();
	sorting.setupSorting(parentNode, path);
	return sorting;
};
oFF.QDataCellSorting.prototype.m_dimension = null;
oFF.QDataCellSorting.prototype.copyFromInternal = function(other, flags)
{
	oFF.QComplexAndDataCellSorting.prototype.copyFromInternal.call( this , other, flags);
	var originDataCellSorting = other;
	var queryModel = this.getQueryModel();
	if (oFF.notNull(originDataCellSorting.m_dimension))
	{
		this.setDimension(queryModel.getDimensionByNameFromExistingMetadata(originDataCellSorting.getDimension().getName()));
	}
};
oFF.QDataCellSorting.prototype.releaseObject = function()
{
	this.m_dimension = oFF.XObjectExt.release(this.m_dimension);
	oFF.QComplexAndDataCellSorting.prototype.releaseObject.call( this );
};
oFF.QDataCellSorting.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.DATA_CELL_SORTING;
};
oFF.QDataCellSorting.prototype.getSortingType = function()
{
	return oFF.SortType.DATA_CELL_VALUE;
};
oFF.QDataCellSorting.prototype.supportsDimension = function()
{
	return true;
};
oFF.QDataCellSorting.prototype.getDimension = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_dimension);
};
oFF.QDataCellSorting.prototype.setDimension = function(dimension)
{
	this.m_dimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
};

oFF.QModelComponentList = function() {};
oFF.QModelComponentList.prototype = new oFF.QModelComponent();
oFF.QModelComponentList.prototype._ff_c = "QModelComponentList";

oFF.QModelComponentList.createModelComponentList = function(context, parentNode, hasChildOwnership, name)
{
	var object = new oFF.QModelComponentList();
	object.setupOlapList(context, parentNode, hasChildOwnership, name, oFF.XCollectionFactory.LOOKUP_LIST, false);
	return object;
};
oFF.QModelComponentList.createModelComponentWithNameList = function(context, parentNode, hasDynamicLinking, name, useKeyRefList)
{
	var object = new oFF.QModelComponentList();
	object.setupOlapList(context, parentNode, hasDynamicLinking, name, oFF.XCollectionFactory.LINKED_MAP, useKeyRefList);
	return object;
};
oFF.QModelComponentList.prototype.m_list = null;
oFF.QModelComponentList.prototype.m_keyRefList = null;
oFF.QModelComponentList.prototype.m_hasChildOwnership = false;
oFF.QModelComponentList.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponent.prototype.copyFromInternal.call( this , other, flags);
	var theOrigin = other;
	this.m_hasChildOwnership = theOrigin.m_hasChildOwnership;
};
oFF.QModelComponentList.prototype.setupOlapList = function(context, parentNode, hasChildOwnership, name, type, useKeyRefList)
{
	this.setupModelComponentWithName(context, parentNode, name);
	this.m_hasChildOwnership = hasChildOwnership;
	if (useKeyRefList)
	{
		this.m_keyRefList = oFF.QKeyRefList.create(context.getKeyRefStorage(), type);
		this.m_list = this.m_keyRefList;
	}
	else
	{
		this.m_list = oFF.XCollectionFactory.createNamedList(type);
	}
};
oFF.QModelComponentList.prototype.releaseObject = function()
{
	if (oFF.notNull(this.m_list))
	{
		if (this.m_hasChildOwnership)
		{
			oFF.XCollectionUtils.releaseEntriesFromCollection(this.m_list);
		}
		oFF.XObjectExt.release(this.m_list);
		this.m_list = null;
	}
	this.m_keyRefList = null;
	oFF.QModelComponent.prototype.releaseObject.call( this );
};
oFF.QModelComponentList.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.COMPONENT_LIST;
};
oFF.QModelComponentList.prototype._setAsParent = function(element, parent)
{
	if (this.m_hasChildOwnership)
	{
		element.setParent(parent);
	}
};
oFF.QModelComponentList.prototype.addInternal = function(element)
{
	if (oFF.notNull(element))
	{
		this._setAsParent(element, this);
		this.m_list.add(element);
	}
};
oFF.QModelComponentList.prototype.add = function(element)
{
	if (oFF.notNull(element))
	{
		this.addInternal(element);
		this.notifyNodeChanged();
	}
};
oFF.QModelComponentList.prototype.addAll = function(other)
{
	if (oFF.XCollectionUtils.hasElements(other) && other !== this)
	{
		var theList = other.getValuesAsReadOnlyList();
		var len = theList.size();
		for (var i = 0; i < len; i++)
		{
			this.addInternal(theList.get(i));
		}
		this.notifyNodeChanged();
	}
};
oFF.QModelComponentList.prototype.set = function(index, element)
{
	if (oFF.isNull(element))
	{
		this.removeAt(index);
	}
	else
	{
		var old = this.m_list.get(index);
		this.m_list.set(index, element);
		if (this.m_hasChildOwnership)
		{
			element.setParent(this);
			old.setParent(null);
		}
	}
	this.notifyNodeChanged();
};
oFF.QModelComponentList.prototype.insertInternal = function(index, element)
{
	if (oFF.notNull(element))
	{
		this._setAsParent(element, this);
		this.m_list.insert(index, element);
	}
};
oFF.QModelComponentList.prototype.insert = function(index, element)
{
	this.insertInternal(index, element);
	this.notifyNodeChanged();
};
oFF.QModelComponentList.prototype.removeAt = function(index)
{
	var old = this.m_list.removeAt(index);
	if (oFF.notNull(old))
	{
		this._setAsParent(old, null);
		this.notifyNodeChanged();
	}
	return old;
};
oFF.QModelComponentList.prototype.removeInternal = function(element)
{
	this._setAsParent(element, null);
	this.m_list.removeElement(element);
};
oFF.QModelComponentList.prototype.removeElement = function(element)
{
	if (oFF.notNull(element))
	{
		this.removeInternal(element);
		this.notifyNodeChanged();
	}
	return element;
};
oFF.QModelComponentList.prototype.clear = function()
{
	var len = this.m_list.size();
	if (len > 0)
	{
		if (this.m_hasChildOwnership)
		{
			for (var i = 0; i < len; i++)
			{
				var object = this.m_list.get(i);
				var nodeContext = object;
				nodeContext.setParent(null);
			}
		}
		this.m_list.clear();
		this.notifyNodeChanged();
	}
};
oFF.QModelComponentList.prototype.setContext = function(context)
{
	oFF.QModelComponent.prototype.setContext.call( this , context);
	if (this.m_hasChildOwnership)
	{
		var size = this.m_list.size();
		for (var i = 0; i < size; i++)
		{
			var element = this.m_list.get(i);
			element.setContext(context);
		}
	}
};
oFF.QModelComponentList.prototype.moveElement = function(fromIndex, toIndex)
{
	if (fromIndex !== toIndex)
	{
		this.m_list.moveElement(fromIndex, toIndex);
		this.notifyNodeChanged();
	}
};
oFF.QModelComponentList.prototype.sortByComparator = function(comparator)
{
	this.m_list.sortByComparator(comparator);
	this.notifyNodeChanged();
};
oFF.QModelComponentList.prototype.sortByDirection = function(sortDirection)
{
	this.m_list.sortByDirection(sortDirection);
	this.notifyNodeChanged();
};
oFF.QModelComponentList.prototype.get = function(index)
{
	return this.m_list.get(index);
};
oFF.QModelComponentList.prototype.getIndex = function(element)
{
	return this.m_list.getIndex(element);
};
oFF.QModelComponentList.prototype.size = function()
{
	return this.m_list.size();
};
oFF.QModelComponentList.prototype.isEmpty = function()
{
	return this.m_list.isEmpty();
};
oFF.QModelComponentList.prototype.hasElements = function()
{
	return this.m_list.hasElements();
};
oFF.QModelComponentList.prototype.getIterator = function()
{
	return this.m_list.getIterator();
};
oFF.QModelComponentList.prototype.getValuesAsReadOnlyList = function()
{
	return this.m_list.getValuesAsReadOnlyList();
};
oFF.QModelComponentList.prototype.contains = function(element)
{
	return this.m_list.contains(element);
};
oFF.QModelComponentList.prototype.createListCopy = function()
{
	return this.m_list.createListCopy();
};
oFF.QModelComponentList.prototype.sublist = function(beginIndex, endIndex)
{
	return this.m_list.sublist(beginIndex, endIndex);
};
oFF.QModelComponentList.prototype.createArrayCopy = function()
{
	return this.m_list.createArrayCopy();
};
oFF.QModelComponentList.prototype.isComponentNode = function()
{
	return true;
};
oFF.QModelComponentList.prototype.getIndexedChildren = function()
{
	return oFF.XUniversalIterator.create(this);
};
oFF.QModelComponentList.prototype.containsKey = function(key)
{
	return this.m_list.containsKey(key);
};
oFF.QModelComponentList.prototype.getByKey = function(key)
{
	return this.m_list.getByKey(key);
};
oFF.QModelComponentList.prototype.getKeysAsReadOnlyListOfString = function()
{
	return this.m_list.getKeysAsReadOnlyListOfString();
};
oFF.QModelComponentList.prototype.getKeysAsIteratorOfString = function()
{
	return this.m_list.getKeysAsIteratorOfString();
};
oFF.QModelComponentList.prototype.insertKeyRef = function(index, keyRef)
{
	this.assertKeyRefInitialized();
	this.m_keyRefList.insertKeyRef(index, keyRef);
	var keyRefStorage = this.getKeyRefStorage();
	if (oFF.notNull(keyRefStorage))
	{
		var component = keyRefStorage.get(keyRef.getStorageName(), keyRef.getStorageGroupName(), keyRef.getStorageObjectName());
		component.addSecondaryParent(this);
	}
	this.notifyNodeChanged();
};
oFF.QModelComponentList.prototype.addKeyRef = function(keyRef)
{
	this.assertKeyRefInitialized();
	this.addKeyRefInternal(keyRef);
	this.notifyNodeChanged();
};
oFF.QModelComponentList.prototype.addKeyRefInternal = function(keyRef)
{
	this.assertKeyRefInitialized();
	this.m_keyRefList.addKeyRef(keyRef);
	var keyRefStorage = this.getKeyRefStorage();
	if (oFF.notNull(keyRefStorage))
	{
		var component = keyRefStorage.get(keyRef.getStorageName(), keyRef.getStorageGroupName(), keyRef.getStorageObjectName());
		component.addSecondaryParent(this);
	}
};
oFF.QModelComponentList.prototype.removeKeyRef = function(keyRef)
{
	this.assertKeyRefInitialized();
	var retValue = this.m_keyRefList.removeKeyRef(keyRef);
	var keyRefStorage = this.getKeyRefStorage();
	if (oFF.notNull(keyRefStorage))
	{
		var component = keyRefStorage.get(keyRef.getStorageName(), keyRef.getStorageGroupName(), keyRef.getStorageObjectName());
		component.removeSecondaryParent(this);
	}
	this.notifyNodeChanged();
	return retValue;
};
oFF.QModelComponentList.prototype.assertKeyRefInitialized = function()
{
	if (oFF.isNull(this.m_keyRefList))
	{
		oFF.noSupport();
	}
};
oFF.QModelComponentList.prototype._notifyNodeChanged = function()
{
	this.notifyNodeChanged();
};
oFF.QModelComponentList.prototype.setHasChildOwnership = function(hasChildOwnership)
{
	this.m_hasChildOwnership = hasChildOwnership;
};

oFF.QFormulaCalculatedDimension = function() {};
oFF.QFormulaCalculatedDimension.prototype = new oFF.QCalculatedDimension();
oFF.QFormulaCalculatedDimension.prototype._ff_c = "QFormulaCalculatedDimension";

oFF.QFormulaCalculatedDimension._createFormulaCalculatedDimension = function(context, calculatedDimensionName)
{
	var dim = new oFF.QFormulaCalculatedDimension();
	dim.setupFormulaCalculatedDimension(context, calculatedDimensionName);
	return dim;
};
oFF.QFormulaCalculatedDimension.createCopyOfFormulaCalculatedDimension = function(preQueryModel, originalCalculatedDimension, addDependenciesToQueryModel, deepCopySharedProperties)
{
	var calculatedDimension;
	var calcDimType = originalCalculatedDimension.getDimensionType();
	if (calcDimType === oFF.DimensionType.FORMULA_CALCULATED_DIMENSION)
	{
		calculatedDimension = oFF.QFactory.createFormulaCalculatedDimension(preQueryModel, originalCalculatedDimension.getName());
		calculatedDimension.copyFormulaCalculatedDimensionAndUpdateQueryModel(originalCalculatedDimension, addDependenciesToQueryModel, deepCopySharedProperties);
	}
	else if (calcDimType === oFF.DimensionType.MEASURE_BASED_FILTER_CALCULATED_DIMENSION)
	{
		calculatedDimension = oFF.QFactory.createFilterMeasureBasedCalculatedDimension(preQueryModel, originalCalculatedDimension.getName());
		calculatedDimension.copyFormulaCalculatedDimensionAndUpdateQueryModel(originalCalculatedDimension, addDependenciesToQueryModel, deepCopySharedProperties);
	}
	else if (calcDimType === oFF.DimensionType.FILTER_ACROSS_MODELS_CALCULATED_DIMENSION)
	{
		calculatedDimension = oFF.QFactory.createFilterAcrossModelsCalculatedDimension(preQueryModel, originalCalculatedDimension.getName());
		calculatedDimension.copyFilterAcrossModelCalculatedDimension(originalCalculatedDimension, addDependenciesToQueryModel);
	}
	else
	{
		throw oFF.XException.createIllegalStateException(oFF.XStringUtils.concatenate2("Unknown calculated dimension type:", oFF.notNull(calcDimType) ? calcDimType.getName() : ""));
	}
	return calculatedDimension;
};
oFF.QFormulaCalculatedDimension.prototype.m_properties = null;
oFF.QFormulaCalculatedDimension.prototype.m_propertiesKeyRef = null;
oFF.QFormulaCalculatedDimension.prototype.m_dependentCustomMembers = null;
oFF.QFormulaCalculatedDimension.prototype.m_dependentCalculatedDimensions = null;
oFF.QFormulaCalculatedDimension.prototype.m_applyExternalFiltersFromParent = false;
oFF.QFormulaCalculatedDimension.prototype.m_currency = null;
oFF.QFormulaCalculatedDimension.prototype.m_disableSpatialExtendedDimensions = false;
oFF.QFormulaCalculatedDimension.prototype.m_additionalFilterContext = null;
oFF.QFormulaCalculatedDimension.prototype.m_parentRootContext = null;
oFF.QFormulaCalculatedDimension.prototype.setupFormulaCalculatedDimension = function(context, calculatedDimensionName)
{
	this.assertCalcDimSupport(context);
	this.setName(calculatedDimensionName);
	this.setupDimension(context, null);
	this._setupFormulaCalculatedDimension(context);
};
oFF.QFormulaCalculatedDimension.prototype._setupFormulaCalculatedDimension = function(context)
{
	this.m_properties = oFF.QFormulaCalcDimProperties._createFormulaCalcDimProperties(context, this);
	this.m_dependentCustomMembers = oFF.XList.create();
	this.m_dependentCalculatedDimensions = oFF.XList.create();
	this.m_applyExternalFiltersFromParent = false;
	oFF.QCalculatedDimension.prototype.setupCalculatedDimension.call( this , context);
	this.setDimensionType(oFF.DimensionType.FORMULA_CALCULATED_DIMENSION);
	this.setJoinType(oFF.JoinType.LEFT_OUTER);
	this.m_additionalFilterContext = oFF.QFactory.createFilterExpression(context, this.m_properties);
	this.m_parentRootContext = context;
};
oFF.QFormulaCalculatedDimension.prototype.reset = function(skipClearProperties)
{
	if (!skipClearProperties)
	{
		this.getProperties().reset();
	}
	this.m_dependentCustomMembers.clear();
	this.m_dependentCalculatedDimensions.clear();
	this.m_applyExternalFiltersFromParent = false;
	this.m_currency = null;
	this.getFieldContainerBase().clearAllFields();
	if (this.m_additionalFilterContext.isCartesianProduct())
	{
		this.m_additionalFilterContext.getCartesianProduct().clear();
	}
	else if (this.m_additionalFilterContext.isComplexFilter())
	{
		this.m_additionalFilterContext.setComplexRoot(null);
	}
	this.m_parentRootContext = null;
};
oFF.QFormulaCalculatedDimension.prototype.getProperties = function()
{
	if (oFF.notNull(this.m_propertiesKeyRef))
	{
		var clientQueryObjectManager = this.getOlapEnv().getClientQueryObjectManager();
		var properties = clientQueryObjectManager.getClientQueryObjectByKeyRef(this.m_propertiesKeyRef);
		if (oFF.notNull(properties))
		{
			return properties;
		}
	}
	return this.m_properties;
};
oFF.QFormulaCalculatedDimension.prototype.setPropertiesKeyRef = function(keyRef)
{
	this.m_propertiesKeyRef = keyRef;
	var clientQueryObjectManager = this.getOlapEnv().getClientQueryObjectManager();
	var properties = clientQueryObjectManager.getClientQueryObjectByKeyRef(this.m_propertiesKeyRef);
	if (oFF.notNull(properties))
	{
		properties.addSecondaryParent(this);
	}
};
oFF.QFormulaCalculatedDimension.prototype.getText = function()
{
	return this.getProperties().getText() !== null ? this.getProperties().getText() : oFF.QCalculatedDimension.prototype.getText.call( this );
};
oFF.QFormulaCalculatedDimension.prototype.copyFromInternal = function(other, flags)
{
	this.copyFormulaCalculatedDimensionAndUpdateQueryModel(other, false, false);
};
oFF.QFormulaCalculatedDimension.prototype.copyFormulaCalculatedDimensionAndUpdateQueryModel = function(other, addDependenciesToQueryModel, deepCopySharedProperties)
{
	oFF.QCalculatedDimension.prototype.copyCalculatedDimension.call( this , other);
	if (oFF.notNull(other.m_propertiesKeyRef))
	{
		if (deepCopySharedProperties)
		{
			var clientQueryObjectManager = this.getOlapEnv().getClientQueryObjectManager();
			var properties = clientQueryObjectManager.getClientQueryObjectByKeyRef(other.m_propertiesKeyRef);
			if (oFF.notNull(properties))
			{
				this.m_properties.copyFrom(properties, null);
			}
			else
			{
				this.m_properties.copyFrom(other.m_properties, null);
			}
		}
		else
		{
			this.m_propertiesKeyRef = other.m_propertiesKeyRef;
		}
	}
	else
	{
		this.m_properties.copyFrom(other.m_properties, null);
	}
	var dependentCalculatedDimensionsIter = other.m_dependentCalculatedDimensions.getIterator();
	var queryModel = this.getQueryModel();
	while (dependentCalculatedDimensionsIter.hasNext())
	{
		var dependentCalculatedDimension = dependentCalculatedDimensionsIter.next();
		var copyFormulaCalculatedDimension = queryModel.getDimensionByName(dependentCalculatedDimension.getName());
		if (oFF.isNull(copyFormulaCalculatedDimension))
		{
			copyFormulaCalculatedDimension = oFF.QFormulaCalculatedDimension.createCopyOfFormulaCalculatedDimension(queryModel, dependentCalculatedDimension, false, false);
			if (addDependenciesToQueryModel)
			{
				queryModel.addDimension(copyFormulaCalculatedDimension);
			}
		}
		else
		{
			copyFormulaCalculatedDimension.copyFrom(dependentCalculatedDimension, null);
		}
		this.m_dependentCalculatedDimensions.add(copyFormulaCalculatedDimension);
	}
	var dependentCustomMembersIter = other.m_dependentCustomMembers.getIterator();
	while (dependentCustomMembersIter.hasNext())
	{
		var dependentCustomMember = dependentCustomMembersIter.next();
		var originalDimension = dependentCustomMember.getDimension();
		var measureDimension = queryModel.getDimensionByName(originalDimension.getName());
		var newStructureMember;
		var existingMember;
		if (dependentCustomMember.isModelDefinedMember())
		{
			existingMember = measureDimension.getStructureMember(dependentCustomMember.getName());
			if (oFF.isNull(existingMember))
			{
				newStructureMember = measureDimension.getKeyRefStorage().get(dependentCustomMember.getStorageName(), dependentCustomMember.getStorageGroupName(), dependentCustomMember.getStorageObjectName());
				if (oFF.notNull(newStructureMember))
				{
					this.addDependentCustomMember(newStructureMember);
				}
			}
			else
			{
				this.addDependentCustomMember(existingMember);
				continue;
			}
		}
		else
		{
			newStructureMember = this.addNewDependentMeasure(dependentCustomMember.getName(), dependentCustomMember.getMemberType(), measureDimension);
			oFF.QStructureMember.copyMeasure(newStructureMember, dependentCustomMember);
			existingMember = measureDimension.getStructureMemberByAliasOrMember(dependentCustomMember.getAliasOrMemberName());
			if (oFF.notNull(existingMember))
			{
				measureDimension.removeMeasure(existingMember.getName());
			}
		}
		if (addDependenciesToQueryModel && measureDimension.getStructureMemberByAliasOrMember(dependentCustomMember.getAliasOrMemberName()) === null)
		{
			measureDimension.addMeasure(newStructureMember);
		}
	}
	this.m_applyExternalFiltersFromParent = other.m_applyExternalFiltersFromParent;
	this.m_currency = other.m_currency;
	this.m_disableSpatialExtendedDimensions = other.m_disableSpatialExtendedDimensions;
	this.m_additionalFilterContext.copyFrom(other.m_additionalFilterContext, null);
	this.m_parentRootContext = other.m_parentRootContext;
};
oFF.QFormulaCalculatedDimension.prototype.releaseObject = function()
{
	if (oFF.notNull(this.m_propertiesKeyRef))
	{
		this.getResultSetFields().clear();
		this.getSelectorFields().clear();
	}
	this.m_properties = oFF.XObjectExt.release(this.m_properties);
	this.m_dependentCustomMembers = oFF.XObjectExt.release(this.m_dependentCustomMembers);
	this.m_dependentCalculatedDimensions = oFF.XObjectExt.release(this.m_dependentCalculatedDimensions);
	this.m_currency = null;
	this.m_propertiesKeyRef = null;
	this.m_disableSpatialExtendedDimensions = false;
	this.m_additionalFilterContext = oFF.XObjectExt.release(this.m_additionalFilterContext);
	this.m_parentRootContext = null;
	oFF.QCalculatedDimension.prototype.releaseObject.call( this );
};
oFF.QFormulaCalculatedDimension.prototype.getFilterContext = function()
{
	return this.getProperties().getFilterContext();
};
oFF.QFormulaCalculatedDimension.prototype.getAdditionalFilterContext = function()
{
	return this.m_additionalFilterContext;
};
oFF.QFormulaCalculatedDimension.prototype.getAggregationFieldNames = function()
{
	return this.getProperties().getAggregationFieldNames();
};
oFF.QFormulaCalculatedDimension.prototype.addAggregationFieldName = function(fieldName)
{
	this.getProperties().addAggregationFieldName(fieldName);
};
oFF.QFormulaCalculatedDimension.prototype.removeAggregationFieldName = function(fieldName)
{
	this.getProperties().removeAggregationFieldName(fieldName);
};
oFF.QFormulaCalculatedDimension.prototype.getFieldMappings = function()
{
	var fieldMappings = oFF.XList.create();
	var attributeNames = this.getFieldIterator();
	while (attributeNames.hasNext())
	{
		var calculatedAttribute = attributeNames.next();
		fieldMappings.add(oFF.QFieldNamePair.create(calculatedAttribute.getName(), calculatedAttribute.getName()));
	}
	return fieldMappings;
};
oFF.QFormulaCalculatedDimension.prototype.addNewFormulaCalcField = function(presentationType, name)
{
	var newField = this.getProperties().addNewFormulaCalcField(presentationType, name);
	this.getFieldContainerBase().addField(newField);
	this.addFieldToParent(newField);
	return newField;
};
oFF.QFormulaCalculatedDimension.prototype.setPreQueryName = oFF.noSupport;
oFF.QFormulaCalculatedDimension.prototype.getPreQueryName = function()
{
	return this.getUniquePreQueryCacheKey();
};
oFF.QFormulaCalculatedDimension.prototype.getJoinFields = function()
{
	var uniqueJoinFieldNames = oFF.XHashSetOfString.create();
	var joinFields = oFF.XList.create();
	if (this.getAggregationFieldNames().size() === 0)
	{
		var calcDimKeyField = this.getFieldByPresentationType(oFF.PresentationType.KEY);
		if (oFF.notNull(calcDimKeyField))
		{
			this.addFormulaFieldToJoinFields(uniqueJoinFieldNames, joinFields, calcDimKeyField);
		}
		else
		{
			var calcDimFieldsIter = this.getFieldIterator();
			while (calcDimFieldsIter.hasNext())
			{
				var calcDimField = calcDimFieldsIter.next();
				this.addFormulaFieldToJoinFields(uniqueJoinFieldNames, joinFields, calcDimField);
			}
		}
		var dependentCalcDimIter = this.m_dependentCalculatedDimensions.getIterator();
		while (dependentCalcDimIter.hasNext())
		{
			var dependentCalcDim = dependentCalcDimIter.next();
			var dependentCalcDimJoinFields = dependentCalcDim.getJoinFields();
			var dependentCalcDimJoinFieldsIter = dependentCalcDimJoinFields.getIterator();
			while (dependentCalcDimJoinFieldsIter.hasNext())
			{
				var fieldNamePair = dependentCalcDimJoinFieldsIter.next();
				if (!uniqueJoinFieldNames.contains(fieldNamePair.getLocaleFieldName()))
				{
					joinFields.add(fieldNamePair);
					uniqueJoinFieldNames.add(fieldNamePair.getLocaleFieldName());
				}
			}
		}
	}
	var aggregationFieldNames = this.getAggregationFieldNames().getIterator();
	while (aggregationFieldNames.hasNext())
	{
		var aggregationFieldName = aggregationFieldNames.next();
		var aggregationField = this.getQueryModel().getFieldByNameOrAlias(aggregationFieldName);
		if (uniqueJoinFieldNames.contains(aggregationFieldName))
		{
			continue;
		}
		uniqueJoinFieldNames.add(aggregationFieldName);
		if (oFF.notNull(aggregationField))
		{
			var aggregationDimension = aggregationField.getDimension();
			if (oFF.notNull(aggregationDimension) && !aggregationDimension.getDimensionType().isTypeOf(oFF.DimensionType.CALCULATED_DIMENSION))
			{
				if (aggregationField.isKeyField())
				{
					joinFields.add(oFF.QFieldNamePair.create(aggregationDimension.getName(), aggregationDimension.getFlatKeyField().getName()));
				}
				else
				{
					joinFields.add(oFF.QFieldNamePair.create(aggregationDimension.getName(), aggregationDimension.getName()));
				}
			}
		}
	}
	return joinFields;
};
oFF.QFormulaCalculatedDimension.prototype.addFormulaFieldToJoinFields = function(uniqueJoinFieldNames, joinFields, calcDimField)
{
	var formulaItemInfo = oFF.FormulaItemUtils.getFieldNamesFromFormula(calcDimField.getFormulaItem());
	var formulaFieldNames = formulaItemInfo.getAttributeNames();
	var formulaFieldIterator = formulaFieldNames.getIterator();
	while (formulaFieldIterator.hasNext())
	{
		var formulaField = formulaFieldIterator.next();
		var field = this.getQueryModel().getFieldByNameOrAlias(formulaField);
		if (!uniqueJoinFieldNames.contains(formulaField))
		{
			uniqueJoinFieldNames.add(formulaField);
			if (oFF.notNull(field))
			{
				var formulaFieldDimension = field.getDimension();
				if (oFF.notNull(formulaFieldDimension) && formulaFieldDimension.getDimensionType() === oFF.DimensionType.DIMENSION)
				{
					if (field.isKeyField())
					{
						joinFields.add(oFF.QFieldNamePair.create(field.getDimension().getName(), formulaField));
					}
					else
					{
						var localeFieldName = field.getAliasName();
						if (oFF.XStringUtils.isNullOrEmpty(localeFieldName))
						{
							localeFieldName = field.getDimension().getName();
						}
						joinFields.add(oFF.QFieldNamePair.create(localeFieldName, formulaField));
					}
				}
			}
		}
	}
};
oFF.QFormulaCalculatedDimension.prototype.addJoinFieldByString = oFF.noSupport;
oFF.QFormulaCalculatedDimension.prototype.addJoinField = oFF.noSupport;
oFF.QFormulaCalculatedDimension.prototype.clearJoinFields = oFF.noSupport;
oFF.QFormulaCalculatedDimension.prototype.removeJoinFieldAt = oFF.noSupport;
oFF.QFormulaCalculatedDimension.prototype.addFieldMappingByString = oFF.noSupport;
oFF.QFormulaCalculatedDimension.prototype.addFieldMapping = oFF.noSupport;
oFF.QFormulaCalculatedDimension.prototype.clearFieldMappings = oFF.noSupport;
oFF.QFormulaCalculatedDimension.prototype.removeFieldMappingAt = oFF.noSupport;
oFF.QFormulaCalculatedDimension.prototype.addDependentCustomMember = function(customMember)
{
	this.m_dependentCustomMembers.add(customMember);
};
oFF.QFormulaCalculatedDimension.prototype.getDependentCustomMembers = function()
{
	return this.m_dependentCustomMembers;
};
oFF.QFormulaCalculatedDimension.prototype.removeDependentCustomMemberByName = function(memberName)
{
	for (var i = this.m_dependentCustomMembers.size() - 1; i >= 0; i--)
	{
		if (oFF.XString.isEqual(this.m_dependentCustomMembers.get(i).getName(), memberName))
		{
			this.m_dependentCustomMembers.removeAt(i);
		}
	}
};
oFF.QFormulaCalculatedDimension.prototype.addDependentCalculatedDimension = function(calculatedDimension)
{
	var dependentCalculatedDimensionsIter = this.m_dependentCalculatedDimensions.getIterator();
	var dependentCalcDimExists = false;
	while (dependentCalculatedDimensionsIter.hasNext())
	{
		var dependentCalculatedDimension = dependentCalculatedDimensionsIter.next();
		if (oFF.XString.isEqual(dependentCalculatedDimension.getName(), calculatedDimension.getName()))
		{
			dependentCalcDimExists = true;
			break;
		}
	}
	if (!dependentCalcDimExists)
	{
		this.m_dependentCalculatedDimensions.add(calculatedDimension);
	}
};
oFF.QFormulaCalculatedDimension.prototype.getDependentCalculatedDimensions = function()
{
	return this.m_dependentCalculatedDimensions;
};
oFF.QFormulaCalculatedDimension.prototype.removeDependentCalculatedDimensionByName = function(dimensionName)
{
	for (var i = this.m_dependentCalculatedDimensions.size() - 1; i >= 0; i--)
	{
		if (oFF.XString.isEqual(this.m_dependentCalculatedDimensions.get(i).getName(), dimensionName))
		{
			this.m_dependentCalculatedDimensions.removeAt(i);
		}
	}
};
oFF.QFormulaCalculatedDimension.prototype.clearDependentCalculatedDimensions = function()
{
	oFF.XCollectionUtils.releaseEntriesFromCollection(this.m_dependentCalculatedDimensions);
	this.m_dependentCalculatedDimensions.clear();
};
oFF.QFormulaCalculatedDimension.prototype.clearDependentCustomMembers = function()
{
	this.m_dependentCustomMembers.clear();
};
oFF.QFormulaCalculatedDimension.prototype.removeFormulaCalcFieldByName = function(name)
{
	this.getFieldContainerBase().removeFieldByName(name);
	this.getProperties().removeFormulaCalcFieldByName(name);
};
oFF.QFormulaCalculatedDimension.prototype.addNewDependentMeasure = function(name, memberType, measureDimension)
{
	var newMeasure = oFF.QStructureMember.createMeasure(memberType, this.getContext(), measureDimension);
	if (measureDimension.getDimensionType() === oFF.DimensionType.ACCOUNT)
	{
		newMeasure.setAliasName(name);
	}
	else
	{
		newMeasure.setName(name);
	}
	this.m_dependentCustomMembers.add(newMeasure);
	return newMeasure;
};
oFF.QFormulaCalculatedDimension.prototype.addDependencies = function(context, messageManager)
{
	var fieldIterator = this.getFieldIterator();
	var dependentAttributeNames = oFF.XHashSetOfString.create();
	while (fieldIterator.hasNext())
	{
		var fieldCalcDim = fieldIterator.next();
		var userDefinedMeasure = fieldCalcDim.getCrossCalculationMeasure();
		if (oFF.notNull(userDefinedMeasure))
		{
			this.addDependentMeasuresInternal(userDefinedMeasure, context, true);
		}
		var formulaItem = fieldCalcDim.getFormulaItem();
		var formulaItemInfo = oFF.FormulaItemUtils.getFieldNamesFromFormula(formulaItem);
		var memberNames = formulaItemInfo.getMemberNames();
		if (oFF.notNull(memberNames))
		{
			var memberNamesIter = memberNames.getIterator();
			while (memberNamesIter.hasNext())
			{
				var memberName = memberNamesIter.next();
				this.addDependentMeasuresInternal(memberName, context, false);
			}
		}
		dependentAttributeNames.addAll(formulaItemInfo.getAttributeNames());
	}
	var dependentMeasuresIter = this.m_dependentCustomMembers.getIterator();
	while (dependentMeasuresIter.hasNext())
	{
		var dependentMeasure = dependentMeasuresIter.next();
		dependentAttributeNames.addAll(dependentMeasure.getTopLevelDependentFieldNames(context));
	}
	var filterContext = this.getFilterContext();
	if (filterContext.isComplexFilter())
	{
		dependentAttributeNames.addAll(oFF.QFilterUtil.getFieldNamesFromFilter(filterContext.getComplexRoot()));
	}
	else
	{
		dependentAttributeNames.addAll(oFF.QFilterUtil.getFieldNamesFromFilter(filterContext.getCartesianProduct()));
	}
	var additionalFilterContext = this.getAdditionalFilterContext();
	dependentAttributeNames.addAll(oFF.QFilterUtil.getFieldNamesFromFilter(additionalFilterContext.getFilterRootElement()));
	var attributeNamesIter = dependentAttributeNames.getIterator();
	while (attributeNamesIter.hasNext())
	{
		var attributeName = attributeNamesIter.next();
		this.addDependentAttributesInternal(attributeName, context, messageManager);
	}
};
oFF.QFormulaCalculatedDimension.prototype.addDependentMeasuresInternal = function(memberName, context, isSecondaryStructure)
{
	var clientQueryObjectManager = context.getOlapEnv().getClientQueryObjectManager();
	var structureMember;
	if (isSecondaryStructure)
	{
		structureMember = context.getQueryModel().getSecondaryCalculationDimension().getStructureMember(memberName);
	}
	else
	{
		structureMember = context.getQueryModel().getPrimaryCalculationDimension().getStructureMember(memberName);
	}
	if (oFF.notNull(structureMember) && !structureMember.getMemberType().isCustomMember())
	{
		return;
	}
	for (var i = 0; i < this.m_dependentCustomMembers.size(); i++)
	{
		if (oFF.XString.isEqual(this.m_dependentCustomMembers.get(i).getAliasOrMemberName(), memberName))
		{
			return;
		}
	}
	if (oFF.isNull(structureMember))
	{
		structureMember = clientQueryObjectManager.getStructuredMember(memberName, this.m_propertiesKeyRef.getStorageName(), !isSecondaryStructure);
	}
	if (oFF.notNull(structureMember))
	{
		this.addDependentCustomMember(structureMember);
		var nestedDependentMemberNames = structureMember.getNestedDependentMemberNames(context, null, false);
		if (oFF.notNull(nestedDependentMemberNames))
		{
			var nestedDependentMemberNamesIter = nestedDependentMemberNames.getIterator();
			while (nestedDependentMemberNamesIter.hasNext())
			{
				var nestedDependentMemberName = nestedDependentMemberNamesIter.next();
				this.addDependentMeasuresInternal(nestedDependentMemberName, context, isSecondaryStructure);
			}
		}
	}
};
oFF.QFormulaCalculatedDimension.prototype.addDependentAttributesInternal = function(attributeName, context, messageManager)
{
	var field = context.getQueryModel().getFieldByNameOrAlias(attributeName);
	if (oFF.isNull(field) || field.getDimension().getDimensionType().isTypeOf(oFF.DimensionType.CALCULATED_DIMENSION))
	{
		var properties = this.getOlapEnv().getClientQueryObjectManager().getFormulaCalcDimPropertiesByFieldName(attributeName, this.m_propertiesKeyRef.getStorageName());
		if (oFF.notNull(properties))
		{
			var newDependentCalcDim = oFF.QFactory.createFormulaCalculatedDimension(context.getQueryModel(), properties.getName());
			newDependentCalcDim.setPropertiesKeyRef(properties);
			newDependentCalcDim.addDependencies(context, messageManager);
			this.addDependentCalculatedDimension(newDependentCalcDim);
		}
	}
};
oFF.QFormulaCalculatedDimension.prototype.generateTransientObjects = function(context, messageManager)
{
	var olapEnv = this.getOlapEnv();
	var preQuery = olapEnv.getPrequery(this.getOlapEnvPreQueryCacheKey(context));
	if (oFF.isNull(preQuery))
	{
		if (oFF.notNull(this.m_propertiesKeyRef) && this.m_dependentCalculatedDimensions.size() === 0 && this.m_dependentCustomMembers.size() === 0)
		{
			this.getTagging().put(oFF.QStateConstants.TAG_HAS_TRANSIENT_DEPS, "");
			this.addDependencies(context, messageManager);
		}
	}
	var connectionPool = context.getApplication().getConnectionPool();
	var systemName = context.getDataSource().getSystemName();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(systemName))
	{
		var batchRequestManager = connectionPool.getConnection(systemName).getBatchRequestManager();
		if (oFF.notNull(batchRequestManager))
		{
			if (batchRequestManager.containsPreQueryName(this.getPreQueryName()))
			{
				return;
			}
		}
	}
	if (oFF.isNull(preQuery))
	{
		preQuery = oFF.CalculatedDimensionPrequeryBuilder.buildCalculatedDimensionPreQuery(context, this);
		olapEnv.addPrequery(this.getOlapEnvPreQueryCacheKey(context), preQuery);
	}
	if (context.getQueryModel().getPreQueryByName(this.getPreQueryName()) === null)
	{
		context.getQueryModel().addPreQueryWithName(preQuery, this.getPreQueryName());
	}
};
oFF.QFormulaCalculatedDimension.prototype.getUniquePreQueryCacheKey = function()
{
	var context = this.getParentRootContext();
	var cacheKey = this.getName();
	if (oFF.isNull(context))
	{
		context = this.getContext();
	}
	var updatedCacheKey = this.generateUniquePreQueryCacheKey(this.getProperties(), context, cacheKey);
	if (oFF.XString.isEqual(updatedCacheKey, cacheKey))
	{
		return updatedCacheKey;
	}
	else
	{
		return oFF.XSha1.createSHA1(updatedCacheKey);
	}
};
oFF.QFormulaCalculatedDimension.prototype.generateUniquePreQueryCacheKey = function(calcDimProperties, context, cacheKey)
{
	var linkedFilters = context.getQueryModel().getFilter().getLinkedFilters();
	var additionalFilterContext = this.getAdditionalFilterContext();
	var updatedCacheKey = cacheKey;
	if (!calcDimProperties.isApplyAdditionalFilterContext())
	{
		var externalFilterKeysList = linkedFilters.getKeysAsReadOnlyListOfString();
		for (var i = 0; i < calcDimProperties.getFilterIdsToApply().size(); i++)
		{
			var externalFilterId = calcDimProperties.getFilterIdsToApply().get(i);
			if (oFF.notNull(externalFilterKeysList) && externalFilterKeysList.size() > 0)
			{
				for (var j = 0; j < externalFilterKeysList.size(); j++)
				{
					var filterKey = externalFilterKeysList.get(j);
					if (oFF.XStringUtils.containsString(filterKey, externalFilterId, false))
					{
						updatedCacheKey = oFF.XStringUtils.concatenate3(updatedCacheKey, "|", externalFilterId);
					}
				}
			}
		}
	}
	else if (additionalFilterContext.getUniqueId() !== null && additionalFilterContext.getFilterRootElement() !== null)
	{
		updatedCacheKey = oFF.XStringUtils.concatenate3(updatedCacheKey, "|", additionalFilterContext.getUniqueId());
	}
	var calcDimDependencies = this.getDependentCalculatedDimensions();
	var calcDimIterator = calcDimDependencies.getIterator();
	while (calcDimIterator.hasNext())
	{
		var depCalcDim = calcDimIterator.next();
		updatedCacheKey = depCalcDim.generateUniquePreQueryCacheKey(depCalcDim.getProperties(), context, updatedCacheKey);
	}
	return updatedCacheKey;
};
oFF.QFormulaCalculatedDimension.prototype.getOlapEnvPreQueryCacheKey = function(context)
{
	return oFF.XStringUtils.concatenate3(this.getPreQueryName(), "|", context.getQueryManager().getInstanceId());
};
oFF.QFormulaCalculatedDimension.prototype.destroyTransientObjects = function(context)
{
	if (context.getQueryModel().getPreQueryByName(this.getPreQueryName()) !== null)
	{
		context.getQueryModel().removePreQueryByName(this.getPreQueryName());
		var olapEnv = this.getOlapEnv();
		var preQuery = olapEnv.removePrequery(this.getOlapEnvPreQueryCacheKey(context));
		var preQueryQueryManager = preQuery.getQueryManager();
		preQueryQueryManager.setActiveResultSetContainer(null);
		oFF.XObjectExt.release(preQueryQueryManager);
	}
	if (this.getTagging().containsKey(oFF.QStateConstants.TAG_HAS_TRANSIENT_DEPS))
	{
		this.clearDependentCalculatedDimensions();
		this.clearDependentCustomMembers();
	}
};
oFF.QFormulaCalculatedDimension.prototype.processValueHelp = function(syncType, listener, customIdentifier)
{
	var messageManager = oFF.MessageManager.createMessageManagerExt(this.getSession());
	this.generateTransientObjects(this.getQueryModel(), messageManager);
	if (messageManager.hasErrors())
	{
		this.destroyTransientObjects(this.getQueryModel());
		throw oFF.XException.createRuntimeException(messageManager.getErrors().get(0).getText());
	}
	var result = oFF.QCalculatedDimension.prototype.processValueHelp.call( this , syncType, listener, customIdentifier);
	this.destroyTransientObjects(this.getQueryModel());
	return result;
};
oFF.QFormulaCalculatedDimension.prototype.setApplyParentExternalFilters = function(applyExtFilters)
{
	this.m_applyExternalFiltersFromParent = applyExtFilters;
};
oFF.QFormulaCalculatedDimension.prototype.isApplyParentExternalFilters = function()
{
	return this.m_applyExternalFiltersFromParent;
};
oFF.QFormulaCalculatedDimension.prototype.getAdditionalAggregationDimensions = function()
{
	return this.getProperties().getAdditionalAggregationDimensions();
};
oFF.QFormulaCalculatedDimension.prototype.addAdditionalAggregationDimension = function(dimensionName, hierarchyName, activateHierarchy)
{
	this.getProperties().addAdditionalAggregationDimension(dimensionName, hierarchyName, activateHierarchy);
};
oFF.QFormulaCalculatedDimension.prototype.removeAdditionalAggregationDimensionByName = function(dimensionName)
{
	this.getProperties().removeAdditionalAggregationDimensionByName(dimensionName);
};
oFF.QFormulaCalculatedDimension.prototype.setCurrency = function(currency)
{
	this.m_currency = currency;
};
oFF.QFormulaCalculatedDimension.prototype.getCurrency = function()
{
	return this.m_currency;
};
oFF.QFormulaCalculatedDimension.prototype.getFields = function()
{
	return this.getProperties().getFormulaCalcFields();
};
oFF.QFormulaCalculatedDimension.prototype.getFieldIterator = function()
{
	return this.getProperties().getFormulaCalcFields().getIterator();
};
oFF.QFormulaCalculatedDimension.prototype.getFieldByName = function(name)
{
	return this.getProperties().getFormulaCalcFields().getFieldByName(name);
};
oFF.QFormulaCalculatedDimension.prototype.getFieldByNameOrAlias = function(name)
{
	return this.getProperties().getFormulaCalcFields().getFieldByNameOrAlias(name);
};
oFF.QFormulaCalculatedDimension.prototype.getFirstFieldByType = function(type)
{
	return this.getProperties().getFormulaCalcFields().getFirstFieldByType(type);
};
oFF.QFormulaCalculatedDimension.prototype.getFieldByPresentationType = function(presentationType)
{
	return this.getProperties().getFormulaCalcFields().getFirstFieldByType(presentationType);
};
oFF.QFormulaCalculatedDimension.prototype.getKeyField = function()
{
	return this.getProperties().getFormulaCalcFields().getFirstFieldByType(oFF.PresentationType.KEY);
};
oFF.QFormulaCalculatedDimension.prototype.getKeyFieldExt = function(context)
{
	return this.getFlatKeyField();
};
oFF.QFormulaCalculatedDimension.prototype.getTextField = function()
{
	return this.getProperties().getFormulaCalcFields().getFirstFieldByType(oFF.PresentationType.TEXT);
};
oFF.QFormulaCalculatedDimension.prototype.getFlatKeyField = function()
{
	return this.getProperties().getFormulaCalcFields().getFirstFieldByType(oFF.PresentationType.KEY);
};
oFF.QFormulaCalculatedDimension.prototype.getFlatTextField = function()
{
	return this.getProperties().getFormulaCalcFields().getFirstFieldByType(oFF.PresentationType.TEXT);
};
oFF.QFormulaCalculatedDimension.prototype.getFlatDisplayKeyField = function()
{
	var displayKeyField = this.getProperties().getFormulaCalcFields().getFirstFieldByType(oFF.PresentationType.DISPLAY_KEY);
	if (oFF.isNull(displayKeyField))
	{
		displayKeyField = this.getFlatKeyField();
	}
	return displayKeyField;
};
oFF.QFormulaCalculatedDimension.prototype.getDisplayKeyField = function()
{
	return this.getFlatDisplayKeyField();
};
oFF.QFormulaCalculatedDimension.prototype.getFlatFieldsList = function()
{
	return this.getProperties().getFormulaCalcFields();
};
oFF.QFormulaCalculatedDimension.prototype.getFieldsExt = function(context)
{
	if (this.getDimensionType() === oFF.DimensionType.FORMULA_CALCULATED_DIMENSION && context === oFF.QContextType.RESULT_SET)
	{
		return this.getProperties().getFormulaCalcFields();
	}
	return oFF.QCalculatedDimension.prototype.getFieldsExt.call( this , context);
};
oFF.QFormulaCalculatedDimension.prototype.setDisableSpatialExtendedDimensions = function(disableSpatialExtendedDimensions)
{
	this.m_disableSpatialExtendedDimensions = disableSpatialExtendedDimensions;
};
oFF.QFormulaCalculatedDimension.prototype.isDisableSpatialExtendedDimensions = function()
{
	return this.m_disableSpatialExtendedDimensions;
};
oFF.QFormulaCalculatedDimension.prototype.getParentRootContext = function()
{
	return this.m_parentRootContext;
};

oFF.QStructureMember = function() {};
oFF.QStructureMember.prototype = new oFF.QDimensionMember();
oFF.QStructureMember.prototype._ff_c = "QStructureMember";

oFF.QStructureMember.createStructureMember = function(context, structure, memberType)
{
	var member = new oFF.QStructureMember();
	member.setupStructureMember(context, structure, memberType);
	return member;
};
oFF.QStructureMember.createMeasure = function(memberType, context, dimension)
{
	if (memberType === oFF.MemberType.BASIC_MEASURE)
	{
		return oFF.QBasicMeasure._createBasicMeasure(context, dimension);
	}
	else if (memberType === oFF.MemberType.FORMULA)
	{
		return oFF.QFormulaMeasure._createFormulaMeasure(context, dimension);
	}
	else if (memberType === oFF.MemberType.RESTRICTED_MEASURE)
	{
		return oFF.QRestrictedMeasure._createRestrictedMeasure(context, dimension);
	}
	else if (memberType === oFF.MemberType.VARIANCE)
	{
		return oFF.QVarianceMeasure._createVarianceMeasure(context, dimension);
	}
	else if (memberType === oFF.MemberType.EXCEPTION_AGGREGATION)
	{
		return oFF.QExceptionAggregationMeasure._createExceptionAggregationMeasure(context, dimension);
	}
	else if (memberType === oFF.MemberType.CURRENCY_MEASURE)
	{
		return oFF.QCurrencyMeasure._createCurrencyMeasure(context, dimension);
	}
	throw oFF.XException.createIllegalArgumentException("Unknown structure member type.");
};
oFF.QStructureMember.copyMeasure = function(copyMeasure, origMeasure)
{
	var originType = origMeasure.getMemberType();
	if (originType.getParent() === oFF.MemberType.MEASURE)
	{
		copyMeasure.copyFrom(origMeasure, null);
	}
	else
	{
		throw oFF.XException.createIllegalArgumentException("Unknown structure member type.");
	}
};
oFF.QStructureMember.prototype.m_supportsResultSetSorting = false;
oFF.QStructureMember.prototype.m_aggregationType = null;
oFF.QStructureMember.prototype.m_postAggregationType = null;
oFF.QStructureMember.prototype.m_postAggregationDimensionNames = null;
oFF.QStructureMember.prototype.m_postAggregationIgnoreHierarchy = false;
oFF.QStructureMember.prototype.m_exceptionAggregation = null;
oFF.QStructureMember.prototype.m_resultCalculation = null;
oFF.QStructureMember.prototype.m_singleValueCalculation = null;
oFF.QStructureMember.prototype.m_numericScale = null;
oFF.QStructureMember.prototype.m_numericPrecision = null;
oFF.QStructureMember.prototype.m_numericShift = null;
oFF.QStructureMember.prototype.m_externalDimensionIgnoreList = null;
oFF.QStructureMember.prototype.m_isIgnoringAllExternalDimensions = false;
oFF.QStructureMember.prototype.m_isSelectionCandidate = false;
oFF.QStructureMember.prototype.m_presentationSignReversal = null;
oFF.QStructureMember.prototype.m_unitType = null;
oFF.QStructureMember.prototype.m_unitFixed = null;
oFF.QStructureMember.prototype.m_unitName = null;
oFF.QStructureMember.prototype.m_unitTextName = null;
oFF.QStructureMember.prototype.m_dataType = null;
oFF.QStructureMember.prototype.m_dataTypeInternal = null;
oFF.QStructureMember.prototype.m_dataTypePrecision = null;
oFF.QStructureMember.prototype.m_dataTypeScale = null;
oFF.QStructureMember.prototype.m_defaultSelectionDimensionNames = null;
oFF.QStructureMember.prototype.m_aliasName = null;
oFF.QStructureMember.prototype.m_accountType = null;
oFF.QStructureMember.prototype.m_autoSignFlip = false;
oFF.QStructureMember.prototype.m_createdFromMetadata = false;
oFF.QStructureMember.prototype.m_windowFunction = null;
oFF.QStructureMember.prototype.m_minimumDrillState = null;
oFF.QStructureMember.prototype.m_modelDefinedMember = false;
oFF.QStructureMember.prototype.m_validationErrorCodes = null;
oFF.QStructureMember.prototype.m_solveOrder = null;
oFF.QStructureMember.prototype.m_currencyTranslationName = null;
oFF.QStructureMember.prototype.m_rateType = null;
oFF.QStructureMember.prototype.m_unitDimensionName = null;
oFF.QStructureMember.prototype.m_unitDimensionProperty = null;
oFF.QStructureMember.prototype.m_overrideText = null;
oFF.QStructureMember.prototype.setupStructureMember = function(context, structure, memberType)
{
	oFF.QDimensionMember.prototype.setupDimensionMember.call( this , context, structure);
	this.m_supportsResultSetSorting = false;
	this.setType(memberType);
	this.setDimensionMemberNameValueException(oFF.ValueException.NORMAL);
	this.m_aggregationType = null;
	this.m_isIgnoringAllExternalDimensions = false;
	this.m_isSelectionCandidate = true;
	this.m_validationErrorCodes = oFF.XList.create();
	this.m_currencyTranslationName = null;
	this.m_rateType = null;
	this.m_minimumDrillState = oFF.XListOfString.create();
};
oFF.QStructureMember.prototype.copyFromInternal = function(other, flags)
{
	this.copySharableProperties(other, false);
};
oFF.QStructureMember.prototype.copySharableProperties = function(origin, isShallowCopy)
{
	oFF.QDimensionMember.prototype.copyFromInternal.call( this , origin, null);
	var originStructureMember = origin;
	this.m_supportsResultSetSorting = originStructureMember.m_supportsResultSetSorting;
	this.m_aggregationType = originStructureMember.m_aggregationType;
	this.m_postAggregationType = originStructureMember.m_postAggregationType;
	if (oFF.notNull(originStructureMember.m_postAggregationDimensionNames))
	{
		this.m_postAggregationDimensionNames = originStructureMember.m_postAggregationDimensionNames.createListOfStringCopy();
	}
	this.m_postAggregationIgnoreHierarchy = originStructureMember.m_postAggregationIgnoreHierarchy;
	if (oFF.notNull(originStructureMember.m_exceptionAggregation) && this._isExceptionAggregationLoaded())
	{
		this.m_exceptionAggregation.copyFrom(originStructureMember.m_exceptionAggregation, null);
	}
	this.m_resultCalculation = originStructureMember.m_resultCalculation;
	this.m_singleValueCalculation = originStructureMember.m_singleValueCalculation;
	if (oFF.notNull(originStructureMember.m_numericScale))
	{
		this.setNumericScale(originStructureMember.m_numericScale.getInteger());
	}
	if (oFF.notNull(originStructureMember.m_numericPrecision))
	{
		this.setNumericPrecision(originStructureMember.m_numericPrecision.getInteger());
	}
	if (oFF.notNull(originStructureMember.m_numericShift))
	{
		this.setNumericShift(originStructureMember.m_numericShift.getInteger());
	}
	if (oFF.notNull(originStructureMember.m_dataTypePrecision))
	{
		this.setDataTypePrecision(originStructureMember.m_dataTypePrecision.getInteger());
	}
	if (oFF.notNull(originStructureMember.m_dataTypeScale))
	{
		this.setDataTypeScale(originStructureMember.m_dataTypeScale.getInteger());
	}
	if (oFF.notNull(originStructureMember.m_externalDimensionIgnoreList))
	{
		this.m_externalDimensionIgnoreList = originStructureMember.m_externalDimensionIgnoreList.createListOfStringCopy();
	}
	this.m_isIgnoringAllExternalDimensions = originStructureMember.m_isIgnoringAllExternalDimensions;
	this.m_isSelectionCandidate = originStructureMember.m_isSelectionCandidate;
	if (oFF.notNull(originStructureMember.m_presentationSignReversal))
	{
		this.setPresentationSignReversal(originStructureMember.m_presentationSignReversal.getBoolean());
	}
	if (oFF.notNull(originStructureMember.m_defaultSelectionDimensionNames))
	{
		this.m_defaultSelectionDimensionNames = oFF.XListOfString.create();
		this.m_defaultSelectionDimensionNames.addAll(originStructureMember.m_defaultSelectionDimensionNames);
	}
	if (oFF.notNull(originStructureMember.m_unitType))
	{
		this.setUnitType(originStructureMember.m_unitType);
	}
	this.setUnitFixed(originStructureMember.m_unitFixed);
	this.setUnitName(originStructureMember.m_unitName);
	this.setUnitTextName(originStructureMember.m_unitTextName);
	this.setDataType(originStructureMember.m_dataType);
	this.setDataTypeInternal(originStructureMember.m_dataTypeInternal);
	this.setAliasName(originStructureMember.m_aliasName);
	if (oFF.notNull(originStructureMember.m_accountType))
	{
		this.setAccountType(originStructureMember.m_accountType);
	}
	this.setAutoSignFlip(originStructureMember.m_autoSignFlip);
	this.m_createdFromMetadata = originStructureMember.m_createdFromMetadata;
	if (originStructureMember.getWindowFunction() !== null)
	{
		this.m_windowFunction = oFF.QWindowFunction._createWindowFunction(null);
		this.m_windowFunction.copyFrom(originStructureMember.getWindowFunction(), null);
	}
	this.setModelDefinedMember(originStructureMember.m_modelDefinedMember);
	if (oFF.notNull(originStructureMember.m_solveOrder))
	{
		this.setSolveOrder(originStructureMember.m_solveOrder.getInteger());
	}
	this.m_currencyTranslationName = originStructureMember.m_currencyTranslationName;
	this.m_rateType = originStructureMember.m_rateType;
	this.m_unitDimensionName = originStructureMember.m_unitDimensionName;
	this.m_unitDimensionProperty = originStructureMember.m_unitDimensionProperty;
	this.m_minimumDrillState = originStructureMember.m_minimumDrillState.createListOfStringCopy();
	this.m_overrideText = originStructureMember.m_overrideText;
};
oFF.QStructureMember.prototype.releaseObject = function()
{
	this.m_aggregationType = null;
	this.m_postAggregationType = null;
	this.m_postAggregationDimensionNames = oFF.XObjectExt.release(this.m_postAggregationDimensionNames);
	this.m_exceptionAggregation = oFF.XObjectExt.release(this.m_exceptionAggregation);
	this.m_resultCalculation = null;
	this.m_singleValueCalculation = null;
	this.m_externalDimensionIgnoreList = oFF.XObjectExt.release(this.m_externalDimensionIgnoreList);
	this.m_presentationSignReversal = oFF.XObjectExt.release(this.m_presentationSignReversal);
	this.m_numericScale = oFF.XObjectExt.release(this.m_numericScale);
	this.m_numericPrecision = oFF.XObjectExt.release(this.m_numericPrecision);
	this.m_numericShift = oFF.XObjectExt.release(this.m_numericShift);
	this.m_solveOrder = oFF.XObjectExt.release(this.m_solveOrder);
	this.m_dataTypeScale = oFF.XObjectExt.release(this.m_dataTypeScale);
	this.m_dataTypePrecision = oFF.XObjectExt.release(this.m_dataTypePrecision);
	this.m_defaultSelectionDimensionNames = oFF.XObjectExt.release(this.m_defaultSelectionDimensionNames);
	this.m_unitType = null;
	this.m_unitFixed = null;
	this.m_unitName = null;
	this.m_unitTextName = null;
	this.m_dataType = null;
	this.m_dataTypeInternal = null;
	this.m_accountType = null;
	this.m_windowFunction = oFF.XObjectExt.release(this.m_windowFunction);
	this.m_validationErrorCodes = oFF.XObjectExt.release(this.m_validationErrorCodes);
	this.m_currencyTranslationName = null;
	this.m_rateType = null;
	this.m_unitDimensionName = null;
	this.m_unitDimensionProperty = null;
	this.m_overrideText = null;
	this.m_minimumDrillState = oFF.XObjectExt.release(this.m_minimumDrillState);
	oFF.QDimensionMember.prototype.releaseObject.call( this );
};
oFF.QStructureMember.prototype.getDataType = function()
{
	return this.m_dataType;
};
oFF.QStructureMember.prototype.getDataTypeInternal = function()
{
	return this.m_dataTypeInternal;
};
oFF.QStructureMember.prototype.setDataType = function(dataType)
{
	if (this.m_dataType !== dataType)
	{
		var oldValue = this.m_dataType;
		this.m_dataType = dataType;
		this.notifyPropertyConstantChanged(oFF.QStructureMemberProperties.QY_DATA_TYPE, oldValue, dataType);
	}
};
oFF.QStructureMember.prototype.setDataTypeInternal = function(dataType)
{
	if (this.m_dataTypeInternal !== dataType)
	{
		var oldValue = this.m_dataTypeInternal;
		this.m_dataTypeInternal = dataType;
		this.notifyPropertyConstantChanged(oFF.QStructureMemberProperties.QY_DATA_TYPE_INTERNAL, oldValue, dataType);
	}
};
oFF.QStructureMember.prototype.getExceptions = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var exceptionManager = queryModel.getExceptionManager();
		if (oFF.notNull(exceptionManager))
		{
			return exceptionManager.getAllExceptionsOfMeasure(this);
		}
	}
	return null;
};
oFF.QStructureMember.prototype.getQueryDataCells = function()
{
	var allDataCells = this.getDimension().getQueryModel().getQueryDataCells();
	var myList = oFF.XListOfNameObject.create();
	var size = allDataCells.size();
	for (var k = 0; k < size; k++)
	{
		var dataCell = allDataCells.get(k);
		if (dataCell.hasMemberReference(this))
		{
			myList.add(dataCell);
		}
	}
	return myList;
};
oFF.QStructureMember.prototype.assertStandardAggregationType = function(aggregationType)
{
	if (oFF.notNull(aggregationType) && this.getModelCapabilities().supportsExceptionAggregationDimsFormulas())
	{
		var memberType = this.getMemberType();
		if (memberType === oFF.MemberType.BASIC_MEASURE || memberType === oFF.MemberType.RESTRICTED_MEASURE)
		{
			if (oFF.XStringUtils.isNullOrEmpty(this.getAggregationDimensionName()) && (aggregationType === oFF.AggregationType.AVERAGE || aggregationType === oFF.AggregationType.COUNT))
			{
				return;
			}
		}
		if (aggregationType !== oFF.AggregationType.SUM && aggregationType !== oFF.AggregationType.MIN && aggregationType !== oFF.AggregationType.MAX && aggregationType !== oFF.AggregationType.NOP_NULL && aggregationType !== oFF.AggregationType.NOP_NULL_ZERO && aggregationType !== oFF.AggregationType.COUNT_DISTINCT)
		{
			throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate3("The aggregation type '", aggregationType.getName(), "' is not valid as standard aggregation. Use it as Exception Aggregation!"));
		}
	}
};
oFF.QStructureMember.prototype.assertSupportsAggregation = function(aggregationType)
{
	if (oFF.isNull(aggregationType))
	{
		return;
	}
	var componentType = this.getOlapComponentType();
	var queryModel = this.getQueryModel();
	var invalid = false;
	var isAvgNull = aggregationType === oFF.AggregationType.AVERAGE_NULL || aggregationType === oFF.AggregationType.AVERAGE_NULL_ZERO;
	var isCountNull = aggregationType === oFF.AggregationType.COUNT_NULL || aggregationType === oFF.AggregationType.COUNT_NULL_ZERO;
	var isStatisticalAggregation = aggregationType === oFF.AggregationType.MEDIAN || aggregationType === oFF.AggregationType.MEDIAN_NULL || aggregationType === oFF.AggregationType.MEDIAN_NULL_ZERO || aggregationType === oFF.AggregationType.FIRST_QUARTILE || aggregationType === oFF.AggregationType.FIRST_QUARTILE_NULL || aggregationType === oFF.AggregationType.FIRST_QUARTILE_NULL_ZERO || aggregationType === oFF.AggregationType.THIRD_QUARTILE || aggregationType === oFF.AggregationType.THIRD_QUARTILE_NULL || aggregationType === oFF.AggregationType.THIRD_QUARTILE_NULL_ZERO || aggregationType === oFF.AggregationType.OUTLIERS || aggregationType === oFF.AggregationType.OUTLIERS_NULL || aggregationType === oFF.AggregationType.OUTLIERS_NULL_ZERO;
	var modelCapabilities = queryModel.getModelCapabilities();
	if (isStatisticalAggregation && !modelCapabilities.supportsStatisticalAggregations())
	{
		invalid = true;
	}
	if (isAvgNull)
	{
		var validAvgNullForRM = componentType === oFF.MemberType.RESTRICTED_MEASURE && modelCapabilities.supportsExceptionAggregationAvgNullSelectionMember();
		if (componentType !== oFF.MemberType.FORMULA && !validAvgNullForRM)
		{
			invalid = true;
		}
	}
	if (isCountNull)
	{
		var validCountNullForRM = componentType === oFF.MemberType.RESTRICTED_MEASURE && modelCapabilities.supportsExceptionAggregationCountNullSelectionMember();
		if (componentType !== oFF.MemberType.FORMULA && !validCountNullForRM)
		{
			invalid = true;
		}
	}
	if (invalid)
	{
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate3("The aggregation type '", aggregationType.getName(), "' is not applicable!"));
	}
};
oFF.QStructureMember.prototype.setAggregationType = function(aggregationType)
{
	if (this.m_aggregationType === aggregationType)
	{
		return;
	}
	this.assertStandardAggregationType(aggregationType);
	var memberType = this.getMemberType();
	if (memberType !== oFF.MemberType.BASIC_MEASURE && memberType !== oFF.MemberType.RESTRICTED_MEASURE)
	{
		this.assertSupportsAggregation(aggregationType);
	}
	var oldValue = this.m_aggregationType;
	this.m_aggregationType = aggregationType;
	this.notifyPropertyConstantChanged(oFF.QStructureMemberProperties.QY_AGGERGATION_TYPE, oldValue, aggregationType);
};
oFF.QStructureMember.prototype.getAggregationType = function()
{
	return this.m_aggregationType;
};
oFF.QStructureMember.prototype.getNumericShift = function()
{
	var capabilities = this.getModelCapabilities();
	if (capabilities.supportsDataCells() && capabilities.supportsUnifiedDataCells())
	{
		var dataCells = this.getQueryDataCells();
		if (dataCells.hasElements())
		{
			var prevShiftFactor = dataCells.get(0).getScalingFactor();
			for (var c = 0; c < dataCells.size(); c++)
			{
				var dataCell = dataCells.get(c);
				var currShiftFactor = dataCell.getScalingFactor();
				if (prevShiftFactor !== currShiftFactor)
				{
					return null;
				}
			}
			prevShiftFactor = -1 * prevShiftFactor;
			return oFF.XIntegerValue.create(prevShiftFactor);
		}
		return null;
	}
	return this.m_numericShift;
};
oFF.QStructureMember.prototype.setNumericShift = function(shift)
{
	var capabilities = this.getModelCapabilities();
	if (capabilities.supportsDataCells() && capabilities.supportsUnifiedDataCells())
	{
		var dataCells = this.getQueryDataCells();
		if (dataCells.hasElements())
		{
			if (shift > 0)
			{
				throw oFF.XException.createIllegalArgumentException("positive shift not supported by backend");
			}
			for (var c = 0; c < dataCells.size(); c++)
			{
				var dataCell = dataCells.get(c);
				dataCell.setScalingFactor(-shift);
			}
		}
	}
	else
	{
		this._setNumericShiftInternal(oFF.XIntegerValue.create(shift));
	}
};
oFF.QStructureMember.prototype.resetNumericPrecision = function()
{
	this._setNumericPrecisionInternal(null);
};
oFF.QStructureMember.prototype._setNumericPrecisionInternal = function(precision)
{
	if (oFF.isNull(this.m_numericPrecision) || !this.m_numericPrecision.isEqualTo(precision))
	{
		var oldValue = oFF.isNull(this.m_numericPrecision) ? oFF.QStructureMemberProperties.NULL_INDICATOR_FOR_INTEGERS : this.m_numericPrecision.getInteger();
		this.m_numericPrecision = precision;
		var newValue = oFF.isNull(precision) ? oFF.QStructureMemberProperties.NULL_INDICATOR_FOR_INTEGERS : precision.getInteger();
		if (oldValue !== newValue)
		{
			this.notifyPropertyIntegerChanged(oFF.QStructureMemberProperties.QY_NUMERIC_PRECISION, oldValue, newValue);
		}
	}
};
oFF.QStructureMember.prototype.resetNumericScale = function()
{
	if (this.getNumericScale() !== null)
	{
		var capabilities = this.getModelCapabilities();
		if (capabilities.supportsDataCells() && capabilities.supportsUnifiedDataCells())
		{
			var dataCells = this.getQueryDataCells();
			if (dataCells.hasElements())
			{
				for (var c = 0; c < dataCells.size(); c++)
				{
					var dataCell = dataCells.get(c);
					dataCell.setDecimalPlaces(-1);
				}
			}
		}
		else
		{
			this._setNumericScaleInternal(null);
		}
	}
};
oFF.QStructureMember.prototype._setNumericScaleInternal = function(scale)
{
	if (oFF.isNull(this.m_numericScale) || !this.m_numericScale.isEqualTo(scale))
	{
		var oldValue = oFF.isNull(this.m_numericScale) ? oFF.QStructureMemberProperties.NULL_INDICATOR_FOR_INTEGERS : this.m_numericScale.getInteger();
		this.m_numericScale = scale;
		var newValue = oFF.isNull(scale) ? oFF.QStructureMemberProperties.NULL_INDICATOR_FOR_INTEGERS : scale.getInteger();
		if (oldValue !== newValue)
		{
			this.notifyPropertyIntegerChanged(oFF.QStructureMemberProperties.QY_NUMERIC_SCALE, oldValue, newValue);
		}
	}
};
oFF.QStructureMember.prototype.resetNumericShift = function()
{
	if (this.getNumericShift() !== null)
	{
		var capabilities = this.getModelCapabilities();
		if (capabilities.supportsDataCells() && capabilities.supportsUnifiedDataCells())
		{
			var dataCells = this.getQueryDataCells();
			if (dataCells.hasElements())
			{
				for (var c = 0; c < dataCells.size(); c++)
				{
					var dataCell = dataCells.get(c);
					dataCell.setScalingFactor(-1);
				}
			}
		}
		else
		{
			this._setNumericShiftInternal(null);
		}
	}
};
oFF.QStructureMember.prototype._setNumericShiftInternal = function(shift)
{
	if (oFF.isNull(this.m_numericShift) || !this.m_numericShift.isEqualTo(shift))
	{
		var oldValue = oFF.isNull(this.m_numericShift) ? oFF.QStructureMemberProperties.NULL_INDICATOR_FOR_INTEGERS : this.m_numericShift.getInteger();
		this.m_numericShift = shift;
		var newValue = oFF.isNull(shift) ? oFF.QStructureMemberProperties.NULL_INDICATOR_FOR_INTEGERS : shift.getInteger();
		if (oldValue !== newValue)
		{
			this.notifyPropertyIntegerChanged(oFF.QStructureMemberProperties.QY_NUMERIC_SHIFT, oldValue, newValue);
		}
	}
};
oFF.QStructureMember.prototype.getNumericScale = function()
{
	var capabilities = this.getModelCapabilities();
	if (capabilities.supportsDataCells() && capabilities.supportsUnifiedDataCells())
	{
		var dataCells = this.getQueryDataCells();
		if (dataCells.hasElements())
		{
			var prevScaleFactor = dataCells.get(0).getDecimalPlaces();
			for (var c = 0; c < dataCells.size(); c++)
			{
				var dataCell = dataCells.get(c);
				var currScaleFactor = dataCell.getDecimalPlaces();
				if (prevScaleFactor !== currScaleFactor)
				{
					return null;
				}
			}
			return oFF.XIntegerValue.create(prevScaleFactor);
		}
		return null;
	}
	return this.m_numericScale;
};
oFF.QStructureMember.prototype.getNumericPrecision = function()
{
	return this.m_numericPrecision;
};
oFF.QStructureMember.prototype.getDataTypePrecision = function()
{
	return this.m_dataTypePrecision;
};
oFF.QStructureMember.prototype.getDataTypeScale = function()
{
	return this.m_dataTypeScale;
};
oFF.QStructureMember.prototype.setNumericScale = function(scale)
{
	var capabilities = this.getModelCapabilities();
	if (capabilities.supportsDataCells() && capabilities.supportsUnifiedDataCells())
	{
		var dataCells = this.getQueryDataCells();
		if (dataCells.hasElements())
		{
			for (var c = 0; c < dataCells.size(); c++)
			{
				var dataCell = dataCells.get(c);
				dataCell.setDecimalPlaces(scale);
			}
		}
	}
	else
	{
		this._setNumericScaleInternal(oFF.XIntegerValue.create(scale));
	}
};
oFF.QStructureMember.prototype.setNumericPrecision = function(precision)
{
	this._setNumericPrecisionInternal(oFF.XIntegerValue.create(precision));
};
oFF.QStructureMember.prototype.setDataTypePrecision = function(precision)
{
	var oldValue = oFF.isNull(this.m_dataTypePrecision) ? oFF.QStructureMemberProperties.NULL_INDICATOR_FOR_INTEGERS : this.m_dataTypePrecision.getInteger();
	this.m_dataTypePrecision = oFF.XIntegerValue.create(precision);
	if (oldValue !== precision)
	{
		this.notifyPropertyIntegerChanged(oFF.QStructureMemberProperties.QY_DATA_TYPE_PRECISION, oldValue, precision);
	}
};
oFF.QStructureMember.prototype.setDataTypeScale = function(scale)
{
	var oldValue = oFF.isNull(this.m_dataTypeScale) ? oFF.QStructureMemberProperties.NULL_INDICATOR_FOR_INTEGERS : this.m_dataTypeScale.getInteger();
	this.m_dataTypeScale = oFF.XIntegerValue.create(scale);
	if (oldValue !== scale)
	{
		this.notifyPropertyIntegerChanged(oFF.QStructureMemberProperties.QY_DATA_TYPE_SCALE, oldValue, scale);
	}
};
oFF.QStructureMember.prototype.getIgnoredExternalDimensions = function()
{
	if (oFF.isNull(this.m_externalDimensionIgnoreList))
	{
		return oFF.XListOfString.create();
	}
	return this.m_externalDimensionIgnoreList;
};
oFF.QStructureMember.prototype.removeExternalDimensionToIgnore = function(externalDimensionName)
{
	if (oFF.notNull(this.m_externalDimensionIgnoreList))
	{
		this.m_externalDimensionIgnoreList.removeElement(externalDimensionName);
		this.notifyNodeChanged();
	}
};
oFF.QStructureMember.prototype.addExternalDimensionToIgnore = function(externalDimensionName)
{
	if (!this.getModelCapabilities().supportsIgnoreExternalDimensions())
	{
		oFF.noSupport();
	}
	if (oFF.XString.isEqual(externalDimensionName, "All"))
	{
		if (oFF.notNull(this.m_externalDimensionIgnoreList))
		{
			this.m_externalDimensionIgnoreList.clear();
		}
		this.setIgnoreAllExternalDimensions(true);
	}
	else
	{
		if (oFF.isNull(this.m_externalDimensionIgnoreList))
		{
			this.m_externalDimensionIgnoreList = oFF.XListOfString.create();
		}
		if (!this.m_externalDimensionIgnoreList.contains(externalDimensionName))
		{
			this.m_externalDimensionIgnoreList.add(externalDimensionName);
		}
		this.setIgnoreAllExternalDimensions(false);
	}
};
oFF.QStructureMember.prototype.clearIgnoredExternalDimensions = function()
{
	if (oFF.notNull(this.m_externalDimensionIgnoreList))
	{
		this.m_externalDimensionIgnoreList.clear();
	}
	this.setIgnoreAllExternalDimensions(false);
};
oFF.QStructureMember.prototype.setIgnoreAllExternalDimensions = function(isIgnoringAllExternalDimensions)
{
	if (this.m_isIgnoringAllExternalDimensions !== isIgnoringAllExternalDimensions)
	{
		this.m_isIgnoringAllExternalDimensions = isIgnoringAllExternalDimensions;
		this.notifyPropertyBooleanChanged(oFF.QStructureMemberProperties.QY_IGNORING_ALL_EXTERNAL_DIMENSIONS, !isIgnoringAllExternalDimensions, isIgnoringAllExternalDimensions);
	}
};
oFF.QStructureMember.prototype.isIgnoringAllExternalDimensions = function()
{
	return this.m_isIgnoringAllExternalDimensions;
};
oFF.QStructureMember.prototype.isSelectionCandidate = function()
{
	return this.m_isSelectionCandidate;
};
oFF.QStructureMember.prototype.setIsSelectionCandidate = function(isSelectionCandidate)
{
	if (this.m_isSelectionCandidate !== isSelectionCandidate)
	{
		this.m_isSelectionCandidate = isSelectionCandidate;
		this.notifyPropertyBooleanChanged(oFF.QStructureMemberProperties.QY_IS_SELECTION_CANDIDATE, !isSelectionCandidate, isSelectionCandidate);
	}
};
oFF.QStructureMember.prototype.setPostAggregationType = function(postAggregationType)
{
	if (this.m_postAggregationType !== postAggregationType)
	{
		this.assertSupportsAggregation(postAggregationType);
		var oldValue = this.m_postAggregationType;
		this.m_postAggregationType = postAggregationType;
		this.notifyPropertyConstantChanged(oFF.QStructureMemberProperties.QY_POST_AGGERGATION_TYPE, oldValue, postAggregationType);
	}
};
oFF.QStructureMember.prototype.addPostAggregationDimension = function(dimension)
{
	this.addPostAggregationDimensionName(dimension.getName());
};
oFF.QStructureMember.prototype.addPostAggregationDimensionName = function(dimensionName)
{
	if (oFF.isNull(this.m_postAggregationDimensionNames))
	{
		this.m_postAggregationDimensionNames = oFF.XListOfString.create();
	}
	if (!this.m_postAggregationDimensionNames.contains(dimensionName))
	{
		var oldValue = this.m_postAggregationDimensionNames.createListOfStringCopy();
		this.m_postAggregationDimensionNames.add(dimensionName);
		this.notifyPropertyChanged(oFF.QStructureMemberProperties.QY_POST_AGGREGATION_DIMENSIONS, oldValue, this.m_postAggregationDimensionNames);
	}
};
oFF.QStructureMember.prototype.getPostAggregationType = function()
{
	return this.m_postAggregationType;
};
oFF.QStructureMember.prototype.getPostAggregationDimensions = function()
{
	if (oFF.isNull(this.m_postAggregationDimensionNames))
	{
		return oFF.XListOfString.create();
	}
	return this.m_postAggregationDimensionNames;
};
oFF.QStructureMember.prototype.removePostAggregationDimensions = function(postAggregationDimensionName)
{
	if (oFF.notNull(this.m_postAggregationDimensionNames))
	{
		var oldValue = this.m_postAggregationDimensionNames.createListOfStringCopy();
		this.m_postAggregationDimensionNames.removeElement(postAggregationDimensionName);
		this.notifyPropertyChanged(oFF.QStructureMemberProperties.QY_POST_AGGREGATION_DIMENSIONS, oldValue, this.m_postAggregationDimensionNames);
	}
};
oFF.QStructureMember.prototype.clearPostAggregationDimensions = function()
{
	if (oFF.notNull(this.m_postAggregationDimensionNames))
	{
		var oldValue = this.m_postAggregationDimensionNames.createListOfStringCopy();
		this.m_postAggregationDimensionNames.clear();
		this.notifyPropertyChanged(oFF.QStructureMemberProperties.QY_POST_AGGREGATION_DIMENSIONS, oldValue, this.m_postAggregationDimensionNames);
	}
};
oFF.QStructureMember.prototype.supportsCalculatedBeforeAggregation = function()
{
	var dimension = this.getDimension();
	return oFF.isNull(dimension) ? false : dimension.supportsCalculatedBeforeAggregation();
};
oFF.QStructureMember.prototype._isExceptionAggregationLoaded = function()
{
	if (oFF.isNull(this.m_exceptionAggregation))
	{
		var qm = this.getQueryModel();
		if (oFF.notNull(qm))
		{
			this.m_exceptionAggregation = oFF.QExceptionAggregation._create(qm._getExceptionAggregationManagerBase());
		}
	}
	return oFF.notNull(this.m_exceptionAggregation);
};
oFF.QStructureMember.prototype.setExceptionAggregationType = function(aggregationType)
{
	if (this._isExceptionAggregationLoaded() && this.m_exceptionAggregation._getAggregationType() !== aggregationType)
	{
		var oldValue = this.m_exceptionAggregation._getAggregationType();
		this.m_exceptionAggregation._setAggregationType(this.getOlapComponentType(), aggregationType);
		this.notifyPropertyConstantChanged(oFF.QStructureMemberProperties.QY_EXCEPTION_AGGERGATION_TYPE, oldValue, aggregationType);
	}
};
oFF.QStructureMember.prototype.addExceptionAggregationDimension = function(dimension)
{
	this.addExceptionAggregationDimensionName(dimension.getName());
};
oFF.QStructureMember.prototype.addExceptionAggregationDimensionName = function(dimensionName)
{
	if (this._isExceptionAggregationLoaded() && !this.m_exceptionAggregation._getUsedDimensionNames().contains(dimensionName))
	{
		this.m_exceptionAggregation._addDimension(dimensionName);
		this.notifyNodeChanged();
	}
};
oFF.QStructureMember.prototype.acceptsMoreExceptionAggregationDimensions = function()
{
	if (!this._isExceptionAggregationLoaded())
	{
		return false;
	}
	var aggrType = this.m_exceptionAggregation._getAggregationType();
	if (oFF.isNull(aggrType))
	{
		return true;
	}
	var dimMaxSize = this.m_exceptionAggregation.getParent()._getMaxNumberOfAllowedDimensions(this.getOlapComponentType(), aggrType);
	return dimMaxSize === -1 || this.getExceptionAggregationDimensions().size() < dimMaxSize;
};
oFF.QStructureMember.prototype.getSupportedExceptionAggregationTypes = function()
{
	return !this._isExceptionAggregationLoaded() ? oFF.XListOfString.create() : this.m_exceptionAggregation.getParent()._getSupportedAggregationTypesForMember(this.getOlapComponentType());
};
oFF.QStructureMember.prototype.supportsExceptionAggregationType = function(aggrType)
{
	return oFF.notNull(aggrType) && this.getSupportedExceptionAggregationTypes().contains(aggrType.getName());
};
oFF.QStructureMember.prototype.supportsDimensionForExceptionAggregation = function(dimName, aggrType)
{
	return this._isExceptionAggregationLoaded() && this.getSupportedDimensionsForExceptionAggregation(aggrType).contains(dimName);
};
oFF.QStructureMember.prototype.getSupportedDimensionsForExceptionAggregation = function(aggrType)
{
	return !this._isExceptionAggregationLoaded() ? oFF.XListOfString.create() : this.m_exceptionAggregation.getParent()._getSupportedDimensionsForMemberAndAggregation(this.getOlapComponentType(), aggrType);
};
oFF.QStructureMember.prototype.getMaxNumberOfDimensionsForExceptionAggregation = function(aggrType)
{
	return !this._isExceptionAggregationLoaded() ? 0 : this.m_exceptionAggregation.getParent()._getMaxNumberOfAllowedDimensions(this.getOlapComponentType(), aggrType);
};
oFF.QStructureMember.prototype.removeExceptionAggregationDimension = function(dimensionName)
{
	if (this._isExceptionAggregationLoaded())
	{
		this.m_exceptionAggregation._removeDimension(dimensionName);
		this.notifyNodeChanged();
	}
};
oFF.QStructureMember.prototype.clearExceptionAggregationDimensions = function()
{
	if (this._isExceptionAggregationLoaded())
	{
		this.m_exceptionAggregation._clearUsedDimensions();
		this.notifyNodeChanged();
	}
};
oFF.QStructureMember.prototype.getExceptionAggregationDimensions = function()
{
	return !this._isExceptionAggregationLoaded() ? oFF.XListOfString.create() : this.m_exceptionAggregation._getUsedDimensionNames();
};
oFF.QStructureMember.prototype.getExceptionAggregationType = function()
{
	return !this._isExceptionAggregationLoaded() ? null : this.m_exceptionAggregation._getAggregationType();
};
oFF.QStructureMember.prototype.setPostAggregationIgnoreHierarchy = function(ignoreHierarchy)
{
	if (this.m_postAggregationIgnoreHierarchy !== ignoreHierarchy)
	{
		this.m_postAggregationIgnoreHierarchy = ignoreHierarchy;
		this.notifyPropertyBooleanChanged(oFF.QStructureMemberProperties.QY_POST_AGGREGATION_IGNORE_HIERARCHY, !ignoreHierarchy, ignoreHierarchy);
	}
};
oFF.QStructureMember.prototype.isPostAggregationIgnoringHierarchy = function()
{
	return this.m_postAggregationIgnoreHierarchy;
};
oFF.QStructureMember.prototype.getPresentationSignReversal = function()
{
	return this.m_presentationSignReversal;
};
oFF.QStructureMember.prototype.setPresentationSignReversal = function(isSignReversed)
{
	oFF.XBooleanUtils.checkTrue(this.getDimension().getDimensionType() === oFF.DimensionType.ACCOUNT, "PresentationSignReversal is only supported for Account dimensions!");
	if (oFF.isNull(this.m_presentationSignReversal) || this.m_presentationSignReversal.getBoolean() !== isSignReversed)
	{
		var oldValue = oFF.isNull(this.m_presentationSignReversal) ? false : this.m_presentationSignReversal.getBoolean();
		this.m_presentationSignReversal = oFF.XBooleanValue.create(isSignReversed);
		this.notifyPropertyBooleanChanged(oFF.QStructureMemberProperties.QY_PRESENTATION_SIGN_REVERSAL, oldValue, isSignReversed);
	}
};
oFF.QStructureMember.prototype.initializeFieldValues = function()
{
	var dimension = this.getDimension();
	if (oFF.notNull(dimension))
	{
		var fieldValue = this.getFieldValue(this.getDimension().getFlatKeyField());
		var useFlatFields = oFF.notNull(fieldValue) && oFF.XString.isEqual(fieldValue.getString(), this.getName());
		var newMemberKeyField = useFlatFields ? dimension.getFlatKeyField() : dimension.getKeyField();
		this.createAndAddFieldValueWithString(newMemberKeyField, this.getName());
		var newMemberTextField = useFlatFields ? dimension.getFlatTextField() : dimension.getTextField();
		if (oFF.notNull(newMemberTextField) && this.getFieldValue(newMemberTextField) === null)
		{
			this.createAndAddFieldValueWithString(newMemberTextField, this.getText());
		}
	}
};
oFF.QStructureMember.prototype.getResultCalculation = function()
{
	return this.m_resultCalculation;
};
oFF.QStructureMember.prototype.setResultCalculation = function(resultCalculation)
{
	if (resultCalculation !== this.m_resultCalculation)
	{
		var oldValue = this.m_resultCalculation;
		this.m_resultCalculation = resultCalculation;
		this.notifyPropertyConstantChanged(oFF.QStructureMemberProperties.QY_RESULT_CALCULATION, oldValue, resultCalculation);
	}
};
oFF.QStructureMember.prototype.getSingleValueCalculation = function()
{
	return this.m_singleValueCalculation;
};
oFF.QStructureMember.prototype.setSingleValueCalculation = function(singleValueCalculation)
{
	if (singleValueCalculation !== this.m_singleValueCalculation)
	{
		var oldValue = this.m_singleValueCalculation;
		this.m_singleValueCalculation = singleValueCalculation;
		this.notifyPropertyConstantChanged(oFF.QStructureMemberProperties.QY_SINGLE_VALUE_CALCULATION, oldValue, singleValueCalculation);
	}
};
oFF.QStructureMember.prototype.getDefaultSelectedDimensionNames = function()
{
	return this.m_defaultSelectionDimensionNames;
};
oFF.QStructureMember.prototype.getDimensionsUsedByMember = function(queryModel)
{
	var usedDimensions = oFF.XHashSetOfString.create();
	oFF.DimensionUsageAnalyzer2.addDimensionsUsedByMember(usedDimensions, this, queryModel);
	return usedDimensions.getValuesAsReadOnlyListOfString();
};
oFF.QStructureMember.prototype.addDefaultSelectionDimensionByName = function(dimensionName)
{
	if (oFF.isNull(this.m_defaultSelectionDimensionNames))
	{
		this.m_defaultSelectionDimensionNames = oFF.XListOfString.create();
	}
	this.m_defaultSelectionDimensionNames.add(dimensionName);
};
oFF.QStructureMember.prototype.setUnitType = function(unitType)
{
	if (this.m_unitType !== unitType)
	{
		var oldValue = unitType;
		this.m_unitType = unitType;
		this.notifyPropertyConstantChanged(oFF.QStructureMemberProperties.QY_UNIT_TYPE, oldValue, unitType);
	}
};
oFF.QStructureMember.prototype.getUnitType = function()
{
	return this.m_unitType;
};
oFF.QStructureMember.prototype.setUnitFixed = function(unitFixed)
{
	if (!oFF.XString.isEqual(this.m_unitFixed, unitFixed))
	{
		var oldValue = this.m_unitFixed;
		this.m_unitFixed = unitFixed;
		this.notifyPropertyStringChanged(oFF.QStructureMemberProperties.QY_UNIT_FIXED, oldValue, unitFixed);
	}
};
oFF.QStructureMember.prototype.getUnitFixed = function()
{
	return this.m_unitFixed;
};
oFF.QStructureMember.prototype.setUnitName = function(unitName)
{
	if (!oFF.XString.isEqual(this.m_unitName, unitName))
	{
		var oldValue = this.m_unitName;
		this.m_unitName = unitName;
		this.notifyPropertyStringChanged(oFF.QStructureMemberProperties.QY_UNIT_NAME, oldValue, unitName);
	}
};
oFF.QStructureMember.prototype.getUnitName = function()
{
	return this.m_unitName;
};
oFF.QStructureMember.prototype.setUnitTextName = function(unitTextName)
{
	if (!oFF.XString.isEqual(this.m_unitTextName, unitTextName))
	{
		var oldValue = this.m_unitTextName;
		this.m_unitTextName = unitTextName;
		this.notifyPropertyStringChanged(oFF.QStructureMemberProperties.QY_UNIT_TEXT_NAME, oldValue, unitTextName);
	}
};
oFF.QStructureMember.prototype.getUnitTextName = function()
{
	return this.m_unitTextName;
};
oFF.QStructureMember.prototype.getAliasName = function()
{
	return this.m_aliasName;
};
oFF.QStructureMember.prototype.getAliasOrMemberName = function()
{
	if (oFF.notNull(this.m_aliasName))
	{
		return this.m_aliasName;
	}
	return this.getName();
};
oFF.QStructureMember.prototype.setAliasName = function(aliasName)
{
	this.m_aliasName = aliasName;
};
oFF.QStructureMember.prototype.getAccountType = function()
{
	return this.m_accountType;
};
oFF.QStructureMember.prototype.setAccountType = function(accountType)
{
	oFF.XBooleanUtils.checkTrue(this.getDimension().getDimensionType() === oFF.DimensionType.ACCOUNT, "AccountType is only supported for Account dimensions!");
	if (this.m_accountType !== accountType)
	{
		var oldValue = this.m_accountType;
		this.m_accountType = accountType;
		this.notifyPropertyConstantChanged(oFF.QStructureMemberProperties.QY_ACCOUNT_TYPE, oldValue, accountType);
	}
};
oFF.QStructureMember.prototype.isAutoSignFlip = function()
{
	return this.m_autoSignFlip;
};
oFF.QStructureMember.prototype.setAutoSignFlip = function(autoSignFlip)
{
	if (autoSignFlip !== this.m_autoSignFlip)
	{
		this.m_autoSignFlip = autoSignFlip;
		this.notifyPropertyBooleanChanged(oFF.QStructureMemberProperties.QY_AUTO_SIGN_FLIP, !autoSignFlip, autoSignFlip);
	}
};
oFF.QStructureMember.prototype.isModelDefinedMember = function()
{
	return this.m_modelDefinedMember;
};
oFF.QStructureMember.prototype.setModelDefinedMember = function(modelDefinedMember)
{
	this.m_modelDefinedMember = modelDefinedMember;
};
oFF.QStructureMember.prototype.setSolveOrder = function(solveOrder)
{
	var oldValue = oFF.isNull(this.m_solveOrder) ? oFF.QStructureMemberProperties.NULL_INDICATOR_FOR_INTEGERS : this.m_solveOrder.getInteger();
	this.m_solveOrder = oFF.XIntegerValue.create(solveOrder);
	if (oldValue !== solveOrder)
	{
		this.notifyPropertyIntegerChanged(oFF.QStructureMemberProperties.QY_SOLVE_ORDER, oldValue, solveOrder);
	}
};
oFF.QStructureMember.prototype.getSolveOrder = function()
{
	if (this.isSolveOrderOverDefined())
	{
		return this.m_solveOrder.getInteger();
	}
	else if (this.isCustomDefaultSolveOrderApplicable() && this.getQueryModel().hasUserDefinedMeasures())
	{
		if (this.getQueryModel().isLeadingStructureAccount() && this.getDimension().isMeasureStructure() || this.getQueryModel().isLeadingStructureMeasure() && !this.getDimension().isMeasureStructure())
		{
			return oFF.QStructureMemberSolveOrder.CLIENT_DEFINED_CUSTOM_MEMBER_LOW;
		}
		else
		{
			return oFF.QStructureMemberSolveOrder.CLIENT_DEFINED_CUSTOM_MEMBER_HIGH;
		}
	}
	else
	{
		return 0;
	}
};
oFF.QStructureMember.prototype.isSolveOrderOverDefined = function()
{
	return oFF.notNull(this.m_solveOrder);
};
oFF.QStructureMember.prototype.isCustomDefaultSolveOrderApplicable = function()
{
	return this.getModelCapabilities().supportsUniversalModel() && !this.isModelDefinedMember() && !this.isCreatedFromMetadata() && this.getQueryModel().getAccountDimension() !== null;
};
oFF.QStructureMember.prototype.setCurrencyTranslation = function(specificCurrencyTranslation)
{
	if (oFF.isNull(specificCurrencyTranslation))
	{
		this.setCurrencyTranslationName(null);
	}
	else
	{
		this.setCurrencyTranslationName(specificCurrencyTranslation.getName());
	}
};
oFF.QStructureMember.prototype.getCurrencyTranslation = function()
{
	return oFF.isNull(this.m_currencyTranslationName) ? null : this.getQueryModel().getCurrencyTranslationManager().getMeasureCurrencyTranslation(this.getCurrencyTranslationName());
};
oFF.QStructureMember.prototype.setCurrencyTranslationName = function(currencyTranslationName)
{
	if (!oFF.XString.isEqual(this.m_currencyTranslationName, currencyTranslationName))
	{
		var oldValue = this.m_currencyTranslationName;
		this.m_currencyTranslationName = currencyTranslationName;
		this.notifyPropertyStringChanged(oFF.QStructureMemberProperties.QY_CURRENCY_TRANSLATION_NAME, oldValue, currencyTranslationName);
	}
};
oFF.QStructureMember.prototype.getCurrencyTranslationName = function()
{
	return this.m_currencyTranslationName;
};
oFF.QStructureMember.prototype.requireRuntimeExport = function(context)
{
	var requireRuntimeObject = context.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(this) !== null;
	if (requireRuntimeObject)
	{
		return true;
	}
	var dimensionContext = context.getQueryModel().getDimensionByName(this.getDimension().getName());
	requireRuntimeObject = dimensionContext.getPlaceholderIdByAlias(this.getAliasName()) !== null;
	if (requireRuntimeObject)
	{
		return true;
	}
	requireRuntimeObject = dimensionContext.getOverdefinedMemberManager().containsOverdefinedProperty(this.getAliasOrMemberName());
	return requireRuntimeObject;
};
oFF.QStructureMember.prototype.exportRuntimeObject = function(context, messageManager)
{
	if (!this.validateBeforeRuntimeObjectExport(context, messageManager))
	{
		return null;
	}
	var dimensionContext;
	var capabilities = context.getModelCapabilities();
	var returnValue = this;
	if (this.getDimension().getDimensionType() === oFF.DimensionType.ACCOUNT && this.getMemberType() === oFF.MemberType.BASIC_MEASURE && capabilities.supportsRestrictedMeasures() && !context.getQueryModel().isBlendingModel())
	{
		this.stopEventing();
		context.getQueryModel().stopEventing();
		dimensionContext = context.getQueryModel().getDimensionByName(this.getDimension().getName());
		var exportOverdefinedRestrictedMeasure = this.exportOverdefinedRestrictedMeasure(context, dimensionContext);
		context.getQueryModel().resumeEventing();
		this.resumeEventing();
		returnValue = exportOverdefinedRestrictedMeasure;
	}
	else if (this.requireRuntimeExport(context))
	{
		this.stopEventing();
		context.getQueryModel().stopEventing();
		dimensionContext = context.getQueryModel().getDimensionByName(this.getDimension().getName());
		var copiedMeasure = oFF.QStructureMember.createMeasure(this.getMemberType(), context.getQueryModel(), dimensionContext);
		copiedMeasure.copySharableProperties(this, true);
		var placeholderId = dimensionContext.getRuntimePlaceholderIdByAlias(this.getAliasName());
		if (oFF.notNull(placeholderId))
		{
			copiedMeasure.setName(placeholderId);
		}
		var visibilityOverride = dimensionContext.getOverdefinedMemberManager().getVisibilityOverride(this.getAliasOrMemberName());
		if (context.getModelCapabilities().supportsMemberVisibility())
		{
			if (oFF.notNull(visibilityOverride))
			{
				copiedMeasure.setResultVisibility(visibilityOverride);
			}
			else if (copiedMeasure.getTagging().containsKey(oFF.QTransientConstants.TAG_IS_TRANSIENT))
			{
				copiedMeasure.setResultVisibility(oFF.ResultVisibility.HIDDEN);
			}
		}
		var numericScale = dimensionContext.getOverdefinedMemberManager().getNumericScaleOverride(this.getAliasOrMemberName());
		if (oFF.notNull(numericScale))
		{
			copiedMeasure.setNumericScale(numericScale.getInteger());
		}
		var numericShift = dimensionContext.getOverdefinedMemberManager().getNumericShiftOverride(this.getAliasOrMemberName());
		if (oFF.notNull(numericShift))
		{
			copiedMeasure.setNumericShift(numericShift.getInteger());
		}
		context.getQueryModel().resumeEventing();
		this.resumeEventing();
		returnValue = copiedMeasure;
	}
	return returnValue;
};
oFF.QStructureMember.prototype.getNestedAllAndUnsatisfiedRequiredDimensionNames = function(context, messageManager, checkInUsemeasures)
{
	var requestedProperties = oFF.XList.create();
	requestedProperties.add(oFF.QStructureMemberQueryProperties.ALL_REQUIRED_DIMENSIONS);
	requestedProperties.add(oFF.QStructureMemberQueryProperties.UNSATISFIED_REQUIRED_DIMENSIONS);
	var result = this.getNestedMemberQueryProperties(context, messageManager, requestedProperties, checkInUsemeasures);
	return oFF.XPair.create(result.getByKey(oFF.QStructureMemberQueryProperties.ALL_REQUIRED_DIMENSIONS.getName()), result.getByKey(oFF.QStructureMemberQueryProperties.UNSATISFIED_REQUIRED_DIMENSIONS.getName()));
};
oFF.QStructureMember.prototype.getAvailableFormulaExceptionIds = function(context)
{
	var formulaThresholdIds = oFF.XHashSetOfString.create();
	if (oFF.notNull(context))
	{
		var formulaThresholdIterator = context.getQueryModel().getFormulaExceptionManager().getIterator();
		while (formulaThresholdIterator.hasNext())
		{
			var formulaThreshold = formulaThresholdIterator.next();
			if (oFF.XString.isEqual(formulaThreshold.getBaseMeasureName(), this.getAliasOrMemberName()))
			{
				formulaThresholdIds.add(formulaThreshold.getName());
			}
		}
	}
	return formulaThresholdIds;
};
oFF.QStructureMember.prototype.getUnsatisfiedRequiredDimensionNames = function(context, messageManager, allRequiredDimensionNames)
{
	var requiredDimensionNamesIterator = allRequiredDimensionNames.getIterator();
	var missingRequiredDimensionNames = oFF.XHashSetOfString.create();
	var queryModel = context.getQueryModel();
	while (requiredDimensionNamesIterator.hasNext())
	{
		var requiredDimensionName = requiredDimensionNamesIterator.next();
		if (this.getExceptionAggregationDimensions().contains(requiredDimensionName))
		{
			continue;
		}
		var requiredDimension = queryModel.getDimensionByName(requiredDimensionName);
		if (oFF.isNull(requiredDimension))
		{
			var calcDimProperties = queryModel.getOlapEnv().getClientQueryObjectManager().getFormulaCalcDimProperties(requiredDimensionName, this.getStorageName());
			if (oFF.notNull(calcDimProperties))
			{
				requiredDimension = calcDimProperties.getFormulaCalcFields().getFirstFieldByType(oFF.PresentationType.KEY).getDimension();
			}
		}
		if (oFF.notNull(requiredDimension) && (requiredDimension.getAxis() === null || requiredDimension.getAxisType() !== oFF.AxisType.ROWS && requiredDimension.getAxisType() !== oFF.AxisType.COLUMNS))
		{
			if (this.getMinimumDrillstate().contains(requiredDimensionName) && (oFF.QFilterUtil.hasSingleValueFilterForDimension(queryModel.getFilter(), requiredDimensionName) || oFF.QVariableUtils.hasSingleValueFilterOnDimension(queryModel.getVariables(), requiredDimensionName)) && (!requiredDimension.isHierarchyActive() || oFF.HierarchyCatalogUtil.getHierarchyLevelCount(requiredDimension.getHierarchies(), requiredDimension.getHierarchyName()) <= 1))
			{
				continue;
			}
			var name = requiredDimension.getText();
			if (oFF.XStringUtils.isNullOrEmpty(name) || context.getSession().hasFeature(oFF.FeatureToggleOlap.SFX_MINIMUM_DRILL_STATE))
			{
				name = requiredDimension.getName();
			}
			missingRequiredDimensionNames.add(name);
		}
	}
	return missingRequiredDimensionNames;
};
oFF.QStructureMember.prototype.getAllRequiredDimensionNames = function(context, messageManager, missingFieldNames)
{
	var allRequiredDimensionNames = oFF.XHashSetOfString.create();
	var dimensionAndFieldNames = this.getRequiredDimensionAndFieldNames();
	var queryModel = context.getQueryModel();
	var requiredFieldNamesIterator = dimensionAndFieldNames.getSecondObject().getIterator();
	while (requiredFieldNamesIterator.hasNext())
	{
		var fieldName = requiredFieldNamesIterator.next();
		var field = queryModel.getFieldByName(fieldName);
		if (oFF.isNull(field))
		{
			var calcDimProperties = this.getOlapEnv().getClientQueryObjectManager().getFormulaCalcDimPropertiesByFieldName(fieldName, this.getStorageName());
			if (oFF.notNull(calcDimProperties))
			{
				field = calcDimProperties.getFormulaCalcFields().getFieldByName(fieldName);
			}
		}
		if (oFF.isNull(field))
		{
			var missingFieldArgs = oFF.XListOfString.create();
			missingFieldArgs.add(oFF.XStringUtils.isNullOrEmpty(this.getText()) ? this.getAliasOrMemberName() : this.getText());
			missingFieldArgs.add(fieldName);
			if (oFF.notNull(messageManager))
			{
				messageManager.addWarning(oFF.ErrorCodes.MEASURE_MISSING_REQUIRED_FIELD, oFF.ErrorMessages.getText(oFF.ErrorMessages.MEASURE_MISSING_REQUIRED_FIELD, missingFieldArgs.getValuesAsReadOnlyListOfString(), this.getAliasOrMemberName()));
			}
			missingFieldNames.add(fieldName);
		}
		else
		{
			allRequiredDimensionNames.add(field.getDimension().getName());
		}
	}
	var dimensionNamesIterator = dimensionAndFieldNames.getFirstObject().getIterator();
	while (dimensionNamesIterator.hasNext())
	{
		var dimensionName = dimensionNamesIterator.next();
		if (!oFF.XString.isEqual(dimensionName, this.getDimension().getName()))
		{
			allRequiredDimensionNames.add(dimensionName);
		}
	}
	return allRequiredDimensionNames;
};
oFF.QStructureMember.prototype.validateBeforeRuntimeObjectExport = function(context, messageManager)
{
	if (this.m_validationErrorCodes.size() > 0)
	{
		return false;
	}
	if (context.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(this) !== null && (this.getDimension() === null || this.getQueryModel() === null))
	{
		var warningArg = oFF.XListOfString.create();
		warningArg.add(this.getName());
		messageManager.addWarning(oFF.ErrorCodes.MEASURE_CONTEXT_RELEASED, oFF.ErrorMessages.getText(oFF.ErrorMessages.MEASURE_CONTEXT_RELEASED, warningArg, this.getAliasOrMemberName()));
		return false;
	}
	var tagging = this.getTagging();
	if (this.isModelDefinedMember() && !tagging.containsKey(oFF.QTransientConstants.TAG_SERIALIZE_MEMBER) && this.getDimension().getDimensionType() === oFF.DimensionType.ACCOUNT)
	{
		return false;
	}
	if (this.requireRuntimeExport(context))
	{
		try
		{
			this.getNestedDependentMemberNames(context, messageManager, false);
		}
		catch (t)
		{
			return false;
		}
	}
	return true;
};
oFF.QStructureMember.prototype.exportOverdefinedRestrictedMeasure = function(context, dimensionContext)
{
	var restrictedMeasure = oFF.QStructureMember.createMeasure(oFF.MemberType.RESTRICTED_MEASURE, context.getQueryModel(), dimensionContext);
	restrictedMeasure.copySharableProperties(this, true);
	if (this.getAccountType() === oFF.AccountType.INC || this.getAccountType() === oFF.AccountType.LEQ)
	{
		restrictedMeasure.setPresentationSignReversal(true);
	}
	var dimension = context.getQueryModel().getPrimaryCalculationDimension();
	var cartesianList = restrictedMeasure.getFilter().getCartesianListByField(dimension.getFlatKeyField());
	var hierarchyName = dimension.getHierarchyName() !== null ? dimension.getHierarchyName() : dimension.getDefaultHierarchyName();
	cartesianList.setHierarchyName(hierarchyName);
	var cartesianElement = cartesianList.addNewCartesianElement();
	cartesianElement.setComparisonOperator(oFF.ComparisonOperator.EQUAL);
	var memberKey = this.getName();
	var startStringToStrip = oFF.XStringUtils.concatenate5("[", this.getDimension().getName(), "].[", hierarchyName, "].&[");
	if (oFF.XString.startsWith(memberKey, startStringToStrip) && oFF.XString.endsWith(memberKey, "]"))
	{
		memberKey = oFF.XString.substring(memberKey, oFF.XString.size(startStringToStrip), oFF.XString.lastIndexOf(memberKey, "]"));
	}
	cartesianElement.getLow().setString(memberKey);
	return restrictedMeasure;
};
oFF.QStructureMember.prototype.setCreatedFromMetadata = function(createdFromMetadata)
{
	this.m_createdFromMetadata = createdFromMetadata;
};
oFF.QStructureMember.prototype.isCreatedFromMetadata = function()
{
	if (this.getMemberType().isCustomMember())
	{
		return this.m_createdFromMetadata;
	}
	return true;
};
oFF.QStructureMember.prototype.isAvailableInMetadata = function()
{
	return this.m_createdFromMetadata;
};
oFF.QStructureMember.prototype.getWindowFunction = function()
{
	return this.m_windowFunction;
};
oFF.QStructureMember.prototype.setWindowFunction = function(windowFunction)
{
	this.m_windowFunction = windowFunction;
	this.notifyNodeChanged();
};
oFF.QStructureMember.prototype.getDimensionContext = function(queryManager)
{
	var dimension = null;
	if (queryManager.getMode() === oFF.QueryManagerMode.BLENDING)
	{
		var blendingSources = queryManager.getQueryModel().getBlendingSources();
		for (var i = 0; i < blendingSources.size(); i++)
		{
			var blendingSource = blendingSources.get(i);
			var leafQueryModel = blendingSource.getQueryModel();
			dimension = this.getDimensionContext(leafQueryModel.getQueryManager());
			if (oFF.notNull(dimension))
			{
				return dimension;
			}
		}
	}
	else if (queryManager.getQueryModel().getName() === null || oFF.XString.isEqual(queryManager.getQueryModel().getName(), this.getQueryModel().getName()))
	{
		return queryManager.getQueryModel().getDimensionByName(this.getDimension().getName());
	}
	return dimension;
};
oFF.QStructureMember.prototype.traverseDependencyGraph = function(context, nestedVisitedMembers, recursiveStack, messageManager, runValidation, skipModelerDefinedMembersDependencies, validateAugmentedAccountMembers)
{
	var dependentMemberNames;
	if (this.isModelDefinedMember() && skipModelerDefinedMembersDependencies)
	{
		dependentMemberNames = oFF.XListOfString.create();
	}
	else
	{
		dependentMemberNames = this.getTopLevelDependentMemberNames(context);
	}
	if (!nestedVisitedMembers.contains(this.getAliasOrMemberName()))
	{
		nestedVisitedMembers.add(this.getAliasOrMemberName());
		if (this.getMemberType() === oFF.MemberType.RESTRICTED_MEASURE && dependentMemberNames.size() === 1 && oFF.XString.isEqual(this.getAliasOrMemberName(), dependentMemberNames.get(0)))
		{
			return false;
		}
		recursiveStack.add(this.getAliasOrMemberName());
		var dimensionContext = this.getDimensionContext(context.getQueryManager());
		if (oFF.notNull(dependentMemberNames) && oFF.notNull(dimensionContext))
		{
			var isPrimary = dimensionContext === dimensionContext.getQueryModel().getPrimaryCalculationDimension();
			var dependentMemberNamesIter = dependentMemberNames.getIterator();
			while (dependentMemberNamesIter.hasNext())
			{
				var dependentMemberName = dependentMemberNamesIter.next();
				if (oFF.XString.startsWith(dependentMemberName, "$$") && oFF.XString.endsWith(dependentMemberName, "$$"))
				{
					continue;
				}
				var dependentMember = dimensionContext.getStructureMemberByAliasOrMember(dependentMemberName);
				if (oFF.isNull(dependentMember))
				{
					dependentMember = this.getSharedStructuredMember(dependentMemberName, this.getStorageName(), isPrimary);
				}
				if (oFF.notNull(dependentMember))
				{
					if (!nestedVisitedMembers.contains(dependentMember.getAliasOrMemberName()) && dependentMember.traverseDependencyGraph(context, nestedVisitedMembers, recursiveStack, messageManager, runValidation, skipModelerDefinedMembersDependencies, validateAugmentedAccountMembers))
					{
						if (runValidation)
						{
							dependentMember.validate(context, messageManager, false, validateAugmentedAccountMembers);
						}
						return true;
					}
					else if (recursiveStack.contains(dependentMember.getAliasOrMemberName()))
					{
						return true;
					}
				}
				else if (dimensionContext.getDimensionType() !== oFF.DimensionType.ACCOUNT || validateAugmentedAccountMembers)
				{
					var args = oFF.XListOfString.create();
					args.add(dependentMemberName);
					var errorMsg = oFF.ErrorMessages.getText(oFF.ErrorMessages.MEASURE_MISSING_DEPENDENT, args, this.getAliasOrMemberName());
					if (oFF.notNull(messageManager))
					{
						messageManager.addWarning(oFF.ErrorCodes.MEASURE_MISSING_DEPENDENT, errorMsg);
					}
					if (this.getMemberType() === oFF.MemberType.RESTRICTED_MEASURE)
					{
						if (this.getQueryManager().getSystemType() !== oFF.SystemType.BW)
						{
							throw oFF.XException.createRuntimeException(errorMsg);
						}
					}
				}
			}
		}
	}
	recursiveStack.removeElement(this.getAliasOrMemberName());
	return false;
};
oFF.QStructureMember.prototype.getNestedDependentMemberNames = function(context, messageManager, skipModelerDefinedMembersDependencies)
{
	var nestedDependentMemberNames = oFF.XListOfString.create();
	var recursiveStack = oFF.XListOfString.create();
	if (this.traverseDependencyGraph(context, nestedDependentMemberNames, recursiveStack, messageManager, false, skipModelerDefinedMembersDependencies, false))
	{
		if (oFF.notNull(messageManager))
		{
			messageManager.addWarning(oFF.ErrorCodes.MEASURE_CYCLICAL_DEPENDENCY, oFF.ErrorMessages.MEASURE_CYCLICAL_DEPENDENCY);
		}
		throw oFF.XException.createRuntimeException(oFF.ErrorMessages.MEASURE_CYCLICAL_DEPENDENCY);
	}
	nestedDependentMemberNames.removeElement(this.getAliasOrMemberName());
	return nestedDependentMemberNames;
};
oFF.QStructureMember.prototype.getTopLevelDependentMemberNames = function(context)
{
	return oFF.XListOfString.create();
};
oFF.QStructureMember.prototype.getTopLevelDependentFieldNames = function(context)
{
	var usedFields = oFF.XListOfString.create();
	if (oFF.notNull(this.m_exceptionAggregation) && this.m_exceptionAggregation._getUsedDimensionNames() !== null)
	{
		var usedDimensionNamesIter = this.m_exceptionAggregation._getUsedDimensionNames().getIterator();
		while (usedDimensionNamesIter.hasNext())
		{
			var usedDimensionName = usedDimensionNamesIter.next();
			var dimension = context.getQueryModel().getDimensionByName(usedDimensionName);
			if (oFF.notNull(dimension))
			{
				usedFields.add(dimension.getKeyField().getName());
			}
			else
			{
				var formulaCalcDimProperties = context.getOlapEnv().getClientQueryObjectManager().getFormulaCalcDimProperties(usedDimensionName, this.getStorageName());
				if (oFF.notNull(formulaCalcDimProperties))
				{
					var keyField = formulaCalcDimProperties.getFormulaCalcFields().getFirstFieldByType(oFF.PresentationType.KEY);
					if (oFF.notNull(keyField))
					{
						usedFields.add(keyField.getName());
					}
				}
			}
		}
	}
	return usedFields;
};
oFF.QStructureMember.prototype.generateTransientObjects = function(context, messageManager)
{
	if (this.getContext() === null || this.getDimension() === null || this.getOlapEnv() === null)
	{
		return;
	}
	var isMeasureInUse = this.isMeasureInUse(context);
	if (isMeasureInUse && !this.validate(context, messageManager, true, false))
	{
		return;
	}
	var clientQueryObjectManager = this.getOlapEnv().getClientQueryObjectManager();
	if (clientQueryObjectManager.getClientQueryObjectByKeyRef(this) !== null)
	{
		var dimensionContext = this.getDimensionContext(context.getQueryManager());
		if (oFF.notNull(dimensionContext))
		{
			var dependentMemberNames = this.getTopLevelDependentMemberNames(context);
			if (oFF.notNull(dependentMemberNames))
			{
				var isPrimaryStructure = dimensionContext === context.getQueryModel().getPrimaryCalculationDimension();
				var memberNamesIter = dependentMemberNames.getIterator();
				while (memberNamesIter.hasNext())
				{
					var memberName = memberNamesIter.next();
					if (dimensionContext.getStructureMemberByAliasOrMember(memberName) === null)
					{
						var dependentMember = this.getSharedStructuredMember(memberName, this.getStorageName(), isPrimaryStructure);
						if (oFF.notNull(dependentMember))
						{
							dependentMember.generateTransientObjects(dimensionContext, messageManager);
							dependentMember.getTagging().put(oFF.QTransientConstants.TAG_IS_TRANSIENT, "");
							dimensionContext.addMeasure(dependentMember);
						}
					}
				}
			}
		}
		var dependentFieldNames = this.getTopLevelDependentFieldNames(context);
		var dependentFieldNamesIter = dependentFieldNames.getIterator();
		var formulaCalcDimProperties;
		while (dependentFieldNamesIter.hasNext())
		{
			var fieldName = dependentFieldNamesIter.next();
			if (context.getQueryModel().getFieldByNameOrAlias(fieldName) === null)
			{
				formulaCalcDimProperties = clientQueryObjectManager.getFormulaCalcDimPropertiesByFieldName(fieldName, this.getStorageName());
				this.generateDependentFormulaCalcDim(context, messageManager, dimensionContext, formulaCalcDimProperties);
			}
		}
	}
};
oFF.QStructureMember.prototype.isMeasureInUse = function(context)
{
	var queryModel = context.getQueryModel();
	var isUsedInDynamicFilter = false;
	if (queryModel.getFilter().isDynamicFilterInitialized())
	{
		var dimensionContext;
		if (this.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(this) !== null)
		{
			dimensionContext = this.getDimensionContext(context.getQueryManager());
		}
		else
		{
			dimensionContext = this.getDimension();
		}
		var filterRootElement = queryModel.getFilter().getDynamicFilter().getFilterRootElement();
		var memberNames = oFF.QFilterUtil.getMemberNamesFromFilter(filterRootElement, dimensionContext.getName());
		if (memberNames.isEmpty())
		{
			var linkedFilters = queryModel.getFilter().getLinkedFilters().getValuesAsReadOnlyList();
			for (var i = 0; i < linkedFilters.size() && memberNames.isEmpty(); i++)
			{
				var filterElement = linkedFilters.get(i).getFilterRootElement();
				memberNames = oFF.QFilterUtil.getMemberNamesFromFilter(filterElement, dimensionContext.getName());
			}
		}
		var isMemberUnfilteredButDimensionInUse = memberNames.size() === 0 && (dimensionContext.getAxisType() === oFF.AxisType.ROWS || dimensionContext.getAxisType() === oFF.AxisType.COLUMNS);
		isUsedInDynamicFilter = isMemberUnfilteredButDimensionInUse || memberNames.contains(this.getAliasOrMemberName()) || memberNames.contains(dimensionContext.getPlaceholderIdByAlias(this.getAliasOrMemberName()));
	}
	return this.getTagging().containsKey(oFF.QTransientConstants.TAG_IS_TRANSIENT) || isUsedInDynamicFilter;
};
oFF.QStructureMember.prototype.isOutOfContextMeasureInUse = function(context)
{
	var iterator = context.getQueryModel().getSortingManager().getSortingOperations().getIterator();
	while (iterator.hasNext())
	{
		var sort = iterator.next();
		if (sort.getSortingType() === oFF.SortType.DATA_CELL_VALUE)
		{
			var dataCellSort = sort;
			var pathIterator = dataCellSort.getElementPath().getIterator();
			while (pathIterator.hasNext())
			{
				var path = pathIterator.next();
				if (oFF.XString.isEqual(path.getSelectValue(), this.getAliasOrMemberName()))
				{
					return true;
				}
			}
		}
		else if (sort.getSortingType() === oFF.SortType.MEASURE)
		{
			var measureSort = sort;
			if (measureSort.getMeasure() === this)
			{
				return true;
			}
		}
	}
	return false;
};
oFF.QStructureMember.prototype.generateDependentFormulaCalcDim = function(context, messageManager, dimensionContext, formulaCalcDimProperties)
{
	if (oFF.notNull(formulaCalcDimProperties))
	{
		var newFormulaCalculatedDimension = oFF.QFactory.createFormulaCalculatedDimension(context, formulaCalcDimProperties.getName());
		newFormulaCalculatedDimension.setPropertiesKeyRef(formulaCalcDimProperties);
		context.getQueryModel().addDimension(newFormulaCalculatedDimension);
		context.getQueryModel().getFreeAxis().add(newFormulaCalculatedDimension);
		newFormulaCalculatedDimension.getTagging().put(oFF.QTransientConstants.TAG_IS_TRANSIENT, "");
	}
};
oFF.QStructureMember.prototype.destroyTransientObjects = function(context)
{
	var clientQueryObjectManager = this.getOlapEnv().getClientQueryObjectManager();
	if (clientQueryObjectManager.getClientQueryObjectByKeyRef(this) !== null)
	{
		var dimensionContext = this.getDimensionContext(context.getQueryManager());
		if (oFF.notNull(dimensionContext))
		{
			var allStructureMembers = dimensionContext.getLoadedStructureMembers();
			for (var i = allStructureMembers.size() - 1; i >= 0; i--)
			{
				var member = allStructureMembers.get(i);
				if (oFF.notNull(member))
				{
					if (member.getTagging().containsKey(oFF.QTransientConstants.TAG_IS_TRANSIENT))
					{
						member.getTagging().remove(oFF.QTransientConstants.TAG_IS_TRANSIENT);
						dimensionContext.removeMeasure(member.getName());
					}
				}
			}
		}
		var freeAxis = context.getQueryModel().getFreeAxis();
		var dimensions = freeAxis.getDimensions();
		for (var j = dimensions.size() - 1; j >= 0; j--)
		{
			var dimension = dimensions.get(j);
			if (dimension.getTagging().containsKey(oFF.QTransientConstants.TAG_IS_TRANSIENT))
			{
				var formulaCalcDim = dimension;
				context.getQueryModel().removeCalculatedDimensionByName(formulaCalcDim.getName());
				formulaCalcDim.destroyTransientObjects(dimensionContext);
				oFF.XObjectExt.release(formulaCalcDim);
			}
		}
	}
	this.m_validationErrorCodes.clear();
};
oFF.QStructureMember.prototype.addFieldsUsedInComplexContainer = function(complexSelectionRoot, usedFields)
{
	var componentType = complexSelectionRoot.getComponentType();
	if (componentType === oFF.FilterComponentType.OPERATION)
	{
		var filterOp = complexSelectionRoot;
		usedFields.add(filterOp.getFieldMetadata().getName());
	}
	else if (componentType === oFF.FilterComponentType.AND || componentType === oFF.FilterComponentType.OR)
	{
		var filterAlgebra = complexSelectionRoot;
		var filterSize = filterAlgebra.size();
		for (var idxAnd = 0; idxAnd < filterSize; idxAnd++)
		{
			this.addFieldsUsedInComplexContainer(filterAlgebra.get(idxAnd), usedFields);
		}
	}
	else if (componentType === oFF.FilterComponentType.CARTESIAN_LIST)
	{
		var complexCartesianList = complexSelectionRoot;
		usedFields.add(complexCartesianList.getFieldMetadata().getName());
	}
};
oFF.QStructureMember.prototype.isCrossCalculation = function()
{
	return this.getQueryModel().getSecondaryCalculationDimension() === this.getDimension();
};
oFF.QStructureMember.prototype.getRateType = function()
{
	return this.m_rateType;
};
oFF.QStructureMember.prototype.getRuntimeRateType = function()
{
	return this.getRateType();
};
oFF.QStructureMember.prototype.getUnitDimensionName = function()
{
	return this.m_unitDimensionName;
};
oFF.QStructureMember.prototype.getUnitDimensionProperty = function()
{
	return this.m_unitDimensionProperty;
};
oFF.QStructureMember.prototype.setRateType = function(rateType)
{
	if (this.m_rateType !== rateType)
	{
		var oldValue = this.m_rateType;
		this.m_rateType = rateType;
		this.notifyPropertyConstantChanged(oFF.QStructureMemberProperties.QY_RATE_TYPE, oldValue, rateType);
	}
};
oFF.QStructureMember.prototype.setUnitDimensionName = function(unitDimensionName)
{
	this.m_unitDimensionName = unitDimensionName;
};
oFF.QStructureMember.prototype.setUnitDimensionProperty = function(unitDimensionProperty)
{
	this.m_unitDimensionProperty = unitDimensionProperty;
};
oFF.QStructureMember.prototype.getMappedCurrencyTranslationNameForInAData = function()
{
	var currencyTranslationManager = this.getQueryModelBase().getCurrencyTranslationManagerBase();
	if (oFF.isNull(currencyTranslationManager) || currencyTranslationManager.isLegacyMeasureCurrencyTranslationAccountModel())
	{
		return null;
	}
	var currencyTranslation = null;
	if (oFF.notNull(this.m_currencyTranslationName))
	{
		currencyTranslation = this.getCurrencyTranslation();
	}
	else if (this.m_unitType === oFF.UnitType.CURRENCY || !this.getModelCapabilities().supportsCustomMeasuresInMetadata())
	{
		currencyTranslation = currencyTranslationManager.getDefaultMeasureCurrencyTranslation();
	}
	if (oFF.notNull(currencyTranslation) && !currencyTranslation.isIgnore())
	{
		return currencyTranslation.getMappedName(this.m_rateType);
	}
	return null;
};
oFF.QStructureMember.prototype.getMinimumDrillstate = function()
{
	return this.m_minimumDrillState;
};
oFF.QStructureMember.prototype.addMinimumDrillState = function(minimumDrillState)
{
	this.m_minimumDrillState.add(minimumDrillState);
	this.notifyNodeChanged();
};
oFF.QStructureMember.prototype.validate = function(context, messageManager, validateDependencies, validateAugmentedAccountMembers)
{
	var clientQueryObjectManager = this.getOlapEnv().getClientQueryObjectManager();
	if (clientQueryObjectManager.getClientQueryObjectByKeyRef(this) === null)
	{
		return true;
	}
	var isValid = true;
	if (validateDependencies)
	{
		var validationMessageManager = oFF.MessageManager.createMessageManagerExt(this.getSession());
		var nestedDependentMemberNames = oFF.XListOfString.create();
		var recursiveStack = oFF.XListOfString.create();
		this.traverseDependencyGraph(context, nestedDependentMemberNames, recursiveStack, validationMessageManager, true, false, validateAugmentedAccountMembers);
		if (validationMessageManager.hasWarnings())
		{
			isValid = false;
			var warnings = validationMessageManager.getWarnings();
			for (var i = 0; i < warnings.size(); i++)
			{
				var warning = warnings.get(i);
				if (oFF.notNull(messageManager))
				{
					messageManager.addMessage(warning);
				}
				this.m_validationErrorCodes.add(oFF.XIntegerValue.create(warning.getCode()));
			}
		}
	}
	return isValid;
};
oFF.QStructureMember.prototype.validateRequiredFields = function(context, messageManager, requiredFieldNames)
{
	if (oFF.isNull(context) || oFF.isNull(requiredFieldNames) || this.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(this) === null)
	{
		return true;
	}
	var missingFields = oFF.XHashSetOfString.create();
	var fieldNamesIter = requiredFieldNames.getIterator();
	while (fieldNamesIter.hasNext())
	{
		var fieldName = fieldNamesIter.next();
		var field = context.getQueryModel().getFieldByName(fieldName);
		if (oFF.isNull(field))
		{
			if (this.getOlapEnv().getClientQueryObjectManager().getFormulaCalcDimPropertiesByFieldName(fieldName, this.getStorageName()) === null)
			{
				missingFields.add(fieldName);
			}
		}
	}
	var isValid = missingFields.size() === 0;
	if (!isValid)
	{
		var errorMsgArgs = oFF.XListOfString.create();
		var formulaName = this.getText();
		if (oFF.XStringUtils.isNullOrEmpty(formulaName))
		{
			formulaName = this.getAliasOrMemberName();
		}
		errorMsgArgs.add(formulaName);
		var names = missingFields.getValuesAsReadOnlyListOfString();
		var message = names.get(0);
		for (var idxName = 1; idxName < missingFields.size(); idxName++)
		{
			message = oFF.XStringUtils.concatenate3(message, ",", names.get(idxName));
		}
		errorMsgArgs.add(message);
		var errorMessage = oFF.ErrorMessages.getText(oFF.ErrorMessages.MEASURE_MISSING_REQUIRED_FIELD, errorMsgArgs, this.getAliasOrMemberName());
		if (oFF.notNull(messageManager))
		{
			messageManager.addWarning(oFF.ErrorCodes.MEASURE_MISSING_REQUIRED_FIELD, errorMessage);
		}
		this.m_validationErrorCodes.add(oFF.XIntegerValue.create(oFF.ErrorCodes.MEASURE_MISSING_REQUIRED_FIELD));
	}
	return isValid;
};
oFF.QStructureMember.prototype.getValidationErrorCodes = function()
{
	return this.m_validationErrorCodes;
};
oFF.QStructureMember.prototype.isVersionAggregated = function(context)
{
	if (oFF.isNull(context) || context.getQueryModel().getDimensionByType(oFF.DimensionType.VERSION) === null)
	{
		return false;
	}
	var dependentMemberNames = this.getTopLevelDependentMemberNames(context);
	var dimensionContext = this.getDimensionContext(context.getQueryManager());
	var isVersionAggregated = false;
	if (oFF.notNull(dependentMemberNames) && oFF.notNull(dimensionContext))
	{
		var isPrimary = dimensionContext === dimensionContext.getQueryModel().getPrimaryCalculationDimension();
		var dependentMemberNamesIter = dependentMemberNames.getIterator();
		while (dependentMemberNamesIter.hasNext())
		{
			var dependentMemberName = dependentMemberNamesIter.next();
			var dependentMember = dimensionContext.getStructureMemberByAliasOrMember(dependentMemberName);
			if (oFF.isNull(dependentMember))
			{
				dependentMember = this.getOlapEnv().getClientQueryObjectManager().getStructuredMember(dependentMemberName, this.getStorageName(), isPrimary);
			}
			if (oFF.notNull(dependentMember))
			{
				isVersionAggregated = dependentMember.isVersionAggregated(context);
				if (!isVersionAggregated)
				{
					break;
				}
			}
		}
	}
	return isVersionAggregated;
};
oFF.QStructureMember.prototype.getSharedStructuredMember = function(name, storageName, isPrimaryStructureMember)
{
	var memberName = name;
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel))
	{
		var datasetId = queryModel.getDatasetId();
		if (this.getDimension().getDimensionType() === oFF.DimensionType.SECONDARY_STRUCTURE && oFF.notNull(datasetId) && oFF.XString.isEqual(memberName, oFF.MeasureModelConstants.DEFAULT_CUSTOMDIMENSION2_MEMBER))
		{
			memberName = oFF.XStringUtils.concatenate3(datasetId, "-", memberName);
		}
		else
		{
			var currencyTranslationManager = queryModel.getCurrencyTranslationManager();
			if (oFF.notNull(currencyTranslationManager) && oFF.notNull(datasetId) && oFF.XString.isEqual(memberName, oFF.CurrencyConstants.DEFAULT_CURRENCY) || oFF.XString.isEqual(memberName, oFF.CurrencyConstants.LOCAL_CURRENCY))
			{
				memberName = oFF.XStringUtils.concatenate3(datasetId, "-", memberName);
			}
		}
	}
	return this.getOlapEnv().getClientQueryObjectManager().getStructuredMember(memberName, this.getStorageName(), isPrimaryStructureMember);
};
oFF.QStructureMember.prototype.getRequiredDimensionAndFieldNames = function()
{
	return oFF.XPair.create(this.getMinimumDrillstate(), oFF.XListOfString.create());
};
oFF.QStructureMember.prototype.getText = function()
{
	var text = oFF.QDimensionMember.prototype.getText.call( this );
	var overrideText = this.m_overrideText;
	if (oFF.isNull(overrideText))
	{
		overrideText = this.getSharedOverrideText();
	}
	if (oFF.notNull(overrideText))
	{
		text = overrideText;
	}
	return text;
};
oFF.QStructureMember.prototype.getSharedOverrideText = function()
{
	var overrideText = null;
	if (this.getOlapEnv() !== null && this.getApplication() !== null && this.getSession() !== null && this.getSession().hasFeature(oFF.FeatureToggleOlap.MEMBER_OVERRIDE_TEXTS))
	{
		var dimension = this.getDimension();
		if (this.getQueryModel() !== null && oFF.notNull(dimension) && dimension.getMetadata() !== null)
		{
			var cacheKey = dimension.getMetadata().getCacheKey();
			var olapEnvCube = this.getOlapEnv().getCubeContainer(cacheKey);
			if (oFF.notNull(olapEnvCube))
			{
				var storageName = this.getQueryModel().getQueryManager().getClientQueryObjectStorageName();
				var datasetId = this.getQueryModel().getDatasetId();
				overrideText = olapEnvCube.getDimensionMemberOverrideTextByDatasetId(storageName, dimension.getName(), this.getName(), datasetId);
			}
		}
	}
	return overrideText;
};
oFF.QStructureMember.prototype.getOriginalText = function()
{
	return oFF.QDimensionMember.prototype.getText.call( this );
};
oFF.QStructureMember.prototype.setOverrideText = function(overrideText)
{
	if (!oFF.XString.isEqual(overrideText, "") && !oFF.XString.isEqual(overrideText, this.m_overrideText))
	{
		this.m_overrideText = overrideText;
		this.notifyPropertyStringChanged(oFF.QStructureMemberProperties.QY_OVERRIDE_TEXT, this.m_overrideText, overrideText);
	}
};
oFF.QStructureMember.prototype.getOverrideText = function()
{
	return this.m_overrideText;
};
oFF.QStructureMember.prototype.hasOverrideTextDefined = function()
{
	return oFF.notNull(this.m_overrideText) || this.getSharedOverrideText() !== null;
};
oFF.QStructureMember.prototype.getNestedMinimumDrillState = function(context, messageManager, checkInUsemeasures)
{
	var requestedProperties = oFF.XList.create();
	requestedProperties.add(oFF.QStructureMemberQueryProperties.MINIMUM_DRILL_STATE_DIMENSIONS);
	var result = this.getNestedMemberQueryProperties(context, messageManager, requestedProperties, checkInUsemeasures);
	return result.getByKey(oFF.QStructureMemberQueryProperties.MINIMUM_DRILL_STATE_DIMENSIONS.getName());
};
oFF.QStructureMember.prototype.getNestedMemberQueryProperties = function(context, messageManager, requestedProperties, checkInUsemeasures)
{
	var result = oFF.XHashMapByString.create();
	var isMeasureInUse = !this.getTagging().containsKey(oFF.QTransientConstants.TAG_IS_TRANSIENT) && this.isMeasureInUse(context);
	if (checkInUsemeasures && (isMeasureInUse || this.isOutOfContextMeasureInUse(context)) || !checkInUsemeasures)
	{
		var thisAndDependentMemberNames = oFF.XHashSetOfString.create();
		thisAndDependentMemberNames.add(this.getAliasOrMemberName());
		try
		{
			thisAndDependentMemberNames.addAll(this.getNestedDependentMemberNames(context, messageManager, true));
		}
		catch (t)
		{
			return result;
		}
		var clientQueryObjectManager = this.getOlapEnv().getClientQueryObjectManager();
		var dimensionContext = this.getDimensionContext(context.getQueryManager());
		if (oFF.notNull(clientQueryObjectManager) && oFF.notNull(dimensionContext))
		{
			var contextQueryModel = context.getQueryModel();
			var thisAndDependentMemberNamesIterator = thisAndDependentMemberNames.getIterator();
			while (thisAndDependentMemberNamesIterator.hasNext())
			{
				var memberName = thisAndDependentMemberNamesIterator.next();
				var member = dimensionContext.getStructureMemberByAliasOrMember(memberName);
				if (oFF.isNull(member))
				{
					member = clientQueryObjectManager.getStructuredMember(memberName, contextQueryModel.getQueryManager().getClientQueryObjectStorageName(), oFF.XString.isEqual(dimensionContext.getName(), contextQueryModel.getPrimaryCalculationDimension().getName()));
				}
				if (oFF.notNull(member))
				{
					if (requestedProperties.contains(oFF.QStructureMemberQueryProperties.MINIMUM_DRILL_STATE_DIMENSIONS))
					{
						if (!result.containsKey(oFF.QStructureMemberQueryProperties.MINIMUM_DRILL_STATE_DIMENSIONS.getName()))
						{
							result.put(oFF.QStructureMemberQueryProperties.MINIMUM_DRILL_STATE_DIMENSIONS.getName(), oFF.XHashSetOfString.create());
						}
						var minimumDrillStateDimensions = result.getByKey(oFF.QStructureMemberQueryProperties.MINIMUM_DRILL_STATE_DIMENSIONS.getName());
						minimumDrillStateDimensions.addAll(member.getMinimumDrillstate());
					}
					if (requestedProperties.contains(oFF.QStructureMemberQueryProperties.ALL_REQUIRED_DIMENSIONS) || requestedProperties.contains(oFF.QStructureMemberQueryProperties.UNSATISFIED_REQUIRED_DIMENSIONS))
					{
						var missingFieldNames = oFF.XHashSetOfString.create();
						var memberAllRequiredDimensions = member.getAllRequiredDimensionNames(context, messageManager, missingFieldNames);
						if (requestedProperties.contains(oFF.QStructureMemberQueryProperties.ALL_REQUIRED_DIMENSIONS))
						{
							if (!result.containsKey(oFF.QStructureMemberQueryProperties.ALL_REQUIRED_DIMENSIONS.getName()))
							{
								result.put(oFF.QStructureMemberQueryProperties.ALL_REQUIRED_DIMENSIONS.getName(), oFF.XHashSetOfString.create());
							}
							var allRequiredDimensions = result.getByKey(oFF.QStructureMemberQueryProperties.ALL_REQUIRED_DIMENSIONS.getName());
							allRequiredDimensions.addAll(memberAllRequiredDimensions);
							allRequiredDimensions.addAll(missingFieldNames);
						}
						if (requestedProperties.contains(oFF.QStructureMemberQueryProperties.UNSATISFIED_REQUIRED_DIMENSIONS))
						{
							if (!result.containsKey(oFF.QStructureMemberQueryProperties.UNSATISFIED_REQUIRED_DIMENSIONS.getName()))
							{
								result.put(oFF.QStructureMemberQueryProperties.UNSATISFIED_REQUIRED_DIMENSIONS.getName(), oFF.XHashSetOfString.create());
							}
							var unsatisfiedRequiredDimensions = result.getByKey(oFF.QStructureMemberQueryProperties.UNSATISFIED_REQUIRED_DIMENSIONS.getName());
							unsatisfiedRequiredDimensions.addAll(member.getUnsatisfiedRequiredDimensionNames(context, messageManager, memberAllRequiredDimensions));
							unsatisfiedRequiredDimensions.addAll(missingFieldNames);
						}
					}
				}
			}
		}
	}
	return result;
};
oFF.QStructureMember.prototype.validateWithDataModelScope = function(context)
{
	var validationResult = oFF.MessageManager.createMessageManagerExt(this.getSession());
	this.validate(context, validationResult, true, true);
	return validationResult;
};
oFF.QStructureMember.prototype.validateWithQueryModelScope = function(context)
{
	var validationResult = oFF.MessageManager.createMessageManagerExt(this.getSession());
	var requestedProperties = oFF.XList.create();
	requestedProperties.add(oFF.QStructureMemberQueryProperties.UNSATISFIED_REQUIRED_DIMENSIONS);
	requestedProperties.add(oFF.QStructureMemberQueryProperties.ALL_REQUIRED_DIMENSIONS);
	var nestedMemberProperties = this.getNestedMemberQueryProperties(context, validationResult, requestedProperties, false);
	var unsatisfiedRequiredDimensionNames = nestedMemberProperties.getByKey(oFF.QStructureMemberQueryProperties.UNSATISFIED_REQUIRED_DIMENSIONS.getName());
	var allRequiredDimensionNames = nestedMemberProperties.getByKey(oFF.QStructureMemberQueryProperties.ALL_REQUIRED_DIMENSIONS.getName());
	if (oFF.notNull(unsatisfiedRequiredDimensionNames) && unsatisfiedRequiredDimensionNames.size() > 0)
	{
		validationResult.addErrorExt(oFF.OriginLayer.APPLICATION, oFF.ErrorCodes.MEASURE_MISSING_REQUIRED_DIMENSION, "", allRequiredDimensionNames);
	}
	return validationResult;
};
oFF.QStructureMember.prototype.mergeDeepRecursive = function(settings, other)
{
	oFF.QDimensionMember.prototype.mergeDeepRecursive.call( this , settings, other);
	var otherMember = other;
	this.setText(otherMember.getOriginalText());
	this.setOverrideText(otherMember.getOverrideText());
};

oFF.QDimensionMemberVariable = function() {};
oFF.QDimensionMemberVariable.prototype = new oFF.QVariable();
oFF.QDimensionMemberVariable.prototype._ff_c = "QDimensionMemberVariable";

oFF.QDimensionMemberVariable.createDimensionMemberVariable = function(context, parent, name, description)
{
	var variable = new oFF.QDimensionMemberVariable();
	variable.setupDimensionMemberVariable(context, parent, name, description);
	variable.m_manualInputResultMembers = oFF.XListOfNameObject.create();
	return variable;
};
oFF.QDimensionMemberVariable.valueToXString = function(value)
{
	return oFF.isNull(value) ? null : oFF.XStringValue.create(value.toString());
};
oFF.QDimensionMemberVariable.prototype.m_dimension = null;
oFF.QDimensionMemberVariable.prototype.m_defaultMemberFilter = null;
oFF.QDimensionMemberVariable.prototype.m_memberFilter = null;
oFF.QDimensionMemberVariable.prototype.m_externalMemberFilter = null;
oFF.QDimensionMemberVariable.prototype.m_filterCapability = null;
oFF.QDimensionMemberVariable.prototype.m_filterCapabilities = null;
oFF.QDimensionMemberVariable.prototype.m_hierarchyName = null;
oFF.QDimensionMemberVariable.prototype.m_hierarchyVersion = null;
oFF.QDimensionMemberVariable.prototype.m_hierarchyKeyDate = null;
oFF.QDimensionMemberVariable.prototype.m_hierarchyBaseDimension = null;
oFF.QDimensionMemberVariable.prototype.m_manualInputResultMembers = null;
oFF.QDimensionMemberVariable.prototype.m_supportsValuehelp = false;
oFF.QDimensionMemberVariable.prototype.m_uniqueId = null;
oFF.QDimensionMemberVariable.prototype.m_isInputEnabledAndExit = null;
oFF.QDimensionMemberVariable.prototype.m_isUsedInFixedFilter = false;
oFF.QDimensionMemberVariable.prototype.m_isUsedInDynamicFilter = false;
oFF.QDimensionMemberVariable.prototype.m_isWinControlInAutoSubmit = false;
oFF.QDimensionMemberVariable.prototype.m_isHierarchyInfoVariable = false;
oFF.QDimensionMemberVariable.prototype.m_dimMemberVariableCapabilities = null;
oFF.QDimensionMemberVariable.prototype.m_runtimeReferences = null;
oFF.QDimensionMemberVariable.prototype.setupDimensionMemberVariable = function(context, parent, name, description)
{
	oFF.QVariable.prototype.setupVariable.call( this , context, parent, null, name, description);
	this.m_dimMemberVariableCapabilities = oFF.QFactory.createCapabilitiesDecorator(this);
	this.m_dimMemberVariableCapabilities.setSupportsVisibilityFilter(false);
	this.m_dimMemberVariableCapabilities.setSupportsComplexFilter(true);
	this.m_dimMemberVariableCapabilities.setSupportsComplexTupleFilter(true);
	this.m_dimMemberVariableCapabilities.setSupportsCellValueOperand(false);
	this.m_supportsValuehelp = true;
	this.m_uniqueId = oFF.XGuid.getGuid();
	this.m_isInputEnabledAndExit = oFF.TriStateBool._DEFAULT;
	this.m_runtimeReferences = oFF.XListOfString.create();
};
oFF.QDimensionMemberVariable.prototype.setParent = function(parent)
{
	oFF.QVariable.prototype.setParent.call( this , parent);
	this.m_dimMemberVariableCapabilities.updateContext(this);
};
oFF.QDimensionMemberVariable.prototype.getModelCapabilities = function()
{
	return this.m_dimMemberVariableCapabilities;
};
oFF.QDimensionMemberVariable.prototype.getVariableType = function()
{
	return oFF.VariableType.DIMENSION_MEMBER_VARIABLE;
};
oFF.QDimensionMemberVariable.prototype.releaseObject = function()
{
	this.m_dimMemberVariableCapabilities = oFF.XObjectExt.release(this.m_dimMemberVariableCapabilities);
	this.m_dimension = null;
	this.m_hierarchyName = null;
	this.m_hierarchyVersion = null;
	this.m_hierarchyKeyDate = null;
	this.m_hierarchyBaseDimension = null;
	this.m_filterCapability = null;
	this.m_filterCapabilities = null;
	this.m_defaultMemberFilter = null;
	this.m_memberFilter = null;
	this.m_externalMemberFilter = null;
	this.m_uniqueId = null;
	this.m_isInputEnabledAndExit = null;
	this.m_manualInputResultMembers = oFF.XObjectExt.release(this.m_manualInputResultMembers);
	this.m_runtimeReferences = oFF.XObjectExt.release(this.m_runtimeReferences);
	oFF.QVariable.prototype.releaseObject.call( this );
};
oFF.QDimensionMemberVariable.prototype.copyFromInternal = function(other, flags)
{
	oFF.QVariable.prototype.copyFromInternal.call( this , other, flags);
	var originDimensionMemberVariable = other;
	var queryModel = this.getQueryModel();
	var context = this.getContext();
	var cloneDimension = null;
	if (originDimensionMemberVariable.getDimension() !== null)
	{
		cloneDimension = queryModel.getDimensionByNameFromExistingMetadata(originDimensionMemberVariable.getDimension().getName());
		this.setDimension(cloneDimension);
	}
	if (oFF.notNull(originDimensionMemberVariable.m_manualInputResultMembers))
	{
		this.m_manualInputResultMembers = oFF.XListOfNameObject.create();
		var size = originDimensionMemberVariable.m_manualInputResultMembers.size();
		for (var i = 0; i < size; i++)
		{
			var originMember = originDimensionMemberVariable.m_manualInputResultMembers.get(i);
			var cloneMemberDimension = queryModel.getDimensionByNameFromExistingMetadata(originMember.getDimension().getName());
			var cloneMember = cloneMemberDimension.getDimensionMember(originMember.getName());
			cloneMember.copyFrom(originMember, flags);
			this.m_manualInputResultMembers.add(cloneMember);
		}
	}
	if (oFF.notNull(originDimensionMemberVariable.m_memberFilter))
	{
		var cloneSelection = oFF.QFactory.createFilterExpression(context, this);
		var cloneProduct = oFF.QFactory.createFilterCartesianProductWithContextAndParent(context, cloneSelection);
		cloneSelection.setCartesianProduct(cloneProduct);
		var cloneList = cloneProduct.getCartesianListWithDefault(this.m_dimension);
		cloneList.copyFrom(originDimensionMemberVariable.m_memberFilter, flags);
		this.setFilter(cloneSelection);
	}
	if (oFF.notNull(originDimensionMemberVariable.m_defaultMemberFilter))
	{
		var cloneDefaultSelection = oFF.QFactory.createFilterExpression(context, this);
		var cloneDefaultProduct = oFF.QFactory.createFilterCartesianProductWithContextAndParent(context, cloneDefaultSelection);
		cloneDefaultSelection.setCartesianProduct(cloneDefaultProduct);
		var cloneDefaultList = cloneDefaultProduct.getCartesianListWithDefault(this.m_dimension);
		cloneDefaultList.copyFrom(originDimensionMemberVariable.m_defaultMemberFilter, flags);
		this.setDefaultMemberFilter(cloneDefaultList);
	}
	if (oFF.notNull(originDimensionMemberVariable.m_externalMemberFilter))
	{
		var cloneExternSelection = oFF.QFactory.createFilterExpression(context, this);
		var cloneExternProduct = oFF.QFactory.createFilterCartesianProductWithContextAndParent(context, cloneExternSelection);
		var cloneExternList = cloneExternProduct.getCartesianListWithDefault(this.m_dimension);
		cloneExternList.copyFrom(originDimensionMemberVariable.m_externalMemberFilter, flags);
		this.setExternalMemberFilter(cloneExternSelection);
	}
	if (oFF.notNull(originDimensionMemberVariable.m_filterCapability))
	{
		var cloneField;
		var origFieldName = originDimensionMemberVariable.m_filterCapability.getFieldName();
		if (oFF.notNull(origFieldName))
		{
			cloneField = queryModel.getFieldByName(origFieldName);
		}
		else
		{
			cloneField = null;
		}
		this.m_filterCapability = oFF.QFactory.createFilterCapability(context, this, cloneField, originDimensionMemberVariable.m_filterCapability.getOlapComponentType());
		this.m_filterCapability.copyFrom(originDimensionMemberVariable.m_filterCapability, flags);
	}
	if (oFF.notNull(originDimensionMemberVariable.m_filterCapabilities))
	{
		this.m_filterCapabilities = oFF.QFactory.createFilterCapabilitiesForVariable(context, this);
		this.m_filterCapabilities.copyFrom(originDimensionMemberVariable.m_filterCapabilities, flags);
	}
	this.m_hierarchyName = originDimensionMemberVariable.m_hierarchyName;
	this.m_hierarchyVersion = originDimensionMemberVariable.m_hierarchyVersion;
	this.m_hierarchyKeyDate = originDimensionMemberVariable.m_hierarchyKeyDate;
	this.m_hierarchyBaseDimension = originDimensionMemberVariable.m_hierarchyBaseDimension;
	this.m_supportsValuehelp = originDimensionMemberVariable.m_supportsValuehelp;
	this.m_uniqueId = originDimensionMemberVariable.m_uniqueId;
	this.m_isUsedInFixedFilter = originDimensionMemberVariable.m_isUsedInFixedFilter;
	this.m_isUsedInDynamicFilter = originDimensionMemberVariable.m_isUsedInDynamicFilter;
	this.m_isWinControlInAutoSubmit = originDimensionMemberVariable.m_isWinControlInAutoSubmit;
	this.m_isHierarchyInfoVariable = originDimensionMemberVariable.m_isHierarchyInfoVariable;
	this.m_isInputEnabledAndExit = originDimensionMemberVariable.m_isInputEnabledAndExit;
	var originRuntimeReferences = originDimensionMemberVariable.getRuntimeReferences();
	if (oFF.notNull(originRuntimeReferences))
	{
		this.m_runtimeReferences = originRuntimeReferences.createListOfStringCopy();
	}
};
oFF.QDimensionMemberVariable.prototype.getUniqueId = function()
{
	return this.m_uniqueId;
};
oFF.QDimensionMemberVariable.prototype.setUniqueId = function(uniqueId)
{
	this.m_uniqueId = uniqueId;
};
oFF.QDimensionMemberVariable.prototype.setMemberFilter = function(memberFilter)
{
	this.m_memberFilter = memberFilter;
	if (oFF.notNull(this.m_memberFilter))
	{
		this.m_memberFilter.setParent(this);
	}
};
oFF.QDimensionMemberVariable.prototype.hasMemberFilter = function()
{
	return oFF.notNull(this.m_memberFilter) && this.m_memberFilter.hasElements();
};
oFF.QDimensionMemberVariable.prototype.getMemberFilter = function()
{
	if (oFF.isNull(this.m_memberFilter))
	{
		var dimension = this.getDimension();
		if (oFF.notNull(dimension))
		{
			var keyField = dimension.getKeyField();
			this.m_memberFilter = oFF.QFactory.createFilterCartesianListForDimensionMemberVariable(this.getContext(), this, keyField.getMetadata(), null);
		}
	}
	return this.m_memberFilter;
};
oFF.QDimensionMemberVariable.prototype.setDefaultMemberFilter = function(memberFilter)
{
	this.m_defaultMemberFilter = memberFilter;
	if (oFF.notNull(this.m_defaultMemberFilter))
	{
		this.m_defaultMemberFilter.setParent(this);
	}
};
oFF.QDimensionMemberVariable.prototype.getDefaultMemberFilter = function()
{
	return this.m_defaultMemberFilter;
};
oFF.QDimensionMemberVariable.prototype.hasDefaultMemberFilter = function()
{
	return oFF.notNull(this.m_defaultMemberFilter);
};
oFF.QDimensionMemberVariable.prototype.setFilter = function(filter)
{
	if (oFF.notNull(filter))
	{
		if (filter.isCartesianProduct())
		{
			if (filter.getCartesianProduct() !== null)
			{
				var selectionList = filter.getCartesianProduct().getCartesianList(this.getDimension());
				if (oFF.notNull(selectionList))
				{
					this.setMemberFilter(selectionList);
				}
			}
		}
		else
		{
			var complexFilterRoot = filter.getComplexRoot();
			if (oFF.notNull(complexFilterRoot))
			{
				oFF.XBooleanUtils.checkTrue(complexFilterRoot.getComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST), "Dimension Member Variable: Selection Container not valid!");
				this.setMemberFilter(filter.getComplexRoot());
			}
		}
	}
};
oFF.QDimensionMemberVariable.prototype.getDimension = function()
{
	return this.m_dimension;
};
oFF.QDimensionMemberVariable.prototype.getExternalMemberFilter = function()
{
	return this.m_externalMemberFilter;
};
oFF.QDimensionMemberVariable.prototype.setExternalMemberFilter = function(externalMemberFilter)
{
	if (oFF.notNull(externalMemberFilter))
	{
		externalMemberFilter.addSecondaryParent(this);
	}
	if (oFF.notNull(this.m_externalMemberFilter))
	{
		this.m_externalMemberFilter.removeSecondaryParent(this);
	}
	this.m_externalMemberFilter = externalMemberFilter;
	this.setDeltaPhase(oFF.QDeltaOperationPhase.NOTIFY_PAUSE_MODCOUNTER);
	this.notifyNodeChanged();
	this.resumeEventing();
};
oFF.QDimensionMemberVariable.prototype.setDimensionMember = function(value)
{
	var memberSelection = this.getMemberFilter();
	var singleElement = memberSelection.addNewCartesianElement();
	singleElement.setComparisonOperator(oFF.ComparisonOperator.EQUAL);
	singleElement.getLow().setDimensionMember(value);
};
oFF.QDimensionMemberVariable.prototype.getNewDimensionMember = function(name)
{
	if (oFF.isNull(name))
	{
		return null;
	}
	var dimension = this.getDimension();
	if (oFF.isNull(dimension))
	{
		return null;
	}
	return dimension.getDimensionMember(name.getString());
};
oFF.QDimensionMemberVariable.prototype.getDimensionMember = function()
{
	var memberSelection = this.getMemberFilter();
	if (memberSelection.size() === 1)
	{
		var firstElement = memberSelection.getOp(0);
		if (firstElement.getComparisonOperator() === oFF.ComparisonOperator.EQUAL)
		{
			var firstValue = firstElement.getLow();
			if (oFF.notNull(firstValue))
			{
				var dimensionMember = firstValue.getDimensionMember();
				if (oFF.isNull(dimensionMember))
				{
					return this.getNewDimensionMember(oFF.QDimensionMemberVariable.valueToXString(firstValue.getValue()));
				}
				return dimensionMember;
			}
		}
	}
	return null;
};
oFF.QDimensionMemberVariable.prototype.setDimension = function(dimension)
{
	this.m_dimension = dimension;
	if (dimension.getKeyField() !== null)
	{
		this.setValueType(dimension.getKeyField().getValueType());
	}
	this.setMemberFilter(null);
};
oFF.QDimensionMemberVariable.prototype.getFilterCapability = function()
{
	return this.m_filterCapability;
};
oFF.QDimensionMemberVariable.prototype.setFilterCapability = function(capability)
{
	this.m_filterCapability = capability;
};
oFF.QDimensionMemberVariable.prototype.getFilterCapabilities = function()
{
	return this.m_filterCapabilities;
};
oFF.QDimensionMemberVariable.prototype.setFilterCapabilities = function(filterCapabilities)
{
	this.m_filterCapabilities = filterCapabilities;
};
oFF.QDimensionMemberVariable.prototype.hasUniqueHierarchy = function()
{
	return oFF.notNull(this.m_hierarchyName);
};
oFF.QDimensionMemberVariable.prototype.getHierarchyName = function()
{
	return this.m_hierarchyName;
};
oFF.QDimensionMemberVariable.prototype.getHierarchyVersion = function()
{
	return this.m_hierarchyVersion;
};
oFF.QDimensionMemberVariable.prototype.getHierarchyKeyDate = function()
{
	return this.m_hierarchyKeyDate;
};
oFF.QDimensionMemberVariable.prototype.getHierarchyDueDate = oFF.noSupport;
oFF.QDimensionMemberVariable.prototype.setHierarchyDueDate = oFF.noSupport;
oFF.QDimensionMemberVariable.prototype.setHierarchyName = function(name)
{
	this.m_hierarchyName = name;
};
oFF.QDimensionMemberVariable.prototype.setHierarchyVersion = function(version)
{
	this.m_hierarchyVersion = version;
};
oFF.QDimensionMemberVariable.prototype.setHierarchyKeyDate = function(keyDate)
{
	this.m_hierarchyKeyDate = keyDate;
};
oFF.QDimensionMemberVariable.prototype.getHierarchyBaseDimension = function()
{
	return this.m_hierarchyBaseDimension;
};
oFF.QDimensionMemberVariable.prototype.setHierarchyBaseDimension = function(name)
{
	this.m_hierarchyBaseDimension = name;
};
oFF.QDimensionMemberVariable.prototype.setValueByStringExt = function(value, isManualInput)
{
	this.queueEventing();
	var memberSelection = this.getMemberFilter();
	memberSelection.clear();
	var dimension = this.getDimension();
	var keyField = dimension.getKeyField();
	memberSelection.setField(keyField);
	var filterOperation = oFF.QFactory.createFilterOperation(memberSelection.getFilterExpression(), keyField);
	var low = filterOperation.getLow();
	if (isManualInput)
	{
		low.setString(value);
		low.setIsManualInput(true);
	}
	else
	{
		low.setDimensionMember(dimension.getDimensionMember(value));
	}
	memberSelection.add(filterOperation);
	this.resumeEventing();
	this.notifyNodeChanged();
};
oFF.QDimensionMemberVariable.prototype.getValueByString = function()
{
	var memberSelection = this.getMemberFilter();
	if (memberSelection.size() === 1)
	{
		var filterElement = memberSelection.get(0);
		return filterElement.getLow().getValue().toString();
	}
	return null;
};
oFF.QDimensionMemberVariable.prototype.getManualInputResultValues = function()
{
	this.initCollections();
	return this.m_manualInputResultMembers.getValuesAsReadOnlyList();
};
oFF.QDimensionMemberVariable.prototype.addManualInputResultValue = function(dimensionMember)
{
	this.initCollections();
	if (oFF.notNull(dimensionMember))
	{
		this.m_manualInputResultMembers.add(dimensionMember);
	}
};
oFF.QDimensionMemberVariable.prototype.clearManualInputResultValue = function()
{
	this.initCollections();
	this.m_manualInputResultMembers.clear();
};
oFF.QDimensionMemberVariable.prototype.initCollections = function()
{
	if (oFF.isNull(this.m_manualInputResultMembers))
	{
		this.m_manualInputResultMembers = oFF.XListOfNameObject.create();
	}
};
oFF.QDimensionMemberVariable.prototype.getFieldAccessorSingle = function()
{
	var queryModel = this.getQueryModel();
	if (oFF.isNull(queryModel))
	{
		return this;
	}
	return queryModel;
};
oFF.QDimensionMemberVariable.prototype.getFieldByName = function(name)
{
	return this.getDimension().getFieldByName(name);
};
oFF.QDimensionMemberVariable.prototype.getFieldByNameOrAlias = function(name)
{
	return this.getDimension().getFieldByNameOrAlias(name);
};
oFF.QDimensionMemberVariable.prototype.getFilterExpression = function()
{
	return null;
};
oFF.QDimensionMemberVariable.prototype.supportsValueHelp = function()
{
	return this.m_supportsValuehelp;
};
oFF.QDimensionMemberVariable.prototype.setSupportsValueHelp = function(isSupported)
{
	this.m_supportsValuehelp = isSupported;
};
oFF.QDimensionMemberVariable.prototype.processVariableHelp = function(syncType, listener, customIdentifier)
{
	return this.getDimension().processVariableHelp(this.getName(), syncType, listener, customIdentifier);
};
oFF.QDimensionMemberVariable.prototype.processVarHelp = function(syncType, listener, customIdentifier)
{
	return this.getDimension().processVarHelp(this.getName(), syncType, listener, customIdentifier);
};
oFF.QDimensionMemberVariable.prototype.getValues = function()
{
	if (this.getApplication().getXVersion() >= oFF.XVersion.V999_NEW_VAR_VALUE_HELP)
	{
		var valueHelp = this.newValueHelpMembers();
		var result = valueHelp.process(oFF.SyncType.BLOCKING, null, null);
		if (result.hasErrors())
		{
			return null;
		}
		var data = result.getData();
		return data.getMembers();
	}
	var extResult = this.getDimension().processVarHelp(this.getName(), oFF.SyncType.BLOCKING, null, null);
	oFF.MessageUtil.checkNoError(extResult);
	return this.convertNodeListToMemberList(extResult.getData());
};
oFF.QDimensionMemberVariable.prototype.convertNodeListToMemberList = function(nodeList)
{
	if (oFF.isNull(nodeList))
	{
		return null;
	}
	var memberList = oFF.XList.create();
	var nodeIterator = nodeList.getIterator();
	while (nodeIterator.hasNext())
	{
		memberList.add(nodeIterator.next().getDimensionMember());
	}
	oFF.XObjectExt.release(nodeIterator);
	return memberList;
};
oFF.QDimensionMemberVariable.prototype.newValueHelpMembers = function()
{
	return oFF.QFactory.createValueHelpVarDimMember(this.getContext(), this);
};
oFF.QDimensionMemberVariable.prototype.mergeDeepRecursive = function(settings, other)
{
	oFF.QVariable.prototype.mergeDeepRecursive.call( this , settings, other);
	var otherVar = other;
	if (otherVar.hasMemberFilter() && this.getMemberFilter() !== null)
	{
		var memberSelection = otherVar.getMemberFilter();
		this.m_memberFilter.mergeDeepRecursive(settings, memberSelection);
	}
};
oFF.QDimensionMemberVariable.prototype.isEnforcedDynamicValue = function()
{
	if (this.m_isInputEnabledAndExit === oFF.TriStateBool._DEFAULT)
	{
		return oFF.isNull(this.m_dimension) ? false : this.m_dimension.isEnforcedDynamicValue();
	}
	return this.m_isInputEnabledAndExit.getBoolean();
};
oFF.QDimensionMemberVariable.prototype.isUsedInFixedFilter = function()
{
	return this.m_isUsedInFixedFilter;
};
oFF.QDimensionMemberVariable.prototype.isUsedInDynamicFilter = function()
{
	return this.m_isUsedInDynamicFilter;
};
oFF.QDimensionMemberVariable.prototype.setIsUsedInFixedFilter = function(isUsedInFixedFilter)
{
	this.m_isUsedInFixedFilter = isUsedInFixedFilter;
};
oFF.QDimensionMemberVariable.prototype.setIsUsedInDynamicFilter = function(isUsedInDynamicFilter)
{
	this.m_isUsedInDynamicFilter = isUsedInDynamicFilter;
};
oFF.QDimensionMemberVariable.prototype.setIsInputEnabledAndExit = function(isInputEnabledAndExit)
{
	this.m_isInputEnabledAndExit = oFF.TriStateBool.lookup(isInputEnabledAndExit);
};
oFF.QDimensionMemberVariable.prototype.isInputEnabledAndExitProvidedInMd = function()
{
	return this.m_isInputEnabledAndExit !== oFF.TriStateBool._DEFAULT;
};
oFF.QDimensionMemberVariable.prototype.isHierarchyInfoVariable = function()
{
	return this.m_isHierarchyInfoVariable;
};
oFF.QDimensionMemberVariable.prototype.setIsHierarchyInfoVariable = function(isHierarchyInfoVariable)
{
	this.m_isHierarchyInfoVariable = isHierarchyInfoVariable;
};
oFF.QDimensionMemberVariable.prototype.isWinControlInAutoSubmit = function()
{
	return this.m_isWinControlInAutoSubmit;
};
oFF.QDimensionMemberVariable.prototype.setWinControlInAutoSubmit = function(isWinControlInAutoSubmit)
{
	var queryManager = this.getQueryManager();
	if (oFF.notNull(queryManager) && queryManager.isAutoVariableSubmitActive())
	{
		this.maintainStateForAutoSubmit(isWinControlInAutoSubmit);
		this.notifyNodeChanged();
	}
};
oFF.QDimensionMemberVariable.prototype.maintainStateForAutoSubmit = function(isWinControlInAutoSubmit)
{
	var varName = this.getName();
	var varType = this.getVariableType();
	if (varType === oFF.VariableType.HIERARCHY_NAME_VARIABLE)
	{
		var hierarchyDimension = this.getHierarchyNameDimension();
		var hierNameVarName = hierarchyDimension.getHierarchyNameVariableName();
		if (oFF.XString.isEqual(varName, hierNameVarName))
		{
			hierarchyDimension.setUseHierarchyNameVariable(isWinControlInAutoSubmit);
			this.m_isWinControlInAutoSubmit = isWinControlInAutoSubmit;
		}
	}
	else if (varType === oFF.VariableType.HIERARCHY_NODE_VARIABLE)
	{
		this.m_isWinControlInAutoSubmit = isWinControlInAutoSubmit;
	}
	else
	{
		var dimensionAccessor = this.getDimensionAccessor();
		var runtimeReferences = this.getRuntimeReferences();
		for (var k = 0; k < runtimeReferences.size(); k++)
		{
			var dimName = runtimeReferences.get(k);
			var dimension = dimensionAccessor.getDimensionByName(dimName);
			var dueDateVarName = dimension.getHierarchyDueDateVariableName();
			var versionVarName = dimension.getHierarchyVersionVariableName();
			if (oFF.XString.isEqual(varName, dueDateVarName))
			{
				dimension.setUseHierarchyDueDateVariable(isWinControlInAutoSubmit);
				this.m_isWinControlInAutoSubmit = isWinControlInAutoSubmit;
			}
			else if (oFF.XString.isEqual(varName, versionVarName))
			{
				dimension.setUseHierarchyVersionVariable(isWinControlInAutoSubmit);
				this.m_isWinControlInAutoSubmit = isWinControlInAutoSubmit;
			}
			else
			{
				this.m_isWinControlInAutoSubmit = isWinControlInAutoSubmit;
			}
		}
	}
};
oFF.QDimensionMemberVariable.prototype.maintainFilterStateForAutoSubmit = function()
{
	var queryModel = this.getQueryModel();
	if (this.m_isWinControlInAutoSubmit && !this.m_isHierarchyInfoVariable && oFF.notNull(queryModel) && queryModel.getVariableManager().getVariablesAffectingDynamicFilter().contains(this))
	{
		var filterExp = queryModel.getFilter().getDynamicFilter();
		if (oFF.notNull(filterExp))
		{
			var memberFilter = this.getMemberFilter();
			if (oFF.notNull(memberFilter))
			{
				var memberFilterField = memberFilter.getField();
				var filterList = filterExp.getCartesianListByField(memberFilterField);
				filterList.clear();
				var lowValueBag = filterList.addNewCartesianElement().getLow();
				lowValueBag.setVariableValue(this);
			}
		}
	}
};
oFF.QDimensionMemberVariable.prototype.supportsMultipleValues = function()
{
	return this.m_filterCapabilities.supportsMultipleValues();
};
oFF.QDimensionMemberVariable.prototype.clear = function()
{
	this.m_memberFilter = oFF.XObjectExt.release(this.m_memberFilter);
};
oFF.QDimensionMemberVariable.prototype.isEmpty = function()
{
	return this.getMemberFilter().isEmpty();
};
oFF.QDimensionMemberVariable.prototype.addRuntimeReferences = function(runtimeReference)
{
	if (!this.m_runtimeReferences.contains(runtimeReference))
	{
		this.m_runtimeReferences.add(runtimeReference);
	}
};
oFF.QDimensionMemberVariable.prototype.getRuntimeReferences = function()
{
	return this.m_runtimeReferences;
};
oFF.QDimensionMemberVariable.prototype.getMemberNamesFromFilter = function(dimName)
{
	return oFF.QFilterUtil.getMemberNamesFromFilter(this.getMemberFilter(), dimName);
};
oFF.QDimensionMemberVariable.prototype.hasSingleValueMemberFilter = function()
{
	return oFF.QFilterUtil.isSingleValueFilterCartesianList(this.getMemberFilter());
};

oFF.QAttributeList = function() {};
oFF.QAttributeList.prototype = new oFF.QModelComponentList();
oFF.QAttributeList.prototype._ff_c = "QAttributeList";

oFF.QAttributeList.createAttributeList = function(parentNode, name)
{
	var list = new oFF.QAttributeList();
	list.setupOlapList(parentNode, parentNode, false, name, oFF.XCollectionFactory.LINKED_MAP, false);
	return list;
};
oFF.QAttributeList.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.ATTRIBUTE_LIST;
};
oFF.QAttributeList.prototype.removeAttributeAt = function(index)
{
	this.removeAt(index);
};
oFF.QAttributeList.prototype.getAttributeAt = function(index)
{
	return this.get(index);
};
oFF.QAttributeList.prototype.getAttributeByName = function(name)
{
	return this.getByKey(name);
};
oFF.QAttributeList.prototype.getEffectiveFields = function(context)
{
	var fields = oFF.XListOfNameObject.create();
	var attributeSize = this.size();
	for (var idxAttribute = 0; idxAttribute < attributeSize; idxAttribute++)
	{
		var fieldList = this.get(idxAttribute).getFieldsExt(context);
		fields.addAll(fieldList);
	}
	return fields;
};

oFF.QConditionManager = function() {};
oFF.QConditionManager.prototype = new oFF.QModelComponentList();
oFF.QConditionManager.prototype._ff_c = "QConditionManager";

oFF.QConditionManager.create = function(context, queryModel)
{
	var newObj = new oFF.QConditionManager();
	newObj.setupOlapList(context, queryModel, true, "ConditionManager", oFF.XCollectionFactory.LOOKUP_LIST, false);
	return newObj;
};
oFF.QConditionManager.prototype.m_externalConditions = null;
oFF.QConditionManager.prototype.m_tmpConditions = null;
oFF.QConditionManager.prototype.m_effectiveConditions = null;
oFF.QConditionManager.prototype.releaseObject = function()
{
	if (oFF.notNull(this.m_externalConditions))
	{
		this.setExternalConditions(null);
	}
	this.m_tmpConditions = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_tmpConditions);
	this.m_effectiveConditions = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_effectiveConditions);
	oFF.QModelComponentList.prototype.releaseObject.call( this );
};
oFF.QConditionManager.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponentList.prototype.copyFromInternal.call( this , other, flags);
	var originConditionManager = other;
	var size = originConditionManager.size();
	for (var i = 0; i < size; i++)
	{
		var originCondition = originConditionManager.get(i);
		var localCondition = this.getConditionByName(originCondition.getName());
		if (oFF.notNull(localCondition) && localCondition.isUserCondition())
		{
			continue;
		}
		var cloneCondition = this.addNewCondition(originCondition.getName());
		cloneCondition.copyFrom(originCondition, flags);
	}
};
oFF.QConditionManager.prototype.getExternalConditions = function()
{
	return this.m_externalConditions;
};
oFF.QConditionManager.prototype.setExternalConditions = function(externalConditions)
{
	if (this.m_externalConditions === externalConditions)
	{
		return;
	}
	if (oFF.notNull(this.m_externalConditions))
	{
		this.m_externalConditions.unregisterChangedListener(this);
		this.m_externalConditions.removeSecondaryParent(this);
		this.m_externalConditions = null;
	}
	if (oFF.notNull(externalConditions))
	{
		this.m_externalConditions = externalConditions;
		this.m_externalConditions.addSecondaryParent(this);
		this.m_externalConditions.registerChangedListener(this, null);
	}
	this.updateEffectiveConditions();
	this.notifyNodeChanged();
};
oFF.QConditionManager.prototype.getTemporaryConditions = function()
{
	return this.m_tmpConditions;
};
oFF.QConditionManager.prototype.hasTemporaryConditions = function()
{
	if (oFF.isNull(this.m_tmpConditions))
	{
		return false;
	}
	return this.m_tmpConditions.hasElements();
};
oFF.QConditionManager.prototype.getConditionsByState = function(conditions, active)
{
	if (oFF.notNull(conditions))
	{
		var returnedConditions = oFF.XList.create();
		var conditionsSize = conditions.size();
		for (var i = 0; i < conditionsSize; i++)
		{
			var condition = conditions.get(i);
			if (condition.isActive() === active)
			{
				returnedConditions.add(condition);
			}
		}
		return returnedConditions;
	}
	return null;
};
oFF.QConditionManager.prototype.getActiveTemporaryConditions = function()
{
	return this.getConditionsByState(this.m_tmpConditions, true);
};
oFF.QConditionManager.prototype.getInactiveTemporaryConditions = function()
{
	return this.getConditionsByState(this.m_tmpConditions, false);
};
oFF.QConditionManager.prototype.getTemporaryConditionByName = function(tmpCondName)
{
	if (oFF.isNull(this.m_tmpConditions))
	{
		return null;
	}
	return this.m_tmpConditions.getByKey(tmpCondName);
};
oFF.QConditionManager.prototype.addTemporaryCondition = function(tmpCondName)
{
	if (oFF.isNull(this.m_tmpConditions))
	{
		this.m_tmpConditions = oFF.XListOfNameObject.create();
	}
	if (oFF.notNull(tmpCondName) && !this.m_tmpConditions.containsKey(tmpCondName))
	{
		var newTmpCondition = oFF.QCondition.create(this.getQueryModelBase(), this, tmpCondName, false);
		if (oFF.notNull(newTmpCondition))
		{
			newTmpCondition.setParent(this);
			this.m_tmpConditions.add(newTmpCondition);
			this.updateEffectiveConditions();
			this.notifyNodeChanged();
			return newTmpCondition;
		}
	}
	return null;
};
oFF.QConditionManager.prototype.removeTemporaryConditionByName = function(tmpCondName)
{
	if (oFF.notNull(this.m_tmpConditions))
	{
		var targetCondition = this.getTemporaryConditionByName(tmpCondName);
		if (oFF.notNull(targetCondition))
		{
			this.m_tmpConditions.removeElement(targetCondition);
			this.updateEffectiveConditions();
			this.notifyNodeChanged();
			oFF.XObjectExt.release(targetCondition);
		}
	}
};
oFF.QConditionManager.prototype.onModelComponentChanged = function(modelComponent, customIdentifier)
{
	if (oFF.isNull(modelComponent))
	{
		return;
	}
	if (modelComponent === this.m_externalConditions)
	{
		this.updateEffectiveConditions();
	}
};
oFF.QConditionManager.prototype.updateEffectiveConditions = function()
{
	if (oFF.isNull(this.m_effectiveConditions))
	{
		this.m_effectiveConditions = oFF.XListOfNameObject.create();
	}
	else
	{
		this.m_effectiveConditions.clear();
	}
	this.m_effectiveConditions.addAll(this);
	var idx;
	var size;
	if (oFF.notNull(this.m_externalConditions) && !this.m_externalConditions.isReleased())
	{
		size = this.m_externalConditions.size();
		for (idx = 0; idx < size; idx++)
		{
			var externalCondition = this.m_externalConditions.get(idx);
			if (!this.m_effectiveConditions.containsKey(externalCondition.getName()))
			{
				this.m_effectiveConditions.add(externalCondition);
			}
		}
	}
	if (oFF.notNull(this.m_tmpConditions))
	{
		size = this.m_tmpConditions.size();
		for (idx = 0; idx < size; idx++)
		{
			var tmpCondition = this.m_tmpConditions.get(idx);
			if (!this.m_effectiveConditions.containsKey(tmpCondition.getName()))
			{
				this.m_effectiveConditions.add(tmpCondition);
			}
		}
	}
};
oFF.QConditionManager.prototype.getConditionByName = function(technicalName)
{
	return oFF.XCollectionUtils.getByName(this, technicalName);
};
oFF.QConditionManager.prototype.add = function(element)
{
	oFF.QModelComponentList.prototype.add.call( this , element);
	this.updateEffectiveConditions();
};
oFF.QConditionManager.prototype.addNewCondition = function(technicalName)
{
	var newCondition = this.createNewCondition(technicalName);
	if (oFF.notNull(newCondition))
	{
		this.add(newCondition);
	}
	return newCondition;
};
oFF.QConditionManager.prototype.createNewCondition = function(technicalName)
{
	if (oFF.XStringUtils.isNotNullAndNotEmpty(technicalName) && this.getConditionByName(technicalName) === null)
	{
		var newCondition = oFF.QCondition.create(this.getContext(), this, technicalName, false);
		if (oFF.notNull(newCondition))
		{
			return newCondition;
		}
	}
	return null;
};
oFF.QConditionManager.prototype.hasConditions = function()
{
	return this.hasElements();
};
oFF.QConditionManager.prototype.removeClientConditions = function()
{
	this.queueEventing();
	var size = this.size();
	for (var i = size - 1; i >= 0; i--)
	{
		var condition = this.get(i);
		if (condition.isChangeable())
		{
			this.removeInternal(condition);
			oFF.XObjectExt.release(condition);
		}
	}
	this.resumeEventing();
};
oFF.QConditionManager.prototype.deactivateServerConditions = function()
{
	this.queueEventing();
	var size = this.size();
	for (var i = 0; i < size; i++)
	{
		var condition = this.get(i);
		if (!condition.isChangeable())
		{
			condition.setActive(false);
		}
	}
	this.resumeEventing();
};
oFF.QConditionManager.prototype.getActiveConditions = function()
{
	return this.getConditionsByState(this, true);
};
oFF.QConditionManager.prototype.getInactiveConditions = function()
{
	return this.getConditionsByState(this, false);
};
oFF.QConditionManager.prototype.removeConditionByName = function(technicalName)
{
	var targetCondition = this.getConditionByName(technicalName);
	if (oFF.notNull(targetCondition))
	{
		this.removeElement(targetCondition);
		oFF.XObjectExt.release(targetCondition);
	}
};
oFF.QConditionManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.CONDITIONS_MANAGER;
};
oFF.QConditionManager.prototype.mergeDeepRecursive = function(settings, other)
{
	if (oFF.isNull(other))
	{
		return;
	}
	var otherObj = other;
	this.clearBackendCondtions();
	this.copyFrom(otherObj, null);
};
oFF.QConditionManager.prototype.clearBackendCondtions = function()
{
	for (var i = 0; i < this.size(); )
	{
		var condition = this.get(i);
		if (condition.isBackendCondition())
		{
			this.removeElement(condition);
			continue;
		}
		i++;
	}
};
oFF.QConditionManager.prototype.getEffectiveConditions = function()
{
	this.updateEffectiveConditions();
	return this.m_effectiveConditions;
};
oFF.QConditionManager.prototype.isMeasureUsedInActiveConditionThreshold = function(measureName)
{
	if (oFF.XStringUtils.isNullOrEmpty(measureName))
	{
		return false;
	}
	var itCondition = this.getIterator();
	while (itCondition.hasNext())
	{
		var condition = itCondition.next();
		if (!condition.isActive())
		{
			continue;
		}
		var itThreshold = condition.getThresholds().getIterator();
		while (itThreshold.hasNext())
		{
			var threshold = itThreshold.next();
			var measureCoordinates = threshold.getMeasureCoordinates();
			var itMeasure = measureCoordinates.getIterator();
			while (itMeasure.hasNext())
			{
				if (oFF.XString.isEqual(itMeasure.next().getName(), measureName))
				{
					return true;
				}
			}
		}
	}
	return false;
};
oFF.QConditionManager.prototype.updateConditionsOnMeasureRemoval = function(measureName)
{
	var measureDimension = this.getQueryModel().getMeasureDimension();
	for (var conditionsIndex = 0; conditionsIndex < this.size(); )
	{
		var condition = this.get(conditionsIndex);
		var thresholds = condition.getThresholds();
		var emptyThresholdWasRemoved = false;
		for (var thresholdIndex = 0; thresholdIndex < thresholds.size(); )
		{
			var threshold = thresholds.get(thresholdIndex);
			var measureCoordinates = threshold.getMeasureCoordinates();
			for (var measureIndex = 0; measureIndex < measureCoordinates.size(); )
			{
				var dimensionMemberFromMeasure = measureCoordinates.get(measureIndex);
				if (oFF.notNull(measureName) && oFF.notNull(dimensionMemberFromMeasure) && oFF.XString.isEqual(dimensionMemberFromMeasure.getName(), measureName))
				{
					measureCoordinates.removeElement(dimensionMemberFromMeasure);
				}
				else if (oFF.notNull(dimensionMemberFromMeasure) && measureDimension.getDimensionMember(dimensionMemberFromMeasure.getName()) === null)
				{
					measureCoordinates.removeElement(dimensionMemberFromMeasure);
				}
				else
				{
					measureIndex++;
				}
			}
			if (!oFF.XCollectionUtils.hasElements(measureCoordinates))
			{
				condition.removeThreshold(threshold);
				emptyThresholdWasRemoved = true;
			}
			else
			{
				thresholdIndex++;
			}
		}
		if (!oFF.XCollectionUtils.hasElements(condition.getThresholds()) && emptyThresholdWasRemoved)
		{
			this.removeElement(condition);
		}
		else
		{
			conditionsIndex++;
		}
	}
};

oFF.QDataCellList = function() {};
oFF.QDataCellList.prototype = new oFF.QModelComponentList();
oFF.QDataCellList.prototype._ff_c = "QDataCellList";

oFF.QDataCellList.createQueryDataCellList = function(queryModel)
{
	var queryDataCellList = new oFF.QDataCellList();
	queryDataCellList.setupOlapList(queryModel, queryModel, true, "Data Cells", oFF.XCollectionFactory.MAPPED_LIST, false);
	return queryDataCellList;
};
oFF.QDataCellList.prototype.newQueryDataCell = function(name)
{
	var dataCell = oFF.QDataCell._create(this, name);
	this.add(dataCell);
	return dataCell;
};
oFF.QDataCellList.prototype.getQueryDataCellAt = function(index)
{
	return this.get(index);
};
oFF.QDataCellList.prototype.addInternal = function(element)
{
	if (this.containsKey(element.getName()))
	{
		this.removeInternal(element);
	}
	oFF.QModelComponentList.prototype.addInternal.call( this , element);
};
oFF.QDataCellList.prototype.add = function(element)
{
	if (this.containsKey(element.getName()))
	{
		this.removeElement(element);
	}
	oFF.QModelComponentList.prototype.add.call( this , element);
};
oFF.QDataCellList.prototype.removeByMember = function(member)
{
	var dataCellsWithMemberRef = this.getByMember(member).getIterator();
	while (dataCellsWithMemberRef.hasNext())
	{
		this.removeElement(dataCellsWithMemberRef.next());
	}
};
oFF.QDataCellList.prototype.getByMember = function(member)
{
	var cells = oFF.XList.create();
	var size = this.size();
	for (var i = 0; i < size; i++)
	{
		var dataCell = this.get(i);
		if (dataCell.hasMemberReference(member))
		{
			cells.add(dataCell);
		}
	}
	return cells;
};
oFF.QDataCellList.prototype.newQueryDataCellsForMember = function(member)
{
	this.removeByMember(member);
	var dimensionName = member.getDimension().getName();
	var otherDimension = null;
	if (oFF.XString.isEqual(this.getQueryModel().getMeasureDimension().getName(), dimensionName))
	{
		otherDimension = this.getQueryModel().getNonMeasureDimension();
	}
	else
	{
		otherDimension = this.getQueryModel().getMeasureDimension();
	}
	if (oFF.isNull(otherDimension))
	{
		var dataCell = this.newQueryDataCell(null);
		dataCell.addDimensionMemberReference(member.getName());
	}
	else
	{
		var allStructureMembers = otherDimension.getAllStructureMembers();
		var membersIterator = allStructureMembers.getIterator();
		while (membersIterator.hasNext())
		{
			var newDataCell = this.newQueryDataCell(null);
			newDataCell.addDimensionMemberReference(member.getName());
			newDataCell.addDimensionMemberReference(membersIterator.next().getName());
		}
	}
};

oFF.QQueryCellManager = function() {};
oFF.QQueryCellManager.prototype = new oFF.QModelComponentList();
oFF.QQueryCellManager.prototype._ff_c = "QQueryCellManager";

oFF.QQueryCellManager.CELLS_DIMENSION_NAME = "$$Cells$$";
oFF.QQueryCellManager.create = function(context, parent)
{
	var cellsManager = new oFF.QQueryCellManager();
	cellsManager.setupOlapList(context, parent, true, "QueryCells", oFF.XCollectionFactory.LINKED_MAP, false);
	return cellsManager;
};
oFF.QQueryCellManager.prototype.cloneOlapComponent = function(context, parent)
{
	var queryCellManager = oFF.QQueryCellManager.create(context, parent);
	var queryCellIt = this.getIterator();
	while (queryCellIt.hasNext())
	{
		var queryCell = queryCellIt.next();
		queryCellManager.add(queryCell.cloneOlapComponent(queryCellManager, queryCellManager));
	}
	return queryCellManager;
};
oFF.QQueryCellManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.QUERY_CELLS;
};
oFF.QQueryCellManager.prototype.addNewQueryCell = function(name)
{
	var queryCell = oFF.QQueryCell.create(this, name);
	this.add(queryCell);
	return queryCell;
};
oFF.QQueryCellManager.prototype.generateTransientObjects = function(context, messageManager)
{
	if (this.isEmpty())
	{
		return;
	}
	var queryModel = this.getQueryModel();
	var cellsDimension = queryModel.getDimensionByName(oFF.QQueryCellManager.CELLS_DIMENSION_NAME);
	var queryCellIt = this.getIterator();
	while (queryCellIt.hasNext())
	{
		var queryCell = queryCellIt.next();
		var restrictedMeasure = cellsDimension.addNewRestrictedMeasure(queryCell.getName(), null);
		restrictedMeasure.getFilter().addSingleMemberFilterByDimensionMember(queryCell.getCellCalculationMember(), oFF.ComparisonOperator.EQUAL);
	}
	queryModel.getAxis(oFF.AxisType.TECHNICAL).add(cellsDimension);
};
oFF.QQueryCellManager.prototype.destroyTransientObjects = function(context)
{
	var queryModel = this.getQueryModel();
	var cellsDimension = queryModel.getDimensionByName(oFF.QQueryCellManager.CELLS_DIMENSION_NAME);
	var queryCellIt = this.getIterator();
	while (queryCellIt.hasNext())
	{
		var queryCell = queryCellIt.next();
		cellsDimension.removeMeasure(queryCell.getName());
	}
};

oFF.QDimensionList = function() {};
oFF.QDimensionList.prototype = new oFF.QModelComponentList();
oFF.QDimensionList.prototype._ff_c = "QDimensionList";

oFF.QDimensionList.createDimensionList = function(context, parentNode, name)
{
	var dimensionList = new oFF.QDimensionList();
	dimensionList.setupOlapList(context, parentNode, false, name, oFF.XCollectionFactory.LINKED_MAP, false);
	return dimensionList;
};
oFF.QDimensionList.prototype.getDimensionCount = function()
{
	return this.size();
};
oFF.QDimensionList.prototype.getDimensionAt = function(index)
{
	return this.get(index);
};
oFF.QDimensionList.prototype.getDimensionByName = function(name)
{
	return this.getByKey(name);
};
oFF.QDimensionList.prototype.getDimensionByNameFromExistingMetadata = function(name)
{
	return this.getByKey(name);
};
oFF.QDimensionList.prototype.getDimensionByNameFromExistingMetadataOrFormulaCalcDim = function(name)
{
	return this.getDimensionByNameFromExistingMetadata(name);
};
oFF.QDimensionList.prototype.getDimensionBase = function(index)
{
	return this.get(index);
};
oFF.QDimensionList.prototype.removeDimensionAt = function(index)
{
	this.removeAt(index);
};
oFF.QDimensionList.prototype.getNonMeasureDimension = function()
{
	return this.getDimensionByType(oFF.DimensionType.SECONDARY_STRUCTURE);
};
oFF.QDimensionList.prototype.getPrimaryCalculationDimension = function()
{
	var accountDimension = this.getAccountDimension();
	if (oFF.isNull(accountDimension))
	{
		return this.getMeasureDimension();
	}
	return accountDimension;
};
oFF.QDimensionList.prototype.getSecondaryCalculationDimension = function()
{
	if (this.getAccountDimension() !== null)
	{
		return this.getMeasureDimension();
	}
	return this.getNonMeasureDimension();
};
oFF.QDimensionList.prototype.getAccountDimension = function()
{
	return this.getDimensionByType(oFF.DimensionType.ACCOUNT);
};
oFF.QDimensionList.prototype.getNonMeasureDimension2 = function()
{
	if (this.getNonStructureCount() < 2)
	{
		return null;
	}
	var firstNonMeasure = this.getNonMeasureDimension();
	var iterator = this.getIterator();
	while (iterator.hasNext())
	{
		var dimension = iterator.next();
		if (dimension.getDimensionType() === oFF.DimensionType.SECONDARY_STRUCTURE && dimension !== firstNonMeasure)
		{
			oFF.XObjectExt.release(iterator);
			return dimension;
		}
	}
	oFF.XObjectExt.release(iterator);
	return null;
};
oFF.QDimensionList.prototype.getMeasureDimension = function()
{
	return this.getDimensionByType(oFF.DimensionType.MEASURE_STRUCTURE);
};
oFF.QDimensionList.prototype.getStructureCount = function()
{
	return this.countDimensions(true);
};
oFF.QDimensionList.prototype.getNonStructureCount = function()
{
	return this.countDimensions(false);
};
oFF.QDimensionList.prototype.countDimensions = function(countStructures)
{
	var len = this.size();
	var dimensionCount = 0;
	for (var i = 0; i < len; i++)
	{
		if (this.get(i).isStructure() === countStructures)
		{
			dimensionCount++;
		}
	}
	return dimensionCount;
};
oFF.QDimensionList.prototype.getDimensionNameByType = function(type)
{
	var dimension = this.getDimensionByType(type);
	return oFF.isNull(dimension) ? null : dimension.getName();
};
oFF.QDimensionList.prototype.getDimensionByType = function(type)
{
	var len = this.size();
	for (var i = 0; i < len; i++)
	{
		var dimension = this.getDimensionAt(i);
		if (dimension.getDimensionType() === type)
		{
			return dimension;
		}
	}
	return null;
};
oFF.QDimensionList.prototype.getDimensions = function()
{
	return this;
};
oFF.QDimensionList.prototype.getDimensionNames = function()
{
	return oFF.XCollectionUtils.createListOfNames(this);
};
oFF.QDimensionList.prototype.getOrderedDimensionNames = function()
{
	return this.getDimensionCount() === 0 ? null : this.getKeysAsReadOnlyListOfString();
};
oFF.QDimensionList.prototype.reOrderDimensions = function(orderedDimensionNames)
{
	if (this.getDimensionCount() === 0 || oFF.isNull(orderedDimensionNames) || this.getDimensionCount() !== orderedDimensionNames.size())
	{
		return;
	}
	var orderOk = true;
	var size = orderedDimensionNames.size();
	for (var dimensionNameIndex = 0; dimensionNameIndex < size; dimensionNameIndex++)
	{
		var dimensionName = orderedDimensionNames.get(dimensionNameIndex);
		var dimension = this.getDimensionAt(dimensionNameIndex);
		if (!oFF.XString.isEqual(dimensionName, dimension.getName()))
		{
			if (this.getDimensionByName(dimensionName) === null)
			{
				return;
			}
			orderOk = false;
		}
	}
	if (!orderOk)
	{
		for (var newIndex = 0; newIndex < size; newIndex++)
		{
			var orderedDimensionName = orderedDimensionNames.get(newIndex);
			var currentIndex = this.getDimensionIndex(orderedDimensionName);
			if (currentIndex < newIndex)
			{
				throw oFF.XException.createIllegalStateException("illegal sorting state");
			}
			if (currentIndex !== newIndex)
			{
				this.moveElement(currentIndex, newIndex);
			}
		}
	}
};
oFF.QDimensionList.prototype.getDimensionIndex = function(dimensionName)
{
	var dimensionCount = this.getDimensionCount();
	for (var i = 0; i < dimensionCount; i++)
	{
		var dimension = this.getDimensionAt(i);
		if (oFF.XString.isEqual(dimensionName, dimension.getName()))
		{
			return i;
		}
	}
	return -1;
};
oFF.QDimensionList.prototype.getLoadedDimensions = function()
{
	return this.getDimensions();
};

oFF.QDimensionManager = function() {};
oFF.QDimensionManager.prototype = new oFF.QModelComponentList();
oFF.QDimensionManager.prototype._ff_c = "QDimensionManager";

oFF.QDimensionManager.CUSTOM_DIMENSION2 = "CustomDimension2";
oFF.QDimensionManager.SIGNED_DATA_OTHER = "SignedDataOther";
oFF.QDimensionManager.create = function(parentNode)
{
	var newObj = new oFF.QDimensionManager();
	newObj.setupDimensionManager(parentNode);
	return newObj;
};
oFF.QDimensionManager.prototype.m_hasAccountDimension = false;
oFF.QDimensionManager.prototype.m_lazyLoader = null;
oFF.QDimensionManager.prototype.m_measureStructure = null;
oFF.QDimensionManager.prototype.m_nonMeasureStructure1 = null;
oFF.QDimensionManager.prototype.m_nonMeasureStructure2 = null;
oFF.QDimensionManager.prototype.m_accountDimension = null;
oFF.QDimensionManager.prototype.m_fields = null;
oFF.QDimensionManager.prototype.m_names = null;
oFF.QDimensionManager.prototype.m_firstNameByType = null;
oFF.QDimensionManager.prototype.m_incompleteReferences = null;
oFF.QDimensionManager.prototype.setupDimensionManager = function(parentNode)
{
	this.setupOlapList(parentNode, parentNode, true, null, oFF.XCollectionFactory.MAPPED_LIST, false);
	this.m_fields = oFF.XSetOfNameObject.create();
	this.m_names = oFF.XListOfString.create();
	this.m_firstNameByType = oFF.XHashMapOfStringByString.create();
	this.m_incompleteReferences = oFF.XHashMapByString.create();
};
oFF.QDimensionManager.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponentList.prototype.copyFromInternal.call( this , other, flags);
	var originDimensionManager = other;
	var context = this.getContext();
	var dimensionLazyLoader = originDimensionManager.getDimensionLazyLoader();
	if (oFF.notNull(dimensionLazyLoader))
	{
		this.setDimensionLazyLoader(dimensionLazyLoader.copyDimensionLazyLoader(this.getQueryModelBase()));
	}
	this.m_firstNameByType = originDimensionManager.m_firstNameByType.createMapOfStringByStringCopy();
	var dimensionsToClone = this.getQueryManagerBase().getDimensionsToClone();
	var dimNames = originDimensionManager.getDimensionNames();
	var len = dimNames.size();
	for (var i = 0; i < len; i++)
	{
		var origDimName = dimNames.get(i);
		var origDim = originDimensionManager.getDimensionByNameInternal(origDimName);
		if (oFF.XCollectionUtils.hasElements(dimensionsToClone) && !dimensionsToClone.contains(origDimName) && (oFF.isNull(origDim) || origDim.getAxisType() !== oFF.AxisType.VIRTUAL))
		{
			continue;
		}
		this.m_names.add(origDimName);
		if (oFF.isNull(origDim))
		{
			this.m_incompleteReferences.put(origDimName, originDimensionManager.m_incompleteReferences.getByKey(origDimName));
		}
		else
		{
			var cloneDim = oFF.QFactory.createDimensionFromType(context, origDim, this);
			this.addInternal(cloneDim);
			cloneDim.copyFrom(origDim, flags);
			this.setMeasureReferences(cloneDim);
			this.finalizeDimensionMetadataSetup(cloneDim);
		}
	}
};
oFF.QDimensionManager.prototype.dimensionNotPresentInClonedQueryManager = function(dimension)
{
	return oFF.isNull(dimension) && oFF.XCollectionUtils.hasElements(this.getQueryManagerBase().getDimensionsToClone());
};
oFF.QDimensionManager.prototype.copyDimensionManagerMember = function(origin)
{
	if (oFF.notNull(origin.m_measureStructure))
	{
		if (this.dimensionNotPresentInClonedQueryManager(this.getMeasureDimension()))
		{
			return;
		}
		this.getMeasureDimension().copyDimensionMember(origin.getMeasureDimension());
	}
	if (oFF.notNull(origin.m_nonMeasureStructure1))
	{
		if (this.dimensionNotPresentInClonedQueryManager(this.getNonMeasureDimension()))
		{
			return;
		}
		this.getNonMeasureDimension().copyDimensionMember(origin.getNonMeasureDimension());
	}
	if (oFF.notNull(origin.m_nonMeasureStructure2))
	{
		if (this.dimensionNotPresentInClonedQueryManager(this.getNonMeasureDimension2()))
		{
			return;
		}
		this.getNonMeasureDimension2().copyDimensionMember(origin.getNonMeasureDimension2());
	}
	if (oFF.notNull(origin.m_accountDimension))
	{
		if (this.dimensionNotPresentInClonedQueryManager(this.getAccountDimension()))
		{
			return;
		}
		this.getAccountDimension().copyDimensionMember(origin.getAccountDimension());
	}
};
oFF.QDimensionManager.prototype.releaseObject = function()
{
	this.m_lazyLoader = oFF.XObjectExt.release(this.m_lazyLoader);
	this.m_measureStructure = oFF.XObjectExt.release(this.m_measureStructure);
	this.m_nonMeasureStructure1 = oFF.XObjectExt.release(this.m_nonMeasureStructure1);
	this.m_nonMeasureStructure2 = oFF.XObjectExt.release(this.m_nonMeasureStructure2);
	this.m_accountDimension = oFF.XObjectExt.release(this.m_accountDimension);
	this.m_fields = oFF.XObjectExt.release(this.m_fields);
	this.m_names = oFF.XObjectExt.release(this.m_names);
	this.m_incompleteReferences = oFF.XObjectExt.release(this.m_incompleteReferences);
	this.m_firstNameByType = oFF.XObjectExt.release(this.m_firstNameByType);
	oFF.QModelComponentList.prototype.releaseObject.call( this );
};
oFF.QDimensionManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.DIMENSION_MANAGER;
};
oFF.QDimensionManager.prototype.finalizeDimensionMetadataSetup = function(dimension)
{
	var fields = dimension.getFields();
	var len = fields.size();
	for (var i = 0; i < len; i++)
	{
		var field = fields.get(i);
		this.addField(field, dimension);
	}
};
oFF.QDimensionManager.prototype.convertToFieldLayoutType = function(type)
{
	var len = this.size();
	for (var i = 0; i < len; i++)
	{
		var dimension = this.get(i);
		dimension.convertToFieldLayoutType(type);
	}
};
oFF.QDimensionManager.prototype.getDimensionNameByType = function(type)
{
	if (oFF.isNull(type))
	{
		return null;
	}
	return this.m_firstNameByType.getByKey(type.getName());
};
oFF.QDimensionManager.prototype.getDimensionByType = function(type)
{
	var dimensionNameByType = this.getDimensionNameByType(type);
	return this.getDimensionByName(dimensionNameByType);
};
oFF.QDimensionManager.prototype.getDimensionAt = function(index)
{
	return this.getDimensionByName(this.m_names.get(index));
};
oFF.QDimensionManager.prototype.getByKey = function(key)
{
	return this.getDimensionByName(key);
};
oFF.QDimensionManager.prototype.makeMetadataCallToGetCompleteDimensionDetails = function(name)
{
	var queryManager = this.getQueryManager();
	var queryServiceConfig = queryManager.getQueryServiceConfig();
	var loadedAndCompleteDimensions = this.getAllLoadedAndCompleteDimensions();
	var requiredDimensions = oFF.XListOfString.create();
	requiredDimensions.addAll(loadedAndCompleteDimensions);
	requiredDimensions.add(name);
	queryServiceConfig.setRequiredDimensions(requiredDimensions);
	if (oFF.XCollectionUtils.hasElements(queryServiceConfig.getDimensionsOnAxes()))
	{
		queryServiceConfig.setDimensionsOnAxes(null);
	}
	var modelInitialization = queryManager.processModelInitialization(oFF.SyncType.BLOCKING, null, null);
	if (modelInitialization.hasErrors())
	{
		throw oFF.XException.createRuntimeException("Update Metadata request failed");
	}
};
oFF.QDimensionManager.prototype.getDimensionByName = function(name)
{
	var dimension = this.getDimensionByNameFromExistingMetadata(name);
	if (oFF.notNull(dimension) && oFF.DimensionType.DIMENSION_INCOMPLETE === dimension.getDimensionType() || oFF.isNull(dimension) && oFF.DimensionType.DIMENSION_INCOMPLETE === this.m_incompleteReferences.getByKey(name))
	{
		this.makeMetadataCallToGetCompleteDimensionDetails(name);
		return this.getDimensionByNameFromExistingMetadata(name);
	}
	return dimension;
};
oFF.QDimensionManager.prototype.getDimensionByNameFromExistingMetadata = function(name)
{
	var dimension = this.getDimensionByNameInternal(name);
	if (oFF.isNull(dimension) && this.m_incompleteReferences.containsKey(name))
	{
		dimension = this.lazyLoadDimension(name);
	}
	if (oFF.notNull(dimension) && this.getQueryModel().isCumulativeDeactive() && dimension.supportsCumulative())
	{
		dimension.setIsCumulative(false);
	}
	return dimension;
};
oFF.QDimensionManager.prototype.getDimensionByNameFromExistingMetadataOrFormulaCalcDim = function(name)
{
	var dimension = this.getDimensionByNameFromExistingMetadata(name);
	if (oFF.isNull(dimension))
	{
		var size = this.size();
		for (var j = 0; j < size; j++)
		{
			var loadedDimension = this.get(j);
			if (loadedDimension.getDimensionType() === oFF.DimensionType.FORMULA_CALCULATED_DIMENSION)
			{
				var formulaCalcDim = loadedDimension;
				var dependentCalculatedDimensions = formulaCalcDim.getDependentCalculatedDimensions();
				for (var k = 0; k < dependentCalculatedDimensions.size(); k++)
				{
					if (oFF.XString.isEqual(dependentCalculatedDimensions.get(k).getName(), name))
					{
						return dependentCalculatedDimensions.get(k);
					}
				}
			}
		}
	}
	return dimension;
};
oFF.QDimensionManager.prototype.getAllLoadedAndCompleteDimensions = function()
{
	var dimensionsOnAxes = this.getQueryManager().getQueryServiceConfig().getDimensionsOnAxes();
	if (oFF.XCollectionUtils.hasElements(dimensionsOnAxes))
	{
		var len = this.m_names.size();
		for (var i = 0; i < len; i++)
		{
			var dimensionName = this.m_names.get(i);
			if (!this.m_incompleteReferences.containsKey(dimensionName))
			{
				continue;
			}
			this.getDimensionByNameFromExistingMetadata(dimensionName);
		}
	}
	var alreadyLoadedAndCompleteDimensions = oFF.XListOfString.create();
	var size = this.size();
	for (var j = 0; j < size; j++)
	{
		var dimension = this.get(j);
		if (dimension.getDimensionType() !== oFF.DimensionType.DIMENSION_INCOMPLETE)
		{
			alreadyLoadedAndCompleteDimensions.add(dimension.getName());
		}
	}
	return alreadyLoadedAndCompleteDimensions;
};
oFF.QDimensionManager.prototype.getDimensionByNameInternal = function(name)
{
	return oFF.XCollectionUtils.getByName(this.m_list, name);
};
oFF.QDimensionManager.prototype.containsKey = function(key)
{
	return this.m_names.contains(key);
};
oFF.QDimensionManager.prototype.getKeysAsReadOnlyListOfString = function()
{
	return this.m_names;
};
oFF.QDimensionManager.prototype.getKeysAsIteratorOfString = oFF.noSupport;
oFF.QDimensionManager.prototype.getDimensionCount = function()
{
	return this.m_names.size();
};
oFF.QDimensionManager.prototype.getStructureCount = function()
{
	var count = 0;
	if (oFF.notNull(this.m_nonMeasureStructure1))
	{
		++count;
	}
	if (oFF.notNull(this.m_nonMeasureStructure2))
	{
		++count;
	}
	if (oFF.notNull(this.m_measureStructure))
	{
		++count;
	}
	return count;
};
oFF.QDimensionManager.prototype.getNonStructureCount = function()
{
	var structureCount = this.getStructureCount();
	var allDimCount = this.getDimensionCount();
	return allDimCount - structureCount;
};
oFF.QDimensionManager.prototype.getNonMeasureDimension = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_nonMeasureStructure1);
};
oFF.QDimensionManager.prototype.getNonMeasureDimension2 = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_nonMeasureStructure2);
};
oFF.QDimensionManager.prototype.getMeasureDimension = function()
{
	if (oFF.isNull(this.m_measureStructure))
	{
		this.m_measureStructure = oFF.XWeakReferenceUtil.getWeakRef(this.getDimensionByType(oFF.DimensionType.MEASURE_STRUCTURE));
	}
	return oFF.XWeakReferenceUtil.getHardRef(this.m_measureStructure);
};
oFF.QDimensionManager.prototype.getPrimaryCalculationDimension = function()
{
	var accountDimension = this.getAccountDimension();
	if (oFF.isNull(accountDimension))
	{
		return this.getMeasureDimension();
	}
	return accountDimension;
};
oFF.QDimensionManager.prototype.getSecondaryCalculationDimension = function()
{
	var accountDimension = this.getAccountDimension();
	if (oFF.notNull(accountDimension))
	{
		return this.getMeasureDimension();
	}
	return this.getDimensionByType(oFF.DimensionType.SECONDARY_STRUCTURE);
};
oFF.QDimensionManager.prototype.getAccountDimension = function()
{
	if (oFF.isNull(this.m_accountDimension))
	{
		this.m_accountDimension = oFF.XWeakReferenceUtil.getWeakRef(this.getDimensionByType(oFF.DimensionType.ACCOUNT));
	}
	return oFF.XWeakReferenceUtil.getHardRef(this.m_accountDimension);
};
oFF.QDimensionManager.prototype.getDimensions = function()
{
	var dimRefs = oFF.XListOfString.createFromReadOnlyList(this.m_incompleteReferences.getKeysAsReadOnlyListOfString());
	var len = dimRefs.size();
	for (var i = 0; i < len; i++)
	{
		this.lazyLoadDimension(dimRefs.get(i));
	}
	return this;
};
oFF.QDimensionManager.prototype.setMeasureReferences = function(dimension)
{
	if (!this.isTechnicalDimension(dimension))
	{
		var dimensionType = dimension.getDimensionType();
		if (dimensionType === oFF.DimensionType.MEASURE_STRUCTURE)
		{
			if (oFF.notNull(this.m_measureStructure))
			{
				throw oFF.XException.createIllegalStateException("More than two measure structures");
			}
			this.m_measureStructure = oFF.XWeakReferenceUtil.getWeakRef(dimension);
		}
		else if (dimensionType === oFF.DimensionType.SECONDARY_STRUCTURE)
		{
			if (oFF.isNull(this.m_nonMeasureStructure1))
			{
				this.m_nonMeasureStructure1 = oFF.XWeakReferenceUtil.getWeakRef(dimension);
			}
			else
			{
				if (oFF.notNull(this.m_nonMeasureStructure2))
				{
					throw oFF.XException.createIllegalStateException("More than two Non Measure Structures");
				}
				this.m_nonMeasureStructure2 = oFF.XWeakReferenceUtil.getWeakRef(dimension);
			}
		}
		else if (dimensionType === oFF.DimensionType.ACCOUNT)
		{
			if (oFF.notNull(this.m_accountDimension))
			{
				throw oFF.XException.createIllegalStateException("More than one account dimension");
			}
			this.m_accountDimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
		}
	}
};
oFF.QDimensionManager.prototype.removeMeasureReferences = function(dimensionType)
{
	if (dimensionType === oFF.DimensionType.MEASURE_STRUCTURE)
	{
		this.m_measureStructure = null;
	}
	else if (dimensionType === oFF.DimensionType.SECONDARY_STRUCTURE)
	{
		if (oFF.notNull(this.m_nonMeasureStructure2))
		{
			this.m_nonMeasureStructure2 = null;
		}
		else if (oFF.notNull(this.m_nonMeasureStructure1))
		{
			this.m_nonMeasureStructure1 = null;
		}
	}
	else if (dimensionType === oFF.DimensionType.ACCOUNT)
	{
		this.m_accountDimension = null;
	}
};
oFF.QDimensionManager.prototype.addDimension = function(dimension)
{
	if (!this.contains(dimension))
	{
		this.setMeasureReferences(dimension);
		var dimensionName = dimension.getName();
		if (!this.m_names.contains(dimensionName))
		{
			this.m_names.add(dimensionName);
			var dimensionTypeName = dimension.getDimensionType().getName();
			if (!this.m_firstNameByType.containsKey(dimensionTypeName) && !this.isTechnicalDimension(dimension))
			{
				this.m_firstNameByType.put(dimensionTypeName, dimensionName);
			}
			this.addInternal(dimension);
			this.notifyNodeChanged();
		}
		else
		{
			this.insertDimension(dimension);
		}
	}
};
oFF.QDimensionManager.prototype.isTechnicalDimension = function(dimension)
{
	var supportedAxesTypes = dimension.getSupportedAxesTypes();
	return oFF.isNull(supportedAxesTypes) || supportedAxesTypes.size() === 1 && supportedAxesTypes.contains(oFF.AxisType.TECHNICAL);
};
oFF.QDimensionManager.prototype.removeDimension = function(dimension)
{
	var axis = dimension.getAxis();
	this.m_names.removeElement(dimension.getName());
	this.getQueryModel().getDrillManager().removeDrillOperationsByDimension(dimension);
	this.getQueryModel().getDrillManager().removeZoomDrillOperationsByDimension(dimension);
	if (oFF.notNull(axis))
	{
		axis.removeElementInternal(dimension);
	}
	this.removeMeasureReferences(dimension.getDimensionType());
	oFF.QModelComponentList.prototype.removeElement.call( this , dimension);
};
oFF.QDimensionManager.prototype.finalizeStructures = function()
{
	var dataSource = this.getQueryModel().getDataSource();
	var dataSourceType = dataSource.getType();
	var isAgileBi = !this.m_hasAccountDimension && dataSourceType === oFF.MetaObjectType.PLANNING;
	var isInAModel = dataSourceType === oFF.MetaObjectType.INA_MODEL;
	var objectName = dataSource.getObjectName();
	var isVirtualDs = oFF.XString.startsWith(objectName, "$$") && oFF.XString.endsWith(objectName, "$$");
	var session = this.getSession();
	if (isAgileBi && !session.hasFeature(oFF.FeatureToggleOlap.CUSTOM_DIMENSION_2_FOR_AGILE_BI) || isInAModel && !session.hasFeature(oFF.FeatureToggleOlap.CUSTOM_DIMENSION_2_FOR_INA_MODEL) || isVirtualDs)
	{
		this.removeSecondStructure();
	}
};
oFF.QDimensionManager.prototype.removeSecondStructure = function()
{
	if (this.m_incompleteReferences.containsKey(oFF.QDimensionManager.CUSTOM_DIMENSION2))
	{
		this.m_incompleteReferences.remove(oFF.QDimensionManager.CUSTOM_DIMENSION2);
		this.m_firstNameByType.remove(oFF.QDimensionManager.CUSTOM_DIMENSION2);
		this.removeMeasureReferences(oFF.DimensionType.SECONDARY_STRUCTURE);
		this.m_names.removeElement(oFF.QDimensionManager.CUSTOM_DIMENSION2);
	}
};
oFF.QDimensionManager.prototype.supportsCrossCalculations = function()
{
	var queryModel = this.getQueryModel();
	return queryModel.isPlanning() && queryModel.getAccountDimension() !== null || queryModel.getDimensionByType(oFF.DimensionType.SECONDARY_STRUCTURE) !== null && !queryModel.getSystemType().isTypeOf(oFF.SystemType.BW);
};
oFF.QDimensionManager.prototype.supportsSignedDataInCrossCalculations = function()
{
	var queryModel = this.getQueryModel();
	return queryModel.getAccountDimension() !== null && !queryModel.hasUserDefinedMeasures();
};
oFF.QDimensionManager.prototype.supportsDefaultCurrencyInCrossCalculations = function()
{
	var queryModel = this.getQueryModel();
	var currencyTranslationManager = queryModel.getCurrencyTranslationManager();
	var secondaryCalculationDimension = queryModel.getSecondaryCalculationDimension();
	return oFF.notNull(currencyTranslationManager) && currencyTranslationManager.isLegacyMeasureCurrencyTranslationAccountModel() && oFF.notNull(secondaryCalculationDimension) && secondaryCalculationDimension.getStructureMember(oFF.QDimensionManager.SIGNED_DATA_OTHER) !== null;
};
oFF.QDimensionManager.prototype.getDimensionNames = function()
{
	return this.m_names;
};
oFF.QDimensionManager.prototype.getLoadedDimensions = function()
{
	return this;
};
oFF.QDimensionManager.prototype.addDimensionReference = function(name, dimensionType, isTechnicalDimension)
{
	if (dimensionType === oFF.DimensionType.SECONDARY_STRUCTURE && this.m_hasAccountDimension)
	{
		return;
	}
	if (!this.m_names.contains(name))
	{
		this.m_names.add(name);
		var dimensionTypeName = dimensionType.getName();
		this.m_incompleteReferences.put(name, dimensionType);
		if (!this.m_firstNameByType.containsKey(dimensionTypeName) && !isTechnicalDimension)
		{
			this.m_firstNameByType.put(dimensionTypeName, name);
		}
		if (dimensionType === oFF.DimensionType.ACCOUNT)
		{
			this.removeSecondStructure();
			this.m_hasAccountDimension = true;
		}
	}
};
oFF.QDimensionManager.prototype.setDimensionLazyLoader = function(lazyLoader)
{
	this.m_lazyLoader = lazyLoader;
};
oFF.QDimensionManager.prototype.getDimensionLazyLoader = function()
{
	return this.m_lazyLoader;
};
oFF.QDimensionManager.prototype.getDimensionReferences = function()
{
	return this.m_incompleteReferences;
};
oFF.QDimensionManager.prototype.getFieldByNameOrAlias = function(name)
{
	if (this.m_fields.containsKey(name))
	{
		return this.m_fields.getByKey(name);
	}
	var len = this.m_names.size();
	var fieldByNameOrAlias = null;
	for (var i = 0; i < len; i++)
	{
		var dimName = this.m_names.get(i);
		var isExternalJoinedDimension = oFF.XString.containsString(dimName, "$$");
		var dim = this.getDimensionByNameInternal(dimName);
		if (oFF.notNull(dim))
		{
			var field = dim.getFieldByNameOrAlias(name);
			if (oFF.notNull(field))
			{
				if (isExternalJoinedDimension)
				{
					fieldByNameOrAlias = field;
				}
				else
				{
					return field;
				}
			}
		}
		else if (this.m_lazyLoader.hasFieldWithNameOrAlias(dimName, name))
		{
			dim = this.lazyLoadDimension(dimName);
			fieldByNameOrAlias = dim.getFieldByNameOrAlias(name);
			if (!isExternalJoinedDimension)
			{
				return fieldByNameOrAlias;
			}
		}
	}
	return fieldByNameOrAlias;
};
oFF.QDimensionManager.prototype.getFieldByName = function(name)
{
	if (this.m_fields.containsKey(name))
	{
		return this.m_fields.getByKey(name);
	}
	var len = this.m_names.size();
	for (var i = 0; i < len; i++)
	{
		var dimensionName = this.m_names.get(i);
		if (!this.m_incompleteReferences.containsKey(dimensionName))
		{
			continue;
		}
		if (this.m_lazyLoader.hasFieldWithName(dimensionName, name))
		{
			this.lazyLoadDimension(dimensionName);
			return this.m_fields.getByKey(name);
		}
	}
	var size = this.size();
	for (var j = 0; j < size; j++)
	{
		var dimension = this.get(j);
		if (dimension.getDimensionType() === oFF.DimensionType.FORMULA_CALCULATED_DIMENSION)
		{
			var formulaCalcDim = dimension;
			var formulaCalcField = formulaCalcDim.getFieldByName(name);
			if (oFF.notNull(formulaCalcField))
			{
				return formulaCalcField;
			}
			var dependentCalculatedDimensions = formulaCalcDim.getDependentCalculatedDimensions();
			for (var k = 0; k < dependentCalculatedDimensions.size(); k++)
			{
				var dependentFormulaCalcField = dependentCalculatedDimensions.get(k).getFieldByName(name);
				if (oFF.notNull(dependentFormulaCalcField))
				{
					return dependentFormulaCalcField;
				}
			}
		}
	}
	return null;
};
oFF.QDimensionManager.prototype.addField = function(field, dimension)
{
	var name = field.getName();
	var existingField = this.m_fields.getByKey(name);
	if (oFF.isNull(existingField))
	{
		this.m_fields.add(field);
	}
	else
	{
		var existingFieldDim = existingField.getDimension();
		if (oFF.notNull(existingFieldDim) && existingFieldDim.isGroupingDimension() && !dimension.isGroupingDimension())
		{
			existingField.setDimension(dimension);
		}
	}
};
oFF.QDimensionManager.prototype.mergeDeepRecursive = function(settings, other)
{
	var otherObj = other;
	var dimensions = otherObj.getDimensions();
	if (this.getDimensionLazyLoader() !== null && otherObj.getDimensionLazyLoader() !== null)
	{
		this.getDimensionLazyLoader().setUseDesignTimeMetadata(otherObj.getDimensionLazyLoader().isUseDesignTimeMetadata());
	}
	var size = dimensions.size();
	for (var i = 0; i < size; i++)
	{
		var otherDimension = dimensions.get(i);
		var otherName = otherDimension.getName();
		var myDimension = this.getDimensionByNameFromExistingMetadata(otherName);
		if (oFF.isNull(myDimension))
		{
			var newlyAddedDimension = this.createAndAddDimension(otherName, otherDimension.getText());
			newlyAddedDimension.copyDimension(otherDimension);
		}
		else
		{
			myDimension.mergeDeepRecursive(settings, otherDimension);
		}
	}
};
oFF.QDimensionManager.prototype.createAndAddDimension = function(name, text)
{
	this.stopEventing();
	var dim = oFF.QDimension._create(this.getContext(), this);
	dim.setName(name);
	dim.setText(text);
	this.addDimension(dim);
	this.resumeEventing();
	return dim;
};
oFF.QDimensionManager.prototype.addNewCalculatedDimensionWithName = function(calculatedDimensionName)
{
	if (this.getByKey(calculatedDimensionName) !== null)
	{
		return null;
	}
	var calculatedDimension = oFF.QCalculatedDimension._createCalculatedDimension(this.getContext(), this, calculatedDimensionName);
	this.m_names.add(calculatedDimensionName);
	this.add(calculatedDimension);
	this.getQueryModel().getFreeAxis().add(calculatedDimension);
	return calculatedDimension;
};
oFF.QDimensionManager.prototype.clearAllCalculatedDimensions = function()
{
	this.queueEventing();
	var size = this.size();
	for (var i = size - 1; i >= 0; i--)
	{
		var dimension = this.get(i);
		this.removeCalculatedDimensionByName(dimension.getName());
	}
	this.resumeEventing();
};
oFF.QDimensionManager.prototype.removeCalculatedDimensionByName = function(calculatedDimensionName)
{
	var dimension = this.getByKey(calculatedDimensionName);
	if (oFF.notNull(dimension) && dimension.getDimensionType().isTypeOf(oFF.DimensionType.CALCULATED_DIMENSION))
	{
		var fieldContainer = dimension.getFieldContainerBase();
		fieldContainer.clearAllFields();
		this.removeElement(dimension);
		this.m_names.removeElement(calculatedDimensionName);
		var fields = dimension.getFields();
		if (oFF.notNull(fields))
		{
			var fieldsIterator = fields.getIterator();
			while (fieldsIterator.hasNext())
			{
				this.removeField(fieldsIterator.next());
			}
		}
	}
};
oFF.QDimensionManager.prototype.removeField = function(field)
{
	if (oFF.notNull(field) && this.m_fields.containsKey(field.getName()))
	{
		return this.m_fields.removeElement(field);
	}
	return null;
};
oFF.QDimensionManager.prototype.removeAt = function(index)
{
	var dimName = this.m_names.removeAt(index);
	var dimension = this.getDimensionByNameInternal(dimName);
	if (oFF.isNull(dimension))
	{
		this.m_firstNameByType.remove(dimName);
		this.m_incompleteReferences.remove(dimName);
		return null;
	}
	var axis = dimension.getAxis();
	axis.removeElementInternal(dimension);
	this.removeMeasureReferences(dimension.getDimensionType());
	oFF.QModelComponentList.prototype.removeElement.call( this , dimension);
	return dimension;
};
oFF.QDimensionManager.prototype.removeElement = function(element)
{
	this.removeDimension(element);
	return element;
};
oFF.QDimensionManager.prototype.lazyLoadDimension = function(dimensionName)
{
	this.stopEventing();
	var dim = this.m_lazyLoader.lazyLoadDimension(dimensionName);
	if (oFF.notNull(dim))
	{
		this.m_firstNameByType.remove(dimensionName);
		this.m_incompleteReferences.remove(dimensionName);
		this.setMeasureReferences(dim);
		this.insertDimension(dim);
		var defaultAxis = this.getQueryModel().getAxis(dim.getDefaultAxisType());
		this.insertDimensionOnAxis(defaultAxis, dim);
		this.finalizeDimensionMetadataSetup(dim);
	}
	this.resumeEventing();
	return dim;
};
oFF.QDimensionManager.prototype.insertDimension = function(dimension)
{
	var predecessorIndex = this.m_names.getIndex(dimension.getName()) - 1;
	var predecessorName = null;
	while (predecessorIndex >= 0)
	{
		var current = this.m_names.get(predecessorIndex);
		if (!this.m_incompleteReferences.containsKey(current))
		{
			predecessorName = current;
			break;
		}
		--predecessorIndex;
	}
	var insertIndex = 0;
	if (oFF.notNull(predecessorName))
	{
		var len = this.size();
		for (var i = 0; i < len; i++)
		{
			if (oFF.XString.isEqual(predecessorName, this.get(i).getName()))
			{
				insertIndex = i + 1;
				break;
			}
		}
	}
	this.insertInternal(insertIndex, dimension);
};
oFF.QDimensionManager.prototype.insertDimensionOnAxis = function(axis, dimension)
{
	var insertIndex = 0;
	var axisDimNames = axis.getDimensionNames();
	var nameIndex = this.m_names.getIndex(dimension.getName()) - 1;
	while (nameIndex >= 0)
	{
		var result = axisDimNames.getIndex(this.m_names.get(nameIndex));
		if (result !== -1)
		{
			insertIndex = result + 1;
			break;
		}
		--nameIndex;
	}
	axis.insert(insertIndex, dimension);
};

oFF.QFilterAcrossModelsCalculatedDimension = function() {};
oFF.QFilterAcrossModelsCalculatedDimension.prototype = new oFF.QFormulaCalculatedDimension();
oFF.QFilterAcrossModelsCalculatedDimension.prototype._ff_c = "QFilterAcrossModelsCalculatedDimension";

oFF.QFilterAcrossModelsCalculatedDimension.createFilterAcrossModelsCalculatedDimension = function(context, name)
{
	var dimension = new oFF.QFilterAcrossModelsCalculatedDimension();
	dimension.setupFormulaCalculatedDimension(context, name);
	dimension.setJoinType(oFF.JoinType.INNER);
	dimension.m_measureNames = oFF.XListOfString.create();
	dimension.m_secondaryMeasureNames = oFF.XListOfString.create();
	return dimension;
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.m_measureNames = null;
oFF.QFilterAcrossModelsCalculatedDimension.prototype.m_secondaryMeasureNames = null;
oFF.QFilterAcrossModelsCalculatedDimension.prototype.m_famJoinType = null;
oFF.QFilterAcrossModelsCalculatedDimension.prototype.copyFromInternal = function(other, flags)
{
	this.copyFilterAcrossModelCalculatedDimension(other, false);
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.copyFilterAcrossModelCalculatedDimension = function(other, addDependenciesToQueryModel)
{
	oFF.QFormulaCalculatedDimension.prototype.copyFormulaCalculatedDimensionAndUpdateQueryModel.call( this , other, addDependenciesToQueryModel, true);
	this.m_measureNames = other.m_measureNames.createListOfStringCopy();
	this.m_secondaryMeasureNames = other.m_secondaryMeasureNames.createListOfStringCopy();
	this.m_famJoinType = other.m_famJoinType;
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.releaseObject = function()
{
	this.m_famJoinType = null;
	this.m_measureNames = oFF.XObjectExt.release(this.m_measureNames);
	this.m_secondaryMeasureNames = oFF.XObjectExt.release(this.m_secondaryMeasureNames);
	oFF.QFormulaCalculatedDimension.prototype.releaseObject.call( this );
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.getDimensionType = function()
{
	return oFF.DimensionType.FILTER_ACROSS_MODELS_CALCULATED_DIMENSION;
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.getJoinType = function()
{
	return this.m_famJoinType;
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.setJoinType = function(joinType)
{
	this.m_famJoinType = joinType;
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.addJoinFieldByString = function(localeFieldName, referencedFieldName)
{
	this.addJoinField(oFF.QFieldNamePair.create(localeFieldName, referencedFieldName));
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.addJoinField = function(joinField)
{
	this.m_joinFields.add(joinField);
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.getJoinFields = function()
{
	return this.m_joinFields;
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.addFieldMappingByString = function(localeFieldName, referencedFieldName)
{
	this.addFieldMapping(oFF.QFieldNamePair.create(localeFieldName, referencedFieldName));
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.addFieldMapping = function(fieldMapping)
{
	this.m_fieldMappings.add(fieldMapping);
	var presentation = oFF.PresentationType.UNDEFINED;
	if (this.m_fieldMappings.size() === 1)
	{
		presentation = oFF.PresentationType.KEY;
	}
	var newField = this.addNewCalcFieldInternal(fieldMapping.getLocaleFieldName(), presentation);
	this.getProperties().getFormulaCalcFields().add(newField);
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.getFieldMappings = function()
{
	return this.m_fieldMappings;
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.setMeasureNames = function(measureNames)
{
	this.m_measureNames = measureNames;
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.getMeasureNames = function()
{
	return this.m_measureNames;
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.setSecondaryMeasureNames = function(measureNames)
{
	this.m_secondaryMeasureNames = measureNames;
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.getSecondaryMeasureNames = function()
{
	return this.m_secondaryMeasureNames;
};
oFF.QFilterAcrossModelsCalculatedDimension.prototype.addDependencies = function(context, messageManager)
{
	for (var i = 0; i < this.m_measureNames.size(); i++)
	{
		this.addDependentMeasuresInternal(this.m_measureNames.get(i), this.getContext(), false);
	}
	for (var j = 0; j < this.m_secondaryMeasureNames.size(); j++)
	{
		this.addDependentMeasuresInternal(this.m_secondaryMeasureNames.get(j), this.getContext(), true);
	}
	var aggregationFieldNames = this.getAggregationFieldNames();
	for (var k = 0; k < aggregationFieldNames.size(); k++)
	{
		this.addDependentAttributesInternal(aggregationFieldNames.get(k), this.getContext(), messageManager);
	}
	oFF.QFormulaCalculatedDimension.prototype.addDependencies.call( this , context, messageManager);
};

oFF.QMeasureBasedFilterCalculatedDimension = function() {};
oFF.QMeasureBasedFilterCalculatedDimension.prototype = new oFF.QFormulaCalculatedDimension();
oFF.QMeasureBasedFilterCalculatedDimension.prototype._ff_c = "QMeasureBasedFilterCalculatedDimension";

oFF.QMeasureBasedFilterCalculatedDimension._createMeasureBasedFilterCalculatedDimension = function(context, calculatedDimensionName)
{
	var dim = new oFF.QMeasureBasedFilterCalculatedDimension();
	dim.setupFormulaCalculatedDimension(context, calculatedDimensionName);
	dim.setDimensionType(oFF.DimensionType.MEASURE_BASED_FILTER_CALCULATED_DIMENSION);
	dim.setJoinType(oFF.JoinType.INNER);
	return dim;
};

oFF.QExceptionManager = function() {};
oFF.QExceptionManager.prototype = new oFF.QModelComponentList();
oFF.QExceptionManager.prototype._ff_c = "QExceptionManager";

oFF.QExceptionManager.createExceptionManager = function(queryModel)
{
	var newObject = new oFF.QExceptionManager();
	newObject.setupOlapList(queryModel, queryModel, true, "Exceptions", oFF.XCollectionFactory.LOOKUP_LIST, false);
	return newObject;
};
oFF.QExceptionManager.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponentList.prototype.copyFromInternal.call( this , other, flags);
	var originExceptionManager = other;
	var size = originExceptionManager.size();
	for (var i = 0; i < size; i++)
	{
		var origException = originExceptionManager.get(i);
		var cloneException = this.getByKey(origException.getName());
		if (oFF.isNull(cloneException))
		{
			cloneException = this.addNewException(origException.getName(), origException.getText());
		}
		cloneException.copyFrom(origException, flags);
	}
};
oFF.QExceptionManager.prototype.removeClientExceptions = function()
{
	this.queueEventing();
	var size = this.size();
	for (var i = size - 1; i >= 0; i--)
	{
		var exception = this.get(i);
		if (exception.isChangeable())
		{
			this.removeInternal(exception);
			oFF.XObjectExt.release(exception);
		}
	}
	this.resumeEventing();
};
oFF.QExceptionManager.prototype.deactivateServerExceptions = function()
{
	var size = this.size();
	for (var i = 0; i < size; i++)
	{
		var exception = this.get(i);
		if (!exception.isChangeable())
		{
			exception.setActive(false);
		}
	}
};
oFF.QExceptionManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.EXCEPTION_MANAGER;
};
oFF.QExceptionManager.prototype._addNewExceptionInternal = function(name, text, evalType, headerSettings, isActive, isEvalAfterCalc)
{
	var exception = this.newException(name, text);
	this.addInternal(exception);
	exception.setEvaluateDefault(evalType);
	exception.setHeaderSettingBase(headerSettings);
	exception.setActive(isActive);
	exception.setEvaluationAfterCalculations(isEvalAfterCalc);
	return exception;
};
oFF.QExceptionManager.prototype.addNewException = function(name, text)
{
	var exception = this.newException(name, text);
	this.add(exception);
	return exception;
};
oFF.QExceptionManager.prototype.newException = function(name, text)
{
	return oFF.QException.createException(this.getContext(), this.getQueryModelBase(), name, text);
};
oFF.QExceptionManager.prototype.containsKey = function(key)
{
	return this.getByKey(key) !== null;
};
oFF.QExceptionManager.prototype.add = function(element)
{
	var byKey = this.getByKey(element.getName());
	if (oFF.notNull(byKey) && byKey.getMeasure() === element.getMeasure() && byKey.getStructure() === element.getStructure())
	{
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate3("The exception name '", element.getName(), "' is not unique!"));
	}
	oFF.QModelComponentList.prototype.add.call( this , element);
};
oFF.QExceptionManager.prototype.getByKey = function(key)
{
	return oFF.XCollectionUtils.getByName(this.m_list, key);
};
oFF.QExceptionManager.prototype.getKeysAsReadOnlyListOfString = oFF.noSupport;
oFF.QExceptionManager.prototype.getKeysAsIteratorOfString = oFF.noSupport;
oFF.QExceptionManager.prototype.getAllExceptionsOfMeasure = function(measure)
{
	var exceptions = oFF.XList.create();
	var exceptionSize = this.size();
	for (var idx = 0; idx < exceptionSize; idx++)
	{
		var exception = this.get(idx);
		var exMeasure = exception.getMeasure();
		var exStructure = exception.getStructure();
		var exceptionContainsMeasure = false;
		if (oFF.notNull(exMeasure))
		{
			var memberNameFromAlias = this.getConvenienceCommands().getMeasureMemberNameByAlias(this.getQueryModel(), exMeasure.getAliasOrMemberName());
			exceptionContainsMeasure = oFF.XString.isEqual(exMeasure.getAliasOrMemberName(), measure.getAliasOrMemberName()) || oFF.XString.isEqual(memberNameFromAlias, measure.getAliasOrMemberName());
		}
		var exceptionContainsStructure = oFF.notNull(exStructure) && oFF.XString.isEqual(exStructure.getAliasOrMemberName(), measure.getAliasOrMemberName());
		if (exceptionContainsMeasure || exceptionContainsStructure)
		{
			exceptions.add(exception);
		}
	}
	return exceptions;
};
oFF.QExceptionManager.prototype.mergeDeepRecursive = function(settings, other)
{
	this.removeBackendExceptions();
	this.copyFrom(other, null);
};
oFF.QExceptionManager.prototype.removeBackendExceptions = function()
{
	var size = this.size();
	for (var i = size - 1; i >= 0; i--)
	{
		var exception = this.get(i);
		if (!exception.isChangeable())
		{
			this.removeInternal(exception);
			oFF.XObjectExt.release(exception);
		}
	}
};
oFF.QExceptionManager.prototype.removeAllExceptionsOfMeasure = function(measure)
{
	if (this.isEmpty())
	{
		return;
	}
	var idx = 0;
	this.queueEventing();
	while (idx < this.size())
	{
		var exception = this.get(idx);
		if (exception.getMeasure() !== null && oFF.XString.isEqual(exception.getMeasure().getName(), measure.getName()))
		{
			this.removeAt(idx);
		}
		else if (exception.getStructure() !== null && oFF.XString.isEqual(exception.getStructure().getName(), measure.getName()))
		{
			this.removeAt(idx);
		}
		else
		{
			idx++;
		}
	}
	this.resumeEventing();
};

oFF.QFormulaExceptionManager = function() {};
oFF.QFormulaExceptionManager.prototype = new oFF.QModelComponentList();
oFF.QFormulaExceptionManager.prototype._ff_c = "QFormulaExceptionManager";

oFF.QFormulaExceptionManager.createFormulaExceptionManager = function(context)
{
	var newObject = new oFF.QFormulaExceptionManager();
	newObject.setupFormulaExceptionManager(context);
	return newObject;
};
oFF.QFormulaExceptionManager.prototype.m_modelFormulaExceptions = null;
oFF.QFormulaExceptionManager.prototype.m_isFormulaResultVisible = false;
oFF.QFormulaExceptionManager.prototype.setupFormulaExceptionManager = function(context)
{
	var queryModel = context.getQueryModel();
	this.setupOlapList(queryModel, queryModel, false, "FormulaExceptions", oFF.XCollectionFactory.LOOKUP_LIST, true);
	this.m_modelFormulaExceptions = oFF.QFactory.createKeyRefStorage(context, "ModelFormulaExceptions");
	context.getKeyRefStorage().setSubKefRefStore(this.m_modelFormulaExceptions);
};
oFF.QFormulaExceptionManager.prototype.releaseObject = function()
{
	this.m_modelFormulaExceptions.removeObjectsByStorage(this.m_modelFormulaExceptions.getName(), true);
	this.m_modelFormulaExceptions = oFF.XObjectExt.release(this.m_modelFormulaExceptions);
	oFF.QModelComponentList.prototype.releaseObject.call( this );
};
oFF.QFormulaExceptionManager.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponentList.prototype.copyFromInternal.call( this , other, flags);
	var originExceptionManager = other;
	var size = originExceptionManager.size();
	for (var i = 0; i < size; i++)
	{
		var origException = originExceptionManager.get(i);
		if (this.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(origException) !== null)
		{
			this.addKeyRef(origException);
		}
		else
		{
			var cloneException = this.addNewFormulaException(origException.getName(), origException.getText());
			cloneException.copyFrom(origException, null);
		}
	}
	this.m_isFormulaResultVisible = originExceptionManager.m_isFormulaResultVisible;
	var modelFormulaExceptions = originExceptionManager.getAllModelFormulaExceptions();
	size = modelFormulaExceptions.size();
	for (var j = 0; j < size; j++)
	{
		var originModelException = modelFormulaExceptions.get(j);
		var modelException = this.addNewModelFormulaException(originModelException.getName(), originModelException.getText());
		modelException.copyFrom(originModelException, null);
	}
};
oFF.QFormulaExceptionManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FORMULA_EXCEPTION_MANAGER;
};
oFF.QFormulaExceptionManager.prototype.addNewFormulaException = function(name, text)
{
	var exception = this.newFormulaException(name, text);
	this.add(exception);
	return exception;
};
oFF.QFormulaExceptionManager.prototype.newFormulaException = function(name, text)
{
	return oFF.QFormulaException.createFormulaException(this.getContext(), this.getQueryModelBase(), name, text);
};
oFF.QFormulaExceptionManager.prototype.add = function(element)
{
	if (oFF.notNull(element) && element.getName() !== null)
	{
		var byKey = this.getByKey(element.getName());
		if (oFF.notNull(byKey) && byKey.getBaseMeasure() === element.getBaseMeasure() && byKey.getReferenceMeasure() === element.getReferenceMeasure())
		{
			throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate3("The formula exception name '", element.getName(), "' is not unique!"));
		}
		if (this.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(element) !== null || this.getModelFormulaExceptionByKeyRef(element) !== null)
		{
			this.addKeyRef(element);
			return;
		}
	}
	oFF.QModelComponentList.prototype.add.call( this , element);
};
oFF.QFormulaExceptionManager.prototype.getByKey = function(key)
{
	return oFF.XCollectionUtils.getByName(this.m_list, key);
};
oFF.QFormulaExceptionManager.prototype.mergeDeepRecursive = function(settings, other)
{
	this.copyFrom(other, null);
};
oFF.QFormulaExceptionManager.prototype.generateTransientObjects = function(context, messageManager)
{
	var leftOverIndex = 0;
	while (this.size() > leftOverIndex)
	{
		var exception = this.get(leftOverIndex);
		if (oFF.notNull(exception))
		{
			exception.generateTransientObjects(context, messageManager);
			leftOverIndex++;
		}
		else
		{
			this.removeAt(leftOverIndex);
		}
	}
};
oFF.QFormulaExceptionManager.prototype.destroyTransientObjects = function(context)
{
	var size = this.size();
	for (var i = 0; i < size; i++)
	{
		var exception = this.get(i);
		exception.destroyTransientObjects(context);
	}
};
oFF.QFormulaExceptionManager.prototype._addNewFormulaExceptionInternal = function(name, text)
{
	var formulaException = this.newFormulaException(name, text);
	this.addInternal(formulaException);
	return formulaException;
};
oFF.QFormulaExceptionManager.prototype.setFormulaResultVisible = function(isVisible)
{
	if (this.m_isFormulaResultVisible !== isVisible)
	{
		this.m_isFormulaResultVisible = isVisible;
		this.notifyPropertyBooleanChanged(oFF.QExceptionProperties.QY_FORMULA_RESULT_VISIBLE, !isVisible, isVisible);
	}
};
oFF.QFormulaExceptionManager.prototype.isFormulaResultVisible = function()
{
	return this.m_isFormulaResultVisible;
};
oFF.QFormulaExceptionManager.prototype.addNewModelFormulaException = function(name, text)
{
	var context = this.getContext();
	var memberContext = oFF.QFactory.createKeyRefStoreContextWithCapabilities(context.getQueryModel(), this.m_modelFormulaExceptions.getName(), context.getModelCapabilities().cloneExt(null));
	var newFormulaException = oFF.QFactory.createFormulaException(memberContext, name, text);
	this.m_modelFormulaExceptions.putExt(newFormulaException, oFF.QClientQueryObjectType.FORMULA_EXCEPTION.getName(), name);
	return newFormulaException;
};
oFF.QFormulaExceptionManager.prototype.removeModelFormulaException = function(name, releaseObject)
{
	this.m_modelFormulaExceptions.removeObject(this.m_modelFormulaExceptions.getName(), oFF.QClientQueryObjectType.FORMULA_EXCEPTION.getName(), name, releaseObject);
};
oFF.QFormulaExceptionManager.prototype.getAllModelFormulaExceptions = function()
{
	var keyRefs = this.m_modelFormulaExceptions.getObjectsByGroup(this.m_modelFormulaExceptions.getName(), oFF.QClientQueryObjectType.FORMULA_EXCEPTION.getName());
	var keyRefsIter = keyRefs.getIterator();
	var formulaExceptions = oFF.XList.create();
	while (keyRefsIter.hasNext())
	{
		var formulaException = keyRefsIter.next();
		formulaExceptions.add(formulaException);
	}
	return formulaExceptions;
};
oFF.QFormulaExceptionManager.prototype.getModelFormulaException = function(name)
{
	return this.m_modelFormulaExceptions.get(this.m_modelFormulaExceptions.getName(), oFF.QClientQueryObjectType.FORMULA_EXCEPTION.getName(), name);
};
oFF.QFormulaExceptionManager.prototype.getModelFormulaExceptionByBaseMeasure = function(baseMeasure)
{
	var keyRefs = this.m_modelFormulaExceptions.getObjectsByGroup(this.m_modelFormulaExceptions.getName(), oFF.QClientQueryObjectType.FORMULA_EXCEPTION.getName());
	var keyRefsIter = keyRefs.getIterator();
	while (keyRefsIter.hasNext())
	{
		var formulaException = keyRefsIter.next();
		var formulaExBaseMeasure = formulaException.getBaseMeasure();
		if (oFF.notNull(formulaExBaseMeasure) && oFF.XString.isEqual(formulaExBaseMeasure.getAliasOrMemberName(), baseMeasure.getAliasOrMemberName()))
		{
			return formulaException;
		}
	}
	return null;
};
oFF.QFormulaExceptionManager.prototype.getModelFormulaExceptionByKeyRef = function(keyRef)
{
	if (oFF.isNull(keyRef))
	{
		return null;
	}
	try
	{
		return this.m_modelFormulaExceptions.get(keyRef.getStorageName(), keyRef.getStorageGroupName(), keyRef.getStorageObjectName());
	}
	catch (e)
	{
		return null;
	}
};

oFF.QThreshold = function() {};
oFF.QThreshold.prototype = new oFF.QModelComponentList();
oFF.QThreshold.prototype._ff_c = "QThreshold";

oFF.QThreshold.createThreshold = function(context, lowValue, alertLevel, exception)
{
	if (oFF.isNull(exception))
	{
		return null;
	}
	var threshold = new oFF.QThreshold();
	threshold.setupThreshold(context, oFF.XValueType.DOUBLE, oFF.XDoubleValue.create(lowValue), alertLevel, exception);
	return threshold;
};
oFF.QThreshold.createThresholdWithString = function(context, low, alertLevel, exception)
{
	if (oFF.isNull(exception))
	{
		return null;
	}
	var threshold = new oFF.QThreshold();
	threshold.setupThreshold(context, oFF.XValueType.STRING, oFF.XStringValue.create(low), alertLevel, exception);
	return threshold;
};
oFF.QThreshold.prototype.m_alertLevel = null;
oFF.QThreshold.prototype.m_valueType = null;
oFF.QThreshold.prototype.m_lowValue = null;
oFF.QThreshold.prototype.m_highValue = null;
oFF.QThreshold.prototype.m_operator = null;
oFF.QThreshold.prototype.m_color = null;
oFF.QThreshold.prototype.copyThreshold = function(origin)
{
	oFF.QModelComponentList.prototype.copyFrom.call( this , origin, null);
	this.m_alertLevel = origin.m_alertLevel;
	this.m_valueType = origin.m_valueType;
	this.m_color = origin.m_color;
	this.m_lowValue = oFF.XObjectExt.cloneIfNotNull(origin.m_lowValue);
	this.m_highValue = oFF.XObjectExt.cloneIfNotNull(origin.m_highValue);
	var size = origin.size();
	for (var i = 0; i < size; i++)
	{
		var originSetting = origin.get(i);
		var cloneSetting = this.addNewSetting(originSetting.getName(), originSetting.getPriority());
		cloneSetting.setValue(originSetting.getValue());
		var exSetting = originSetting.getSetting();
		if (oFF.notNull(exSetting))
		{
			cloneSetting.setSetting(exSetting);
		}
	}
	this.m_operator = origin.m_operator;
};
oFF.QThreshold.prototype.setupThreshold = function(context, valueType, lowValue, alertLevel, exception)
{
	this.setupOlapList(context, exception.getThresholds(), true, "Settings", oFF.XCollectionFactory.LOOKUP_LIST, false);
	this.m_valueType = valueType;
	this.m_operator = oFF.ComparisonOperator.EQUAL;
	this.setXLow(lowValue);
	this.m_highValue = null;
	this.m_alertLevel = alertLevel;
};
oFF.QThreshold.prototype.releaseObject = function()
{
	this.m_alertLevel = null;
	this.m_operator = null;
	this.m_lowValue = oFF.XObjectExt.release(this.m_lowValue);
	this.m_highValue = oFF.XObjectExt.release(this.m_highValue);
	this.m_valueType = null;
	oFF.QModelComponentList.prototype.releaseObject.call( this );
};
oFF.QThreshold.prototype.getException = function()
{
	return this.getParent();
};
oFF.QThreshold.prototype.setAlertLevel = function(alertLevel)
{
	this.assertExceptionChangeable();
	this.m_alertLevel = alertLevel;
	this.notifyNodeChanged();
};
oFF.QThreshold.prototype.assertExceptionChangeable = function()
{
	if (this.getSession().hasFeature(oFF.FeatureToggleOlap.INA_REPOSITORY_DELTA))
	{
		this.getException().assertIsChangeable();
	}
};
oFF.QThreshold.prototype.getAlertLevel = function()
{
	return this.m_alertLevel;
};
oFF.QThreshold.prototype.setOperator = function(comparisonOperator)
{
	this.assertExceptionChangeable();
	this.m_operator = comparisonOperator;
	this.notifyNodeChanged();
};
oFF.QThreshold.prototype.getOperator = function()
{
	return this.m_operator;
};
oFF.QThreshold.prototype.setXLow = function(lowValue)
{
	if (oFF.notNull(lowValue))
	{
		this.assertValueType(lowValue, this.m_valueType);
	}
	this.assertExceptionChangeable();
	this.m_lowValue = lowValue;
	this.notifyNodeChanged();
};
oFF.QThreshold.prototype.setLowValue = function(lowValue)
{
	this.setXLow(oFF.XDoubleValue.create(lowValue));
};
oFF.QThreshold.prototype.setLow = function(lowValue)
{
	this.setXLow(oFF.XStringValue.create(lowValue));
};
oFF.QThreshold.prototype.getLowXValue = function()
{
	return this.m_lowValue;
};
oFF.QThreshold.prototype.getLowValue = function()
{
	this.assertValueType(this.getLowXValue(), oFF.XValueType.DOUBLE);
	return this.m_lowValue.getDouble();
};
oFF.QThreshold.prototype.getLow = function()
{
	this.assertValueType(this.getLowXValue(), oFF.XValueType.STRING);
	return this.m_lowValue.getString();
};
oFF.QThreshold.prototype.setXHigh = function(highValue)
{
	if (oFF.notNull(highValue))
	{
		this.assertValueType(highValue, this.m_valueType);
	}
	this.assertExceptionChangeable();
	this.m_highValue = highValue;
	this.notifyNodeChanged();
};
oFF.QThreshold.prototype.setHighValue = function(highValue)
{
	this.setXHigh(oFF.XDoubleValue.create(highValue));
};
oFF.QThreshold.prototype.setHigh = function(highValue)
{
	this.setXHigh(oFF.XStringValue.create(highValue));
};
oFF.QThreshold.prototype.getHighXValue = function()
{
	return this.m_highValue;
};
oFF.QThreshold.prototype.getHighValue = function()
{
	this.assertValueType(this.getHighXValue(), oFF.XValueType.DOUBLE);
	if (oFF.isNull(this.m_highValue))
	{
		throw oFF.XException.createIllegalStateException("Illegal high value");
	}
	return this.m_highValue.getDouble();
};
oFF.QThreshold.prototype.getHigh = function()
{
	this.assertValueType(this.getHighXValue(), oFF.XValueType.STRING);
	if (oFF.isNull(this.m_highValue))
	{
		throw oFF.XException.createIllegalStateException("Illegal high value");
	}
	return this.m_highValue.getString();
};
oFF.QThreshold.prototype.setIntervall = function(lowValue, highValue)
{
	this.queueEventing();
	this.setLowValue(lowValue);
	this.setHighValue(highValue);
	this.resumeEventing();
};
oFF.QThreshold.prototype.addNewSetting = function(name, priority)
{
	this.assertExceptionChangeable();
	var setting = this.newSetting(name, priority);
	this.add(setting);
	return setting;
};
oFF.QThreshold.prototype.addNewSettingWithConstant = function(exceptionSetting, priority)
{
	this.assertExceptionChangeable();
	var setting = this.newSettingWithConstant(exceptionSetting, priority);
	this.add(setting);
	return setting;
};
oFF.QThreshold.prototype.newSetting = function(name, priority)
{
	return oFF.QSettings.createSetting(this.getContext(), name, priority, this);
};
oFF.QThreshold.prototype.newSettingWithConstant = function(exceptionSetting, priority)
{
	return oFF.QSettings.createSettingWithConstant(this.getContext(), exceptionSetting, priority, this);
};
oFF.QThreshold.prototype.setIntervallByString = function(lowValue, highValue)
{
	this.queueEventing();
	this.setLow(lowValue);
	this.setHigh(highValue);
	this.resumeEventing();
};
oFF.QThreshold.prototype.getValueType = function()
{
	return this.m_valueType;
};
oFF.QThreshold.prototype.getByKey = function(key)
{
	return oFF.XCollectionUtils.getByName(this, key);
};
oFF.QThreshold.prototype.containsKey = function(key)
{
	return this.getByKey(key) !== null;
};
oFF.QThreshold.prototype.getKeysAsReadOnlyListOfString = function()
{
	return oFF.XCollectionUtils.createListOfNames(this);
};
oFF.QThreshold.prototype.getKeysAsIteratorOfString = function()
{
	return this.getKeysAsReadOnlyListOfString().getIterator();
};
oFF.QThreshold.prototype.setColor = function(color)
{
	this.m_color = color;
};
oFF.QThreshold.prototype.getColor = function()
{
	return this.m_color;
};
oFF.QThreshold.prototype.getParent = function()
{
	var listOfThresholds = oFF.QModelComponentList.prototype.getParent.call( this );
	return oFF.notNull(listOfThresholds) ? listOfThresholds.getParent() : null;
};

oFF.QFieldList = function() {};
oFF.QFieldList.prototype = new oFF.QModelComponentList();
oFF.QFieldList.prototype._ff_c = "QFieldList";

oFF.QFieldList.createFieldList = function(parentNode, name)
{
	var list = new oFF.QFieldList();
	list.setupOlapList(parentNode, parentNode, false, name, oFF.XCollectionFactory.LINKED_MAP, false);
	list.m_isFixed = false;
	return list;
};
oFF.QFieldList.prototype.m_isFixed = false;
oFF.QFieldList.prototype.addInternal = function(element)
{
	if (!this.m_isFixed)
	{
		oFF.QModelComponentList.prototype.addInternal.call( this , element);
	}
};
oFF.QFieldList.prototype.add = function(element)
{
	if (!this.m_isFixed)
	{
		oFF.QModelComponentList.prototype.add.call( this , element);
	}
};
oFF.QFieldList.prototype.addAll = function(other)
{
	if (!this.m_isFixed)
	{
		oFF.QModelComponentList.prototype.addAll.call( this , other);
	}
};
oFF.QFieldList.prototype.set = function(index, element)
{
	if (!this.m_isFixed)
	{
		oFF.QModelComponentList.prototype.set.call( this , index, element);
	}
};
oFF.QFieldList.prototype.insert = function(index, element)
{
	if (!this.m_isFixed)
	{
		oFF.QModelComponentList.prototype.insert.call( this , index, element);
	}
};
oFF.QFieldList.prototype.removeAt = function(index)
{
	return this.m_isFixed ? null : oFF.QModelComponentList.prototype.removeAt.call( this , index);
};
oFF.QFieldList.prototype.removeElement = function(element)
{
	if (!this.m_isFixed)
	{
		oFF.QModelComponentList.prototype.removeElement.call( this , element);
	}
	return element;
};
oFF.QFieldList.prototype.moveElement = function(fromIndex, toIndex)
{
	if (!this.m_isFixed)
	{
		oFF.QModelComponentList.prototype.moveElement.call( this , fromIndex, toIndex);
	}
};
oFF.QFieldList.prototype.sortByComparator = function(comparator)
{
	if (!this.m_isFixed)
	{
		oFF.QModelComponentList.prototype.sortByComparator.call( this , comparator);
	}
};
oFF.QFieldList.prototype.sortByDirection = function(sortDirection)
{
	if (!this.m_isFixed)
	{
		oFF.QModelComponentList.prototype.sortByDirection.call( this , sortDirection);
	}
};
oFF.QFieldList.prototype.setIsFixed = function(isFixed)
{
	this.m_isFixed = isFixed;
};
oFF.QFieldList.prototype.isFixed = function()
{
	return this.m_isFixed;
};
oFF.QFieldList.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponentList.prototype.copyFromInternal.call( this , other, flags);
	this.m_isFixed = other.m_isFixed;
};
oFF.QFieldList.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FIELD_LIST;
};
oFF.QFieldList.prototype.removeFieldAt = function(index)
{
	this.removeAt(index);
};
oFF.QFieldList.prototype.getFieldAt = function(index)
{
	return this.get(index);
};
oFF.QFieldList.prototype.getFieldByName = function(name)
{
	return this.getByKey(name);
};
oFF.QFieldList.prototype.getFieldByNameOrAlias = function(name)
{
	var field = this.getByKey(name);
	if (oFF.isNull(field))
	{
		var size = this.size();
		for (var i = 0; i < size; i++)
		{
			var tempField = this.get(i);
			if (oFF.XString.isEqual(tempField.getAliasName(), name))
			{
				if (oFF.isNull(field) || tempField.getPresentationType().getPriority() < field.getPresentationType().getPriority())
				{
					field = tempField;
				}
			}
		}
	}
	return field;
};
oFF.QFieldList.prototype.getFirstFieldByType = function(type)
{
	var len = this.size();
	for (var i = 0; i < len; i++)
	{
		var field = this.get(i);
		if (field.getPresentationType().isTypeOf(type))
		{
			return field;
		}
	}
	return null;
};
oFF.QFieldList.prototype.getFieldBase = function(index)
{
	return this.get(index);
};

oFF.AbstractFilterList = function() {};
oFF.AbstractFilterList.prototype = new oFF.QModelComponentList();
oFF.AbstractFilterList.prototype._ff_c = "AbstractFilterList";

oFF.AbstractFilterList.prototype.m_filterContainer = null;
oFF.AbstractFilterList.prototype.m_uniqueId = null;
oFF.AbstractFilterList.prototype.setParent = function(parent)
{
	if (oFF.notNull(parent))
	{
		var newParentContext = parent.getContext();
		if (oFF.notNull(newParentContext) && newParentContext.getComponentType().isTypeOf(oFF.FilterComponentType.TRANSIENT_FILTER))
		{
			return;
		}
	}
	var currentParent = this.getParent();
	if (oFF.notNull(currentParent))
	{
		var filterExpression = null;
		if (currentParent.getComponentType() === oFF.OlapComponentType.FILTER_EXPRESSION)
		{
			filterExpression = currentParent;
		}
		else if (currentParent.getComponentType().isTypeOf(oFF.OlapComponentType.FILTER_ELEMENT))
		{
			var filterParent = currentParent;
			filterExpression = filterParent.getFilterExpression();
		}
		if (oFF.notNull(filterExpression))
		{
			var filterExpressionParent = filterExpression.getParent();
			if (oFF.notNull(filterExpressionParent) && filterExpressionParent.getComponentType() === oFF.OlapComponentType.OLAP_FILTER_MANAGER)
			{
				return;
			}
		}
	}
	oFF.QModelComponentList.prototype.setParent.call( this , parent);
	var size = this.size();
	this.stopEventing();
	for (var i = 0; i < size; i++)
	{
		this.get(i).setParent(this);
	}
	this.resumeEventing();
};
oFF.AbstractFilterList.prototype.setupFilterList = function(context, parentNode, name)
{
	this.setupOlapList(context, parentNode, true, name, oFF.XCollectionFactory.LOOKUP_LIST, false);
	if (oFF.notNull(parentNode) && parentNode.getComponentType() === oFF.OlapComponentType.FILTER_EXPRESSION)
	{
		this.m_filterContainer = oFF.XWeakReferenceUtil.getWeakRef(parentNode);
	}
	else if (oFF.notNull(context) && context.getComponentType() === oFF.OlapComponentType.FILTER_EXPRESSION)
	{
		this.m_filterContainer = oFF.XWeakReferenceUtil.getWeakRef(context);
	}
	this.m_uniqueId = oFF.XGuid.getGuid();
};
oFF.AbstractFilterList.prototype.releaseObject = function()
{
	this.m_filterContainer = oFF.XObjectExt.release(this.m_filterContainer);
	this.m_uniqueId = null;
	oFF.QModelComponentList.prototype.releaseObject.call( this );
};
oFF.AbstractFilterList.prototype.getFilterExpression = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_filterContainer);
};
oFF.AbstractFilterList.prototype.getUniqueId = function()
{
	return this.m_uniqueId;
};
oFF.AbstractFilterList.prototype.setUniqueId = function(uniqueId)
{
	this.m_uniqueId = uniqueId;
};
oFF.AbstractFilterList.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponentList.prototype.copyFromInternal.call( this , other, flags);
	var originAbstractFilterList = other;
	this.m_uniqueId = originAbstractFilterList.m_uniqueId;
};
oFF.AbstractFilterList.prototype.getMemberNamesFromFilter = function(dimName)
{
	return oFF.QFilterUtil.getMemberNamesFromFilter(this, dimName);
};

oFF.QFormulaItemFunction = function() {};
oFF.QFormulaItemFunction.prototype = new oFF.QModelComponentList();
oFF.QFormulaItemFunction.prototype._ff_c = "QFormulaItemFunction";

oFF.QFormulaItemFunction._createFunction = function(context, parentNode)
{
	var formula = new oFF.QFormulaItemFunction();
	formula.setupOlapList(context, parentNode, false, null, oFF.XCollectionFactory.LOOKUP_LIST, false);
	return formula;
};
oFF.QFormulaItemFunction.prototype.m_functionName = null;
oFF.QFormulaItemFunction.prototype.m_solveOrder = 0;
oFF.QFormulaItemFunction.prototype.cloneOlapComponent = function(context, parent)
{
	var newItem = oFF.QFormulaItemFunction._createFunction(context, parent);
	newItem.copyFormulaItemFunction(this);
	return newItem;
};
oFF.QFormulaItemFunction.prototype.copyFormulaItemFunction = function(origin)
{
	this.copyFrom(origin, null);
	var size = origin.size();
	for (var i = 0; i < size; i++)
	{
		var originItem = origin.get(i);
		var contextToUse = this;
		var originContext = originItem.getContext();
		if (oFF.notNull(originContext) && originContext.getComponentType() === oFF.OlapComponentType.KEY_REF_STORE_CONTEXT)
		{
			contextToUse = originContext;
		}
		var cloneItem = originItem.cloneOlapComponent(contextToUse, this);
		this.add(cloneItem);
	}
	this.m_solveOrder = origin.m_solveOrder;
	this.m_functionName = origin.m_functionName;
};
oFF.QFormulaItemFunction.prototype.releaseObject = function()
{
	this.m_functionName = null;
	oFF.QModelComponentList.prototype.releaseObject.call( this );
};
oFF.QFormulaItemFunction.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.FORMULA_FUNCTION;
};
oFF.QFormulaItemFunction.prototype.getFunctionName = function()
{
	return this.m_functionName;
};
oFF.QFormulaItemFunction.prototype.setFunctionName = function(name)
{
	this.m_functionName = name;
};
oFF.QFormulaItemFunction.prototype.setSolveOrder = function(solveOrder)
{
	this.m_solveOrder = solveOrder;
	this.notifyNodeChanged();
};
oFF.QFormulaItemFunction.prototype.getSolveOrder = function()
{
	return this.m_solveOrder;
};

oFF.QModelDimensionLinks = function() {};
oFF.QModelDimensionLinks.prototype = new oFF.QModelComponentList();
oFF.QModelDimensionLinks.prototype._ff_c = "QModelDimensionLinks";

oFF.QModelDimensionLinks.create = function(context, firstDatasetId, secondDatasetId)
{
	var modelLink = new oFF.QModelDimensionLinks();
	modelLink.setupModelLink(context, firstDatasetId, secondDatasetId);
	return modelLink;
};
oFF.QModelDimensionLinks.prototype.m_firstDatasetId = null;
oFF.QModelDimensionLinks.prototype.m_secondDatasetId = null;
oFF.QModelDimensionLinks.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.MODEL_DIMENSION_LINKS;
};
oFF.QModelDimensionLinks.prototype.setupModelLink = function(context, firstDatasetId, secondDatasetId)
{
	this.setupOlapList(context, context, true, "Model Dimension Links", oFF.XCollectionFactory.LOOKUP_LIST, true);
	this.m_firstDatasetId = firstDatasetId;
	this.m_secondDatasetId = secondDatasetId;
};
oFF.QModelDimensionLinks.prototype.copyFromInternal = function(other, flags)
{
	var origin = other;
	this.m_firstDatasetId = origin.getFirstDatasetId();
	this.m_secondDatasetId = origin.getSecondDatasetId();
	this.clear();
	var dimensionLinksIter = origin.getIterator();
	while (dimensionLinksIter.hasNext())
	{
		var dimensionLinkCopy = dimensionLinksIter.next().cloneOlapComponent(this.getContext(), this.getParent());
		this.add(dimensionLinkCopy);
	}
};
oFF.QModelDimensionLinks.prototype.releaseObject = function()
{
	this.m_firstDatasetId = null;
	this.m_secondDatasetId = null;
	oFF.QModelComponentList.prototype.releaseObject.call( this );
};
oFF.QModelDimensionLinks.prototype.getFirstDatasetId = function()
{
	return this.m_firstDatasetId;
};
oFF.QModelDimensionLinks.prototype.getSecondDatasetId = function()
{
	return this.m_secondDatasetId;
};
oFF.QModelDimensionLinks.prototype.addNewLinkFromParts = function(first, second, linkOnMatchingHierarchies)
{
	if (first.getQueryManagerKey() === null)
	{
		throw oFF.XException.createIllegalArgumentException("First DimensionLinkPart requires a datasetId as a queryManagerKey.");
	}
	if (second.getQueryManagerKey() === null)
	{
		throw oFF.XException.createIllegalArgumentException("First DimensionLinkPart requires a datasetId as a queryManagerKey.");
	}
	var dimensionLinksIter = this.getIterator();
	while (dimensionLinksIter.hasNext())
	{
		var dimensionLink = dimensionLinksIter.next();
		var firstPart = dimensionLink.getFirstPart();
		var secondPart = dimensionLink.getSecondPart();
		var firstKey = firstPart.getFieldKey();
		var secondKey = secondPart.getFieldKey();
		if (firstKey.isEqualTo(first.getFieldKey()) && secondKey.isEqualTo(second.getFieldKey()) || firstKey.isEqualTo(second.getFieldKey()) && secondKey.isEqualTo(first.getFieldKey()))
		{
			this.removeElement(dimensionLink);
			break;
		}
	}
	var link = oFF.QDimensionLink.createDimensionLinkFromParts(this, this, first, second, linkOnMatchingHierarchies);
	this.add(link);
	return link;
};
oFF.QModelDimensionLinks.prototype.removeLinkByParts = function(first, second)
{
	var dimensionLinksIter = this.getIterator();
	while (dimensionLinksIter.hasNext())
	{
		var dimensionLink = dimensionLinksIter.next();
		var firstKey = dimensionLink.getFirstPart().getFieldKey();
		var secondKey = dimensionLink.getSecondPart().getFieldKey();
		if (firstKey.isEqualTo(first.getFieldKey()) && secondKey.isEqualTo(second.getFieldKey()) || firstKey.isEqualTo(second.getFieldKey()) && secondKey.isEqualTo(first.getFieldKey()))
		{
			this.removeElement(dimensionLink);
			break;
		}
	}
};

oFF.QResultStructure = function() {};
oFF.QResultStructure.prototype = new oFF.QModelComponentList();
oFF.QResultStructure.prototype._ff_c = "QResultStructure";

oFF.QResultStructure.createResultStructure = function(context, parentNode)
{
	var resultStructure = new oFF.QResultStructure();
	resultStructure.setupOlapList(context, parentNode, true, "Result Structure", oFF.XCollectionFactory.LOOKUP_LIST, false);
	return resultStructure;
};
oFF.QResultStructure.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponentList.prototype.copyFromInternal.call( this , other, flags);
	var originResultStructure = other;
	var size = originResultStructure.size();
	var context = this.getContext();
	for (var i = 0; i < size; i++)
	{
		var originItem = originResultStructure.get(i);
		this.add(oFF.QResultStructureItem.createResultStructureItem(context, this, originItem.getResultStructureElement(), originItem.getResultVisibility()));
	}
};
oFF.QResultStructure.prototype.getController = function()
{
	return this.getParentComponent();
};
oFF.QResultStructure.prototype.setResultVisibility = function(index, visibility)
{
	this.get(index).setResultVisibility(visibility);
};
oFF.QResultStructure.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.RESULT_STRUCTURE;
};
oFF.QResultStructure.prototype.addWithVisibilityAt = function(index, element, visibility)
{
	this.insert(index, oFF.QResultStructureItem.createResultStructureItem(this.getContext(), this, element, visibility));
};
oFF.QResultStructure.prototype.addWithVisibility = function(element, visibility)
{
	this.add(oFF.QResultStructureItem.createResultStructureItem(this.getContext(), this, element, visibility));
};
oFF.QResultStructure.prototype.remove = function(element)
{
	var iterator = this.getIterator();
	while (iterator.hasNext())
	{
		var item = iterator.next();
		if (item.getResultStructureElement() === element)
		{
			this.removeElement(item);
			break;
		}
	}
	oFF.XObjectExt.release(iterator);
};
oFF.QResultStructure.prototype.resultStructureContains = function(element)
{
	var iterator = this.getIterator();
	while (iterator.hasNext())
	{
		var next = iterator.next();
		if (next.getResultStructureElement().isEqualTo(element))
		{
			oFF.XObjectExt.release(iterator);
			return true;
		}
	}
	oFF.XObjectExt.release(iterator);
	return false;
};
oFF.QResultStructure.prototype.addResultStructureTopSection = function(items)
{
	this.queueEventing();
	if (oFF.XCollectionUtils.hasElements(items))
	{
		var size = items.size();
		for (var i = size - 1; i >= 0; i--)
		{
			this.insert(0, items.get(i));
		}
	}
	else
	{
		this.addDefault(true);
	}
	this.resumeEventing();
};
oFF.QResultStructure.prototype.addResultStructureBottomSection = function(items)
{
	this.queueEventing();
	if (oFF.XCollectionUtils.hasElements(items))
	{
		this.addAll(items);
	}
	else
	{
		this.addDefault(false);
	}
	this.resumeEventing();
};
oFF.QResultStructure.prototype.addDefault = function(atBeginning)
{
	var controller = this.getController();
	if (controller.getModelCapabilities().supportsConditionalResults())
	{
		this.addHiddenIfSupported(atBeginning, oFF.ResultStructureElement.TOTAL_INCLUDED_MEMBERS);
		this.addHiddenIfSupported(atBeginning, oFF.ResultStructureElement.TOTAL_REMAINING_MEMBERS);
	}
	if (!this.resultStructureContains(oFF.ResultStructureElement.TOTAL))
	{
		if (atBeginning)
		{
			this.addWithVisibilityAt(0, oFF.ResultStructureElement.TOTAL, oFF.ResultVisibility.HIDDEN);
		}
		else
		{
			this.addWithVisibility(oFF.ResultStructureElement.TOTAL, oFF.ResultVisibility.HIDDEN);
		}
	}
};
oFF.QResultStructure.prototype.addHiddenIfSupported = function(atBeginning, element)
{
	if (this.getModelCapabilities().getSupportedConditionalResults().contains(element))
	{
		if (atBeginning)
		{
			this.addWithVisibilityAt(0, element, oFF.ResultVisibility.HIDDEN);
		}
		else
		{
			this.addWithVisibility(element, oFF.ResultVisibility.HIDDEN);
		}
	}
};
oFF.QResultStructure.prototype.applyInitialDefaultResultStructure = function(resultAlignment)
{
	this.queueEventing();
	if (resultAlignment === oFF.ResultAlignment.TOP)
	{
		this.addWithVisibility(oFF.ResultStructureElement.TOTAL, oFF.ResultVisibility.VISIBLE);
		this.addWithVisibility(oFF.ResultStructureElement.MEMBERS, oFF.ResultVisibility.VISIBLE);
		this.addResultStructureTopSection(null);
	}
	else if (resultAlignment === oFF.ResultAlignment.BOTTOM)
	{
		this.addWithVisibility(oFF.ResultStructureElement.MEMBERS, oFF.ResultVisibility.VISIBLE);
		this.addWithVisibility(oFF.ResultStructureElement.TOTAL, oFF.ResultVisibility.VISIBLE);
		this.addResultStructureBottomSection(null);
	}
	else if (resultAlignment === oFF.ResultAlignment.TOPBOTTOM)
	{
		this.addWithVisibility(oFF.ResultStructureElement.TOTAL, oFF.ResultVisibility.VISIBLE);
		this.addWithVisibility(oFF.ResultStructureElement.MEMBERS, oFF.ResultVisibility.VISIBLE);
		this.addWithVisibility(oFF.ResultStructureElement.TOTAL, oFF.ResultVisibility.VISIBLE);
		this.addResultStructureTopSection(null);
		this.addResultStructureBottomSection(null);
	}
	this.resumeEventing();
};
oFF.QResultStructure.prototype.setResultVisibilityByElement = function(element, visibility)
{
	var iterator = this.getIterator();
	var count = 0;
	while (iterator.hasNext())
	{
		var item = iterator.next();
		if (item.getResultStructureElement() === element)
		{
			item.setResultVisibility(visibility);
			count++;
		}
	}
	oFF.XObjectExt.release(iterator);
	if (count === 0)
	{
		var controller = this.getController();
		if (controller.getModelCapabilities().getResultStructureReorderingCapability() === oFF.ReorderingCapability.FULL)
		{
			this.addWithVisibility(element, visibility);
		}
	}
};

oFF.QBasicMeasure = function() {};
oFF.QBasicMeasure.prototype = new oFF.QStructureMember();
oFF.QBasicMeasure.prototype._ff_c = "QBasicMeasure";

oFF.QBasicMeasure._createBasicMeasure = function(context, dimension)
{
	var member = new oFF.QBasicMeasure();
	member.setupBasicMeasure(context, dimension);
	return member;
};
oFF.QBasicMeasure.prototype.m_aggregationDimensionName = null;
oFF.QBasicMeasure.prototype.m_notFromMetadata = false;
oFF.QBasicMeasure.prototype.copyFromInternal = function(other, flags)
{
	oFF.QStructureMember.prototype.copyFromInternal.call( this , other, flags);
	var originBasicMeasure = other;
	this.m_aggregationDimensionName = originBasicMeasure.m_aggregationDimensionName;
	this.m_notFromMetadata = originBasicMeasure.m_notFromMetadata;
};
oFF.QBasicMeasure.prototype.setupBasicMeasure = function(context, structure)
{
	oFF.QStructureMember.prototype.setupStructureMember.call( this , context, structure, oFF.MemberType.BASIC_MEASURE);
};
oFF.QBasicMeasure.prototype.releaseObject = function()
{
	this.m_aggregationDimensionName = null;
	oFF.QStructureMember.prototype.releaseObject.call( this );
};
oFF.QBasicMeasure.prototype.getAggregationDimensionName = function()
{
	return this.m_aggregationDimensionName;
};
oFF.QBasicMeasure.prototype.setAggregationDimension = function(dimension)
{
	this.setAggregationDimensionName(dimension.getName());
};
oFF.QBasicMeasure.prototype.setAggregationDimensionName = function(dimensionName)
{
	if (!oFF.XString.isEqual(this.m_aggregationDimensionName, dimensionName))
	{
		var oldValue = this.m_aggregationDimensionName;
		this.m_aggregationDimensionName = dimensionName;
		this.notifyPropertyStringChanged(oFF.QStructureMemberProperties.QY_AGGREGATION_DIMENSION, oldValue, dimensionName);
	}
};
oFF.QBasicMeasure.prototype.isNotFromMetadata = function()
{
	return this.m_notFromMetadata;
};
oFF.QBasicMeasure.prototype.setNotFromMetadata = function()
{
	this.m_notFromMetadata = true;
};

oFF.QExceptionAggregationMeasure = function() {};
oFF.QExceptionAggregationMeasure.prototype = new oFF.QStructureMember();
oFF.QExceptionAggregationMeasure.prototype._ff_c = "QExceptionAggregationMeasure";

oFF.QExceptionAggregationMeasure._createExceptionAggregationMeasure = function(context, structure)
{
	var capabilities = context.getModelCapabilities();
	if (!capabilities.supportsFormulaMeasures() || !capabilities.supportsRestrictedMeasures())
	{
		oFF.noSupport();
	}
	var member = new oFF.QExceptionAggregationMeasure();
	member.setupExceptionAggregationMeasure(context, structure);
	return member;
};
oFF.QExceptionAggregationMeasure.prototype.m_measure = null;
oFF.QExceptionAggregationMeasure.prototype.m_filter = null;
oFF.QExceptionAggregationMeasure.prototype.m_conditionType = null;
oFF.QExceptionAggregationMeasure.prototype.m_exceptionAggregationOnSelection = false;
oFF.QExceptionAggregationMeasure.prototype.m_transientMember = null;
oFF.QExceptionAggregationMeasure.prototype.m_transientSignFlipMember = null;
oFF.QExceptionAggregationMeasure.prototype.m_exceptionAggregationMeasureCapabilities = null;
oFF.QExceptionAggregationMeasure.prototype.setupExceptionAggregationMeasure = function(context, structure)
{
	oFF.QStructureMember.prototype.setupStructureMember.call( this , context, structure, oFF.MemberType.EXCEPTION_AGGREGATION);
	this.m_exceptionAggregationMeasureCapabilities = oFF.QFactory.createCapabilitiesDecorator(this);
	this.m_exceptionAggregationMeasureCapabilities.setSupportsIntersectLayers(false);
	this.m_exceptionAggregationMeasureCapabilities.setSupportsVisibilityFilter(false);
	this.m_exceptionAggregationMeasureCapabilities.setSupportsCellValueOperand(false);
	this.m_exceptionAggregationMeasureCapabilities.setSupportsComplexFilter(true);
	this.m_filter = oFF.QFactory.createFilterExpression(this, this);
	this.m_conditionType = oFF.ExceptionAggregationConditionType.VALUES_IN;
	this.m_exceptionAggregationOnSelection = false;
};
oFF.QExceptionAggregationMeasure.prototype.setParent = function(parent)
{
	oFF.QStructureMember.prototype.setParent.call( this , parent);
	this.m_exceptionAggregationMeasureCapabilities.updateContext(this);
};
oFF.QExceptionAggregationMeasure.prototype.getModelCapabilities = function()
{
	return this.m_exceptionAggregationMeasureCapabilities;
};
oFF.QExceptionAggregationMeasure.prototype.copyFromInternal = function(other, flags)
{
	if (other.getMemberType() !== this.getMemberType())
	{
		return;
	}
	oFF.QStructureMember.prototype.copyFromInternal.call( this , other, flags);
};
oFF.QExceptionAggregationMeasure.prototype.copySharableProperties = function(origin, isShallowCopy)
{
	oFF.QStructureMember.prototype.copySharableProperties.call( this , origin, isShallowCopy);
	var originExceptionAggregationMeasure = origin;
	if (isShallowCopy && originExceptionAggregationMeasure.getDimension().getDimensionType() !== oFF.DimensionType.ACCOUNT)
	{
		this.m_filter = originExceptionAggregationMeasure.m_filter;
	}
	else
	{
		this.m_filter.copyFrom(originExceptionAggregationMeasure.m_filter, null);
	}
	this.m_measure = originExceptionAggregationMeasure.getMeasure();
	this.m_conditionType = originExceptionAggregationMeasure.getConditionType();
	this.m_exceptionAggregationOnSelection = originExceptionAggregationMeasure.getIsExceptionAggregationOnSelectionEnabled();
};
oFF.QExceptionAggregationMeasure.prototype.releaseObject = function()
{
	this.m_exceptionAggregationMeasureCapabilities = oFF.XObjectExt.release(this.m_exceptionAggregationMeasureCapabilities);
	this.m_measure = null;
	this.m_filter = oFF.XObjectExt.release(this.m_filter);
	this.m_transientMember = oFF.XObjectExt.release(this.m_transientMember);
	oFF.QStructureMember.prototype.releaseObject.call( this );
};
oFF.QExceptionAggregationMeasure.prototype.generateExceptionAggregation = function(context)
{
	var result;
	if (oFF.isNull(this.m_transientMember))
	{
		if (this.isExceptionAggregationOnSelectionApplied(context))
		{
			result = this.getRestrictedMeasure(context);
		}
		else
		{
			result = this.getFormulaMeasure(context, this.m_transientMember);
		}
	}
	else
	{
		result = this.getFormulaMeasure(context, this.m_transientMember);
	}
	this.applyExceptionAggregation(result);
	result.setAliasName(this.getAliasName());
	return result;
};
oFF.QExceptionAggregationMeasure.prototype.getTopLevelDependentMemberNames = function(context)
{
	var memberNames = oFF.XListOfString.create();
	if (!this.isCountDimension())
	{
		memberNames.add(this.m_measure);
	}
	return memberNames;
};
oFF.QExceptionAggregationMeasure.prototype.getTopLevelDependentFieldNames = function(context)
{
	var usedFields = oFF.XHashSetOfString.create();
	usedFields.addAll(oFF.QStructureMember.prototype.getTopLevelDependentFieldNames.call( this , context));
	var cartesianProduct = this.getFilter().getCartesianProduct();
	var complexSelectionRoot = this.getFilter().getComplexRoot();
	if (oFF.notNull(cartesianProduct))
	{
		var sizeCp = cartesianProduct.size();
		for (var i = 0; i < sizeCp; i++)
		{
			usedFields.add(cartesianProduct.getCartesianChild(i).getFieldMetadata().getName());
		}
	}
	else if (oFF.notNull(complexSelectionRoot))
	{
		this.addFieldsUsedInComplexContainer(complexSelectionRoot, usedFields);
	}
	return usedFields.getValuesAsReadOnlyListOfString();
};
oFF.QExceptionAggregationMeasure.prototype.getTransientSignFlipMemberName = function()
{
	return oFF.XStringUtils.concatenate2(this.getName(), "_signflip");
};
oFF.QExceptionAggregationMeasure.prototype.generateTransientObjects = function(context, messageManager)
{
	oFF.QStructureMember.prototype.generateTransientObjects.call( this , context, messageManager);
	var dimensionContext = this.getDimensionContext(context.getQueryManager());
	this.m_transientMember = this.generateTransientRestrictedMeasure(context);
	if (oFF.notNull(this.m_transientMember))
	{
		if (dimensionContext.getStructureMember(this.m_transientMember.getName()) !== null)
		{
			this.m_transientMember = oFF.XObjectExt.release(this.m_transientMember);
		}
		else
		{
			if (this.m_transientMember.getAliasName() !== null && dimensionContext.getFreePlaceholderIds().size() === 0)
			{
				messageManager.addError(oFF.ErrorCodes.FREE_PLACEHOLDER_NOT_FOUND, oFF.ErrorMessages.FREE_PLACEHOLDER_NOT_FOUND);
				return;
			}
			dimensionContext.addMeasure(this.m_transientMember);
		}
	}
	var isCrossCalc = dimensionContext.getDimensionType().isTypeOf(oFF.DimensionType.MEASURE_STRUCTURE);
	if (this.isAutoSignFlip() && this.getQueryModel().getAccountDimension() !== null && (this.isCountExceptionAggregation() || isCrossCalc))
	{
		var countMemberName = this.getTransientSignFlipMemberName();
		var transientMember2 = this.generateExceptionAggregation(context);
		transientMember2.setName(countMemberName);
		this.m_transientSignFlipMember = transientMember2;
		if (dimensionContext.getDimensionType().isTypeOf(oFF.DimensionType.ACCOUNT))
		{
			transientMember2.setAliasName(countMemberName);
		}
		if (dimensionContext.getStructureMember(countMemberName) !== null)
		{
			this.m_transientSignFlipMember = oFF.XObjectExt.release(this.m_transientSignFlipMember);
		}
		else
		{
			if (this.m_transientSignFlipMember.getAliasName() !== null && dimensionContext.getFreePlaceholderIds().size() === 0)
			{
				messageManager.addError(oFF.ErrorCodes.FREE_PLACEHOLDER_NOT_FOUND, oFF.ErrorMessages.FREE_PLACEHOLDER_NOT_FOUND);
				return;
			}
			dimensionContext.addMeasure(this.m_transientSignFlipMember);
		}
	}
};
oFF.QExceptionAggregationMeasure.prototype.destroyTransientObjects = function(context)
{
	oFF.QStructureMember.prototype.destroyTransientObjects.call( this , context);
	var dimensionContext = this.getDimensionContext(context.getQueryManager());
	if (oFF.notNull(this.m_transientMember))
	{
		dimensionContext.removeMeasure(this.m_transientMember.getName());
		this.m_transientMember = oFF.XObjectExt.release(this.m_transientMember);
	}
	if (oFF.notNull(this.m_transientSignFlipMember))
	{
		dimensionContext.removeMeasure(this.m_transientSignFlipMember.getName());
		this.m_transientSignFlipMember = oFF.XObjectExt.release(this.m_transientSignFlipMember);
	}
};
oFF.QExceptionAggregationMeasure.prototype.applyExceptionAggregation = function(member)
{
	member.setExceptionAggregationType(this.getExceptionAggregationType());
	var iter = this.getExceptionAggregationDimensions().getIterator();
	while (iter.hasNext())
	{
		member.addExceptionAggregationDimensionName(iter.next());
	}
};
oFF.QExceptionAggregationMeasure.prototype.getFormulaMeasure = function(context, restrictedMeasure)
{
	var formula = oFF.QFormulaMeasure._createFormulaMeasure(context, this.getDimensionContext(context.getQueryManager()));
	formula.setName(this.getName());
	formula.setText(this.getText());
	formula.setAutoSignFlip(this.isAutoSignFlip());
	if (this.getNumericScale() !== null)
	{
		formula.setNumericScale(this.getNumericScale().getInteger());
	}
	var formulaItemMeasureNode;
	if (this.isCountDimension())
	{
		formulaItemMeasureNode = oFF.QFactory.createFormulaConstantWithIntValue(context, 1);
	}
	else
	{
		formulaItemMeasureNode = oFF.QFactory.createFormulaMemberWithName(context, this.m_measure);
	}
	if (oFF.notNull(restrictedMeasure))
	{
		var nullNumberConstant = oFF.QFactory.createFormulaConstant(context);
		nullNumberConstant.setNullByType(oFF.XValueType.DOUBLE);
		var formulaItemRM = oFF.QFactory.createFormulaMemberWithName(context, restrictedMeasure.getName());
		var isNullFunction = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.ISNULL.getName());
		var ifFunction = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.IF.getName());
		isNullFunction.add(formulaItemRM);
		ifFunction.add(isNullFunction);
		if (this.m_conditionType === oFF.ExceptionAggregationConditionType.VALUES_NOT_IN)
		{
			ifFunction.add(formulaItemMeasureNode);
			ifFunction.add(nullNumberConstant);
		}
		else if (this.m_conditionType === oFF.ExceptionAggregationConditionType.VALUES_IN)
		{
			ifFunction.add(nullNumberConstant);
			ifFunction.add(formulaItemMeasureNode);
		}
		else
		{
			throw oFF.XException.createIllegalArgumentException("Unknown exception aggregation condition handler type.");
		}
		formula.setFormula(ifFunction);
	}
	else
	{
		formula.setFormula(formulaItemMeasureNode);
	}
	return formula;
};
oFF.QExceptionAggregationMeasure.prototype.hasFilterOnExceptionAggregation = function()
{
	var hasFilterOnExceptionAggregation;
	var filterRootElement = this.m_filter.getFilterRootElement();
	if (oFF.notNull(filterRootElement))
	{
		if (this.m_filter.isComplexFilter())
		{
			hasFilterOnExceptionAggregation = filterRootElement.size() > 0;
		}
		else
		{
			var cartesianProduct = this.m_filter.getCartesianProduct();
			hasFilterOnExceptionAggregation = oFF.notNull(cartesianProduct) && !cartesianProduct.isEmpty();
		}
	}
	else
	{
		hasFilterOnExceptionAggregation = false;
	}
	return hasFilterOnExceptionAggregation;
};
oFF.QExceptionAggregationMeasure.prototype.createRestrictedMeasure = function(context)
{
	var dimensionContext = this.getDimensionContext(context.getQueryManager());
	var restrictedMeasure = oFF.QRestrictedMeasure._createRestrictedMeasure(context, dimensionContext);
	if (this.hasFilterOnExceptionAggregation())
	{
		restrictedMeasure.getFilter().copyFrom(this.m_filter, null);
	}
	if (this.getNumericScale() !== null)
	{
		restrictedMeasure.setNumericScale(this.getNumericScale().getInteger());
	}
	restrictedMeasure.getFilter().addSingleMemberFilterByDimension(dimensionContext, this.m_measure, oFF.ComparisonOperator.EQUAL);
	restrictedMeasure.setAutoSignFlip(this.isAutoSignFlip());
	return restrictedMeasure;
};
oFF.QExceptionAggregationMeasure.prototype.getRestrictedMeasure = function(context)
{
	var restrictedMeasure = null;
	if (this.isExceptionAggregationOnSelectionApplied(context))
	{
		restrictedMeasure = this.createRestrictedMeasure(context);
		restrictedMeasure.setName(this.getName());
	}
	return restrictedMeasure;
};
oFF.QExceptionAggregationMeasure.prototype.generateTransientRestrictedMeasure = function(context)
{
	var restrictedMeasure = null;
	if (this.hasFilterOnExceptionAggregation() && !this.isExceptionAggregationOnSelectionApplied(context))
	{
		restrictedMeasure = this.createRestrictedMeasure(context);
		if (this.getDimension().getPlaceholderIds().size() > 0)
		{
			restrictedMeasure.setAliasName(oFF.XStringUtils.concatenate2(this.getName(), "_rm"));
		}
		else
		{
			restrictedMeasure.setName(oFF.XStringUtils.concatenate2(this.getName(), "_rm"));
		}
	}
	return restrictedMeasure;
};
oFF.QExceptionAggregationMeasure.prototype.isCountDimension = function()
{
	return this.isCountExceptionAggregation() && oFF.isNull(this.m_measure);
};
oFF.QExceptionAggregationMeasure.prototype.isCountExceptionAggregation = function()
{
	var exceptionAggregationType = this.getExceptionAggregationType();
	return exceptionAggregationType === oFF.AggregationType.COUNT || exceptionAggregationType === oFF.AggregationType.COUNT_NULL || exceptionAggregationType === oFF.AggregationType.COUNT_NULL_ZERO;
};
oFF.QExceptionAggregationMeasure.prototype.isAverageExceptionAggregation = function()
{
	var exceptionAggregationType = this.getExceptionAggregationType();
	return exceptionAggregationType === oFF.AggregationType.AVERAGE || exceptionAggregationType === oFF.AggregationType.AVERAGE_NULL || exceptionAggregationType === oFF.AggregationType.AVERAGE_NULL_ZERO;
};
oFF.QExceptionAggregationMeasure.prototype.isFirstOrLastExceptionAggregation = function()
{
	var exceptionAggregationType = this.getExceptionAggregationType();
	return exceptionAggregationType === oFF.AggregationType.FIRST || exceptionAggregationType === oFF.AggregationType.LAST;
};
oFF.QExceptionAggregationMeasure.prototype.isExceptionAggregationOnSelectionApplied = function(context)
{
	if (this.m_exceptionAggregationOnSelection)
	{
		var dimensionContext = context.getQueryModel().getDimensionByName(this.getDimension().getName());
		var accountDimension = context.getQueryModel().getAccountDimension();
		var dimensionType = dimensionContext.getDimensionType();
		if (oFF.notNull(accountDimension))
		{
			return false;
		}
		if (dimensionType !== oFF.DimensionType.MEASURE_STRUCTURE)
		{
			return false;
		}
		if (this.m_conditionType === oFF.ExceptionAggregationConditionType.VALUES_NOT_IN || oFF.isNull(this.m_measure) || this.hasFilterOnExceptionAggregation())
		{
			return false;
		}
		var isExAggDimensionInAxis = false;
		var iter = this.getExceptionAggregationDimensions().getIterator();
		while (iter.hasNext())
		{
			if (context.getQueryModel().getDimensionByName(iter.next()).getAxisType() !== oFF.AxisType.FREE)
			{
				isExAggDimensionInAxis = true;
				break;
			}
		}
		var measure = dimensionContext.getStructureMember(this.m_measure);
		if (oFF.isNull(measure) || measure.getMemberType() !== oFF.MemberType.BASIC_MEASURE || isExAggDimensionInAxis)
		{
			return false;
		}
		return this.isCountExceptionAggregation() || this.isAverageExceptionAggregation() || this.isFirstOrLastExceptionAggregation();
	}
	return false;
};
oFF.QExceptionAggregationMeasure.prototype.getMeasure = function()
{
	return this.m_measure;
};
oFF.QExceptionAggregationMeasure.prototype.setMeasure = function(measureName)
{
	this.m_measure = measureName;
	this.notifyNodeChanged();
};
oFF.QExceptionAggregationMeasure.prototype.setConditionType = function(type)
{
	if (this.m_conditionType !== type)
	{
		var oldValue = this.m_conditionType;
		this.m_conditionType = type;
		this.notifyPropertyConstantChanged(oFF.QMeasureProperties.QY_CONDITION_TYPE, oldValue, type);
	}
};
oFF.QExceptionAggregationMeasure.prototype.getConditionType = function()
{
	return this.m_conditionType;
};
oFF.QExceptionAggregationMeasure.prototype.setIsExceptionAggregationOnSelectionEnabled = function(isExceptionAggregationOnSelectionEnabled)
{
	if (this.m_exceptionAggregationOnSelection !== isExceptionAggregationOnSelectionEnabled)
	{
		this.m_exceptionAggregationOnSelection = isExceptionAggregationOnSelectionEnabled;
		this.notifyPropertyBooleanChanged(oFF.QMeasureProperties.QY_EXCEPTION_AGGREGATION_ON_SELECTION, !isExceptionAggregationOnSelectionEnabled, isExceptionAggregationOnSelectionEnabled);
	}
};
oFF.QExceptionAggregationMeasure.prototype.getIsExceptionAggregationOnSelectionEnabled = function()
{
	return this.m_exceptionAggregationOnSelection;
};
oFF.QExceptionAggregationMeasure.prototype.getFilter = function()
{
	return this.m_filter;
};
oFF.QExceptionAggregationMeasure.prototype.exportRuntimeObject = function(context, messageManager)
{
	this.stopEventing();
	context.getQueryModel().stopEventing();
	var exceptionAggregation;
	var dimensionContext = this.getDimensionContext(context.getQueryManager());
	var transientSignFlipMember = dimensionContext.getStructureMember(this.getTransientSignFlipMemberName());
	if (oFF.notNull(transientSignFlipMember))
	{
		var signflipMeasure = oFF.QFormulaMeasure._createFormulaMeasure(context, dimensionContext);
		signflipMeasure.setName(this.getName());
		signflipMeasure.setText(this.getText());
		signflipMeasure.setAutoSignFlip(true);
		if (dimensionContext.getDimensionType().isTypeOf(oFF.DimensionType.ACCOUNT))
		{
			signflipMeasure.setAliasName(this.getAliasName());
		}
		var member = oFF.QFactory.createFormulaMember(context);
		member.setMember(transientSignFlipMember);
		if (this.isCountExceptionAggregation())
		{
			var absFormula = oFF.QFactory.createFormulaFunctionWithName(context, oFF.FormulaOperator.ABS.getName());
			absFormula.add(member);
			signflipMeasure.setFormula(absFormula);
		}
		else
		{
			signflipMeasure.setFormula(member);
		}
		exceptionAggregation = signflipMeasure;
	}
	else
	{
		exceptionAggregation = this.generateExceptionAggregation(context);
	}
	var runtimeObject = exceptionAggregation.exportRuntimeObject(context, messageManager);
	this.resumeEventing();
	context.getQueryModel().resumeEventing();
	return runtimeObject;
};
oFF.QExceptionAggregationMeasure.prototype.isVersionAggregated = function(context)
{
	var isVersionAggregated = oFF.QStructureMember.prototype.isVersionAggregated.call( this , context);
	if (!isVersionAggregated)
	{
		var versionDimension = context.getQueryModel().getDimensionByType(oFF.DimensionType.VERSION);
		if (oFF.notNull(versionDimension))
		{
			var cartesianList = this.getFilter().getCartesianListByField(versionDimension.getKeyField());
			isVersionAggregated = oFF.QFilterUtil.isSingleValueFilterCartesianList(cartesianList);
		}
	}
	return isVersionAggregated;
};

oFF.QFormulaMeasure = function() {};
oFF.QFormulaMeasure.prototype = new oFF.QStructureMember();
oFF.QFormulaMeasure.prototype._ff_c = "QFormulaMeasure";

oFF.QFormulaMeasure._createFormulaMeasure = function(context, structure)
{
	var capabilities = context.getModelCapabilities();
	if (!capabilities.supportsFormulaMeasures())
	{
		oFF.noSupport();
	}
	var member = new oFF.QFormulaMeasure();
	member.setupFormulaMeasure(context, structure);
	return member;
};
oFF.QFormulaMeasure.prototype.m_formula = null;
oFF.QFormulaMeasure.prototype.m_formulaType = null;
oFF.QFormulaMeasure.prototype.m_isCalculatedBeforeAggregation = false;
oFF.QFormulaMeasure.prototype.m_inverseFormulas = null;
oFF.QFormulaMeasure.prototype.m_isAutoSignFlipForRestrictedMeasureOnly = false;
oFF.QFormulaMeasure.prototype.m_iteration = null;
oFF.QFormulaMeasure.prototype.copyFromInternal = function(other, flags)
{
	if (other.getMemberType() !== this.getMemberType())
	{
		return;
	}
	oFF.QStructureMember.prototype.copyFromInternal.call( this , other, flags);
	this.copySharableProperties(other, false);
};
oFF.QFormulaMeasure.prototype.copySharableProperties = function(origin, isShallowCopy)
{
	oFF.QStructureMember.prototype.copySharableProperties.call( this , origin, isShallowCopy);
	var originFormulaMeasure = origin;
	this.m_isCalculatedBeforeAggregation = originFormulaMeasure.m_isCalculatedBeforeAggregation;
	if (oFF.notNull(originFormulaMeasure.m_formula))
	{
		if (isShallowCopy && originFormulaMeasure.getDimension().getDimensionType() !== oFF.DimensionType.ACCOUNT)
		{
			this.m_formula = originFormulaMeasure.m_formula;
			this.m_iteration = originFormulaMeasure.m_iteration;
		}
		else
		{
			this.m_formula = originFormulaMeasure.m_formula.cloneOlapComponent(this, this);
			if (oFF.notNull(originFormulaMeasure.m_iteration))
			{
				this.m_iteration = originFormulaMeasure.m_iteration.cloneOlapComponent(this, this);
			}
		}
	}
	var orgInverseFormulas = originFormulaMeasure.getInverseFormulaList();
	if (oFF.XCollectionUtils.hasElements(orgInverseFormulas))
	{
		var numberOfInverseFormulas = orgInverseFormulas.size();
		var inverseFormulas = this.getInverseFormulaList();
		inverseFormulas.clear();
		for (var i = 0; i < numberOfInverseFormulas; i++)
		{
			var originInverseFormula = orgInverseFormulas.get(i);
			var inverseFormula = oFF.QFormulaInverseFormula.createForCopy(this.getContext(), this);
			inverseFormula.copyFrom(originInverseFormula, null);
			inverseFormulas.add(inverseFormula);
		}
		inverseFormulas.copyFrom(orgInverseFormulas, null);
	}
	this.m_isAutoSignFlipForRestrictedMeasureOnly = originFormulaMeasure.m_isAutoSignFlipForRestrictedMeasureOnly;
	this.m_formulaType = originFormulaMeasure.m_formulaType;
};
oFF.QFormulaMeasure.prototype.setIsCalculatedBeforeAggregation = function(calculateBeforeAggregation)
{
	if (this.m_isCalculatedBeforeAggregation !== calculateBeforeAggregation)
	{
		this.m_isCalculatedBeforeAggregation = calculateBeforeAggregation;
		this.notifyPropertyBooleanChanged(oFF.QMeasureProperties.QY_CALCULATE_BEFORE_AGGREGATION, !calculateBeforeAggregation, calculateBeforeAggregation);
	}
};
oFF.QFormulaMeasure.prototype.isCalculatedBeforeAggregation = function()
{
	return this.m_isCalculatedBeforeAggregation;
};
oFF.QFormulaMeasure.prototype.setupFormulaMeasure = function(context, structure)
{
	oFF.QStructureMember.prototype.setupStructureMember.call( this , context, structure, oFF.MemberType.FORMULA);
	this.m_inverseFormulas = oFF.QModelComponentList.createModelComponentList(context, this, true, "InverseFormulae");
};
oFF.QFormulaMeasure.prototype.releaseObject = function()
{
	this.m_formula = oFF.XObjectExt.release(this.m_formula);
	this.m_iteration = oFF.XObjectExt.release(this.m_iteration);
	this.m_inverseFormulas = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_inverseFormulas);
	this.m_formulaType = null;
	oFF.QStructureMember.prototype.releaseObject.call( this );
};
oFF.QFormulaMeasure.prototype.getFormula = function()
{
	return this.m_formula;
};
oFF.QFormulaMeasure.prototype.setFormula = function(element)
{
	var elementBase = element;
	if (oFF.notNull(elementBase))
	{
		elementBase.setParent(this);
	}
	this.m_formula = element;
	this.notifyNodeChanged();
};
oFF.QFormulaMeasure.prototype.getFormulaType = function()
{
	return this.m_formulaType;
};
oFF.QFormulaMeasure.prototype.setFormulaType = function(formulaType)
{
	this.m_formulaType = formulaType;
	this.notifyNodeChanged();
};
oFF.QFormulaMeasure.prototype.getTopLevelDependentMemberNames = function(context)
{
	var formulaItemInfo = oFF.FormulaItemUtils.getFieldNamesFromFormula(this.getFormula());
	return formulaItemInfo.getMemberNames();
};
oFF.QFormulaMeasure.prototype.getInverseFormulaList = function()
{
	return this.m_inverseFormulas;
};
oFF.QFormulaMeasure.prototype.getTopLevelDependentFieldNames = function(context)
{
	var usedFields = oFF.XHashSetOfString.create();
	usedFields.addAll(oFF.QStructureMember.prototype.getTopLevelDependentFieldNames.call( this , context));
	var formulaItemInfo = oFF.FormulaItemUtils.getFieldNamesFromFormula(this.getFormula());
	usedFields.addAll(formulaItemInfo.getAttributeNames());
	return usedFields.getValuesAsReadOnlyListOfString();
};
oFF.QFormulaMeasure.prototype.isAutoSignFlipRestrictedMeasureOnly = function()
{
	return this.m_isAutoSignFlipForRestrictedMeasureOnly;
};
oFF.QFormulaMeasure.prototype.setAutoSignFlipRestrictedMeasureOnly = function(autoSignFlipRestrictedMeasureOnly)
{
	if (this.m_isAutoSignFlipForRestrictedMeasureOnly !== autoSignFlipRestrictedMeasureOnly)
	{
		this.m_isAutoSignFlipForRestrictedMeasureOnly = autoSignFlipRestrictedMeasureOnly;
		this.notifyPropertyBooleanChanged(oFF.QMeasureProperties.QY_AUTO_SIGN_FLIP_FOR_RM_ONLY, !autoSignFlipRestrictedMeasureOnly, autoSignFlipRestrictedMeasureOnly);
	}
};
oFF.QFormulaMeasure.prototype.getIteration = function()
{
	return this.m_iteration;
};
oFF.QFormulaMeasure.prototype.setIteration = function(iteration)
{
	var elementBase = iteration;
	if (oFF.notNull(elementBase))
	{
		elementBase.setParent(this);
	}
	this.m_iteration = iteration;
};
oFF.QFormulaMeasure.prototype.exportRuntimeObject = function(context, messageManager)
{
	var runtimeObj = oFF.QStructureMember.prototype.exportRuntimeObject.call( this , context, messageManager);
	if (oFF.isNull(runtimeObj))
	{
		return null;
	}
	return runtimeObj;
};
oFF.QFormulaMeasure.prototype.getRequiredDimensionAndFieldNames = function()
{
	var superRequiredDimensionAndFieldNames = oFF.QStructureMember.prototype.getRequiredDimensionAndFieldNames.call( this );
	if (this.isModelDefinedMember())
	{
		return superRequiredDimensionAndFieldNames;
	}
	var formulaItemInfo = oFF.FormulaItemUtils.getFieldNamesFromFormula(this.getFormula());
	var dimensionNames = oFF.XHashSetOfString.create();
	dimensionNames.addAll(superRequiredDimensionAndFieldNames.getFirstObject());
	dimensionNames.addAll(formulaItemInfo.getDimensionNames());
	var fieldNames = oFF.XHashSetOfString.create();
	fieldNames.addAll(superRequiredDimensionAndFieldNames.getSecondObject());
	fieldNames.addAll(formulaItemInfo.getAttributeNames());
	var queryModel = this.getQueryModel();
	if (oFF.notNull(queryModel) && queryModel.getAccountDimension() !== null)
	{
		dimensionNames.removeElement(queryModel.getAccountDimension().getName());
		var fieldNamesIterator = fieldNames.getIterator();
		while (fieldNamesIterator.hasNext())
		{
			var fieldName = fieldNamesIterator.next();
			var field = queryModel.getFieldByNameOrAlias(fieldName);
			if (oFF.notNull(field) && field.getDimension() !== null && oFF.XString.isEqual(field.getDimension().getName(), queryModel.getAccountDimension().getName()))
			{
				fieldNames.removeElement(fieldName);
				break;
			}
		}
	}
	return oFF.XPair.create(dimensionNames.getValuesAsReadOnlyListOfString(), fieldNames.getValuesAsReadOnlyListOfString());
};

oFF.QRestrictedMeasure = function() {};
oFF.QRestrictedMeasure.prototype = new oFF.QStructureMember();
oFF.QRestrictedMeasure.prototype._ff_c = "QRestrictedMeasure";

oFF.QRestrictedMeasure._createRestrictedMeasure = function(context, structure)
{
	var capabilities = context.getModelCapabilities();
	if (!capabilities.supportsRestrictedMeasures())
	{
		oFF.noSupport();
	}
	var queryModel = context.getQueryModel();
	if (queryModel.isBlendingModel())
	{
		oFF.noSupport();
	}
	var member = new oFF.QRestrictedMeasure();
	member.setupRestrictedMeasure(context, structure);
	return member;
};
oFF.QRestrictedMeasure.prototype.m_filter = null;
oFF.QRestrictedMeasure.prototype.m_aggregationDimensionName = null;
oFF.QRestrictedMeasure.prototype.m_timeOperation = null;
oFF.QRestrictedMeasure.prototype.m_restrictedMeasureCapabilities = null;
oFF.QRestrictedMeasure.prototype.m_transientTimeSelection = null;
oFF.QRestrictedMeasure.prototype.m_transientIgnoredExternalDimensions = null;
oFF.QRestrictedMeasure.prototype.m_flattenDependentRestrictedMeasures = false;
oFF.QRestrictedMeasure.prototype.m_disableIgnoreExternalDimensionOnFixedFilters = false;
oFF.QRestrictedMeasure.prototype.copyFromInternal = function(other, flags)
{
	if (other.getMemberType() !== this.getMemberType())
	{
		return;
	}
	oFF.QStructureMember.prototype.copyFromInternal.call( this , other, flags);
	this.copySharableProperties(other, false);
};
oFF.QRestrictedMeasure.prototype.copySharableProperties = function(origin, isShallowCopy)
{
	oFF.QStructureMember.prototype.copySharableProperties.call( this , origin, isShallowCopy);
	if (origin.getMemberType() !== oFF.MemberType.RESTRICTED_MEASURE)
	{
		return;
	}
	var originRestrictedMeasure = origin;
	this.m_aggregationDimensionName = originRestrictedMeasure.m_aggregationDimensionName;
	this.m_flattenDependentRestrictedMeasures = originRestrictedMeasure.m_flattenDependentRestrictedMeasures;
	this.m_disableIgnoreExternalDimensionOnFixedFilters = originRestrictedMeasure.m_disableIgnoreExternalDimensionOnFixedFilters;
	if (isShallowCopy)
	{
		this.m_timeOperation = originRestrictedMeasure.m_timeOperation;
		if (!this.m_flattenDependentRestrictedMeasures && originRestrictedMeasure.getDimension().getDimensionType() !== oFF.DimensionType.ACCOUNT)
		{
			this.m_filter = originRestrictedMeasure.m_filter;
		}
		else
		{
			this.m_filter.copyFrom(originRestrictedMeasure.m_filter, null);
		}
	}
	else
	{
		this.m_filter.copyFrom(originRestrictedMeasure.m_filter, null);
		if (oFF.notNull(originRestrictedMeasure.m_timeOperation))
		{
			this.m_timeOperation = oFF.QTimeOperation.create(this.getContext(), this);
			this.m_timeOperation.copyFrom(originRestrictedMeasure.m_timeOperation, null);
		}
	}
};
oFF.QRestrictedMeasure.prototype.setupRestrictedMeasure = function(context, structure)
{
	oFF.QStructureMember.prototype.setupStructureMember.call( this , context, structure, oFF.MemberType.RESTRICTED_MEASURE);
	this.m_restrictedMeasureCapabilities = oFF.QFactory.createCapabilitiesDecorator(this);
	this.m_restrictedMeasureCapabilities.setSupportsIntersectLayers(false);
	this.m_restrictedMeasureCapabilities.setSupportsVisibilityFilter(false);
	this.m_restrictedMeasureCapabilities.setSupportsCellValueOperand(false);
	this.m_restrictedMeasureCapabilities.setSupportsComplexFilter(true);
	this.m_restrictedMeasureCapabilities.setSupportsComplexTupleFilter(true);
	this.m_filter = oFF.QFactory.createFilterExpression(this, this);
};
oFF.QRestrictedMeasure.prototype.setParent = function(parent)
{
	oFF.QStructureMember.prototype.setParent.call( this , parent);
	this.m_restrictedMeasureCapabilities.updateContext(this);
};
oFF.QRestrictedMeasure.prototype.releaseObject = function()
{
	this.m_restrictedMeasureCapabilities = oFF.XObjectExt.release(this.m_restrictedMeasureCapabilities);
	this.m_aggregationDimensionName = null;
	this.m_filter = oFF.XObjectExt.release(this.m_filter);
	this.m_timeOperation = oFF.XObjectExt.release(this.m_timeOperation);
	this.m_transientTimeSelection = oFF.XObjectExt.release(this.m_transientTimeSelection);
	this.m_transientIgnoredExternalDimensions = oFF.XObjectExt.release(this.m_transientIgnoredExternalDimensions);
	this.m_flattenDependentRestrictedMeasures = false;
	this.m_disableIgnoreExternalDimensionOnFixedFilters = false;
	oFF.QStructureMember.prototype.releaseObject.call( this );
};
oFF.QRestrictedMeasure.prototype.getFilter = function()
{
	return this.m_filter;
};
oFF.QRestrictedMeasure.prototype.getTransientTimeSelection = function()
{
	return this.m_transientTimeSelection;
};
oFF.QRestrictedMeasure.prototype.setTransientTimeSelection = function(transientTimeSelection)
{
	if (this.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(this) === null)
	{
		this.m_transientTimeSelection = transientTimeSelection;
	}
};
oFF.QRestrictedMeasure.prototype.getAggregationDimensionName = function()
{
	return this.m_aggregationDimensionName;
};
oFF.QRestrictedMeasure.prototype.setAggregationDimension = function(dimension)
{
	this.setAggregationDimensionName(dimension.getName());
};
oFF.QRestrictedMeasure.prototype.setAggregationDimensionName = function(dimensionName)
{
	this.m_aggregationDimensionName = dimensionName;
	this.notifyNodeChanged();
};
oFF.QRestrictedMeasure.prototype.getModelCapabilities = function()
{
	return this.m_restrictedMeasureCapabilities;
};
oFF.QRestrictedMeasure.prototype.supportsExceptionAggregationDimsFormulas = function()
{
	var capabilities = this.getModelCapabilities();
	return oFF.isNull(capabilities) ? false : capabilities.supportsExceptionAggregationDimsFormulas();
};
oFF.QRestrictedMeasure.prototype.getTimeOperation = function()
{
	return this.m_timeOperation;
};
oFF.QRestrictedMeasure.prototype.setTimeOperation = function(dimensionName, timeFunction, granularity, period)
{
	if (oFF.isNull(this.m_timeOperation))
	{
		this.m_timeOperation = oFF.QTimeOperation.create(this.getContext(), this);
	}
	this.m_timeOperation.setDimensionName(dimensionName);
	this.m_timeOperation.setFunction(timeFunction);
	this.m_timeOperation.setGranularity(granularity);
	this.m_timeOperation.setPeriod(period);
};
oFF.QRestrictedMeasure.prototype.clearTimeOperation = function()
{
	this.m_timeOperation = oFF.XObjectExt.release(this.m_timeOperation);
	this.notifyNodeChanged();
};
oFF.QRestrictedMeasure.prototype.validateTimeOperation = function(queryModel, messageManager)
{
	var numOfWarningsBeforeValidation = messageManager.getNumberOfWarnings();
	if (oFF.notNull(this.m_timeOperation))
	{
		var filter = this.getFilter();
		if (filter.isCartesianProduct())
		{
			if (filter.getCartesianProduct().getCartesianListByDimensionName(this.m_timeOperation.getDimensionName()) !== null)
			{
				messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_MULTIPLE_TIME_DIMENSION_IN_CARTESIAN_PRODUCT, oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_MULTIPLE_TIME_DIMENSION_IN_CARTESIAN_PRODUCT);
				return false;
			}
		}
		this.generateFlattenTransientTimeSelection(queryModel, messageManager, this.m_timeOperation, null);
	}
	return messageManager.getNumberOfWarnings() <= numOfWarningsBeforeValidation;
};
oFF.QRestrictedMeasure.prototype.needsTransientTimeSelection = function(messageManager)
{
	if (this.getTimeOperation() !== null && this.getTimeOperation().needsTransientTimeSelection())
	{
		return true;
	}
	var restrictedMeasure = this.getDependentRestrictedMeasure(messageManager);
	if (oFF.notNull(restrictedMeasure))
	{
		return restrictedMeasure.needsTransientTimeSelection(messageManager);
	}
	return false;
};
oFF.QRestrictedMeasure.prototype.generateTransientTimeSelection = function(queryModel, messageManager)
{
	if (oFF.isNull(this.m_transientTimeSelection))
	{
		this.m_transientTimeSelection = this.generateFlattenTransientTimeSelection(queryModel, messageManager, this.m_timeOperation, null);
	}
};
oFF.QRestrictedMeasure.prototype.generateFlattenTransientTimeSelection = function(queryModel, messageManager, originalTimeOperation, nestedTimeSelectionFilterContext)
{
	var warningsBeforeGeneration = messageManager.getWarnings().size();
	var transientTimeSelection = null;
	var needsTimeOperationClone = oFF.notNull(nestedTimeSelectionFilterContext);
	var timeOperation = null;
	if (oFF.notNull(originalTimeOperation))
	{
		if (needsTimeOperationClone)
		{
			timeOperation = oFF.QTimeOperation.create(queryModel, null);
			timeOperation.copyFrom(originalTimeOperation, null);
			timeOperation.setFilterElementContext(nestedTimeSelectionFilterContext);
		}
		else
		{
			timeOperation = originalTimeOperation;
		}
		transientTimeSelection = timeOperation.generateTransientTimeSelection(queryModel, messageManager);
	}
	var warningsAfterGeneration = messageManager.getWarnings().size();
	var dependentRestrictedMeasure = this.getDependentRestrictedMeasure(messageManager);
	if (oFF.notNull(dependentRestrictedMeasure) && dependentRestrictedMeasure.needsTransientTimeSelection(messageManager) && warningsAfterGeneration <= warningsBeforeGeneration)
	{
		var transientMessageManager = oFF.MessageManager.createMessageManagerExt(this.getSession());
		var dependentTransientTimeSelection = null;
		var dependentTimeOperation = dependentRestrictedMeasure.getTimeOperation();
		if (oFF.isNull(timeOperation) || oFF.isNull(transientTimeSelection))
		{
			dependentTransientTimeSelection = dependentRestrictedMeasure.generateFlattenTransientTimeSelection(queryModel, transientMessageManager, dependentTimeOperation, nestedTimeSelectionFilterContext);
		}
		else
		{
			dependentTransientTimeSelection = timeOperation.flattenDependentTimeOperations(queryModel, transientMessageManager, transientTimeSelection, dependentRestrictedMeasure);
		}
		if (oFF.isNull(dependentTransientTimeSelection) || transientMessageManager.getWarnings().size() > 0)
		{
			var errorMsgArgs = oFF.XListOfString.create();
			var name = this.getText();
			if (oFF.XStringUtils.isNullOrEmpty(name))
			{
				name = this.getAliasOrMemberName();
			}
			errorMsgArgs.add(name);
			var dependentName = dependentRestrictedMeasure.getText();
			if (oFF.XStringUtils.isNullOrEmpty(dependentName))
			{
				dependentName = dependentRestrictedMeasure.getAliasOrMemberName();
			}
			errorMsgArgs.add(dependentName);
			messageManager.addWarning(oFF.ErrorCodes.DYNAMIC_TIME_MEASURE_INVALID_DEPENDENCY, oFF.ErrorMessages.getText(oFF.ErrorMessages.DYNAMIC_TIME_MEASURE_INVALID_DEPENDENCY, errorMsgArgs, this.getAliasOrMemberName()));
		}
		else
		{
			var infoIterator = transientMessageManager.getInfos().getIterator();
			while (infoIterator.hasNext())
			{
				var message = infoIterator.next();
				messageManager.addInfo(message.getCode(), message.getText());
			}
		}
		transientTimeSelection = dependentTransientTimeSelection;
	}
	if (needsTimeOperationClone)
	{
		oFF.XObjectExt.release(timeOperation);
	}
	return transientTimeSelection;
};
oFF.QRestrictedMeasure.prototype.generateTransientIgnoredExternalDimensions = function(queryModel, messageManager)
{
	if (oFF.isNull(this.m_transientIgnoredExternalDimensions))
	{
		this.m_transientIgnoredExternalDimensions = this.generateFlattenTransientIgnoredExternalDimensions(queryModel, messageManager, this.m_timeOperation);
	}
};
oFF.QRestrictedMeasure.prototype.generateFlattenTransientIgnoredExternalDimensions = function(queryModel, messageManager, timeOperation)
{
	var transientIgnoredExternalDimensions = oFF.XHashSetOfString.create();
	if (oFF.notNull(timeOperation))
	{
		transientIgnoredExternalDimensions.addAll(timeOperation.generateTransientIgnoredExternalDimensions(queryModel, messageManager));
	}
	var dependentRestrictedMeasure = this.getDependentRestrictedMeasure(messageManager);
	if (oFF.notNull(dependentRestrictedMeasure) && dependentRestrictedMeasure.needsTransientTimeSelection(messageManager))
	{
		var dependentTimeOperation = dependentRestrictedMeasure.getTimeOperation();
		transientIgnoredExternalDimensions.addAll(dependentRestrictedMeasure.generateFlattenTransientIgnoredExternalDimensions(queryModel, messageManager, dependentTimeOperation));
	}
	if (transientIgnoredExternalDimensions.size() > 0)
	{
		return transientIgnoredExternalDimensions.getValuesAsReadOnlyListOfString();
	}
	return null;
};
oFF.QRestrictedMeasure.prototype.getTransientIgnoredExternalDimensions = function()
{
	if (oFF.notNull(this.m_transientIgnoredExternalDimensions))
	{
		return this.m_transientIgnoredExternalDimensions;
	}
	return null;
};
oFF.QRestrictedMeasure.prototype.getFilterRootWithTransientTimeSelection = function()
{
	if (oFF.notNull(this.m_transientTimeSelection))
	{
		var filter = this.getFilter();
		var filterRoot = filter.getFilterRootElement();
		if (oFF.notNull(this.m_transientTimeSelection))
		{
			if (filter.isComplexFilter())
			{
				var filterWithTransientTimeSelection = oFF.QFactory.createFilterAnd(this.getQueryModel());
				filterWithTransientTimeSelection.add(filterRoot);
				filterWithTransientTimeSelection.add(this.m_transientTimeSelection);
				return filterWithTransientTimeSelection;
			}
			var cartesianProduct = filter.getCartesianProduct();
			if (cartesianProduct.getCartesianListByDimensionName(this.m_transientTimeSelection.getDimensionName()) === null)
			{
				var cartesianProductWithTransientSelection = oFF.QFactory.createFilterCartesianProduct(this.getContext());
				for (var i = 0; i < cartesianProduct.size(); i++)
				{
					cartesianProductWithTransientSelection.add(cartesianProduct.get(i));
				}
				cartesianProductWithTransientSelection.add(this.m_transientTimeSelection);
				return cartesianProductWithTransientSelection;
			}
		}
	}
	return this.getFilter().getFilterRootElement();
};
oFF.QRestrictedMeasure.prototype.requireRuntimeExport = function(context)
{
	return this.m_disableIgnoreExternalDimensionOnFixedFilters && (this.isIgnoringAllExternalDimensions() || this.getIgnoredExternalDimensions().size() > 0) || this.m_flattenDependentRestrictedMeasures || oFF.QStructureMember.prototype.requireRuntimeExport.call( this , context);
};
oFF.QRestrictedMeasure.prototype.validate = function(context, messageManager, validateDependencies, validateAugmentedAccountMembers)
{
	if (!oFF.QStructureMember.prototype.validate.call( this , context, messageManager, validateDependencies, validateAugmentedAccountMembers))
	{
		return false;
	}
	return this.validateRequiredFields(context, messageManager, this.getTopLevelDependentFieldNames(context));
};
oFF.QRestrictedMeasure.prototype.generateTransientObjects = function(context, messageManager)
{
	oFF.QStructureMember.prototype.generateTransientObjects.call( this , context, messageManager);
	if (!context.getQueryManager().isHierarchyToUDHConversionEnabledForCurrentRs() && this.needsUdhForTransientTimeSelection(context))
	{
		context.getQueryManager().getActiveResultSetContainer().enableHierarchyToUDHConversion(true);
	}
};
oFF.QRestrictedMeasure.prototype.needsUdhForTransientTimeSelection = function(context)
{
	try
	{
		var messageManager = oFF.MessageManagerSimple.createMessageManager();
		if (this.validateBeforeRuntimeObjectExport(context, messageManager) && this.needsTransientTimeSelection(messageManager))
		{
			var transientTimeSelection = oFF.notNull(this.m_transientTimeSelection) ? this.m_transientTimeSelection : this.generateFlattenTransientTimeSelection(context.getQueryModel(), messageManager, this.m_timeOperation, null);
			if (oFF.notNull(transientTimeSelection))
			{
				var predicate =  function(memberNav){
					return memberNav.getMemberFunction() === oFF.CurrentMemberFunction.INA_PARALLEL_PERIOD;
				}.bind(this);
				for (var i = 0; i < transientTimeSelection.size(); i++)
				{
					var filterElement = transientTimeSelection.getCartesianElement(i);
					if (oFF.XCollectionUtils.contains(filterElement.getLow().getMemberNavigations(), predicate))
					{
						return true;
					}
				}
			}
		}
	}
	catch (e)
	{
		return false;
	}
	return false;
};
oFF.QRestrictedMeasure.prototype.exportRuntimeObject = function(context, messageManager)
{
	var runtimeObj = oFF.QStructureMember.prototype.exportRuntimeObject.call( this , context, messageManager);
	if (oFF.isNull(runtimeObj))
	{
		return null;
	}
	this.stopEventing();
	context.getQueryModel().stopEventing();
	try
	{
		if (this.needsTransientTimeSelection(messageManager))
		{
			if (oFF.notNull(this.m_transientTimeSelection))
			{
				runtimeObj.setTransientTimeSelection(this.m_transientTimeSelection);
			}
			else
			{
				runtimeObj.generateTransientTimeSelection(context.getQueryModel(), messageManager);
			}
			runtimeObj.generateTransientIgnoredExternalDimensions(context.getQueryModel(), messageManager);
			if (oFF.isNull(runtimeObj.m_transientTimeSelection))
			{
				this.resumeEventing();
				context.getQueryModel().resumeEventing();
				return null;
			}
		}
		if (runtimeObj.m_flattenDependentRestrictedMeasures)
		{
			var complexFilter = oFF.QFactory.createFilterAnd(context);
			runtimeObj.buildFlattenedSelection(context, complexFilter, messageManager);
			runtimeObj.m_filter.setComplexRoot(complexFilter);
		}
		if (this.m_disableIgnoreExternalDimensionOnFixedFilters && (this.isIgnoringAllExternalDimensions() || this.getIgnoredExternalDimensions().size() > 0))
		{
			var selectionContainer = context.getQueryModel().getFilter().getFixedFilter();
			if (oFF.notNull(selectionContainer) && selectionContainer.getFilterRootElement() !== null)
			{
				var complexFixedFilterMerge = oFF.QFactory.createFilterAnd(context);
				var fixedFilterRootElement = selectionContainer.getFilterRootElement();
				complexFixedFilterMerge.add(fixedFilterRootElement);
				var copyRMFilter = oFF.QFactory.createFilterExpression(runtimeObj.getContext(), this);
				copyRMFilter.copyFrom(runtimeObj.m_filter, null);
				complexFixedFilterMerge.add(copyRMFilter.getFilterRootElement());
				runtimeObj.m_filter.setComplexRoot(complexFixedFilterMerge);
			}
		}
	}
	catch (t)
	{
		this.resumeEventing();
		context.getQueryModel().resumeEventing();
		return null;
	}
	this.resumeEventing();
	context.getQueryModel().resumeEventing();
	return runtimeObj;
};
oFF.QRestrictedMeasure.prototype.getTopLevelDependentMemberNames = function(context)
{
	var dimensionContext = this.getDimensionContext(context.getQueryManager());
	var memberNames = oFF.XListOfString.createFromReadOnlyList(oFF.QFilterUtil.getMemberNamesFromFilter(this.getFilter().getFilterRootElement(), dimensionContext.getName()));
	memberNames.removeElement(this.getName());
	return memberNames;
};
oFF.QRestrictedMeasure.prototype.getDependentRestrictedMeasure = function(messageManager)
{
	var dependentMemberNames = this.getTopLevelDependentMemberNames(this.getContext());
	var memberNamesIter = dependentMemberNames.getIterator();
	var isPrimary = oFF.XString.isEqual(this.getDimension().getName(), this.getQueryModel().getPrimaryCalculationDimension().getName());
	if (dependentMemberNames.size() === 1)
	{
		var memberName = memberNamesIter.next();
		if (oFF.XString.startsWith(memberName, "$$") && oFF.XString.endsWith(memberName, "$$"))
		{
			return null;
		}
		var member = this.getDimension().getStructureMemberByAliasOrMember(memberName);
		if (oFF.isNull(member))
		{
			member = this.getSharedStructuredMember(memberName, this.getStorageName(), isPrimary);
		}
		if (oFF.isNull(member) && this.getDimension().getDimensionType() !== oFF.DimensionType.ACCOUNT)
		{
			var errorMsgArgs = oFF.XListOfString.create();
			errorMsgArgs.add(memberName);
			var errorMessage = oFF.ErrorMessages.getText(oFF.ErrorMessages.MEASURE_MISSING_DEPENDENT, errorMsgArgs, this.getAliasOrMemberName());
			messageManager.addWarning(oFF.ErrorCodes.MEASURE_MISSING_DEPENDENT, errorMessage);
			if (this.getQueryManager().getSystemType() !== oFF.SystemType.BW)
			{
				throw oFF.XException.createRuntimeException(errorMessage);
			}
		}
		if (oFF.notNull(member) && member.getMemberType() === oFF.MemberType.RESTRICTED_MEASURE && !oFF.XString.isEqual(member.getAliasOrMemberName(), this.getAliasOrMemberName()))
		{
			return member;
		}
	}
	return null;
};
oFF.QRestrictedMeasure.prototype.buildFlattenedSelection = function(context, filterRoot, messageManager)
{
	var copyFilter = oFF.QFactory.createFilterExpression(context, this);
	copyFilter.copyFrom(this.getFilter(), null);
	var restrictedMeasure = this.getDependentRestrictedMeasure(messageManager);
	if (oFF.notNull(restrictedMeasure) && !restrictedMeasure.isIgnoringAllExternalDimensions() && restrictedMeasure.getIgnoredExternalDimensions().size() === 0 && restrictedMeasure.getExceptionAggregationType() === null && !restrictedMeasure.isModelDefinedMember())
	{
		restrictedMeasure.buildFlattenedSelection(context, filterRoot, messageManager);
		oFF.QFilterUtil.clearSelectionsInContainerByDimension(this.getDimension().getName(), copyFilter);
	}
	filterRoot.add(copyFilter.getFilterRootElement());
};
oFF.QRestrictedMeasure.prototype.getTopLevelDependentFieldNames = function(context)
{
	var usedFields = oFF.XHashSetOfString.create();
	usedFields.addAll(oFF.QStructureMember.prototype.getTopLevelDependentFieldNames.call( this , context));
	var cartesianProduct = this.getFilter().getCartesianProduct();
	var complexSelectionRoot = this.getFilter().getComplexRoot();
	if (oFF.notNull(cartesianProduct))
	{
		var sizeCp = cartesianProduct.size();
		for (var i = 0; i < sizeCp; i++)
		{
			usedFields.add(cartesianProduct.getCartesianChild(i).getFieldMetadata().getName());
		}
	}
	else if (oFF.notNull(complexSelectionRoot))
	{
		this.addFieldsUsedInComplexContainer(complexSelectionRoot, usedFields);
	}
	if (oFF.notNull(this.m_timeOperation))
	{
		var dimension = context.getQueryModel().getDimensionByName(this.m_timeOperation.getDimensionName());
		if (oFF.notNull(dimension))
		{
			usedFields.add(dimension.getKeyField().getName());
		}
	}
	return usedFields.getValuesAsReadOnlyListOfString();
};
oFF.QRestrictedMeasure.prototype.isFlattenSelection = function()
{
	return this.m_flattenDependentRestrictedMeasures;
};
oFF.QRestrictedMeasure.prototype.setFlattenSelection = function(flattenSelection)
{
	if (this.m_flattenDependentRestrictedMeasures !== flattenSelection)
	{
		this.m_flattenDependentRestrictedMeasures = flattenSelection;
		this.notifyPropertyBooleanChanged(oFF.QMeasureProperties.QY_FLATTEN_DEPENDENT_RESTRICTED_MEASURES, !flattenSelection, flattenSelection);
	}
};
oFF.QRestrictedMeasure.prototype.isDisableIgnoreExternalDimensionOnFixedFilters = function()
{
	return this.m_disableIgnoreExternalDimensionOnFixedFilters;
};
oFF.QRestrictedMeasure.prototype.setDisableIgnoreExternalDimensionOnFixedFilters = function(disableIgnoreExternalDimensionOnFixedFilters)
{
	if (this.m_disableIgnoreExternalDimensionOnFixedFilters !== disableIgnoreExternalDimensionOnFixedFilters)
	{
		this.m_disableIgnoreExternalDimensionOnFixedFilters = disableIgnoreExternalDimensionOnFixedFilters;
		this.notifyPropertyBooleanChanged(oFF.QMeasureProperties.QY_DISABLE_IGNORE_EXTDIM_ON_FIXEDFILTERS, !disableIgnoreExternalDimensionOnFixedFilters, disableIgnoreExternalDimensionOnFixedFilters);
	}
};
oFF.QRestrictedMeasure.prototype.isVersionAggregated = function(context)
{
	var isVersionAggregated = oFF.QStructureMember.prototype.isVersionAggregated.call( this , context);
	if (!isVersionAggregated)
	{
		var versionDimension = context.getQueryModel().getDimensionByType(oFF.DimensionType.VERSION);
		if (oFF.notNull(versionDimension))
		{
			var cartesianList = this.getFilter().getCartesianListByField(versionDimension.getKeyField());
			isVersionAggregated = oFF.QFilterUtil.isSingleValueFilterCartesianList(cartesianList);
		}
	}
	return isVersionAggregated;
};
oFF.QRestrictedMeasure.prototype.getStorageObjectName = function()
{
	var name = this.getName();
	if (oFF.XString.isEqual(name, oFF.MeasureModelConstants.DEFAULT_CUSTOMDIMENSION2_MEMBER))
	{
		var queryModel = this.getQueryModel();
		if (oFF.notNull(queryModel))
		{
			var datasetId = queryModel.getDatasetId();
			if (oFF.notNull(datasetId) && this.getDimension() === queryModel.getSecondaryCalculationDimension())
			{
				name = oFF.XStringUtils.concatenate3(datasetId, "-", name);
			}
		}
	}
	return name;
};
oFF.QRestrictedMeasure.prototype.getSolveOrder = function()
{
	if (!this.isSolveOrderOverDefined() && this.isCustomDefaultSolveOrderApplicable() && !this.getQueryModel().hasUserDefinedMeasures() && this.getDimension().isMeasureStructure())
	{
		return oFF.QStructureMemberSolveOrder.CLIENT_DEFINED_RESTRICTED_MEASURE_ON_MEASURE_STRUCTURE;
	}
	else if (!this.isSolveOrderOverDefined() && this.isCustomDefaultSolveOrderApplicable() && this.getQueryModel().hasUserDefinedMeasures() && this.getQueryModel().isLeadingStructureAccount())
	{
		return oFF.QStructureMemberSolveOrder.RESTRICTED_MEASURE_WITH_ACCOUNT;
	}
	else if (!this.isSolveOrderOverDefined() && this.isCustomDefaultSolveOrderApplicable() && this.getQueryModel().hasUserDefinedMeasures() && this.getQueryModel().isLeadingStructureMeasure())
	{
		return oFF.QStructureMemberSolveOrder.RESTRICTED_MEASURE_UNIVERSAL_MEASURE;
	}
	else
	{
		return oFF.QStructureMember.prototype.getSolveOrder.call( this );
	}
};

oFF.QVariableManager = function() {};
oFF.QVariableManager.prototype = new oFF.QModelComponentList();
oFF.QVariableManager.prototype._ff_c = "QVariableManager";

oFF.QVariableManager.create = function(queryModel)
{
	var object = new oFF.QVariableManager();
	object.setupOlapList(queryModel, queryModel, true, "Query Variables", oFF.XCollectionFactory.LINKED_MAP, false);
	return object;
};
oFF.QVariableManager.variableControlsDynamicFilter = function(variable)
{
	return !variable.getVariableType().isTypeOf(oFF.VariableType.HIERARCHY_NAME_VARIABLE) && variable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE) && variable.isUsedInDynamicFilter();
};
oFF.QVariableManager.prototype.copyFromInternal = function(other, flags)
{
	oFF.QModelComponentList.prototype.copyFromInternal.call( this , other, flags);
	var originVariableManager = other;
	var i;
	var size = originVariableManager.size();
	var context = this.getContext();
	for (i = 0; i < size; i++)
	{
		var originVariable = originVariableManager.get(i);
		var cloneVar = oFF.QFactory.createVariable(context, this, originVariable);
		cloneVar.copyFrom(originVariable, flags);
		this.addInternal(cloneVar);
	}
	for (i = 0; i < size; i++)
	{
		this.get(i).copyVariableDependencies(originVariableManager.get(i));
	}
};
oFF.QVariableManager.prototype.getOlapComponentType = function()
{
	return oFF.OlapComponentType.VARIABLE_MANAGER;
};
oFF.QVariableManager.prototype.hasVariables = function()
{
	return !this.isEmpty();
};
oFF.QVariableManager.prototype.hasInputEnabledVariables = function()
{
	return oFF.QVariableUtils.hasInputEnabledVariables(this);
};
oFF.QVariableManager.prototype.clearExternalVariablesRepresentations = function()
{
	this.queueEventing();
	oFF.QVariableUtils.clearExternalVariablesRepresentations(this);
	this.resumeEventing();
};
oFF.QVariableManager.prototype.hasMandatoryVariables = function()
{
	return oFF.QVariableUtils.hasMandatoryVariables(this);
};
oFF.QVariableManager.prototype.getVariables = function()
{
	return this;
};
oFF.QVariableManager.prototype.getInputEnabledVariables = function()
{
	return oFF.QVariableUtils.getInputEnabledVariables(this);
};
oFF.QVariableManager.prototype.getInputEnabledAndNonTechnicalVariables = function()
{
	return oFF.QVariableUtils.getInputEnabledAndNonTechnicalVariables(this);
};
oFF.QVariableManager.prototype.setWinControlInAutoSubmitByType = function(variableType, isWinControlInAutoSubmit, isLimitToExitVariable)
{
	this.getVariableProcessor().setWinControlInAutoSubmitByType(variableType, isWinControlInAutoSubmit, isLimitToExitVariable);
};
oFF.QVariableManager.prototype.addVariable = function(variable)
{
	variable.registerChangedListener(this, null);
	this.add(variable);
};
oFF.QVariableManager.prototype.clearVariables = function()
{
	this.clear();
};
oFF.QVariableManager.prototype.removeVariable = function(name)
{
	var variable = this.getByKey(name);
	if (oFF.notNull(variable))
	{
		this.removeElement(variable);
	}
};
oFF.QVariableManager.prototype.getVariableBaseAt = function(index)
{
	return this.get(index);
};
oFF.QVariableManager.prototype.getVariableBaseByName = function(name)
{
	return this.getByKey(name);
};
oFF.QVariableManager.prototype.getDimensionAccessor = function()
{
	return this.getQueryModel();
};
oFF.QVariableManager.prototype.getModelComponentBase = function()
{
	return this;
};
oFF.QVariableManager.prototype.getVariableMode = function()
{
	return this.getQueryModel().getVariableMode();
};
oFF.QVariableManager.prototype.getInputEnabledVariable = function(name)
{
	return oFF.QVariableUtils.getInputEnabledVariable(this, name);
};
oFF.QVariableManager.prototype.getVariable = function(name)
{
	return this.getVariableBaseByName(name);
};
oFF.QVariableManager.prototype.getHierarchyNodeVariable = function(name)
{
	return oFF.QVariableUtils.getVariableByType(this, name, oFF.VariableType.HIERARCHY_NODE_VARIABLE);
};
oFF.QVariableManager.prototype.getHierarchyNameVariable = function(name)
{
	return oFF.QVariableUtils.getVariableByType(this, name, oFF.VariableType.HIERARCHY_NAME_VARIABLE);
};
oFF.QVariableManager.prototype.getHierarchyNameVariables = function()
{
	return oFF.QVariableUtils.getHierarchyNameVariables(this);
};
oFF.QVariableManager.prototype.getDimensionMemberVariables = function()
{
	return oFF.QVariableUtils.getDimensionMemberVariables(this);
};
oFF.QVariableManager.prototype.getVariableProcessor = function()
{
	return this.getQueryModel().getQueryManager();
};
oFF.QVariableManager.prototype.mergeDeepRecursive = function(settings, other)
{
	var otherObj = other;
	var variables = otherObj.getVariables();
	for (var i = 0; i < variables.size(); i++)
	{
		var otherVariable = variables.get(i);
		var otherName = otherVariable.getName();
		var myVariable = this.getVariableBaseByName(otherName);
		myVariable.mergeDeepRecursive(settings, otherVariable);
	}
};
oFF.QVariableManager.prototype.hasDimensionMemberVariableAffectingDynamicFilter = function()
{
	return oFF.XStream.of(this).filter( function(variable){
		return oFF.QVariableManager.variableControlsDynamicFilter(variable);
	}.bind(this)).findAny().isPresent();
};
oFF.QVariableManager.prototype.getVariablesAffectingDynamicFilter = function()
{
	return oFF.XStream.of(this).filter( function(variable){
		return oFF.QVariableManager.variableControlsDynamicFilter(variable);
	}.bind(this)).map( function(dmv){
		return dmv;
	}.bind(this)).collect(oFF.XStreamCollector.toList());
};
oFF.QVariableManager.prototype.getDimensionNamesOfVariablesAffectingDynamicFilter = function()
{
	return oFF.XStream.of(this).filter( function(variable){
		return oFF.QVariableManager.variableControlsDynamicFilter(variable);
	}.bind(this)).map( function(dmv){
		return dmv.getDimension();
	}.bind(this)).collect(oFF.XStreamCollector.toSetOfString( function(dimension){
		return dimension.getName();
	}.bind(this)));
};
oFF.QVariableManager.prototype.onModelComponentChanged = function(modelComponent, customIdentifier)
{
	if (oFF.isNull(modelComponent) || !modelComponent.getOlapComponentType().isTypeOf(oFF.VariableType.ANY_VARIABLE))
	{
		return;
	}
	var dynamicFilter = this.getQueryModel().getFilter().getDynamicFilter();
	if (oFF.notNull(dynamicFilter))
	{
		dynamicFilter.setPreserveDuringSubmit(false);
	}
};

oFF.QHierarchyNameVariable = function() {};
oFF.QHierarchyNameVariable.prototype = new oFF.QDimensionMemberVariable();
oFF.QHierarchyNameVariable.prototype._ff_c = "QHierarchyNameVariable";

oFF.QHierarchyNameVariable.createDimensionHierarchyVariable = function(context, parent, name, description)
{
	var variable = new oFF.QHierarchyNameVariable();
	variable.setupDimensionMemberVariable(context, parent, name, description);
	return variable;
};
oFF.QHierarchyNameVariable.prototype.m_hierarchyDimension = null;
oFF.QHierarchyNameVariable.prototype.releaseObject = function()
{
	this.m_hierarchyDimension = oFF.XObjectExt.release(this.m_hierarchyDimension);
	oFF.QDimensionMemberVariable.prototype.releaseObject.call( this );
};
oFF.QHierarchyNameVariable.prototype.copyFromInternal = function(other, flags)
{
	oFF.QDimensionMemberVariable.prototype.copyFromInternal.call( this , other, flags);
	this.setHierarchyNameDimension(this.getQueryModel().getDimensionByNameFromExistingMetadata(other.getHierarchyNameDimension().getName()));
};
oFF.QHierarchyNameVariable.prototype.getVariableType = function()
{
	return oFF.VariableType.HIERARCHY_NAME_VARIABLE;
};
oFF.QHierarchyNameVariable.prototype.getHierarchyNameDimension = function()
{
	return oFF.XWeakReferenceUtil.getHardRef(this.m_hierarchyDimension);
};
oFF.QHierarchyNameVariable.prototype.setHierarchyNameDimension = function(dimension)
{
	this.m_hierarchyDimension = oFF.XWeakReferenceUtil.getWeakRef(dimension);
};

oFF.QHierarchyNodeVariable = function() {};
oFF.QHierarchyNodeVariable.prototype = new oFF.QDimensionMemberVariable();
oFF.QHierarchyNodeVariable.prototype._ff_c = "QHierarchyNodeVariable";

oFF.QHierarchyNodeVariable.createHierarchyNodeVariable = function(context, parent, name, description)
{
	var variable = new oFF.QHierarchyNodeVariable();
	variable.setupDimensionMemberVariable(context, parent, name, description);
	return variable;
};
oFF.QHierarchyNodeVariable.prototype.getVariableType = function()
{
	return oFF.VariableType.HIERARCHY_NODE_VARIABLE;
};

oFF.QAxisDimensionList = function() {};
oFF.QAxisDimensionList.prototype = new oFF.QDimensionList();
oFF.QAxisDimensionList.prototype._ff_c = "QAxisDimensionList";

oFF.QAxisDimensionList.checkCapability = function(dimension, targetAxisType)
{
	return oFF.isNull(dimension) ? false : dimension.supportsAxis(targetAxisType);
};
oFF.QAxisDimensionList.prototype.add = function(element)
{
	var axis = this.getAxisBase();
	var axisType = axis.getType();
	if (oFF.QAxisDimensionList.checkCapability(element, axisType))
	{
		this.queueEventing();
		this._removeFromOldAxis(element, axisType);
		oFF.QDimensionList.prototype.add.call( this , element);
		element.setAxis(axis);
		this.resumeEventing();
	}
};
oFF.QAxisDimensionList.prototype._removeFromOldAxis = function(dimension, axisType)
{
	var oldAxis = dimension.getAxisBase();
	if (oFF.notNull(oldAxis) && oldAxis.getType() !== axisType)
	{
		oldAxis.removeElementInternal(dimension);
	}
};
oFF.QAxisDimensionList.prototype.addAll = function(other)
{
	if (oFF.notNull(other) && !other.isEmpty())
	{
		this.queueEventing();
		oFF.XListUtils.addAllObjects(other, this);
		this.resumeEventing();
	}
};
oFF.QAxisDimensionList.prototype.insert = function(index, element)
{
	if (index < 0 || index > this.size())
	{
		return;
	}
	var axis = this.getAxisBase();
	var axisType = axis.getType();
	if (oFF.QAxisDimensionList.checkCapability(element, axisType))
	{
		if (axisType === oFF.AxisType.FREE)
		{
			this.stopEventing();
		}
		else
		{
			this.queueEventing();
		}
		this._removeFromOldAxis(element, axisType);
		oFF.QDimensionList.prototype.insert.call( this , index, element);
		element.setAxis(axis);
		this.resumeEventing();
	}
};
oFF.QAxisDimensionList.prototype.removeElementInternal = function(dimension)
{
	this.queueEventing();
	oFF.QDimensionList.prototype.removeElement.call( this , dimension);
	dimension.setAxis(null);
	this.resumeEventing();
};
oFF.QAxisDimensionList.prototype.clear = function()
{
	var fallbackAxis = this.getAxis().getType().getFallbackAxis();
	oFF.XObjectExt.assertNotNullExt(fallbackAxis, "Cannot remove dimensions from free axis");
	this.queueEventing();
	var leftOverIndex = 0;
	while (this.size() > leftOverIndex)
	{
		var dimensionByIndex = this.getDimensionAt(leftOverIndex);
		if (dimensionByIndex.supportsAxis(fallbackAxis))
		{
			this.removeAt(leftOverIndex);
		}
		else
		{
			leftOverIndex++;
		}
	}
	this.resumeEventing();
};
oFF.QAxisDimensionList.prototype.removeElement = function(element)
{
	var index = this.getIndex(element);
	if (index !== -1)
	{
		this.removeAt(index);
	}
	return element;
};
oFF.QAxisDimensionList.prototype.removeAt = function(index)
{
	var dimension = oFF.QDimensionList.prototype.get.call( this , index);
	if (this.checkCapabilityAxisRemoveDimension(dimension))
	{
		var fallbackAxis = this.getAxis().getType().getFallbackAxis();
		this.queueEventing();
		var removedObj = oFF.QDimensionList.prototype.removeAt.call( this , index);
		this.getQueryModel().getAxis(fallbackAxis).add(dimension);
		this.resumeEventing();
		return removedObj;
	}
	return null;
};
oFF.QAxisDimensionList.prototype.checkCapabilityAxisRemoveDimension = function(dimension)
{
	var fallbackAxis = this.getAxis().getType().getFallbackAxis();
	return oFF.notNull(fallbackAxis) && oFF.QAxisDimensionList.checkCapability(dimension, fallbackAxis);
};

oFF.QFilterAlgebraOperation = function() {};
oFF.QFilterAlgebraOperation.prototype = new oFF.AbstractFilterList();
oFF.QFilterAlgebraOperation.prototype._ff_c = "QFilterAlgebraOperation";

oFF.QFilterAlgebraOperation.prototype.setupFilterAlgebraOperation = function(context, selectionContainer)
{
	oFF.AbstractFilterList.prototype.setupFilterList.call( this , context, selectionContainer, "Selection Logical Container");
};
oFF.QFilterAlgebraOperation.prototype.copyFromInternal = function(other, flags)
{
	oFF.AbstractFilterList.prototype.copyFromInternal.call( this , other, flags);
	var originFilterAlgebraOperation = other;
	var filterExpression = this.getFilterExpression();
	var size = originFilterAlgebraOperation.size();
	for (var i = 0; i < size; i++)
	{
		var originElement = originFilterAlgebraOperation.get(i);
		var originType = originElement.getOlapComponentType();
		var cloneElement = null;
		if (originType === oFF.FilterComponentType.CARTESIAN_PRODUCT)
		{
			cloneElement = oFF.QFilterCartesianProduct._create(this, filterExpression);
		}
		else if (originType === oFF.FilterComponentType.CARTESIAN_LIST)
		{
			var originList = originElement;
			cloneElement = oFF.QFilterCartesianList._createMd(this, filterExpression, originList.getFieldMetadata(), originList.getHierarchyName());
		}
		else if (originType === oFF.FilterComponentType.CONVERTED_TIME_CARTESIAN_LIST)
		{
			var originConvertedTimeCartesianList = originElement;
			cloneElement = oFF.QFilterConvertedTimeCartesianList._create(this, filterExpression, originConvertedTimeCartesianList.getFieldMetadata(), originConvertedTimeCartesianList.getHierarchyName());
		}
		else if (originType === oFF.FilterComponentType.OPERATION)
		{
			cloneElement = oFF.QFilterOperation._create(this, filterExpression, this);
		}
		else if (originType === oFF.OlapComponentType.FILTER_CELL_VALUE_OPERAND)
		{
			cloneElement = oFF.QFilterCellValueOperand.createWithExpression(this, filterExpression, this);
		}
		else if (originType === oFF.FilterComponentType.TUPLE)
		{
			cloneElement = oFF.QFactory.createFilterTuple(this);
		}
		else if (originType.isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA))
		{
			if (originType === oFF.FilterComponentType.AND)
			{
				cloneElement = oFF.QFactory.createFilterAnd(this);
			}
			else if (originType === oFF.FilterComponentType.OR)
			{
				cloneElement = oFF.QFactory.createFilterOr(this);
			}
			else if (originType === oFF.FilterComponentType.NOT)
			{
				cloneElement = oFF.QFactory.createFilterNot(this);
			}
			else
			{
				throw oFF.XException.createRuntimeException(originType.getName());
			}
		}
		else if (originType === oFF.FilterComponentType.FILTER_MEASURE_BASED)
		{
			cloneElement = oFF.QFactory.createFilterMeasureBased(this, originElement.getName());
		}
		else if (originType === oFF.FilterComponentType.FILTER_ACROSS_MODELS)
		{
			cloneElement = oFF.QFactory.createFilterAcrossModels(this, originElement.getName());
		}
		if (oFF.notNull(cloneElement))
		{
			cloneElement.copyFrom(originElement, flags);
			this.addInternal(cloneElement);
		}
	}
};

oFF.QCurrencyMeasure = function() {};
oFF.QCurrencyMeasure.prototype = new oFF.QFormulaMeasure();
oFF.QCurrencyMeasure.prototype._ff_c = "QCurrencyMeasure";

oFF.QCurrencyMeasure.SIGNED_DATA = "SignedData";
oFF.QCurrencyMeasure._createCurrencyMeasure = function(context, structure)
{
	var capabilities = context.getModelCapabilities();
	if (!capabilities.supportsCurrencyTranslation() && !context.getQueryModel().getCurrencyTranslationManager().isLegacyMeasureCurrencyTranslationAccountModel())
	{
		oFF.noSupport();
	}
	var member = new oFF.QCurrencyMeasure();
	member.setupCurrencyMeasure(context, structure);
	return member;
};
oFF.QCurrencyMeasure.prototype.m_baseMeasureName = null;
oFF.QCurrencyMeasure.prototype.m_localCurrencyTranslation = null;
oFF.QCurrencyMeasure.prototype.m_transientCurrencyTranslation = false;
oFF.QCurrencyMeasure.prototype.m_localCurrency = false;
oFF.QCurrencyMeasure.prototype.m_transientMember = null;
oFF.QCurrencyMeasure.prototype.m_rateTypeInherit = null;
oFF.QCurrencyMeasure.prototype.setupCurrencyMeasure = function(context, structure)
{
	oFF.QFormulaMeasure.prototype.setupStructureMember.call( this , context, structure, oFF.MemberType.CURRENCY_MEASURE);
	var ctm = context.getQueryModel().getCurrencyTranslationManager();
	if (oFF.notNull(ctm) && !ctm.isLegacyMeasureCurrencyTranslationAccountModel())
	{
		this.setUnitType(oFF.UnitType.CURRENCY);
	}
	this.m_localCurrencyTranslation = oFF.QMeasureCurrencyTranslation.createWithName(context, context.getQueryModel().getCurrencyTranslationManager(), null, "");
};
oFF.QCurrencyMeasure.prototype.getSolveOrder = function()
{
	var ctm = this.getQueryModel().getCurrencyTranslationManager();
	if (oFF.notNull(ctm))
	{
		if (!ctm.isLegacyMeasureCurrencyTranslationAccountModel())
		{
			if (ctm.deriveRateTypeFromAccount())
			{
				return oFF.QStructureMemberSolveOrder.CURRENCY_MEASURE_WITH_ACCOUNT;
			}
			else
			{
				return oFF.QStructureMemberSolveOrder.CURRENCY_MEASURE_UNIVERSAL_MEASURE;
			}
		}
		else if (this.isCustomDefaultSolveOrderApplicable())
		{
			return oFF.QStructureMemberSolveOrder.CURRENCY_MEASURE_WITH_ACCOUNT;
		}
	}
	return oFF.QStructureMemberSolveOrder.DEFAULT_SOLVE_ORDER;
};
oFF.QCurrencyMeasure.prototype.setAutoSignFlip = function(autoSignFlip)
{
	if (autoSignFlip)
	{
		oFF.noSupport();
	}
};
oFF.QCurrencyMeasure.prototype.getLocalCurrencyTranslation = function()
{
	return this.m_localCurrencyTranslation;
};
oFF.QCurrencyMeasure.prototype.releaseObject = function()
{
	this.m_localCurrencyTranslation = oFF.XObjectExt.release(this.m_localCurrencyTranslation);
	this.m_baseMeasureName = null;
	this.m_transientMember = oFF.XObjectExt.release(this.m_transientMember);
	this.m_transientCurrencyTranslation = false;
	oFF.QFormulaMeasure.prototype.releaseObject.call( this );
};
oFF.QCurrencyMeasure.prototype.copyFromInternal = function(other, flags)
{
	if (other.getMemberType() !== this.getMemberType())
	{
		return;
	}
	oFF.QFormulaMeasure.prototype.copyFromInternal.call( this , other, flags);
	this.copySharableProperties(other, false);
};
oFF.QCurrencyMeasure.prototype.copySharableProperties = function(origin, isShallowCopy)
{
	oFF.QFormulaMeasure.prototype.copySharableProperties.call( this , origin, isShallowCopy);
	var originCurrencyMeasure = origin;
	this.m_baseMeasureName = originCurrencyMeasure.m_baseMeasureName;
	this.m_localCurrency = originCurrencyMeasure.m_localCurrency;
	this.m_localCurrencyTranslation.copyFrom(originCurrencyMeasure.m_localCurrencyTranslation, null);
};
oFF.QCurrencyMeasure.prototype.getBaseMeasureName = function()
{
	return this.m_baseMeasureName;
};
oFF.QCurrencyMeasure.prototype.setBaseMeasureName = function(baseMeasureName)
{
	this.m_baseMeasureName = baseMeasureName;
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.getRuntimeRateType = function()
{
	var rateType = oFF.QFormulaMeasure.prototype.getRateType.call( this );
	return oFF.notNull(rateType) ? rateType : this.m_rateTypeInherit;
};
oFF.QCurrencyMeasure.prototype.setErrorHandling = function(errorHandlingMode)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setErrorHandling(errorHandlingMode);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.getErrorHandling = function()
{
	return this.m_localCurrencyTranslation.getErrorHandling();
};
oFF.QCurrencyMeasure.prototype.supportsErrorHandling = function()
{
	return this.m_localCurrencyTranslation.supportsErrorHandling();
};
oFF.QCurrencyMeasure.prototype.supportsTargetCurrency = function()
{
	return this.m_localCurrencyTranslation.supportsTargetCurrency();
};
oFF.QCurrencyMeasure.prototype.supportsTargetCurrencyAsField = function()
{
	return this.m_localCurrencyTranslation.supportsTargetCurrencyAsField();
};
oFF.QCurrencyMeasure.prototype.supportsTargetCurrencyAsVariable = function()
{
	return this.m_localCurrencyTranslation.supportsTargetCurrencyAsVariable();
};
oFF.QCurrencyMeasure.prototype.supportsDefaultCurrency = function()
{
	return this.m_localCurrencyTranslation.supportsDefaultCurrency();
};
oFF.QCurrencyMeasure.prototype.requiresTargetCurrency = function()
{
	return this.m_localCurrencyTranslation.requiresTargetCurrency();
};
oFF.QCurrencyMeasure.prototype.isMissingTargetCurrency = function()
{
	return this.m_localCurrencyTranslation.isMissingTargetCurrency();
};
oFF.QCurrencyMeasure.prototype.supportsReferenceDate = function()
{
	return this.m_localCurrencyTranslation.supportsReferenceDate();
};
oFF.QCurrencyMeasure.prototype.supportsReferenceDateAsField = function()
{
	return this.m_localCurrencyTranslation.supportsReferenceDateAsField();
};
oFF.QCurrencyMeasure.prototype.requiresReferenceDate = function()
{
	return this.m_localCurrencyTranslation.requiresReferenceDate();
};
oFF.QCurrencyMeasure.prototype.isMissingReferenceDate = function()
{
	return this.m_localCurrencyTranslation.isMissingReferenceDate();
};
oFF.QCurrencyMeasure.prototype.supportsOffsetInDays = function()
{
	return this.m_localCurrencyTranslation.supportsOffsetInDays();
};
oFF.QCurrencyMeasure.prototype.supportsOffsetInMonths = function()
{
	return this.m_localCurrencyTranslation.supportsOffsetInMonths();
};
oFF.QCurrencyMeasure.prototype.supportsRateName = function()
{
	return this.m_localCurrencyTranslation.supportsRateName();
};
oFF.QCurrencyMeasure.prototype.requiresRateName = function()
{
	return this.m_localCurrencyTranslation.requiresRateName();
};
oFF.QCurrencyMeasure.prototype.isMissingRateName = function()
{
	return this.m_localCurrencyTranslation.isMissingRateName();
};
oFF.QCurrencyMeasure.prototype.supportsPlanningParameters = function()
{
	return this.m_localCurrencyTranslation.supportsPlanningParameters();
};
oFF.QCurrencyMeasure.prototype.setFixedTargetCurrencyByString = function(currencyName)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setFixedTargetCurrencyByString(currencyName);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.isTargetCurrencyFixed = function()
{
	return this.m_localCurrencyTranslation.isTargetCurrencyFixed();
};
oFF.QCurrencyMeasure.prototype.getFixedTargetCurrency = function()
{
	return this.m_localCurrencyTranslation.getFixedTargetCurrency();
};
oFF.QCurrencyMeasure.prototype.setTargetCurrencyByFieldName = function(currencyFieldName)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setTargetCurrencyByFieldName(currencyFieldName);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.setTargetCurrencyByField = function(currencyField)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setTargetCurrencyByField(currencyField);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.getTargetCurrencyField = function()
{
	return this.m_localCurrencyTranslation.getTargetCurrencyField();
};
oFF.QCurrencyMeasure.prototype.getTargetCurrencyFieldName = function()
{
	return this.m_localCurrencyTranslation.getTargetCurrencyFieldName();
};
oFF.QCurrencyMeasure.prototype.isTargetCurrencyField = function()
{
	return this.m_localCurrencyTranslation.isTargetCurrencyField();
};
oFF.QCurrencyMeasure.prototype.setTargetCurrencyByVariableName = function(variableName)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setTargetCurrencyByVariableName(variableName);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.setTargetCurrencyByVariable = function(variable)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setTargetCurrencyByVariable(variable);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.getTargetCurrencyVariable = function()
{
	return this.m_localCurrencyTranslation.getTargetCurrencyVariable();
};
oFF.QCurrencyMeasure.prototype.getTargetCurrencyVariableName = function()
{
	return this.m_localCurrencyTranslation.getTargetCurrencyVariableName();
};
oFF.QCurrencyMeasure.prototype.isTargetCurrencyVariable = function()
{
	return this.m_localCurrencyTranslation.isTargetCurrencyVariable();
};
oFF.QCurrencyMeasure.prototype.setDefaultCurrency = function()
{
	this.setAliasName(oFF.CurrencyConstants.DEFAULT_CURRENCY);
	this.m_localCurrencyTranslation.setDefaultCurrency();
};
oFF.QCurrencyMeasure.prototype.setLocalCurrency = function()
{
	this.setAliasName(oFF.CurrencyConstants.LOCAL_CURRENCY);
	this.m_localCurrency = true;
};
oFF.QCurrencyMeasure.prototype.isDefaultCurrency = function()
{
	return this.m_localCurrencyTranslation.isDefaultCurrency();
};
oFF.QCurrencyMeasure.prototype.isLocalCurrency = function()
{
	return this.m_localCurrency;
};
oFF.QCurrencyMeasure.prototype.setFixedReferenceDateByString = function(referenceDateString)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setFixedReferenceDateByString(referenceDateString);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.setFixedReferenceDateByDateValue = function(referenceDateValue)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setFixedReferenceDateByDateValue(referenceDateValue);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.isReferenceDateFixed = function()
{
	return this.m_localCurrencyTranslation.isReferenceDateFixed();
};
oFF.QCurrencyMeasure.prototype.getFixedReferenceDate = function()
{
	return this.m_localCurrencyTranslation.getFixedReferenceDate();
};
oFF.QCurrencyMeasure.prototype.getFixedReferenceDateAsString = function()
{
	return this.m_localCurrencyTranslation.getFixedReferenceDateAsString();
};
oFF.QCurrencyMeasure.prototype.setReferenceDateByFieldName = function(fieldName)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setReferenceDateByFieldName(fieldName);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.setReferenceDateByField = function(field)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setReferenceDateByField(field);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.isReferenceDateField = function()
{
	return this.m_localCurrencyTranslation.isReferenceDateField();
};
oFF.QCurrencyMeasure.prototype.getReferenceDateField = function()
{
	return this.m_localCurrencyTranslation.getReferenceDateField();
};
oFF.QCurrencyMeasure.prototype.getReferenceDateFieldName = function()
{
	return this.m_localCurrencyTranslation.getReferenceDateFieldName();
};
oFF.QCurrencyMeasure.prototype.setDynamicReferenceDate = function()
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setDynamicReferenceDate();
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.setDynamicReferenceDateWithOffsetAndGranularity = function(offset, offsetGranularity)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setDynamicReferenceDateWithOffsetAndGranularity(offset, offsetGranularity);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.setReferenceDateByFieldOffsetAndGranularity = function(field, offset, offsetGranularity)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setReferenceDateByFieldOffsetAndGranularity(field, offset, offsetGranularity);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.setReferenceDateByFieldNameOffsetAndGranularity = function(fieldName, offset, offsetGranularity)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setReferenceDateByFieldNameOffsetAndGranularity(fieldName, offset, offsetGranularity);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.getDateOffset = function()
{
	return this.m_localCurrencyTranslation.getDateOffset();
};
oFF.QCurrencyMeasure.prototype.getDateOffsetGranularity = function()
{
	return this.m_localCurrencyTranslation.getDateOffsetGranularity();
};
oFF.QCurrencyMeasure.prototype.setFixedRateNameByString = function(rateNameString)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setFixedRateNameByString(rateNameString);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.isFixedRateName = function()
{
	return this.m_localCurrencyTranslation.isFixedRateName();
};
oFF.QCurrencyMeasure.prototype.getFixedRateName = function()
{
	return this.m_localCurrencyTranslation.getFixedRateName();
};
oFF.QCurrencyMeasure.prototype.setRateNameByFieldName = function(fieldName)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setRateNameByFieldName(fieldName);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.setRateNameByField = function(field)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setRateNameByField(field);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.isRateNameField = function()
{
	return this.m_localCurrencyTranslation.isRateNameField();
};
oFF.QCurrencyMeasure.prototype.getRateNameField = function()
{
	return this.m_localCurrencyTranslation.getRateNameField();
};
oFF.QCurrencyMeasure.prototype.getRateNameFieldName = function()
{
	return this.m_localCurrencyTranslation.getRateNameFieldName();
};
oFF.QCurrencyMeasure.prototype.setFixedRateType = function(rateType)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setFixedRateType(rateType);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.setDynamicRateType = function()
{
	this.m_localCurrencyTranslation.setDynamicRateType();
};
oFF.QCurrencyMeasure.prototype.getFixedRateType = function()
{
	this.setCurrencyTranslationName(null);
	return this.m_localCurrencyTranslation.getFixedRateType();
};
oFF.QCurrencyMeasure.prototype.setFixedCategory = function(category)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setFixedCategory(category);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.getFixedCategory = function()
{
	return this.m_localCurrencyTranslation.getFixedCategory();
};
oFF.QCurrencyMeasure.prototype.setFixedRateVersion = function(rateVersion)
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setFixedRateVersion(rateVersion);
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.getFixedRateVersion = function()
{
	return this.m_localCurrencyTranslation.getFixedRateVersion();
};
oFF.QCurrencyMeasure.prototype.setDynamicRateVersionAndCategory = function()
{
	this.setCurrencyTranslationName(null);
	this.m_localCurrencyTranslation.setDynamicRateVersionAndCategory();
	this.notifyNodeChanged();
};
oFF.QCurrencyMeasure.prototype.isParametersComplete = function()
{
	return this.getCurrencyTranslationName() !== null || this.m_localCurrencyTranslation.isParametersComplete();
};
oFF.QCurrencyMeasure.prototype.destroyTransientObjects = function(context)
{
	oFF.QFormulaMeasure.prototype.destroyTransientObjects.call( this , context);
	var dimensionContext;
	var clientQueryObjectManager = this.getOlapEnv().getClientQueryObjectManager();
	if (clientQueryObjectManager.getClientQueryObjectByKeyRef(this) !== null)
	{
		dimensionContext = this.getDimensionContext(context.getQueryManager());
	}
	else
	{
		dimensionContext = this.getDimension();
	}
	var dependentMember = dimensionContext.getStructureMemberByAliasOrMember(this.m_baseMeasureName);
	if (oFF.notNull(dependentMember))
	{
		var tagging = dependentMember.getTagging();
		if (tagging.containsKey(oFF.QTransientConstants.TAG_IS_TRANSIENT))
		{
			dimensionContext.removeMeasure(this.m_baseMeasureName);
		}
		if (tagging.containsKey(oFF.QTransientConstants.TAG_OVERRIDE_DESCRIPTION))
		{
			tagging.remove(oFF.QTransientConstants.TAG_OVERRIDE_DESCRIPTION);
		}
	}
	if (context.getQueryModel().getDimensionByType(oFF.DimensionType.ACCOUNT) !== null)
	{
		if (!context.getQueryModel().getCurrencyTranslationManager().isLegacyMeasureCurrencyTranslationAccountModel())
		{
			this.releaseTransientCurrencyTranslation(context);
		}
	}
	else
	{
		this.releaseTransientCurrencyTranslation(context);
	}
};
oFF.QCurrencyMeasure.prototype.generateTransientObjects = function(context, messageManager)
{
	var dimensionContext;
	var clientQueryObjectManager = this.getOlapEnv().getClientQueryObjectManager();
	if (clientQueryObjectManager.getClientQueryObjectByKeyRef(this) !== null)
	{
		dimensionContext = this.getDimensionContext(context.getQueryManager());
	}
	else
	{
		dimensionContext = this.getDimension();
	}
	var currencyTranslationManager = context.getQueryModel().getCurrencyTranslationManager();
	var isAccountModel = context.getQueryModel().getDimensionByType(oFF.DimensionType.ACCOUNT) !== null;
	if (isAccountModel && currencyTranslationManager.isLegacyMeasureCurrencyTranslationAccountModel())
	{
		this.m_baseMeasureName = currencyTranslationManager.getCurrencyTranslationCrossCalculation(this.getAliasName());
		var baseMeasure = dimensionContext.getStructureMemberByAliasOrMember(this.m_baseMeasureName);
		if (oFF.notNull(baseMeasure))
		{
			baseMeasure.getTagging().put(oFF.QTransientConstants.TAG_OVERRIDE_DESCRIPTION, this.getText());
		}
	}
	else if (isAccountModel && (oFF.XStringUtils.isNullOrEmpty(this.m_baseMeasureName) || oFF.XString.isEqual(this.m_baseMeasureName, oFF.QCurrencyMeasure.SIGNED_DATA)))
	{
		this.m_baseMeasureName = oFF.QCurrencyMeasure.SIGNED_DATA;
		var basePlaceholderMeasure = dimensionContext.getStructureMemberByAliasOrMember(this.m_baseMeasureName);
		if (oFF.notNull(basePlaceholderMeasure) && !oFF.CtRateType.isDefined(this.getRateType()))
		{
			this.m_rateTypeInherit = basePlaceholderMeasure.getRateType();
		}
		this.applyTransientCurrencyTranslation(context);
	}
	else
	{
		var referenceMeasure = dimensionContext.getStructureMemberByAliasOrMember(this.m_baseMeasureName);
		if (oFF.isNull(referenceMeasure))
		{
			referenceMeasure = clientQueryObjectManager.getStructuredMember(this.m_baseMeasureName, this.getStorageName(), true);
			if (oFF.notNull(referenceMeasure))
			{
				referenceMeasure.generateTransientObjects(dimensionContext, messageManager);
				referenceMeasure.getTagging().put(oFF.QTransientConstants.TAG_IS_TRANSIENT, "");
				dimensionContext.addMeasure(referenceMeasure);
			}
		}
		if (oFF.notNull(referenceMeasure) && !oFF.CtRateType.isDefined(this.getRateType()))
		{
			this.m_rateTypeInherit = referenceMeasure.getRateType();
		}
		this.applyTransientCurrencyTranslation(context);
	}
};
oFF.QCurrencyMeasure.prototype.applyTransientCurrencyTranslation = function(context)
{
	if (this.getCurrencyTranslationName() === null)
	{
		if (!this.m_localCurrencyTranslation.isParametersComplete())
		{
			throw oFF.XException.createIllegalStateException("Missing parameters for currency translation");
		}
		this.m_transientCurrencyTranslation = true;
		if (!this.m_localCurrency)
		{
			var transientName = oFF.XStringUtils.concatenate5("TRANSIENT", ".", this.getName(), ".", this.m_baseMeasureName);
			this.m_localCurrencyTranslation.setName(transientName);
			var newCurrencyTranslation = context.getQueryModel().getCurrencyTranslationManager().addNewMeasureCurrencyTranslation(this.m_localCurrencyTranslation.getName(), this.m_localCurrencyTranslation.getText());
			newCurrencyTranslation.copyFrom(this.m_localCurrencyTranslation, null);
			this.setCurrencyTranslationName(transientName);
		}
		else
		{
			this.setCurrencyTranslationName(null);
		}
	}
};
oFF.QCurrencyMeasure.prototype.releaseTransientCurrencyTranslation = function(context)
{
	if (this.m_transientCurrencyTranslation)
	{
		if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_localCurrencyTranslation.getName()))
		{
			this.setCurrencyTranslationName(null);
			context.getQueryModel().getCurrencyTranslationManager().removeMeasureCurrencyTranslationByName(this.m_localCurrencyTranslation.getName());
		}
		this.m_transientCurrencyTranslation = false;
	}
};
oFF.QCurrencyMeasure.prototype.exportRuntimeObject = function(context, messageManager)
{
	var ctm = context.getQueryModel().getCurrencyTranslationManager();
	var baseMeasureName = this.m_baseMeasureName;
	if (ctm.isLegacyMeasureCurrencyTranslationAccountModel() && oFF.XStringUtils.isNullOrEmpty(baseMeasureName))
	{
		baseMeasureName = ctm.getCurrencyTranslationCrossCalculation(this.getAliasName());
	}
	if (oFF.XStringUtils.isNotNullAndNotEmpty(baseMeasureName))
	{
		this.stopEventing();
		context.getQueryModel().stopEventing();
		var runtimeObject = null;
		var dimensionContext = this.getDimensionContext(context.getQueryManager());
		if (ctm.isLegacyMeasureCurrencyTranslationAccountModel())
		{
			runtimeObject = dimensionContext.getStructureMemberByAliasOrMember(baseMeasureName);
		}
		else
		{
			var restrictedMeasure = oFF.QRestrictedMeasure._createRestrictedMeasure(context, dimensionContext);
			restrictedMeasure.setName(this.getName());
			restrictedMeasure.setText(this.getText());
			restrictedMeasure.getFilter().addSingleMemberFilterByDimension(dimensionContext, baseMeasureName, oFF.ComparisonOperator.EQUAL);
			restrictedMeasure.copySharableProperties(this, true);
			restrictedMeasure.setSolveOrder(this.getSolveOrder());
			restrictedMeasure.setRateType(this.getRuntimeRateType());
			runtimeObject = restrictedMeasure.exportRuntimeObject(context, messageManager);
		}
		this.resumeEventing();
		context.getQueryModel().resumeEventing();
		return runtimeObject;
	}
	else if (oFF.isNull(baseMeasureName))
	{
		var argList = oFF.XListOfString.create();
		argList.add(oFF.XInteger.convertToString(ctm.getMaxNumberOfTranslations()));
		var measureText = this.getText();
		if (oFF.XStringUtils.isNullOrEmpty(measureText))
		{
			measureText = this.getAliasOrMemberName();
		}
		argList.add(measureText);
		messageManager.addWarning(oFF.ErrorCodes.MAXIMUM_NUMBER_OF_CURRENCY_TRANSLATIONS_EXCEEDED, oFF.ErrorMessages.getText(oFF.ErrorMessages.MAXIMUM_NUMBER_OF_CURRENCY_TRANSLATIONS_EXCEEDED, argList, this.getAliasOrMemberName()));
	}
	return null;
};
oFF.QCurrencyMeasure.prototype.getStorageObjectName = function()
{
	var name = this.getName();
	if (oFF.XString.isEqual(name, oFF.CurrencyConstants.DEFAULT_CURRENCY) || oFF.XString.isEqual(name, oFF.CurrencyConstants.LOCAL_CURRENCY))
	{
		var queryModel = this.getQueryModel();
		if (oFF.notNull(queryModel))
		{
			var datasetId = queryModel.getDatasetId();
			var dimension = this.getDimension();
			if (oFF.notNull(datasetId) && oFF.notNull(dimension) && dimension.supportsCurrencyTranslationMembers())
			{
				name = oFF.XStringUtils.concatenate3(datasetId, "-", name);
			}
		}
	}
	return name;
};

oFF.QVarianceMeasure = function() {};
oFF.QVarianceMeasure.prototype = new oFF.QFormulaMeasure();
oFF.QVarianceMeasure.prototype._ff_c = "QVarianceMeasure";

oFF.QVarianceMeasure._createVarianceMeasure = function(context, structure)
{
	var capabilities = context.getModelCapabilities();
	if (!capabilities.supportsFormulaMeasures() || !capabilities.supportsRestrictedMeasures())
	{
		oFF.noSupport();
	}
	var member = new oFF.QVarianceMeasure();
	member.setupVarianceMeasure(context, structure);
	return member;
};
oFF.QVarianceMeasure.prototype.m_baseMeasure = null;
oFF.QVarianceMeasure.prototype.m_referenceMeasure = null;
oFF.QVarianceMeasure.prototype.m_baseFilter = null;
oFF.QVarianceMeasure.prototype.m_referenceFilter = null;
oFF.QVarianceMeasure.prototype.m_baseExternalDimensionIgnoreList = null;
oFF.QVarianceMeasure.prototype.m_referenceExternalDimensionIgnoreList = null;
oFF.QVarianceMeasure.prototype.m_baseTimeOperation = null;
oFF.QVarianceMeasure.prototype.m_referenceTimeOperation = null;
oFF.QVarianceMeasure.prototype.m_enableFlattenBaseFilter = false;
oFF.QVarianceMeasure.prototype.m_enableFlattenReferenceFilter = false;
oFF.QVarianceMeasure.prototype.m_nullHandlingType = null;
oFF.QVarianceMeasure.prototype.m_calculationType = null;
oFF.QVarianceMeasure.prototype.m_transientBaseMember = null;
oFF.QVarianceMeasure.prototype.m_transientRefMember = null;
oFF.QVarianceMeasure.prototype.m_varianceMeasureCapabilities = null;
oFF.QVarianceMeasure.prototype.setupVarianceMeasure = function(context, structure)
{
	oFF.QFormulaMeasure.prototype.setupStructureMember.call( this , context, structure, oFF.MemberType.VARIANCE);
	this.m_varianceMeasureCapabilities = oFF.QFactory.createCapabilitiesDecorator(this);
	this.m_varianceMeasureCapabilities.setSupportsIntersectLayers(false);
	this.m_varianceMeasureCapabilities.setSupportsVisibilityFilter(false);
	this.m_varianceMeasureCapabilities.setSupportsCellValueOperand(false);
	this.m_varianceMeasureCapabilities.setSupportsComplexFilter(true);
	this.m_varianceMeasureCapabilities.setSupportsComplexTupleFilter(true);
	this.m_baseFilter = oFF.QFactory.createFilterExpression(this, this);
	this.m_referenceFilter = oFF.QFactory.createFilterExpression(this, this);
	this.m_nullHandlingType = oFF.VarianceNullHandlingType.NULL_AS_NULL_REFERENCE_MINUS_BASE;
	this.m_calculationType = oFF.VarianceCalculationType.ABSOLUTE;
};
oFF.QVarianceMeasure.prototype.setParent = function(parent)
{
	oFF.QFormulaMeasure.prototype.setParent.call( this , parent);
	this.m_varianceMeasureCapabilities.updateContext(this);
};
oFF.QVarianceMeasure.prototype.copyFromInternal = function(other, flags)
{
	if (other.getMemberType() !== this.getMemberType())
	{
		return;
	}
	oFF.QFormulaMeasure.prototype.copyFromInternal.call( this , other, flags);
	this.copySharableProperties(other, false);
};
oFF.QVarianceMeasure.prototype.copySharableProperties = function(origin, isShallowCopy)
{
	oFF.QFormulaMeasure.prototype.copySharableProperties.call( this , origin, isShallowCopy);
	var originVarianceMeasure = origin;
	if (isShallowCopy && originVarianceMeasure.getDimension().getDimensionType() !== oFF.DimensionType.ACCOUNT)
	{
		this.m_baseFilter = originVarianceMeasure.m_baseFilter;
		this.m_referenceFilter = originVarianceMeasure.m_referenceFilter;
		this.m_baseExternalDimensionIgnoreList = originVarianceMeasure.m_baseExternalDimensionIgnoreList;
		this.m_referenceExternalDimensionIgnoreList = originVarianceMeasure.m_referenceExternalDimensionIgnoreList;
		this.m_baseTimeOperation = originVarianceMeasure.m_baseTimeOperation;
		this.m_referenceTimeOperation = originVarianceMeasure.m_referenceTimeOperation;
	}
	else
	{
		this.m_baseFilter.copyFrom(originVarianceMeasure.m_baseFilter, null);
		this.m_referenceFilter.copyFrom(originVarianceMeasure.m_referenceFilter, null);
		if (oFF.notNull(originVarianceMeasure.m_baseExternalDimensionIgnoreList))
		{
			this.m_baseExternalDimensionIgnoreList = originVarianceMeasure.m_baseExternalDimensionIgnoreList.createListOfStringCopy();
		}
		if (oFF.notNull(originVarianceMeasure.m_referenceExternalDimensionIgnoreList))
		{
			this.m_referenceExternalDimensionIgnoreList = originVarianceMeasure.m_referenceExternalDimensionIgnoreList.createListOfStringCopy();
		}
		if (oFF.notNull(originVarianceMeasure.m_baseTimeOperation))
		{
			this.m_baseTimeOperation = oFF.QTimeOperation.create(this.getContext(), this);
			this.m_baseTimeOperation.copyFrom(originVarianceMeasure.m_baseTimeOperation, null);
		}
		if (oFF.notNull(originVarianceMeasure.m_referenceTimeOperation))
		{
			this.m_referenceTimeOperation = oFF.QTimeOperation.create(this.getContext(), this);
			this.m_referenceTimeOperation.copyFrom(originVarianceMeasure.m_referenceTimeOperation, null);
		}
	}
	this.m_nullHandlingType = originVarianceMeasure.getNullHandlingType();
	this.m_calculationType = originVarianceMeasure.getCalculationType();
	this.m_baseMeasure = originVarianceMeasure.getBaseMeasure();
	this.m_referenceMeasure = originVarianceMeasure.getReferenceMeasure();
	this.m_enableFlattenBaseFilter = originVarianceMeasure.m_enableFlattenBaseFilter;
	this.m_enableFlattenReferenceFilter = originVarianceMeasure.m_enableFlattenReferenceFilter;
};
oFF.QVarianceMeasure.prototype.releaseObject = function()
{
	this.m_baseFilter = oFF.XObjectExt.release(this.m_baseFilter);
	this.m_referenceFilter = oFF.XObjectExt.release(this.m_referenceFilter);
	this.m_nullHandlingType = null;
	this.m_calculationType = null;
	this.m_baseMeasure = null;
	this.m_referenceMeasure = null;
	this.m_baseExternalDimensionIgnoreList = oFF.XObjectExt.release(this.m_baseExternalDimensionIgnoreList);
	this.m_referenceExternalDimensionIgnoreList = oFF.XObjectExt.release(this.m_referenceExternalDimensionIgnoreList);
	this.m_baseTimeOperation = oFF.XObjectExt.release(this.m_baseTimeOperation);
	this.m_referenceTimeOperation = oFF.XObjectExt.release(this.m_referenceTimeOperation);
	this.m_transientBaseMember = oFF.XObjectExt.release(this.m_transientBaseMember);
	this.m_transientRefMember = oFF.XObjectExt.release(this.m_transientRefMember);
	this.m_varianceMeasureCapabilities = oFF.XObjectExt.release(this.m_varianceMeasureCapabilities);
	this.m_enableFlattenBaseFilter = false;
	this.m_enableFlattenReferenceFilter = false;
	oFF.QFormulaMeasure.prototype.releaseObject.call( this );
};
oFF.QVarianceMeasure.prototype.getFormula = function()
{
	var baseRM = oFF.QFactory.createFormulaMemberWithName(this.getContext(), this.getBaseTransientMeasureName());
	var refRM = oFF.QFactory.createFormulaMemberWithName(this.getContext(), this.getReferenceTransientMeasureName());
	var nullConstant = oFF.QFactory.createFormulaConstant(this.getContext());
	nullConstant.setNullByType(oFF.XValueType.DOUBLE);
	var zeroConstant = oFF.QFactory.createFormulaConstantWithDoubleValue(this.getContext(), 0);
	var differenceFunction = this.generateDifferenceFunction(baseRM, refRM, nullConstant, zeroConstant);
	if (this.m_calculationType === oFF.VarianceCalculationType.PERCENTAGE_DIVIDE_BY_BASE || this.m_calculationType === oFF.VarianceCalculationType.PERCENTAGE_DIVIDE_BY_REFERENCE || this.m_calculationType === oFF.VarianceCalculationType.PERCENTAGE_WITH_ABSOLUTE_BASE_DIVIDE_BY_BASE || this.m_calculationType === oFF.VarianceCalculationType.PERCENTAGE_WITH_ABSOLUTE_BASE_DIVIDE_BY_REFERENCE)
	{
		return this.generatePercentageFunction(baseRM, refRM, zeroConstant, differenceFunction);
	}
	else if (this.m_calculationType === oFF.VarianceCalculationType.ABSOLUTE)
	{
		return differenceFunction;
	}
	else
	{
		throw oFF.XException.createIllegalArgumentException("Unknown variance calculation type.");
	}
};
oFF.QVarianceMeasure.prototype.generatePercentageFunction = function(baseRM, refRM, zeroConstant, differenceFunction)
{
	var percentageFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.DIVISION.getName());
	percentageFunction.add(differenceFunction);
	var divisorFunction;
	if (this.m_calculationType === oFF.VarianceCalculationType.PERCENTAGE_WITH_ABSOLUTE_BASE_DIVIDE_BY_BASE)
	{
		divisorFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.ABS.getName());
		divisorFunction.add(baseRM);
		percentageFunction.add(divisorFunction);
	}
	else if (this.m_calculationType === oFF.VarianceCalculationType.PERCENTAGE_WITH_ABSOLUTE_BASE_DIVIDE_BY_REFERENCE)
	{
		divisorFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.ABS.getName());
		divisorFunction.add(refRM);
		percentageFunction.add(divisorFunction);
	}
	else if (this.m_calculationType === oFF.VarianceCalculationType.PERCENTAGE_DIVIDE_BY_REFERENCE)
	{
		percentageFunction.add(refRM);
	}
	else
	{
		percentageFunction.add(baseRM);
	}
	if (this.m_nullHandlingType === oFF.VarianceNullHandlingType.NULL_AS_ZERO_REFERENCE_MINUS_BASE)
	{
		if (this.getQueryModel().getModelCapabilities().supportsVarianceOperator())
		{
			var nDivPercentageFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.NDIV0.getName());
			nDivPercentageFunction.add(percentageFunction);
			return nDivPercentageFunction;
		}
		var percentageIfFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.IF.getName());
		var percentageIsNullFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.ISNULL.getName());
		percentageIsNullFunction.add(baseRM);
		percentageIfFunction.add(percentageIsNullFunction);
		percentageIfFunction.add(zeroConstant);
		percentageIfFunction.add(percentageFunction);
		return percentageIfFunction;
	}
	return percentageFunction;
};
oFF.QVarianceMeasure.prototype.generateDifferenceFunction = function(baseRM, refRM, nullConstant, zeroConstant)
{
	var differenceFunction;
	if (this.getQueryModel().getModelCapabilities().supportsVarianceOperator())
	{
		if (this.m_nullHandlingType === oFF.VarianceNullHandlingType.NULL_AS_NULL_REFERENCE_MINUS_BASE)
		{
			differenceFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.DELTA.getName());
			differenceFunction.add(refRM);
			differenceFunction.add(baseRM);
		}
		else if (this.m_nullHandlingType === oFF.VarianceNullHandlingType.NULL_AS_ZERO_REFERENCE_MINUS_BASE)
		{
			differenceFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.DIFF_NULL.getName());
			differenceFunction.add(refRM);
			differenceFunction.add(baseRM);
		}
		else if (this.m_nullHandlingType === oFF.VarianceNullHandlingType.NULL_AS_NULL_BASE_MINUS_REFERENCE)
		{
			differenceFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.DELTA.getName());
			differenceFunction.add(baseRM);
			differenceFunction.add(refRM);
		}
		else if (this.m_nullHandlingType === oFF.VarianceNullHandlingType.NULL_AS_ZERO_BASE_MINUS_REFERENCE)
		{
			differenceFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.DIFF_NULL.getName());
			differenceFunction.add(baseRM);
			differenceFunction.add(refRM);
		}
		else
		{
			throw oFF.XException.createIllegalArgumentException("Unknown variance null handler type.");
		}
	}
	else
	{
		differenceFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.SUBTRACTION.getName());
		var baseIfFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.IF.getName());
		var refIfFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.IF.getName());
		var baseIsNullFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.ISNULL.getName());
		baseIsNullFunction.add(baseRM);
		var refIsNullFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.ISNULL.getName());
		refIsNullFunction.add(refRM);
		if (this.m_nullHandlingType === oFF.VarianceNullHandlingType.NULL_AS_NULL_REFERENCE_MINUS_BASE)
		{
			baseIfFunction.add(baseIsNullFunction);
			baseIfFunction.add(nullConstant);
			baseIfFunction.add(refRM);
			refIfFunction.add(refIsNullFunction);
			refIfFunction.add(nullConstant);
			refIfFunction.add(baseRM);
		}
		else if (this.m_nullHandlingType === oFF.VarianceNullHandlingType.NULL_AS_ZERO_REFERENCE_MINUS_BASE)
		{
			baseIfFunction.add(refIsNullFunction);
			baseIfFunction.add(zeroConstant);
			baseIfFunction.add(refRM);
			refIfFunction.add(baseIsNullFunction);
			refIfFunction.add(zeroConstant);
			refIfFunction.add(baseRM);
		}
		else if (this.m_nullHandlingType === oFF.VarianceNullHandlingType.NULL_AS_NULL_BASE_MINUS_REFERENCE)
		{
			baseIfFunction.add(refIsNullFunction);
			baseIfFunction.add(nullConstant);
			baseIfFunction.add(baseRM);
			refIfFunction.add(baseIsNullFunction);
			refIfFunction.add(nullConstant);
			refIfFunction.add(refRM);
		}
		else if (this.m_nullHandlingType === oFF.VarianceNullHandlingType.NULL_AS_ZERO_BASE_MINUS_REFERENCE)
		{
			baseIfFunction.add(baseIsNullFunction);
			baseIfFunction.add(zeroConstant);
			baseIfFunction.add(baseRM);
			refIfFunction.add(refIsNullFunction);
			refIfFunction.add(zeroConstant);
			refIfFunction.add(refRM);
		}
		else
		{
			throw oFF.XException.createIllegalArgumentException("Unknown variance null handler type.");
		}
		differenceFunction.add(baseIfFunction);
		differenceFunction.add(refIfFunction);
		if (this.m_nullHandlingType === oFF.VarianceNullHandlingType.NULL_AS_NULL_BASE_MINUS_REFERENCE || this.m_nullHandlingType === oFF.VarianceNullHandlingType.NULL_AS_ZERO_BASE_MINUS_REFERENCE)
		{
			var differenceFromIsNullFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.AND.getName());
			differenceFromIsNullFunction.add(baseIsNullFunction);
			differenceFromIsNullFunction.add(refIsNullFunction);
			var isNullFunction = oFF.QFactory.createFormulaFunctionWithName(this.getContext(), oFF.FormulaOperator.IF.getName());
			isNullFunction.add(differenceFromIsNullFunction);
			isNullFunction.add(nullConstant);
			isNullFunction.add(differenceFunction);
			differenceFunction = isNullFunction;
		}
	}
	return differenceFunction;
};
oFF.QVarianceMeasure.prototype.getBaseTransientMeasureName = function()
{
	if (oFF.notNull(this.m_transientBaseMember))
	{
		return this.m_transientBaseMember.getAliasOrMemberName();
	}
	else if (!oFF.QFilterUtil.isFilterNullOrEmpty(this.m_baseFilter) || oFF.notNull(this.m_baseTimeOperation) && this.m_baseTimeOperation.needsTransientTimeSelection())
	{
		return oFF.XStringUtils.concatenate2(this.getAliasOrMemberName(), "_A");
	}
	return this.m_baseMeasure;
};
oFF.QVarianceMeasure.prototype.getReferenceTransientMeasureName = function()
{
	if (oFF.notNull(this.m_transientRefMember))
	{
		return this.m_transientRefMember.getAliasOrMemberName();
	}
	else if (!oFF.QFilterUtil.isFilterNullOrEmpty(this.m_referenceFilter) || oFF.notNull(this.m_referenceTimeOperation) && this.m_referenceTimeOperation.needsTransientTimeSelection())
	{
		return oFF.XStringUtils.concatenate2(this.getAliasOrMemberName(), "_B");
	}
	return this.m_referenceMeasure;
};
oFF.QVarianceMeasure.prototype.generateTransientStructureMember = function(timeOperation, filter, transientMeasureName, externalDimensionIgnoreList, measureName, enableFlattenFilter, dimensionContext)
{
	if (!oFF.QFilterUtil.isFilterNullOrEmpty(filter) || oFF.notNull(timeOperation) && timeOperation.needsTransientTimeSelection())
	{
		var restrictedMeasure = oFF.QRestrictedMeasure._createRestrictedMeasure(this.getContext(), dimensionContext);
		if (dimensionContext.getPlaceholderIds().size() > 0)
		{
			restrictedMeasure.setAliasName(transientMeasureName);
		}
		else
		{
			restrictedMeasure.setName(transientMeasureName);
		}
		if (filter.getFilterRootElement() !== null)
		{
			restrictedMeasure.getFilter().copyFrom(filter, null);
		}
		if (oFF.notNull(timeOperation))
		{
			restrictedMeasure.setTimeOperation(timeOperation.getDimensionName(), timeOperation.getFunction(), timeOperation.getGranularity(), timeOperation.getPeriod());
			restrictedMeasure.getTimeOperation().copyFrom(timeOperation, null);
		}
		restrictedMeasure.getFilter().addSingleMemberFilterByDimension(dimensionContext, measureName, oFF.ComparisonOperator.EQUAL);
		restrictedMeasure.setResultVisibility(oFF.ResultVisibility.HIDDEN);
		if (this.getNumericScale() !== null)
		{
			restrictedMeasure.setNumericScale(this.getNumericScale().getInteger());
		}
		if (oFF.notNull(externalDimensionIgnoreList))
		{
			for (var idxIgnore = 0; idxIgnore < externalDimensionIgnoreList.size(); idxIgnore++)
			{
				restrictedMeasure.addExternalDimensionToIgnore(externalDimensionIgnoreList.get(idxIgnore));
			}
		}
		restrictedMeasure.setFlattenSelection(enableFlattenFilter);
		return restrictedMeasure;
	}
	return null;
};
oFF.QVarianceMeasure.prototype.getBaseFilter = function()
{
	return this.m_baseFilter;
};
oFF.QVarianceMeasure.prototype.getReferenceFilter = function()
{
	return this.m_referenceFilter;
};
oFF.QVarianceMeasure.prototype.getModelCapabilities = function()
{
	return this.m_varianceMeasureCapabilities;
};
oFF.QVarianceMeasure.prototype.setNullHandlingType = function(type)
{
	this.m_nullHandlingType = type;
	this.notifyNodeChanged();
};
oFF.QVarianceMeasure.prototype.getNullHandlingType = function()
{
	return this.m_nullHandlingType;
};
oFF.QVarianceMeasure.prototype.setCalculationType = function(type)
{
	this.m_calculationType = type;
	this.notifyNodeChanged();
};
oFF.QVarianceMeasure.prototype.getCalculationType = function()
{
	return this.m_calculationType;
};
oFF.QVarianceMeasure.prototype.getBaseMeasure = function()
{
	return this.m_baseMeasure;
};
oFF.QVarianceMeasure.prototype.getReferenceMeasure = function()
{
	return this.m_referenceMeasure;
};
oFF.QVarianceMeasure.prototype.setBaseMeasure = function(measureName)
{
	this.m_baseMeasure = measureName;
	this.notifyNodeChanged();
};
oFF.QVarianceMeasure.prototype.setReferenceMeasure = function(measureName)
{
	this.m_referenceMeasure = measureName;
	this.notifyNodeChanged();
};
oFF.QVarianceMeasure.prototype.addBaseExternalDimensionToIgnore = function(externalDimensionName)
{
	if (!this.getModelCapabilities().supportsIgnoreExternalDimensions())
	{
		oFF.noSupport();
	}
	if (oFF.isNull(this.m_baseExternalDimensionIgnoreList))
	{
		this.m_baseExternalDimensionIgnoreList = oFF.XListOfString.create();
	}
	if (!this.m_baseExternalDimensionIgnoreList.contains(externalDimensionName))
	{
		this.m_baseExternalDimensionIgnoreList.add(externalDimensionName);
		this.notifyNodeChanged();
	}
};
oFF.QVarianceMeasure.prototype.addReferenceExternalDimensionToIgnore = function(externalDimensionName)
{
	if (!this.getModelCapabilities().supportsIgnoreExternalDimensions())
	{
		oFF.noSupport();
	}
	if (oFF.isNull(this.m_referenceExternalDimensionIgnoreList))
	{
		this.m_referenceExternalDimensionIgnoreList = oFF.XListOfString.create();
	}
	if (!this.m_referenceExternalDimensionIgnoreList.contains(externalDimensionName))
	{
		this.m_referenceExternalDimensionIgnoreList.add(externalDimensionName);
		this.notifyNodeChanged();
	}
};
oFF.QVarianceMeasure.prototype.getBaseIgnoredExternalDimensions = function()
{
	if (oFF.isNull(this.m_baseExternalDimensionIgnoreList))
	{
		return oFF.XListOfString.create();
	}
	return this.m_baseExternalDimensionIgnoreList;
};
oFF.QVarianceMeasure.prototype.getReferenceIgnoredExternalDimensions = function()
{
	if (oFF.isNull(this.m_referenceExternalDimensionIgnoreList))
	{
		return oFF.XListOfString.create();
	}
	return this.m_referenceExternalDimensionIgnoreList;
};
oFF.QVarianceMeasure.prototype.clearBaseIgnoredExternalDimensions = function()
{
	if (oFF.notNull(this.m_baseExternalDimensionIgnoreList))
	{
		this.m_baseExternalDimensionIgnoreList.clear();
	}
	this.notifyNodeChanged();
};
oFF.QVarianceMeasure.prototype.clearReferenceIgnoredExternalDimensions = function()
{
	if (oFF.notNull(this.m_referenceExternalDimensionIgnoreList))
	{
		this.m_referenceExternalDimensionIgnoreList.clear();
	}
	this.notifyNodeChanged();
};
oFF.QVarianceMeasure.prototype.generateTransientObjectIfCurrentDate = function(context, messageManager, measureMember)
{
	if (oFF.notNull(measureMember) && measureMember.getMemberType() === oFF.MemberType.RESTRICTED_MEASURE)
	{
		var restrictedMeasure = measureMember;
		if (restrictedMeasure.getTimeOperation() !== null && restrictedMeasure.getTimeOperation().getFunction() === oFF.QTimeOperationFunction.CURRENT_DATE)
		{
			return restrictedMeasure.exportRuntimeObject(context, messageManager);
		}
		return restrictedMeasure;
	}
	return null;
};
oFF.QVarianceMeasure.prototype.generateTransientTimeOperationMeasures = function(context, messageManager, restrictedMeasureToGenerate, dependentRestrictedMeasure)
{
	if (oFF.isNull(restrictedMeasureToGenerate))
	{
		return true;
	}
	var isDependentRMStaticOrCurrentDate = oFF.notNull(dependentRestrictedMeasure) && (dependentRestrictedMeasure.getTimeOperation() === null || dependentRestrictedMeasure.getTimeOperation() !== null && dependentRestrictedMeasure.getTimeOperation().getFunction() === oFF.QTimeOperationFunction.CURRENT_DATE);
	if (restrictedMeasureToGenerate.getTimeOperation() !== null && isDependentRMStaticOrCurrentDate)
	{
		restrictedMeasureToGenerate.getTimeOperation().setFilterElementContext(dependentRestrictedMeasure.getFilterRootWithTransientTimeSelection());
	}
	var exportRuntimeObject = restrictedMeasureToGenerate.exportRuntimeObject(context, messageManager);
	if (oFF.notNull(exportRuntimeObject))
	{
		restrictedMeasureToGenerate.setTransientTimeSelection(exportRuntimeObject.getTransientTimeSelection());
	}
	return oFF.notNull(exportRuntimeObject);
};
oFF.QVarianceMeasure.prototype.generateAndValidateTransientTimeOperationMeasures = function(context, baseMeasure, refMeasure, messageManager)
{
	var transientMessageManager = oFF.MessageManager.createMessageManagerExt(this.getSession());
	var baseRestrictedMeasure = this.generateTransientObjectIfCurrentDate(context, transientMessageManager, baseMeasure);
	var refRestrictedMeasure = this.generateTransientObjectIfCurrentDate(context, transientMessageManager, refMeasure);
	var isBaseMeasureValid = this.generateTransientTimeOperationMeasures(context, transientMessageManager, baseRestrictedMeasure, refRestrictedMeasure);
	var isReferenceMeasureValid = this.generateTransientTimeOperationMeasures(context, transientMessageManager, refRestrictedMeasure, baseRestrictedMeasure);
	var isVarianceValid = isBaseMeasureValid && isReferenceMeasureValid;
	var messageIterator = transientMessageManager.getMessages().getIterator();
	while (messageIterator.hasNext())
	{
		var message = messageIterator.next();
		var errorCode = message.getCode();
		var text = message.getText();
		text = oFF.XString.replace(text, oFF.XStringUtils.concatenate3("\"measure\":\"", this.getBaseTransientMeasureName(), "\""), oFF.XStringUtils.concatenate3("\"measure\":\"", this.getAliasOrMemberName(), "\""));
		text = oFF.XString.replace(text, oFF.XStringUtils.concatenate3("\"measure\":\"", this.getReferenceTransientMeasureName(), "\""), oFF.XStringUtils.concatenate3("\"measure\":\"", this.getAliasOrMemberName(), "\""));
		text = oFF.XString.replace(text, oFF.XStringUtils.concatenate3("\"", this.getBaseTransientMeasureName(), "\""), oFF.XStringUtils.concatenate3("\"", this.getText(), "\""));
		text = oFF.XString.replace(text, oFF.XStringUtils.concatenate3("\"", this.getReferenceTransientMeasureName(), "\""), oFF.XStringUtils.concatenate3("\"", this.getText(), "\""));
		message.setText(text);
		messageManager.addMessage(oFF.XMessage.createMessage(oFF.OriginLayer.APPLICATION, message.getSeverity(), errorCode, text, null, true, null));
		if (!isVarianceValid)
		{
			this.m_validationErrorCodes.add(oFF.XIntegerValue.create(errorCode));
		}
	}
	return isVarianceValid;
};
oFF.QVarianceMeasure.prototype.validateTimeOperation = function(context, messageManager)
{
	var dimensionContext;
	if (this.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(this) !== null)
	{
		dimensionContext = this.getDimensionContext(context.getQueryManager());
	}
	else
	{
		dimensionContext = this.getDimension();
	}
	var baseMeasure = this.generateTransientStructureMember(this.m_baseTimeOperation, this.m_baseFilter, this.getBaseTransientMeasureName(), this.m_baseExternalDimensionIgnoreList, this.m_baseMeasure, this.m_enableFlattenBaseFilter, dimensionContext);
	var refMeasure = this.generateTransientStructureMember(this.m_referenceTimeOperation, this.m_referenceFilter, this.getReferenceTransientMeasureName(), this.m_referenceExternalDimensionIgnoreList, this.m_referenceMeasure, this.m_enableFlattenReferenceFilter, dimensionContext);
	return this.generateAndValidateTransientTimeOperationMeasures(context.getQueryModel(), baseMeasure, refMeasure, messageManager);
};
oFF.QVarianceMeasure.prototype.getTopLevelDependentMemberNames = function(context)
{
	var memberNames = oFF.XHashSetOfString.create();
	if (oFF.notNull(this.m_baseMeasure))
	{
		memberNames.add(this.m_baseMeasure);
	}
	if (oFF.notNull(this.m_referenceMeasure))
	{
		memberNames.add(this.m_referenceMeasure);
	}
	return memberNames.getValuesAsReadOnlyListOfString();
};
oFF.QVarianceMeasure.prototype.getTopLevelDependentFieldNames = function(context)
{
	var usedFields = oFF.XHashSetOfString.create();
	usedFields.addAll(oFF.QFormulaMeasure.prototype.getTopLevelDependentFieldNames.call( this , context));
	this.addFieldNamesUsedInFilters(this.m_baseFilter, this.m_baseTimeOperation, context, usedFields);
	this.addFieldNamesUsedInFilters(this.m_referenceFilter, this.m_referenceTimeOperation, context, usedFields);
	return usedFields.getValuesAsReadOnlyListOfString();
};
oFF.QVarianceMeasure.prototype.addFieldNamesUsedInFilters = function(filter, timeOperation, context, usedFields)
{
	if (oFF.notNull(filter))
	{
		var cartesianProduct = filter.getCartesianProduct();
		var complexSelectionRoot = filter.getComplexRoot();
		if (oFF.notNull(cartesianProduct))
		{
			var sizeCp = cartesianProduct.size();
			for (var i = 0; i < sizeCp; i++)
			{
				usedFields.add(cartesianProduct.getCartesianChild(i).getFieldMetadata().getName());
			}
		}
		else if (oFF.notNull(complexSelectionRoot))
		{
			this.addFieldsUsedInComplexContainer(complexSelectionRoot, usedFields);
		}
	}
	if (oFF.notNull(timeOperation))
	{
		var dimension = context.getQueryModel().getDimensionByName(timeOperation.getDimensionName());
		if (oFF.notNull(dimension))
		{
			usedFields.add(dimension.getKeyField().getName());
		}
	}
};
oFF.QVarianceMeasure.prototype.generateTransientObjects = function(context, messageManager)
{
	oFF.QFormulaMeasure.prototype.generateTransientObjects.call( this , context, messageManager);
	var dimensionContext;
	if (this.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(this) !== null)
	{
		dimensionContext = this.getDimensionContext(context.getQueryManager());
	}
	else
	{
		dimensionContext = this.getDimension();
	}
	var baseMeasure = this.generateTransientStructureMember(this.m_baseTimeOperation, this.m_baseFilter, this.getBaseTransientMeasureName(), this.m_baseExternalDimensionIgnoreList, this.m_baseMeasure, this.m_enableFlattenBaseFilter, dimensionContext);
	var refMeasure = this.generateTransientStructureMember(this.m_referenceTimeOperation, this.m_referenceFilter, this.getReferenceTransientMeasureName(), this.m_referenceExternalDimensionIgnoreList, this.m_referenceMeasure, this.m_enableFlattenReferenceFilter, dimensionContext);
	if (!this.generateAndValidateTransientTimeOperationMeasures(context, baseMeasure, refMeasure, messageManager))
	{
		return;
	}
	if (oFF.notNull(baseMeasure) && baseMeasure.getMemberType() === oFF.MemberType.RESTRICTED_MEASURE && dimensionContext.getStructureMember(baseMeasure.getName()) === null)
	{
		if (baseMeasure.getAliasName() !== null && dimensionContext.getFreePlaceholderIds().size() === 0)
		{
			messageManager.addError(oFF.ErrorCodes.FREE_PLACEHOLDER_NOT_FOUND, oFF.ErrorMessages.FREE_PLACEHOLDER_NOT_FOUND);
			return;
		}
		baseMeasure.generateTransientObjects(context, messageManager);
		this.m_transientBaseMember = baseMeasure;
		dimensionContext.addMeasure(baseMeasure);
	}
	if (oFF.notNull(refMeasure) && refMeasure.getMemberType() === oFF.MemberType.RESTRICTED_MEASURE && dimensionContext.getStructureMember(refMeasure.getName()) === null)
	{
		if (refMeasure.getAliasName() !== null && dimensionContext.getFreePlaceholderIds().size() === 0)
		{
			messageManager.addError(oFF.ErrorCodes.FREE_PLACEHOLDER_NOT_FOUND, oFF.ErrorMessages.FREE_PLACEHOLDER_NOT_FOUND);
			return;
		}
		refMeasure.generateTransientObjects(context, messageManager);
		this.m_transientRefMember = refMeasure;
		dimensionContext.addMeasure(refMeasure);
	}
};
oFF.QVarianceMeasure.prototype.destroyTransientObjects = function(context)
{
	oFF.QFormulaMeasure.prototype.destroyTransientObjects.call( this , context);
	var dimensionContext;
	if (this.getOlapEnv().getClientQueryObjectManager().getClientQueryObjectByKeyRef(this) !== null)
	{
		dimensionContext = this.getDimensionContext(context.getQueryManager());
	}
	else
	{
		dimensionContext = this.getDimension();
	}
	if (oFF.notNull(this.m_transientBaseMember))
	{
		dimensionContext.removeMeasure(this.m_transientBaseMember.getName());
		this.m_transientBaseMember.destroyTransientObjects(context);
		this.m_transientBaseMember = oFF.XObjectExt.release(this.m_transientBaseMember);
	}
	if (oFF.notNull(this.m_transientRefMember))
	{
		dimensionContext.removeMeasure(this.m_transientRefMember.getName());
		this.m_transientRefMember.destroyTransientObjects(context);
		this.m_transientRefMember = oFF.XObjectExt.release(this.m_transientRefMember);
	}
};
oFF.QVarianceMeasure.prototype.getBaseTimeOperation = function()
{
	return this.m_baseTimeOperation;
};
oFF.QVarianceMeasure.prototype.getReferenceTimeOperation = function()
{
	return this.m_referenceTimeOperation;
};
oFF.QVarianceMeasure.prototype.setBaseTimeOperation = function(dimensionName, timeFunction, granularity, period)
{
	if (oFF.isNull(this.m_baseTimeOperation))
	{
		this.m_baseTimeOperation = oFF.QTimeOperation.create(this.getContext(), this);
	}
	this.m_baseTimeOperation.setDimensionName(dimensionName);
	this.m_baseTimeOperation.setFunction(timeFunction);
	this.m_baseTimeOperation.setGranularity(granularity);
	this.m_baseTimeOperation.setPeriod(period);
};
oFF.QVarianceMeasure.prototype.setReferenceTimeOperation = function(dimensionName, timeFunction, granularity, period)
{
	if (oFF.isNull(this.m_referenceTimeOperation))
	{
		this.m_referenceTimeOperation = oFF.QTimeOperation.create(this.getContext(), this);
	}
	this.m_referenceTimeOperation.setDimensionName(dimensionName);
	this.m_referenceTimeOperation.setFunction(timeFunction);
	this.m_referenceTimeOperation.setGranularity(granularity);
	this.m_referenceTimeOperation.setPeriod(period);
};
oFF.QVarianceMeasure.prototype.clearBaseTimeOperation = function()
{
	this.m_baseTimeOperation = oFF.XObjectExt.release(this.m_baseTimeOperation);
	this.notifyNodeChanged();
};
oFF.QVarianceMeasure.prototype.clearReferenceTimeOperation = function()
{
	this.m_referenceTimeOperation = oFF.XObjectExt.release(this.m_referenceTimeOperation);
	this.notifyNodeChanged();
};
oFF.QVarianceMeasure.prototype.isFlattenBaseFilter = function()
{
	return this.m_enableFlattenBaseFilter;
};
oFF.QVarianceMeasure.prototype.setFlattenBaseFilter = function(flattenBaseFilter)
{
	if (flattenBaseFilter !== this.m_enableFlattenBaseFilter)
	{
		this.m_enableFlattenBaseFilter = flattenBaseFilter;
		this.notifyPropertyBooleanChanged(oFF.QMeasureProperties.QY_FLATTEN_BASE_FILTER, !flattenBaseFilter, flattenBaseFilter);
	}
};
oFF.QVarianceMeasure.prototype.isFlattenReferenceFilter = function()
{
	return this.m_enableFlattenReferenceFilter;
};
oFF.QVarianceMeasure.prototype.setFlattenReferenceFilter = function(flattenReferenceFilter)
{
	if (this.m_enableFlattenReferenceFilter !== flattenReferenceFilter)
	{
		this.m_enableFlattenReferenceFilter = flattenReferenceFilter;
		this.notifyPropertyBooleanChanged(oFF.QMeasureProperties.QY_FLATTEN_REFERENCE_FILTER, !flattenReferenceFilter, flattenReferenceFilter);
	}
};
oFF.QVarianceMeasure.prototype.isVersionAggregated = function(context)
{
	var isVersionAggregated = oFF.QFormulaMeasure.prototype.isVersionAggregated.call( this , context);
	if (!isVersionAggregated)
	{
		var versionDimension = context.getQueryModel().getDimensionByType(oFF.DimensionType.VERSION);
		if (oFF.notNull(versionDimension))
		{
			var baseCartesianList = this.getBaseFilter().getCartesianListByField(versionDimension.getKeyField());
			var refCartesianList = this.getReferenceFilter().getCartesianListByField(versionDimension.getKeyField());
			isVersionAggregated = oFF.QFilterUtil.isSingleValueFilterCartesianList(baseCartesianList) && oFF.QFilterUtil.isSingleValueFilterCartesianList(refCartesianList);
		}
	}
	return isVersionAggregated;
};
oFF.QVarianceMeasure.prototype.validateWithQueryModelScope = function(context)
{
	var validationResult = oFF.QFormulaMeasure.prototype.validateWithQueryModelScope.call( this , context);
	this.validateTimeOperation(context, validationResult);
	return validationResult;
};

oFF.QSimpleTypeVariable = function() {};
oFF.QSimpleTypeVariable.prototype = new oFF.QVariable();
oFF.QSimpleTypeVariable.prototype._ff_c = "QSimpleTypeVariable";

oFF.QSimpleTypeVariable.createSimpleTypeVariable = function(context, parent, valueType, name, description, supportsMultipleValues)
{
	var variable = new oFF.QSimpleTypeVariable();
	variable.setupSimpleTypeVariable(context, parent, oFF.VariableType.SIMPLE_TYPE_VARIABLE, valueType, name, description, supportsMultipleValues);
	return variable;
};
oFF.QSimpleTypeVariable.createTextVariable = function(context, parent, name, description, supportsMultipleValues)
{
	var variable = new oFF.QSimpleTypeVariable();
	variable.setupSimpleTypeVariable(context, parent, oFF.VariableType.TEXT_VARIABLE, oFF.XValueType.STRING, name, description, supportsMultipleValues);
	return variable;
};
oFF.QSimpleTypeVariable.createFormulaVariable = function(context, parent, name, description, supportsMultipleValues)
{
	var variable = new oFF.QSimpleTypeVariable();
	variable.setupSimpleTypeVariable(context, parent, oFF.VariableType.FORMULA_VARIABLE, oFF.XValueType.DOUBLE, name, description, supportsMultipleValues);
	return variable;
};
oFF.QSimpleTypeVariable.createOptionListVariable = function(context, parent, name, description, supportsMultipleValues)
{
	var variable = new oFF.QSimpleTypeVariable();
	variable.setupSimpleTypeVariable(context, parent, oFF.VariableType.OPTION_LIST_VARIABLE, oFF.XValueType.STRING, name, description, supportsMultipleValues);
	return variable;
};
oFF.QSimpleTypeVariable.createHierarchyVariable = function(context, parent, name, description, supportsMultipleValues)
{
	var variable = new oFF.QSimpleTypeVariable();
	variable.setupSimpleTypeVariable(context, parent, oFF.VariableType.HIERARCHY_VARIABLE, oFF.XValueType.STRING, name, description, supportsMultipleValues);
	return variable;
};
oFF.QSimpleTypeVariable.prototype.m_variableType = null;
oFF.QSimpleTypeVariable.prototype.m_valuesList = null;
oFF.QSimpleTypeVariable.prototype.m_supportsMultipleValues = false;
oFF.QSimpleTypeVariable.prototype.m_scale = 0;
oFF.QSimpleTypeVariable.prototype.m_length = 0;
oFF.QSimpleTypeVariable.prototype.m_options = null;
oFF.QSimpleTypeVariable.prototype.setupSimpleTypeVariable = function(context, parent, variableType, valueType, name, description, supportsMultipleValues)
{
	this.setupVariable(context, parent, valueType, name, description);
	this.m_valuesList = oFF.XList.create();
	this.m_options = oFF.XListOfNameObject.create();
	this.m_variableType = variableType;
	this.m_supportsMultipleValues = supportsMultipleValues;
};
oFF.QSimpleTypeVariable.prototype.releaseObject = function()
{
	this.m_valuesList = oFF.XObjectExt.release(this.m_valuesList);
	this.m_options = oFF.XObjectExt.release(this.m_options);
	this.m_variableType = null;
	oFF.QVariable.prototype.releaseObject.call( this );
};
oFF.QSimpleTypeVariable.prototype.copyFromInternal = function(other, flags)
{
	oFF.QVariable.prototype.copyFromInternal.call( this , other, flags);
	var originSimpleTypeVariable = other;
	oFF.XCollectionUtils.addAllClones(this.m_valuesList, originSimpleTypeVariable.m_valuesList);
	var context = this.getContext();
	var size = originSimpleTypeVariable.m_options.size();
	for (var i = 0; i < size; i++)
	{
		var option = originSimpleTypeVariable.m_options.get(i);
		this.m_options.add(oFF.QOptionListElement.createOptionListElement(context, this, option.getName(), option.getText()));
	}
	this.m_scale = originSimpleTypeVariable.m_scale;
	this.m_length = originSimpleTypeVariable.m_length;
	this.m_supportsMultipleValues = originSimpleTypeVariable.m_supportsMultipleValues;
};
oFF.QSimpleTypeVariable.prototype.getVariableType = function()
{
	return this.m_variableType;
};
oFF.QSimpleTypeVariable.prototype.setValueAsClone = function(value)
{
	if (oFF.isNull(value))
	{
		this.setValue(value);
	}
	else
	{
		var clone = value.clone();
		this.setValue(clone);
		if (this.getValue() !== clone)
		{
			oFF.XObjectExt.release(clone);
		}
	}
};
oFF.QSimpleTypeVariable.prototype.setValue = function(value)
{
	if (oFF.isNull(value))
	{
		if (!this.m_valuesList.isEmpty())
		{
			this.clearValueList();
			this.notifyNodeChanged();
		}
	}
	else if (!value.isEqualTo(this.getValue()))
	{
		this.clearValueList();
		this.m_valuesList.add(value);
		this.notifyNodeChanged();
	}
	else if (this.m_valuesList.size() > 1)
	{
		for (var i = this.m_valuesList.size() - 1; i >= 1; i--)
		{
			oFF.XObjectExt.release(this.m_valuesList.removeAt(i));
		}
		this.notifyNodeChanged();
	}
};
oFF.QSimpleTypeVariable.prototype.hasValue = function()
{
	return this.m_valuesList.hasElements();
};
oFF.QSimpleTypeVariable.prototype.getValueScale = function()
{
	return this.m_scale;
};
oFF.QSimpleTypeVariable.prototype.setValueScale = function(scale)
{
	this.m_scale = scale;
};
oFF.QSimpleTypeVariable.prototype.getValueLength = function()
{
	return this.m_length;
};
oFF.QSimpleTypeVariable.prototype.setValueLength = function(length)
{
	this.m_length = length;
};
oFF.QSimpleTypeVariable.prototype.setString = function(value)
{
	if (this.getValueType() !== oFF.XValueType.STRING && this.getValueType() !== oFF.XValueType.KEY_VALUE)
	{
		oFF.noSupport();
	}
	this.setValue(oFF.XStringValue.create(value));
};
oFF.QSimpleTypeVariable.prototype.setInteger = function(value)
{
	this.setValue(oFF.XIntegerValue.create(value));
};
oFF.QSimpleTypeVariable.prototype.setLong = function(value)
{
	this.setValue(oFF.XLongValue.create(value));
};
oFF.QSimpleTypeVariable.prototype.setDouble = function(value)
{
	if (this.getValueType() !== oFF.XValueType.DOUBLE && this.getValueType() !== oFF.XValueType.DECIMAL_FLOAT)
	{
		oFF.noSupport();
	}
	this.setValue(oFF.XDoubleValue.create(value));
};
oFF.QSimpleTypeVariable.prototype.setDecFloat = function(value)
{
	this.setValue(value);
};
oFF.QSimpleTypeVariable.prototype.setDate = function(value)
{
	this.assertValueType(value, oFF.XValueType.DATE);
	this.setValueAsClone(value);
};
oFF.QSimpleTypeVariable.prototype.getString = function()
{
	return oFF.XValueUtil.getString(this.getValue());
};
oFF.QSimpleTypeVariable.prototype.getInteger = function()
{
	return oFF.XValueUtil.getInteger(this.getValue(), false, false);
};
oFF.QSimpleTypeVariable.prototype.getLong = function()
{
	return oFF.XValueUtil.getLong(this.getValue(), false, false);
};
oFF.QSimpleTypeVariable.prototype.getDouble = function()
{
	return oFF.XValueUtil.getDouble(this.getValue(), false, false);
};
oFF.QSimpleTypeVariable.prototype.getDecFloat = function()
{
	return oFF.XValueUtil.getDecFloat(this.getValue(), false, false);
};
oFF.QSimpleTypeVariable.prototype.getDate = function()
{
	var value = this.getValue();
	if (oFF.isNull(value))
	{
		return null;
	}
	this.assertValueType(value, oFF.XValueType.DATE);
	return value.clone();
};
oFF.QSimpleTypeVariable.prototype.setValueByStringExt = function(value, isManualInput)
{
	if (this.m_variableType.isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE))
	{
		this.setOptionByName(value);
	}
	else
	{
		var valueType = this.getValueType();
		this.setValue(oFF.XStringUtils.isNullOrEmpty(value) && valueType !== oFF.XValueType.STRING ? oFF.XValueAccess.createWithType(valueType).getValue() : this.getXValue(value));
	}
};
oFF.QSimpleTypeVariable.prototype.addValueByString = function(value)
{
	if (this.m_variableType.isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE))
	{
		this.addOptionByName(value);
	}
	else
	{
		var valueType = this.getValueType();
		var xValue = oFF.XStringUtils.isNullOrEmpty(value) && valueType !== oFF.XValueType.STRING ? oFF.XValueAccess.createWithType(valueType).getValue() : this.getXValue(value);
		if (oFF.notNull(xValue))
		{
			this.addInternal(xValue);
		}
	}
};
oFF.QSimpleTypeVariable.prototype.getXValue = function(value)
{
	return oFF.XValueUtil.getValueFromString(value, this.getValueType());
};
oFF.QSimpleTypeVariable.prototype.getValueByString = function()
{
	var buffer = oFF.XStringBuffer.create();
	if (!oFF.XCollectionUtils.hasElements(this.m_valuesList))
	{
		buffer.append("null");
	}
	else
	{
		for (var i = 0; i < this.m_valuesList.size(); i++)
		{
			if (i > 0)
			{
				buffer.append(",");
			}
			var currentValue = this.m_valuesList.get(i);
			buffer.append(oFF.isNull(currentValue) ? "null" : currentValue.getStringRepresentation());
		}
	}
	return buffer.toString();
};
oFF.QSimpleTypeVariable.prototype.addDouble = function(value)
{
	if (this.getValueType() === oFF.XValueType.DOUBLE)
	{
		this.addInternal(oFF.XDoubleValue.create(value));
	}
	else if (this.getValueType() === oFF.XValueType.DECIMAL_FLOAT)
	{
		this.addInternal(oFF.XDecFloatByDouble.create(value));
	}
	else
	{
		oFF.noSupport();
	}
};
oFF.QSimpleTypeVariable.prototype.addInternal = function(value)
{
	if (oFF.isNull(value))
	{
		return;
	}
	if (!this.m_valuesList.contains(value))
	{
		this.m_valuesList.add(value);
		this.notifyNodeChanged();
	}
};
oFF.QSimpleTypeVariable.prototype.addString = function(value)
{
	this.addInternal(oFF.XStringValue.create(value));
};
oFF.QSimpleTypeVariable.prototype.addInteger = function(value)
{
	this.addInternal(oFF.XIntegerValue.create(value));
};
oFF.QSimpleTypeVariable.prototype.addLong = function(value)
{
	this.addInternal(oFF.XLongValue.create(value));
};
oFF.QSimpleTypeVariable.prototype.addDate = function(value)
{
	this.assertValueType(value, oFF.XValueType.DATE);
	this.addInternal(value);
};
oFF.QSimpleTypeVariable.prototype.addBoolean = function(value)
{
	this.addInternal(oFF.XBooleanValue.create(value));
};
oFF.QSimpleTypeVariable.prototype.clear = function()
{
	this.setValue(null);
};
oFF.QSimpleTypeVariable.prototype.isEmpty = function()
{
	return this.m_valuesList.isEmpty();
};
oFF.QSimpleTypeVariable.prototype.getValues = function()
{
	return this.m_valuesList.getValuesAsReadOnlyList();
};
oFF.QSimpleTypeVariable.prototype.useMultipleValues = function(use) {};
oFF.QSimpleTypeVariable.prototype.isUsingMultipleValues = function()
{
	return this.m_valuesList.size() > 1;
};
oFF.QSimpleTypeVariable.prototype.supportsMultipleValues = function()
{
	return this.m_supportsMultipleValues;
};
oFF.QSimpleTypeVariable.prototype.setDateTime = function(value)
{
	this.assertValueType(value, oFF.XValueType.DATE_TIME);
	this.setValueAsClone(value);
};
oFF.QSimpleTypeVariable.prototype.getValue = function()
{
	if (this.m_valuesList.isEmpty())
	{
		return null;
	}
	return this.m_valuesList.get(0);
};
oFF.QSimpleTypeVariable.prototype.getDateTime = function()
{
	var value = this.getValue();
	if (oFF.isNull(value))
	{
		return null;
	}
	this.assertValueType(value, oFF.XValueType.DATE_TIME);
	return value.clone();
};
oFF.QSimpleTypeVariable.prototype.addDateTime = function(value)
{
	this.addInternal(value);
};
oFF.QSimpleTypeVariable.prototype.getGeometry = function()
{
	var value = this.getValue();
	if (oFF.isNull(value))
	{
		return null;
	}
	if (!value.getValueType().isSpatial())
	{
		oFF.noSupport();
	}
	return value.clone();
};
oFF.QSimpleTypeVariable.prototype.getPolygon = function()
{
	var value = this.getValue();
	if (oFF.isNull(value))
	{
		return null;
	}
	this.assertValueType(value, oFF.XValueType.POLYGON);
	return value.clone();
};
oFF.QSimpleTypeVariable.prototype.getPoint = function()
{
	var value = this.getValue();
	if (oFF.isNull(value))
	{
		return null;
	}
	this.assertValueType(value, oFF.XValueType.POINT);
	return value.clone();
};
oFF.QSimpleTypeVariable.prototype.getMultiPoint = function()
{
	var value = this.getValue();
	if (oFF.isNull(value))
	{
		return null;
	}
	this.assertValueType(value, oFF.XValueType.MULTI_POINT);
	return value.clone();
};
oFF.QSimpleTypeVariable.prototype.getMultiPolygon = function()
{
	var value = this.getValue();
	if (oFF.isNull(value))
	{
		return null;
	}
	this.assertValueType(value, oFF.XValueType.MULTI_POLYGON);
	return value.clone();
};
oFF.QSimpleTypeVariable.prototype.getLineString = function()
{
	var value = this.getValue();
	if (oFF.isNull(value))
	{
		return null;
	}
	this.assertValueType(value, oFF.XValueType.LINE_STRING);
	return value.clone();
};
oFF.QSimpleTypeVariable.prototype.getMultiLineString = function()
{
	var value = this.getValue();
	if (oFF.isNull(value))
	{
		return null;
	}
	this.assertValueType(value, oFF.XValueType.MULTI_LINE_STRING);
	return value.clone();
};
oFF.QSimpleTypeVariable.prototype.getBoolean = function()
{
	var value = this.getValue();
	if (oFF.isNull(value))
	{
		return false;
	}
	this.assertValueType(value, oFF.XValueType.BOOLEAN);
	return value.getBoolean();
};
oFF.QSimpleTypeVariable.prototype.getTime = function()
{
	var value = this.getValue();
	if (oFF.isNull(value))
	{
		return null;
	}
	this.assertValueType(value, oFF.XValueType.TIME);
	return value.clone();
};
oFF.QSimpleTypeVariable.prototype.getTimeSpan = function()
{
	var value = this.getValue();
	if (oFF.isNull(value))
	{
		return null;
	}
	this.assertValueType(value, oFF.XValueType.TIMESPAN);
	return value.clone();
};
oFF.QSimpleTypeVariable.prototype.getNull = function()
{
	return null;
};
oFF.QSimpleTypeVariable.prototype.setTextValue = function(text)
{
	this.setString(text);
};
oFF.QSimpleTypeVariable.prototype.getTextValue = function()
{
	return this.getString();
};
oFF.QSimpleTypeVariable.prototype.setFormulaValue = function(value)
{
	this.setDouble(value);
};
oFF.QSimpleTypeVariable.prototype.getFormulaValue = function()
{
	return this.getDouble();
};
oFF.QSimpleTypeVariable.prototype.getOptions = function()
{
	return this.m_options;
};
oFF.QSimpleTypeVariable.prototype.setOptionByName = function(name)
{
	if (oFF.isNull(name))
	{
		this.clear();
	}
	else if (this.m_options.containsKey(name))
	{
		this.setString(name);
	}
};
oFF.QSimpleTypeVariable.prototype.addOptionByName = function(name)
{
	if (this.m_options.containsKey(name))
	{
		this.addString(name);
	}
};
oFF.QSimpleTypeVariable.prototype.addOption = function(option)
{
	if (!this.m_options.contains(option))
	{
		this.m_options.add(option);
	}
};
oFF.QSimpleTypeVariable.prototype.createAndAddOption = function(name, text)
{
	this.addOption(oFF.QOptionListElement.createOptionListElement(this.getContext(), this, name, text));
};
oFF.QSimpleTypeVariable.prototype.getCurrentOption = function()
{
	return this.m_options.getByKey(this.getString());
};
oFF.QSimpleTypeVariable.prototype.clearOptions = function()
{
	this.m_options.clear();
};
oFF.QSimpleTypeVariable.prototype.parseString = function(value)
{
	return null;
};
oFF.QSimpleTypeVariable.prototype.setPolygon = function(value)
{
	this.assertValueType(value, oFF.XValueType.POLYGON);
	this.setValueAsClone(value);
};
oFF.QSimpleTypeVariable.prototype.setPoint = function(value)
{
	this.assertValueType(value, oFF.XValueType.POINT);
	this.setValueAsClone(value);
};
oFF.QSimpleTypeVariable.prototype.setMultiPoint = function(value)
{
	this.assertValueType(value, oFF.XValueType.MULTI_POINT);
	this.setValueAsClone(value);
};
oFF.QSimpleTypeVariable.prototype.setMultiPolygon = function(value)
{
	this.assertValueType(value, oFF.XValueType.MULTI_POLYGON);
	this.setValueAsClone(value);
};
oFF.QSimpleTypeVariable.prototype.setLineString = function(value)
{
	this.assertValueType(value, oFF.XValueType.LINE_STRING);
	this.setValueAsClone(value);
};
oFF.QSimpleTypeVariable.prototype.setMultiLineString = function(value)
{
	this.assertValueType(value, oFF.XValueType.MULTI_LINE_STRING);
	this.setValueAsClone(value);
};
oFF.QSimpleTypeVariable.prototype.setBoolean = function(value)
{
	this.setValue(oFF.XBooleanValue.create(value));
};
oFF.QSimpleTypeVariable.prototype.setTimeSpan = function(value)
{
	this.assertValueType(value, oFF.XValueType.TIMESPAN);
	this.setValueAsClone(value);
};
oFF.QSimpleTypeVariable.prototype.setNullByType = function(nullValueType)
{
	this.setValue(oFF.XValueAccess.createWithType(nullValueType).getValue());
};
oFF.QSimpleTypeVariable.prototype.setXValue = function(value)
{
	this.clearValueList();
	var newValue = oFF.XValueAccess.createWithValue(value);
	this.m_valuesList.add(newValue.getValue());
	this.notifyNodeChanged();
};
oFF.QSimpleTypeVariable.prototype.addTime = function(value)
{
	this.assertValueType(value, oFF.XValueType.TIME);
	this.addInternal(value);
};
oFF.QSimpleTypeVariable.prototype.setTime = function(value)
{
	this.assertValueType(value, oFF.XValueType.TIME);
	this.setValueAsClone(value);
};
oFF.QSimpleTypeVariable.prototype.getFormattedValue = function()
{
	return this.getString();
};
oFF.QSimpleTypeVariable.prototype.clearValueList = function()
{
	oFF.XCollectionUtils.releaseEntriesFromCollection(this.m_valuesList);
	this.m_valuesList.clear();
};

oFF.QAxis = function() {};
oFF.QAxis.prototype = new oFF.QAxisDimensionList();
oFF.QAxis.prototype._ff_c = "QAxis";

oFF.QAxis.createAxis = function(context, parent, axisType)
{
	var axis = new oFF.QAxis();
	axis.setupQAxis(context, parent, axisType);
	return axis;
};
oFF.QAxis.prototype.m_axisType = null;
oFF.QAxis.prototype.m_isHierarchyActive = false;
oFF.QAxis.prototype.m_zeroSuppressionType = null;
oFF.QAxis.prototype.m_defaultZeroSuppressionType = null;
oFF.QAxis.prototype.m_supportsZeroSuppression = false;
oFF.QAxis.prototype.m_resultStructureController = null;
oFF.QAxis.prototype.m_availableZeroSuppressionTypes = null;
oFF.QAxis.prototype.copyFromInternal = function(other, flags)
{
	oFF.QAxisDimensionList.prototype.copyFromInternal.call( this , other, flags);
	var originAxis = other;
	var size = originAxis.size();
	var dimensionManagerBase = this.getQueryModelBase().getDimensionManagerBase();
	for (var i = 0; i < size; i++)
	{
		var dimensionName = originAxis.get(i).getName();
		var dimension = dimensionManagerBase.getDimensionByNameInternal(dimensionName);
		if (oFF.notNull(dimension))
		{
			oFF.QAxisDimensionList.prototype.addInternal.call( this , dimension);
			dimension.setAxis(this);
		}
	}
	this.m_isHierarchyActive = originAxis.m_isHierarchyActive;
	this.m_zeroSuppressionType = originAxis.m_zeroSuppressionType;
	this.m_defaultZeroSuppressionType = originAxis.m_defaultZeroSuppressionType;
	this.m_supportsZeroSuppression = originAxis.m_supportsZeroSuppression;
	this.m_resultStructureController.copyFrom(originAxis.m_resultStructureController, flags);
	this.m_availableZeroSuppressionTypes.copyFrom(originAxis.m_availableZeroSuppressionTypes, flags);
};
oFF.QAxis.prototype.setupQAxis = function(context, parent, axisType)
{
	oFF.QAxisDimensionList.prototype.setupOlapList.call( this , context, parent, false, axisType.getName(), oFF.XCollectionFactory.LINKED_MAP, false);
	this.m_axisType = axisType;
	this.m_zeroSuppressionType = oFF.ZeroSuppressionType.NONE;
	this.m_supportsZeroSuppression = false;
	this.m_resultStructureController = oFF.QFactory.createResultStructureController(context, this, oFF.QModelLevel.AXES);
	this.m_availableZeroSuppressionTypes = oFF.XList.create();
	this.m_availableZeroSuppressionTypes.add(oFF.ZeroSuppressionType.NONE);
};
oFF.QAxis.prototype.releaseObject = function()
{
	this.m_axisType = null;
	this.m_zeroSuppressionType = null;
	this.m_defaultZeroSuppressionType = null;
	this.m_resultStructureController = oFF.XObjectExt.release(this.m_resultStructureController);
	this.m_availableZeroSuppressionTypes = oFF.XObjectExt.release(this.m_availableZeroSuppressionTypes);
	oFF.QAxisDimensionList.prototype.releaseObject.call( this );
};
oFF.QAxis.prototype.isTotalsVisible = function()
{
	var size = this.size();
	for (var i = 0; i < size; i++)
	{
		var visibility = this.get(i).getResultVisibility();
		if (visibility === oFF.ResultVisibility.VISIBLE || visibility === oFF.ResultVisibility.CONDITIONAL)
		{
			return true;
		}
	}
	return false;
};
oFF.QAxis.prototype.getOlapComponentType = function()
{
	return this.getType();
};
oFF.QAxis.prototype.getType = function()
{
	return this.m_axisType;
};
oFF.QAxis.prototype.getZeroSuppressionType = function()
{
	return this.m_zeroSuppressionType;
};
oFF.QAxis.prototype.supportsZeroSuppression = function()
{
	return this.m_supportsZeroSuppression;
};
oFF.QAxis.prototype.setSupportsZeroSuppression = function(supportsZeroSuppression)
{
	this.m_supportsZeroSuppression = supportsZeroSuppression;
};
oFF.QAxis.prototype.setZeroSuppressionType = function(suppressionType)
{
	oFF.XBooleanUtils.checkTrue(this.m_supportsZeroSuppression, "Zero suppression not supported");
	if ((this.m_axisType === oFF.AxisType.COLUMNS || this.m_axisType === oFF.AxisType.ROWS) && this.m_zeroSuppressionType !== suppressionType)
	{
		this.m_zeroSuppressionType = suppressionType;
		this.notifyNodeChanged();
	}
};
oFF.QAxis.prototype.getAxis = function()
{
	return this;
};
oFF.QAxis.prototype.getAxisBase = function()
{
	return this;
};
oFF.QAxis.prototype.isHierarchyActive = function()
{
	return this.m_isHierarchyActive;
};
oFF.QAxis.prototype.setIsHierarchyActive = function(isActive)
{
	this.m_isHierarchyActive = isActive;
};
oFF.QAxis.prototype.getEffectiveFields = function()
{
	var effective = oFF.XList.create();
	var size = this.size();
	for (var i = 0; i < size; i++)
	{
		effective.addAll(this.getDimensionAt(i).getResultSetFields());
	}
	return effective;
};
oFF.QAxis.prototype.supportsResultVisibility = function()
{
	return this.m_resultStructureController.supportsResultVisibility();
};
oFF.QAxis.prototype.getResultVisibility = function()
{
	return this.m_resultStructureController.getResultVisibility();
};
oFF.QAxis.prototype.getResultVisibilitySettings = function()
{
	return this.m_resultStructureController.getResultVisibilitySettings();
};
oFF.QAxis.prototype.clearResultVisibilitySettings = function()
{
	this.m_resultStructureController.clearResultVisibilitySettings();
};
oFF.QAxis.prototype.getResultVisibilityByElement = function(element)
{
	return this.m_resultStructureController.getResultVisibilityByElement(element);
};
oFF.QAxis.prototype.getResultVisibilityByElementAndAlignment = function(alignment, element)
{
	return this.m_resultStructureController.getResultVisibilityByElementAndAlignment(alignment, element);
};
oFF.QAxis.prototype.setResultVisibility = function(visibility)
{
	this.m_resultStructureController.setResultVisibility(visibility);
};
oFF.QAxis.prototype.setResultVisibilityByElement = function(element, visibility)
{
	this.m_resultStructureController.setResultVisibilityByElement(element, visibility);
};
oFF.QAxis.prototype.setResultVisibilityByElementAndAlignment = function(alignment, element, visibility)
{
	this.m_resultStructureController.setResultVisibilityByElementAndAlignment(alignment, element, visibility);
};
oFF.QAxis.prototype.supportsResultAlignment = function()
{
	return this.m_resultStructureController.supportsResultAlignment();
};
oFF.QAxis.prototype.setResultAlignment = function(alignment)
{
	this.m_resultStructureController.setResultAlignment(alignment);
};
oFF.QAxis.prototype.getResultAlignment = function()
{
	return this.m_resultStructureController.getResultAlignment();
};
oFF.QAxis.prototype.getParentResultStructureController = function()
{
	return this.getQueryModel().getResultStructureController();
};
oFF.QAxis.prototype.getResultStructureController = function()
{
	return this.m_resultStructureController;
};
oFF.QAxis.prototype.getResultStructureControllerBase = function()
{
	return this.m_resultStructureController;
};
oFF.QAxis.prototype.getResultStructureChildren = function()
{
	var list = oFF.XList.create();
	for (var i = 0; i < this.size(); i++)
	{
		var dimension = this.get(i);
		list.add(dimension.getResultStructureControllerBase());
	}
	return list.getIterator();
};
oFF.QAxis.prototype.supportsTotals = function()
{
	var size = this.size();
	for (var i = 0; i < size; i++)
	{
		if (!this.get(i).supportsTotals())
		{
			return false;
		}
	}
	return this.m_resultStructureController.supportsTotals();
};
oFF.QAxis.prototype.isTotalsAlignmentOnDefault = function()
{
	return this.m_resultStructureController.isTotalsAlignmentOnDefault();
};
oFF.QAxis.prototype.isTotalsVisibilityOnDefault = function()
{
	return this.m_resultStructureController.isTotalsVisibilityOnDefault();
};
oFF.QAxis.prototype.isTotalsStructureOnDefault = function()
{
	return this.m_resultStructureController.isTotalsStructureOnDefault();
};
oFF.QAxis.prototype.restoreTotalsAlignment = function(restoreAction, recurseChildren)
{
	this.m_resultStructureController.restoreTotalsAlignment(restoreAction, recurseChildren);
};
oFF.QAxis.prototype.restoreTotalsVisibility = function(restoreAction, recurseChildren)
{
	this.m_resultStructureController.restoreTotalsVisibility(restoreAction, recurseChildren);
};
oFF.QAxis.prototype.getModelLevel = function()
{
	return this.m_resultStructureController.getModelLevel();
};
oFF.QAxis.prototype.getDefaultZeroSuppressionType = function()
{
	return this.m_defaultZeroSuppressionType;
};
oFF.QAxis.prototype.setDefaultZeroSuppression = function(defaultZeroSuppression)
{
	this.m_defaultZeroSuppressionType = defaultZeroSuppression;
};
oFF.QAxis.prototype.getLoadedDimensions = function()
{
	return this.getDimensions();
};
oFF.QAxis.prototype.getRsDimensions = oFF.noSupport;
oFF.QAxis.prototype.getEffectiveRsFields = oFF.noSupport;
oFF.QAxis.prototype.getAvailableZeroSuppressionTypes = function()
{
	return this.m_availableZeroSuppressionTypes;
};
oFF.QAxis.prototype.addAvailableZeroSuppressionType = function(availableZeroSuppressionType)
{
	this.m_availableZeroSuppressionTypes.add(availableZeroSuppressionType);
};

oFF.QFilterAnd = function() {};
oFF.QFilterAnd.prototype = new oFF.QFilterAlgebraOperation();
oFF.QFilterAnd.prototype._ff_c = "QFilterAnd";

oFF.QFilterAnd._create = function(context, selectionContainer)
{
	var object = new oFF.QFilterAnd();
	object.setupFilterAlgebraOperation(context, selectionContainer);
	return object;
};
oFF.QFilterAnd.prototype.getOlapComponentType = function()
{
	return oFF.FilterComponentType.AND;
};

oFF.QFilterCartesianList = function() {};
oFF.QFilterCartesianList.prototype = new oFF.AbstractFilterList();
oFF.QFilterCartesianList.prototype._ff_c = "QFilterCartesianList";

oFF.QFilterCartesianList._createMd = function(context, parentNode, fieldMd, hierarchyName)
{
	var object = new oFF.QFilterCartesianList();
	object.setupCartesianList(context, parentNode, fieldMd, hierarchyName);
	return object;
};
oFF.QFilterCartesianList.prototype.m_fieldMd = null;
oFF.QFilterCartesianList.prototype.m_fieldContext = null;
oFF.QFilterCartesianList.prototype.m_supplementFields = null;
oFF.QFilterCartesianList.prototype.m_hierarchyName = null;
oFF.QFilterCartesianList.prototype.m_hierarchyVersion = null;
oFF.QFilterCartesianList.prototype.m_hierarchyDueDate = null;
oFF.QFilterCartesianList.prototype.m_convertToFlatFilter = false;
oFF.QFilterCartesianList.prototype.cloneOlapComponent = function(context, parent)
{
	var clone = oFF.QFilterCartesianList._createMd(context, null, null, null);
	clone.copyFrom(this, null);
	return clone;
};
oFF.QFilterCartesianList.prototype.setupCartesianList = function(context, parentNode, fieldMd, hierarchyName)
{
	this.setupFilterList(context, parentNode, "Member Selection List");
	this.setFieldMetadata(fieldMd);
	this.m_hierarchyName = hierarchyName;
	this.m_supplementFields = oFF.XListOfString.create();
};
oFF.QFilterCartesianList.prototype.copyFromInternal = function(other, flags)
{
	oFF.AbstractFilterList.prototype.copyFromInternal.call( this , other, flags);
	var originCartesianList = other;
	this.m_hierarchyName = originCartesianList.m_hierarchyName;
	this.m_hierarchyDueDate = oFF.XObjectExt.cloneIfNotNull(originCartesianList.m_hierarchyDueDate);
	this.m_hierarchyVersion = originCartesianList.m_hierarchyVersion;
	this.m_convertToFlatFilter = originCartesianList.m_convertToFlatFilter;
	this.m_supplementFields = originCartesianList.m_supplementFields.createListOfStringCopy();
	this.setFieldMetadata(originCartesianList.getFieldMetadata());
	var sizeList = originCartesianList.size();
	if (sizeList > 0)
	{
		this.clear();
		var filterExpression = this.getFilterExpression();
		for (var idxList = 0; idxList < sizeList; idxList++)
		{
			var cloneElement = oFF.QFilterOperation._create(this, filterExpression, null);
			cloneElement.copyFrom(originCartesianList.getOp(idxList), flags);
			this.addInternal(cloneElement);
		}
	}
	if (originCartesianList.getContext() !== null && originCartesianList.getContext().getComponentType() === oFF.OlapComponentType.KEY_REF_STORE_CONTEXT)
	{
		this.setContext(oFF.QFactory.createKeyRefStoreContext(this.getContext(), originCartesianList.getStorageName()));
	}
};
oFF.QFilterCartesianList.prototype.releaseObject = function()
{
	this.m_fieldMd = oFF.XObjectExt.release(this.m_fieldMd);
	this.m_fieldContext = oFF.XObjectExt.release(this.m_fieldContext);
	this.m_supplementFields = oFF.XObjectExt.release(this.m_supplementFields);
	this.m_hierarchyName = null;
	this.m_hierarchyDueDate = oFF.XObjectExt.release(this.m_hierarchyDueDate);
	this.m_hierarchyVersion = null;
	oFF.AbstractFilterList.prototype.releaseObject.call( this );
};
oFF.QFilterCartesianList.prototype.getOlapComponentType = function()
{
	return oFF.FilterComponentType.CARTESIAN_LIST;
};
oFF.QFilterCartesianList.prototype.add = function(element)
{
	if (oFF.notNull(element))
	{
		element.setContext(this.getContext());
	}
	oFF.AbstractFilterList.prototype.add.call( this , element);
};
oFF.QFilterCartesianList.prototype.getDimension = function()
{
	var field = this.getField();
	return oFF.isNull(field) ? null : field.getDimension();
};
oFF.QFilterCartesianList.prototype.getDimensionName = function()
{
	var fieldMetadata = this.getFieldMetadata();
	if (oFF.notNull(fieldMetadata))
	{
		var dimensionMetadata = fieldMetadata.getDimensionMetadata();
		if (oFF.notNull(dimensionMetadata))
		{
			return dimensionMetadata.getName();
		}
	}
	var dimension = this.getDimension();
	return oFF.notNull(dimension) ? dimension.getName() : null;
};
oFF.QFilterCartesianList.prototype.getField = function()
{
	if (oFF.isNull(this.m_fieldMd))
	{
		return null;
	}
	var context = this._getContext();
	var fieldAccessorSingle = context.getFieldAccessorSingle();
	if (oFF.isNull(fieldAccessorSingle))
	{
		return null;
	}
	var fieldMd = this.getFieldMetadata();
	if (oFF.isNull(fieldMd))
	{
		return null;
	}
	return fieldAccessorSingle.getFieldByName(fieldMd.getName());
};
oFF.QFilterCartesianList.prototype.getFieldMetadata = function()
{
	var hardRef = oFF.XWeakReferenceUtil.getHardRef(this.m_fieldMd);
	if (oFF.isNull(hardRef) && oFF.notNull(this.m_fieldMd))
	{
		var reference = this.m_fieldMd.getReference();
		if (oFF.notNull(reference))
		{
			var olapEnv = this.getOlapEnv();
			if (oFF.notNull(olapEnv))
			{
				var fieldMetadata = olapEnv.getFieldMetadata(reference.getCacheKey());
				this.setFieldMetadata(fieldMetadata);
				return fieldMetadata;
			}
		}
	}
	return hardRef;
};
oFF.QFilterCartesianList.prototype._getContext = function()
{
	var context = this.getContext();
	if (oFF.notNull(context))
	{
		return context;
	}
	var parent = this.getParent();
	if (oFF.notNull(parent))
	{
		var parentContext = parent.getContext();
		if (oFF.notNull(parentContext))
		{
			return parentContext;
		}
	}
	var filterExpression = this.getFilterExpression();
	if (oFF.notNull(filterExpression))
	{
		var feContext = filterExpression.getContext();
		if (oFF.notNull(feContext))
		{
			return feContext;
		}
	}
	return oFF.XWeakReferenceUtil.getHardRef(this.m_fieldContext);
};
oFF.QFilterCartesianList.prototype.setField = function(field)
{
	if (oFF.notNull(field))
	{
		this.setFieldMetadata(field.getMetadata());
		this.m_fieldContext = oFF.XWeakReferenceUtil.getWeakRef(field.getContext());
	}
};
oFF.QFilterCartesianList.prototype.setFieldMetadata = function(fieldMd)
{
	this.m_fieldMd = oFF.XWeakReferenceUtil.getWeakRef(fieldMd);
};
oFF.QFilterCartesianList.prototype.addNewCartesianElement = function()
{
	var element = oFF.QFactory.createFilterCartesianElement(this.getFilterExpression());
	element.setFieldMetadata(this.getFieldMetadata());
	this.add(element);
	return element;
};
oFF.QFilterCartesianList.prototype.getHierarchyDueDate = function()
{
	return this.m_hierarchyDueDate;
};
oFF.QFilterCartesianList.prototype.getHierarchyVersion = function()
{
	return this.m_hierarchyVersion;
};
oFF.QFilterCartesianList.prototype.getHierarchyName = function()
{
	return this.m_hierarchyName;
};
oFF.QFilterCartesianList.prototype.setHierarchyName = function(name)
{
	if (!oFF.XString.isEqual(name, this.m_hierarchyName))
	{
		this.m_hierarchyName = name;
		this.notifyNodeChanged();
	}
};
oFF.QFilterCartesianList.prototype.setHierarchyInfo = function(hierarchyName, hierarchyDueDate, hierarchyVersion)
{
	var isNotify = false;
	this.setHierarchyName(hierarchyName);
	var qm = this.getQueryModel();
	if (this.getSession().hasFeature(oFF.FeatureToggleOlap.HIERARCHY_INFO_IN_FILTER) && oFF.notNull(qm) && qm.getSystemType().isTypeOf(oFF.SystemType.ABAP))
	{
		if (!oFF.XObjectExt.areEqual(hierarchyDueDate, this.m_hierarchyDueDate))
		{
			this.m_hierarchyDueDate = hierarchyDueDate;
			isNotify = true;
		}
		if (!oFF.XString.isEqual(hierarchyVersion, this.m_hierarchyVersion))
		{
			this.m_hierarchyVersion = hierarchyVersion;
			isNotify = true;
		}
	}
	if (isNotify)
	{
		this.notifyNodeChanged();
	}
};
oFF.QFilterCartesianList.prototype.getOp = function(index)
{
	return this.getCartesianElement(index);
};
oFF.QFilterCartesianList.prototype.getCartesianElement = function(index)
{
	return this.get(index);
};
oFF.QFilterCartesianList.prototype.addSupplementField = function(supplementField)
{
	if (oFF.isNull(supplementField))
	{
		return;
	}
	var name = supplementField.getName();
	if (!this.m_supplementFields.contains(name))
	{
		this.m_supplementFields.add(name);
	}
};
oFF.QFilterCartesianList.prototype.getSupplementFields = function()
{
	var supplementFields = oFF.XList.create();
	var fieldAccessor = this.getFieldAccessorSingle();
	if (oFF.notNull(fieldAccessor))
	{
		var iterator = this.m_supplementFields.getIterator();
		while (iterator.hasNext())
		{
			supplementFields.add(fieldAccessor.getFieldByName(iterator.next()));
		}
	}
	return supplementFields;
};
oFF.QFilterCartesianList.prototype.isConvertToFlatFilter = function()
{
	return this.m_convertToFlatFilter;
};
oFF.QFilterCartesianList.prototype.setConvertToFlatFilter = function(convertToFlatFilter)
{
	if (this.m_convertToFlatFilter !== convertToFlatFilter)
	{
		this.m_convertToFlatFilter = convertToFlatFilter;
		this.notifyPropertyBooleanChanged(oFF.QFilterProperties.QY_CONVERT_TO_FLAT_SELECTION_CL, !convertToFlatFilter, convertToFlatFilter);
	}
};
oFF.QFilterCartesianList.prototype.mergeDeepRecursive = function(settings, other)
{
	var otherList = other;
	this.copyFrom(otherList, null);
};
oFF.QFilterCartesianList.prototype.getSupplementFieldNames = function()
{
	return this.m_supplementFields;
};

oFF.QFilterCartesianProduct = function() {};
oFF.QFilterCartesianProduct.prototype = new oFF.AbstractFilterList();
oFF.QFilterCartesianProduct.prototype._ff_c = "QFilterCartesianProduct";

oFF.QFilterCartesianProduct._create = function(context, filterContainer)
{
	var object = new oFF.QFilterCartesianProduct();
	object.setupFilterList(context, filterContainer, "Selection Cartesian Product");
	return object;
};
oFF.QFilterCartesianProduct.prototype.cloneOlapComponent = function(context, parent)
{
	var clone = oFF.QFilterCartesianProduct._create(context, null);
	clone.copyFrom(this, null);
	return clone;
};
oFF.QFilterCartesianProduct.prototype.copyFromInternal = function(other, flags)
{
	oFF.AbstractFilterList.prototype.copyFromInternal.call( this , other, flags);
	var originCartesianProduct = other;
	var filterExpression = this.getFilterExpression();
	var sizeProduct = originCartesianProduct.size();
	for (var idxProduct = 0; idxProduct < sizeProduct; idxProduct++)
	{
		var originList = originCartesianProduct.getCartesianChild(idxProduct);
		var fieldMetadata = originList.getFieldMetadata();
		var hierarchyName = originList.getHierarchyName();
		var cloneList;
		if (originList.getOlapComponentType() === oFF.FilterComponentType.CONVERTED_TIME_CARTESIAN_LIST)
		{
			cloneList = oFF.QFilterConvertedTimeCartesianList._create(this, filterExpression, fieldMetadata, hierarchyName);
		}
		else
		{
			cloneList = oFF.QFilterCartesianList._createMd(this, filterExpression, fieldMetadata, hierarchyName);
		}
		oFF.AbstractFilterList.prototype.addInternal.call( this , cloneList);
		cloneList.copyFrom(originList, flags);
	}
};
oFF.QFilterCartesianProduct.prototype.getOlapComponentType = function()
{
	return oFF.FilterComponentType.CARTESIAN_PRODUCT;
};
oFF.QFilterCartesianProduct.prototype.getIndexOfCartesianListOfDimension = function(dimensionName)
{
	var count = this.size();
	for (var i = 0; i < count; i++)
	{
		var filterList = this.getCartesianChild(i);
		var fieldMetadata = filterList.getFieldMetadata();
		if (oFF.isNull(fieldMetadata))
		{
			continue;
		}
		var dimensionMetadata = fieldMetadata.getDimensionMetadata();
		if (oFF.notNull(dimensionMetadata) && oFF.XString.isEqual(dimensionMetadata.getName(), dimensionName))
		{
			return i;
		}
	}
	return -1;
};
oFF.QFilterCartesianProduct.prototype.removeByDimensionName = function(dimensionName)
{
	var position = this.getIndexOfCartesianListOfDimension(dimensionName);
	if (position === -1)
	{
		return null;
	}
	var filterList = this.getCartesianChild(position);
	this.removeAt(position);
	return filterList;
};
oFF.QFilterCartesianProduct.prototype.getCartesianListByDimensionName = function(dimensionName)
{
	var position = this.getIndexOfCartesianListOfDimension(dimensionName);
	return position === -1 ? null : this.getCartesianChild(position);
};
oFF.QFilterCartesianProduct.prototype.getCartesianList = function(dimension)
{
	var count = this.size();
	for (var i = 0; i < count; i++)
	{
		var filterList = this.getCartesianChild(i);
		if (filterList.getDimension() === dimension)
		{
			return filterList;
		}
		if (oFF.notNull(dimension) && oFF.XString.isEqual(filterList.getDimensionName(), dimension.getName()))
		{
			return filterList;
		}
	}
	return null;
};
oFF.QFilterCartesianProduct.prototype.getCartesianListWithDefault = function(dimension)
{
	var list = this.getCartesianList(dimension);
	if (oFF.isNull(list))
	{
		list = oFF.QFilterCartesianList._createMd(this.getContext(), null, dimension.getKeyField().getMetadata(), null);
		this.updateListContext(list, dimension);
		this.addCartesianList(list, dimension);
	}
	else
	{
		list.setHierarchyName(dimension.getHierarchyName());
	}
	return list;
};
oFF.QFilterCartesianProduct.prototype.getConvertedTimeCartesianListWithDefault = function(dimension)
{
	var list = this.getCartesianList(dimension);
	if (oFF.isNull(list))
	{
		list = oFF.QFilterConvertedTimeCartesianList._create(this.getContext(), null, dimension.getKeyField().getMetadata(), null);
		this.updateListContext(list, dimension);
		this.addCartesianList(list, dimension);
	}
	else if (list.getOlapComponentType() !== oFF.FilterComponentType.CONVERTED_TIME_CARTESIAN_LIST)
	{
		this.removeInternal(list);
		list = oFF.QFilterConvertedTimeCartesianList._createFromCartesianList(list);
		this.addCartesianList(list, dimension);
	}
	else
	{
		list.setHierarchyName(dimension.getHierarchyName());
	}
	return list;
};
oFF.QFilterCartesianProduct.prototype.addCartesianList = function(list, dimension)
{
	if (!dimension.isUniversalDisplayHierarchyDimension())
	{
		oFF.AbstractFilterList.prototype.add.call( this , list);
	}
};
oFF.QFilterCartesianProduct.prototype.updateListContext = function(cartesianList, dimension)
{
	var context = dimension.getKeyField().getContext();
	if (context.getComponentType() === oFF.OlapComponentType.KEY_REF_STORE_CONTEXT)
	{
		cartesianList.setContext(context);
	}
};
oFF.QFilterCartesianProduct.prototype.getCartesianListByDimensionMdWithDefault = function(dimensionMd)
{
	var position = this.getIndexOfCartesianListOfDimension(dimensionMd.getName());
	if (position > -1)
	{
		return this.getCartesianChild(position);
	}
	var context = this.getContext();
	if (oFF.isNull(context))
	{
		return null;
	}
	var olapEnv = context.getOlapEnv();
	var fieldMd = dimensionMd.getKeyFieldMetadata();
	if (oFF.isNull(fieldMd))
	{
		fieldMd = olapEnv.getKeyFieldMetadataByDimension(dimensionMd.getCacheKey());
	}
	var cartesianList = oFF.QFilterCartesianList._createMd(context, null, fieldMd, null);
	oFF.AbstractFilterList.prototype.add.call( this , cartesianList);
	return cartesianList;
};
oFF.QFilterCartesianProduct.prototype.getCartesianListByField = function(field)
{
	var filterList = this.getCartesianList(field.getDimension());
	if (oFF.isNull(filterList))
	{
		filterList = oFF.QFilterCartesianList._createMd(this.getContext(), null, field.getMetadata(), null);
		oFF.AbstractFilterList.prototype.add.call( this , filterList);
	}
	return oFF.XString.isEqual(filterList.getFieldMetadata().getName(), field.getMetadata().getName()) ? filterList : null;
};
oFF.QFilterCartesianProduct.prototype.getCartesianChild = function(index)
{
	return this.get(index);
};
oFF.QFilterCartesianProduct.prototype.assertElementType = function(element)
{
	if (oFF.notNull(element) && !element.getComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST))
	{
		throw oFF.XException.createIllegalArgumentException(oFF.XStringUtils.concatenate4("Type is not allowed. Expected ", oFF.FilterComponentType.CARTESIAN_LIST.getName(), " but got ", element.getComponentType().getName()));
	}
};
oFF.QFilterCartesianProduct.prototype.addAll = function(other)
{
	if (oFF.notNull(other) && other !== this)
	{
		var theList = other.getValuesAsReadOnlyList();
		this.queueEventing();
		for (var i = 0; i < theList.size(); i++)
		{
			this.add(theList.get(i));
		}
		this.resumeEventing();
	}
};
oFF.QFilterCartesianProduct.prototype.add = function(element)
{
	this.assertElementType(element);
	oFF.AbstractFilterList.prototype.add.call( this , element);
};
oFF.QFilterCartesianProduct.prototype.set = function(index, element)
{
	this.assertElementType(element);
	oFF.AbstractFilterList.prototype.set.call( this , index, element);
};
oFF.QFilterCartesianProduct.prototype.insert = function(index, element)
{
	this.assertElementType(element);
	oFF.AbstractFilterList.prototype.insert.call( this , index, element);
};

oFF.QFilterNot = function() {};
oFF.QFilterNot.prototype = new oFF.QFilterAlgebraOperation();
oFF.QFilterNot.prototype._ff_c = "QFilterNot";

oFF.QFilterNot.MAX_SIZE = 1;
oFF.QFilterNot._create = function(context, selection)
{
	var object = new oFF.QFilterNot();
	object.setupFilterAlgebraOperation(context, selection);
	return object;
};
oFF.QFilterNot.prototype.addAll = function(other)
{
	if (oFF.notNull(other) && other !== this)
	{
		if (other.size() + this.size() > oFF.QFilterNot.MAX_SIZE)
		{
			throw oFF.XException.createIllegalArgumentException("List has reached it's maximum capacity");
		}
		oFF.QFilterAlgebraOperation.prototype.addAll.call( this , other);
	}
};
oFF.QFilterNot.prototype.assertListCapacity = function()
{
	if (this.size() === oFF.QFilterNot.MAX_SIZE)
	{
		throw oFF.XException.createIllegalArgumentException("List has reached it's maximum capacity");
	}
};
oFF.QFilterNot.prototype.add = function(element)
{
	this.assertListCapacity();
	oFF.QFilterAlgebraOperation.prototype.add.call( this , element);
};
oFF.QFilterNot.prototype.insert = function(index, element)
{
	this.assertListCapacity();
	oFF.QFilterAlgebraOperation.prototype.insert.call( this , index, element);
};
oFF.QFilterNot.prototype.getOlapComponentType = function()
{
	return oFF.FilterComponentType.NOT;
};
oFF.QFilterNot.prototype.getChild = function()
{
	return this.isEmpty() ? null : this.get(0);
};
oFF.QFilterNot.prototype.setChild = function(child)
{
	if (this.isEmpty())
	{
		this.add(child);
	}
	else
	{
		this.set(0, child);
	}
};

oFF.QFilterOr = function() {};
oFF.QFilterOr.prototype = new oFF.QFilterAlgebraOperation();
oFF.QFilterOr.prototype._ff_c = "QFilterOr";

oFF.QFilterOr._create = function(context, selectionContainer)
{
	var object = new oFF.QFilterOr();
	object.setupFilterAlgebraOperation(context, selectionContainer);
	return object;
};
oFF.QFilterOr.prototype.getOlapComponentType = function()
{
	return oFF.FilterComponentType.OR;
};

oFF.QFilterConvertedTimeCartesianList = function() {};
oFF.QFilterConvertedTimeCartesianList.prototype = new oFF.QFilterCartesianList();
oFF.QFilterConvertedTimeCartesianList.prototype._ff_c = "QFilterConvertedTimeCartesianList";

oFF.QFilterConvertedTimeCartesianList._create = function(context, parentNode, fieldMd, hierarchyName)
{
	var object = new oFF.QFilterConvertedTimeCartesianList();
	object.setupCartesianList(context, parentNode, fieldMd, hierarchyName);
	return object;
};
oFF.QFilterConvertedTimeCartesianList._createFromCartesianList = function(cartesianList)
{
	return oFF.QFilterConvertedTimeCartesianList._create(cartesianList.getContext(), cartesianList.getParent(), cartesianList.getFieldMetadata(), cartesianList.getHierarchyName());
};
oFF.QFilterConvertedTimeCartesianList.prototype.m_isSingleValueSourceCartesianList = false;
oFF.QFilterConvertedTimeCartesianList.prototype.m_hierarchyLevelType = null;
oFF.QFilterConvertedTimeCartesianList.prototype.releaseObject = function()
{
	this.m_hierarchyLevelType = null;
	oFF.QFilterCartesianList.prototype.releaseObject.call( this );
};
oFF.QFilterConvertedTimeCartesianList.prototype.setupCartesianList = function(context, parentNode, fieldMd, hierarchyName)
{
	oFF.QFilterCartesianList.prototype.setupCartesianList.call( this , context, parentNode, fieldMd, hierarchyName);
	this.m_isSingleValueSourceCartesianList = false;
};
oFF.QFilterConvertedTimeCartesianList.prototype.getOlapComponentType = function()
{
	return oFF.FilterComponentType.CONVERTED_TIME_CARTESIAN_LIST;
};
oFF.QFilterConvertedTimeCartesianList.prototype.cloneOlapComponent = function(context, parent)
{
	var clone = oFF.QFilterConvertedTimeCartesianList._create(context, null, null, null);
	clone.copyFrom(this, null);
	return clone;
};
oFF.QFilterConvertedTimeCartesianList.prototype.copyFromInternal = function(other, flags)
{
	oFF.QFilterCartesianList.prototype.copyFromInternal.call( this , other, flags);
	var originCartesianList = other;
	this.m_isSingleValueSourceCartesianList = originCartesianList.m_isSingleValueSourceCartesianList;
	this.m_hierarchyLevelType = originCartesianList.m_hierarchyLevelType;
};
oFF.QFilterConvertedTimeCartesianList.prototype.copyFromCartesianList = function(cartesianList)
{
	oFF.QFilterCartesianList.prototype.copyFromInternal.call( this , cartesianList, null);
};
oFF.QFilterConvertedTimeCartesianList.prototype.isSingleValueSourceCartesianList = function()
{
	return this.m_isSingleValueSourceCartesianList;
};
oFF.QFilterConvertedTimeCartesianList.prototype.setIsSingleValueSourceCartesianList = function(isSingleValueSourceCartesianList)
{
	this.m_isSingleValueSourceCartesianList = isSingleValueSourceCartesianList;
};
oFF.QFilterConvertedTimeCartesianList.prototype.getHierarchyLevelType = function()
{
	return this.m_hierarchyLevelType;
};
oFF.QFilterConvertedTimeCartesianList.prototype.setHierarchyLevelType = function(levelType)
{
	this.m_hierarchyLevelType = levelType;
};

oFF.OlapModelModule = function() {};
oFF.OlapModelModule.prototype = new oFF.DfModule();
oFF.OlapModelModule.prototype._ff_c = "OlapModelModule";

oFF.OlapModelModule.s_module = null;
oFF.OlapModelModule.getInstance = function()
{
	if (oFF.isNull(oFF.OlapModelModule.s_module))
	{
		oFF.DfModule.checkInitialized(oFF.OlapApiBaseModule.getInstance());
		oFF.OlapModelModule.s_module = oFF.DfModule.startExt(new oFF.OlapModelModule());
		var registrationService = oFF.RegistrationService.getInstance();
		oFF.QueryServiceConfigImpl.staticSetup();
		registrationService.addServiceConfig(oFF.OlapApiModule.XS_QUERY_CONSUMER, oFF.QueryServiceConfigImpl.CLAZZ);
		oFF.DocConverterFactory.staticSetup();
		oFF.QBindingFactory.staticSetupOlapBindingFactory();
		oFF.QCmdContextFactory.staticSetup();
		oFF.QCmdContextOlapFactory.staticSetupOlapFactory();
		oFF.QCmdSignature.staticSetup();
		oFF.SigSelManager.registerFactory(oFF.XComponentType._DATASOURCE, new oFF.CommandSpaceFactoryImpl());
		oFF.DfModule.stopExt(oFF.OlapModelModule.s_module);
	}
	return oFF.OlapModelModule.s_module;
};
oFF.OlapModelModule.prototype.getName = function()
{
	return "ff4305.olap.model";
};

oFF.OlapModelModule.getInstance();

return sap.firefly;
	} );